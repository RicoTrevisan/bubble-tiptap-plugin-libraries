{
  "version": 3,
  "sources": ["../node_modules/orderedmap/dist/index.js", "../node_modules/prosemirror-model/dist/index.js", "../node_modules/prosemirror-transform/dist/index.js", "../node_modules/prosemirror-state/dist/index.js", "../node_modules/prosemirror-view/dist/index.js", "../node_modules/w3c-keyname/index.js", "../node_modules/prosemirror-keymap/dist/index.js", "../node_modules/prosemirror-commands/dist/index.js", "../node_modules/prosemirror-schema-list/dist/index.js", "../node_modules/@tiptap/core/src/helpers/createChainableState.ts", "../node_modules/@tiptap/core/src/CommandManager.ts", "../node_modules/@tiptap/core/src/EventEmitter.ts", "../node_modules/@tiptap/core/src/helpers/getExtensionField.ts", "../node_modules/@tiptap/core/src/helpers/splitExtensions.ts", "../node_modules/@tiptap/core/src/helpers/getAttributesFromExtensions.ts", "../node_modules/@tiptap/core/src/helpers/getNodeType.ts", "../node_modules/@tiptap/core/src/utilities/mergeAttributes.ts", "../node_modules/@tiptap/core/src/helpers/getRenderedAttributes.ts", "../node_modules/@tiptap/core/src/utilities/isFunction.ts", "../node_modules/@tiptap/core/src/utilities/callOrReturn.ts", "../node_modules/@tiptap/core/src/utilities/isEmptyObject.ts", "../node_modules/@tiptap/core/src/utilities/fromString.ts", "../node_modules/@tiptap/core/src/helpers/injectExtensionAttributesToParseRule.ts", "../node_modules/@tiptap/core/src/helpers/getSchemaByResolvedExtensions.ts", "../node_modules/@tiptap/core/src/helpers/getSchemaTypeByName.ts", "../node_modules/@tiptap/core/src/helpers/isExtensionRulesEnabled.ts", "../node_modules/@tiptap/core/src/helpers/getTextContentFromNodes.ts", "../node_modules/@tiptap/core/src/utilities/isRegExp.ts", "../node_modules/@tiptap/core/src/InputRule.ts", "../node_modules/@tiptap/core/src/utilities/isNumber.ts", "../node_modules/@tiptap/core/src/PasteRule.ts", "../node_modules/@tiptap/core/src/utilities/findDuplicates.ts", "../node_modules/@tiptap/core/src/ExtensionManager.ts", "../node_modules/@tiptap/core/src/utilities/isPlainObject.ts", "../node_modules/@tiptap/core/src/utilities/mergeDeep.ts", "../node_modules/@tiptap/core/src/Extension.ts", "../node_modules/@tiptap/core/src/helpers/getTextBetween.ts", "../node_modules/@tiptap/core/src/helpers/getTextSerializersFromSchema.ts", "../node_modules/@tiptap/core/src/extensions/clipboardTextSerializer.ts", "../node_modules/@tiptap/core/src/commands/blur.ts", "../node_modules/@tiptap/core/src/commands/clearContent.ts", "../node_modules/@tiptap/core/src/commands/clearNodes.ts", "../node_modules/@tiptap/core/src/commands/command.ts", "../node_modules/@tiptap/core/src/commands/createParagraphNear.ts", "../node_modules/@tiptap/core/src/commands/cut.ts", "../node_modules/@tiptap/core/src/commands/deleteCurrentNode.ts", "../node_modules/@tiptap/core/src/commands/deleteNode.ts", "../node_modules/@tiptap/core/src/commands/deleteRange.ts", "../node_modules/@tiptap/core/src/commands/deleteSelection.ts", "../node_modules/@tiptap/core/src/commands/enter.ts", "../node_modules/@tiptap/core/src/commands/exitCode.ts", "../node_modules/@tiptap/core/src/utilities/objectIncludes.ts", "../node_modules/@tiptap/core/src/helpers/getMarkRange.ts", "../node_modules/@tiptap/core/src/helpers/getMarkType.ts", "../node_modules/@tiptap/core/src/commands/extendMarkRange.ts", "../node_modules/@tiptap/core/src/commands/first.ts", "../node_modules/@tiptap/core/src/helpers/isTextSelection.ts", "../node_modules/@tiptap/core/src/utilities/minMax.ts", "../node_modules/@tiptap/core/src/helpers/resolveFocusPosition.ts", "../node_modules/@tiptap/core/src/utilities/isiOS.ts", "../node_modules/@tiptap/core/src/commands/focus.ts", "../node_modules/@tiptap/core/src/commands/forEach.ts", "../node_modules/@tiptap/core/src/commands/insertContent.ts", "../node_modules/@tiptap/core/src/utilities/elementFromString.ts", "../node_modules/@tiptap/core/src/helpers/createNodeFromContent.ts", "../node_modules/@tiptap/core/src/helpers/selectionToInsertionEnd.ts", "../node_modules/@tiptap/core/src/commands/insertContentAt.ts", "../node_modules/@tiptap/core/src/commands/join.ts", "../node_modules/@tiptap/core/src/commands/joinItemBackward.ts", "../node_modules/@tiptap/core/src/commands/joinItemForward.ts", "../node_modules/@tiptap/core/src/commands/joinTextblockBackward.ts", "../node_modules/@tiptap/core/src/commands/joinTextblockForward.ts", "../node_modules/@tiptap/core/src/utilities/isMacOS.ts", "../node_modules/@tiptap/core/src/commands/keyboardShortcut.ts", "../node_modules/@tiptap/core/src/helpers/isNodeActive.ts", "../node_modules/@tiptap/core/src/commands/lift.ts", "../node_modules/@tiptap/core/src/commands/liftEmptyBlock.ts", "../node_modules/@tiptap/core/src/commands/liftListItem.ts", "../node_modules/@tiptap/core/src/commands/newlineInCode.ts", "../node_modules/@tiptap/core/src/helpers/getSchemaTypeNameByName.ts", "../node_modules/@tiptap/core/src/utilities/deleteProps.ts", "../node_modules/@tiptap/core/src/commands/resetAttributes.ts", "../node_modules/@tiptap/core/src/commands/scrollIntoView.ts", "../node_modules/@tiptap/core/src/commands/selectAll.ts", "../node_modules/@tiptap/core/src/commands/selectNodeBackward.ts", "../node_modules/@tiptap/core/src/commands/selectNodeForward.ts", "../node_modules/@tiptap/core/src/commands/selectParentNode.ts", "../node_modules/@tiptap/core/src/commands/selectTextblockEnd.ts", "../node_modules/@tiptap/core/src/commands/selectTextblockStart.ts", "../node_modules/@tiptap/core/src/helpers/createDocument.ts", "../node_modules/@tiptap/core/src/commands/setContent.ts", "../node_modules/@tiptap/core/src/helpers/getMarkAttributes.ts", "../node_modules/@tiptap/core/src/helpers/combineTransactionSteps.ts", "../node_modules/@tiptap/core/src/helpers/defaultBlockAt.ts", "../node_modules/@tiptap/core/src/helpers/findChildren.ts", "../node_modules/@tiptap/core/src/helpers/findChildrenInRange.ts", "../node_modules/@tiptap/core/src/helpers/findParentNodeClosestToPos.ts", "../node_modules/@tiptap/core/src/helpers/findParentNode.ts", "../node_modules/@tiptap/core/src/helpers/getHTMLFromFragment.ts", "../node_modules/@tiptap/core/src/helpers/getSchema.ts", "../node_modules/@tiptap/core/src/helpers/generateHTML.ts", "../node_modules/@tiptap/core/src/helpers/generateJSON.ts", "../node_modules/@tiptap/core/src/helpers/getText.ts", "../node_modules/@tiptap/core/src/helpers/generateText.ts", "../node_modules/@tiptap/core/src/helpers/getNodeAttributes.ts", "../node_modules/@tiptap/core/src/helpers/getAttributes.ts", "../node_modules/@tiptap/core/src/utilities/removeDuplicates.ts", "../node_modules/@tiptap/core/src/helpers/getChangedRanges.ts", "../node_modules/@tiptap/core/src/helpers/getDebugJSON.ts", "../node_modules/@tiptap/core/src/helpers/getMarksBetween.ts", "../node_modules/@tiptap/core/src/helpers/getNodeAtPosition.ts", "../node_modules/@tiptap/core/src/helpers/getSplittedAttributes.ts", "../node_modules/@tiptap/core/src/helpers/isMarkActive.ts", "../node_modules/@tiptap/core/src/helpers/isActive.ts", "../node_modules/@tiptap/core/src/helpers/isAtEndOfNode.ts", "../node_modules/@tiptap/core/src/helpers/isAtStartOfNode.ts", "../node_modules/@tiptap/core/src/helpers/isList.ts", "../node_modules/@tiptap/core/src/helpers/isNodeEmpty.ts", "../node_modules/@tiptap/core/src/helpers/isNodeSelection.ts", "../node_modules/@tiptap/core/src/helpers/posToDOMRect.ts", "../node_modules/@tiptap/core/src/commands/setMark.ts", "../node_modules/@tiptap/core/src/commands/setMeta.ts", "../node_modules/@tiptap/core/src/commands/setNode.ts", "../node_modules/@tiptap/core/src/commands/setNodeSelection.ts", "../node_modules/@tiptap/core/src/commands/setTextSelection.ts", "../node_modules/@tiptap/core/src/commands/sinkListItem.ts", "../node_modules/@tiptap/core/src/commands/splitBlock.ts", "../node_modules/@tiptap/core/src/commands/splitListItem.ts", "../node_modules/@tiptap/core/src/commands/toggleList.ts", "../node_modules/@tiptap/core/src/commands/toggleMark.ts", "../node_modules/@tiptap/core/src/commands/toggleNode.ts", "../node_modules/@tiptap/core/src/commands/toggleWrap.ts", "../node_modules/@tiptap/core/src/commands/undoInputRule.ts", "../node_modules/@tiptap/core/src/commands/unsetAllMarks.ts", "../node_modules/@tiptap/core/src/commands/unsetMark.ts", "../node_modules/@tiptap/core/src/commands/updateAttributes.ts", "../node_modules/@tiptap/core/src/commands/wrapIn.ts", "../node_modules/@tiptap/core/src/commands/wrapInList.ts", "../node_modules/@tiptap/core/src/extensions/commands.ts", "../node_modules/@tiptap/core/src/extensions/editable.ts", "../node_modules/@tiptap/core/src/extensions/focusEvents.ts", "../node_modules/@tiptap/core/src/extensions/keymap.ts", "../node_modules/@tiptap/core/src/extensions/tabindex.ts", "../node_modules/@tiptap/core/src/NodePos.ts", "../node_modules/@tiptap/core/src/style.ts", "../node_modules/@tiptap/core/src/utilities/createStyleTag.ts", "../node_modules/@tiptap/core/src/Editor.ts", "../node_modules/@tiptap/core/src/inputRules/markInputRule.ts", "../node_modules/@tiptap/core/src/inputRules/nodeInputRule.ts", "../node_modules/@tiptap/core/src/inputRules/textblockTypeInputRule.ts", "../node_modules/@tiptap/core/src/inputRules/textInputRule.ts", "../node_modules/@tiptap/core/src/inputRules/wrappingInputRule.ts", "../node_modules/@tiptap/core/src/Mark.ts", "../node_modules/@tiptap/core/src/Node.ts", "../node_modules/@tiptap/core/src/utilities/isAndroid.ts", "../node_modules/@tiptap/core/src/NodeView.ts", "../node_modules/@tiptap/core/src/pasteRules/markPasteRule.ts", "../node_modules/@tiptap/core/src/utilities/escapeForRegEx.ts", "../node_modules/@tiptap/core/src/utilities/isString.ts", "../node_modules/@tiptap/core/src/pasteRules/nodePasteRule.ts", "../node_modules/@tiptap/core/src/pasteRules/textPasteRule.ts", "../node_modules/@tiptap/core/src/Tracker.ts", "../node_modules/@tiptap/extension-document/src/document.ts", "../node_modules/@tiptap/extension-hard-break/src/hard-break.ts", "../node_modules/@tiptap/extension-paragraph/src/paragraph.ts", "../node_modules/@tiptap/extension-text/src/text.ts", "../node_modules/@tiptap/extension-heading/src/heading.ts", "../node_modules/@tiptap/extension-bold/src/bold.ts", "../node_modules/@tiptap/extension-code/src/code.ts", "../node_modules/@tiptap/extension-code-block/src/code-block.ts", "../node_modules/node_modules/highlight.js/lib/core.js", "../node_modules/@tiptap/extension-code-block-lowlight/src/lowlight-plugin.ts", "../node_modules/@tiptap/extension-code-block-lowlight/src/code-block-lowlight.ts", "../node_modules/@tiptap/extension-italic/src/italic.ts", "../node_modules/@tiptap/extension-strike/src/strike.ts", "../node_modules/prosemirror-dropcursor/dist/index.js", "../node_modules/@tiptap/extension-dropcursor/src/dropcursor.ts", "../node_modules/prosemirror-gapcursor/dist/index.js", "../node_modules/@tiptap/extension-gapcursor/src/gapcursor.ts", "../node_modules/rope-sequence/dist/index.js", "../node_modules/prosemirror-history/dist/index.js", "../node_modules/@tiptap/extension-history/src/history.ts", "../node_modules/@tiptap/extension-blockquote/src/blockquote.ts", "../node_modules/@tiptap/extension-list-item/src/list-item.ts", "../node_modules/@tiptap/extension-text-style/src/text-style.ts", "../node_modules/@tiptap/extension-bullet-list/src/bullet-list.ts", "../node_modules/@tiptap/extension-horizontal-rule/src/horizontal-rule.ts", "../node_modules/@tiptap/extension-list-item/src/list-item.ts", "../node_modules/@tiptap/extension-list-item/src/list-item.ts", "../node_modules/@tiptap/extension-text-style/src/text-style.ts", "../node_modules/@tiptap/extension-ordered-list/src/ordered-list.ts", "../node_modules/@tiptap/extension-character-count/src/character-count.ts", "../node_modules/@tiptap/extension-youtube/src/utils.ts", "../node_modules/@tiptap/extension-youtube/src/youtube.ts", "../node_modules/@tiptap/extension-underline/src/underline.ts", "../node_modules/prosemirror-tables/dist/index.js", "../node_modules/@tiptap/extension-table/src/TableView.ts", "../node_modules/@tiptap/extension-table/src/utilities/createColGroup.ts", "../node_modules/@tiptap/extension-table/src/utilities/createCell.ts", "../node_modules/@tiptap/extension-table/src/utilities/getTableNodeTypes.ts", "../node_modules/@tiptap/extension-table/src/utilities/createTable.ts", "../node_modules/@tiptap/extension-table/src/utilities/isCellSelection.ts", "../node_modules/@tiptap/extension-table/src/utilities/deleteTableWhenAllCellsSelected.ts", "../node_modules/@tiptap/extension-table/src/table.ts", "../node_modules/@tiptap/extension-table-cell/src/table-cell.ts", "../node_modules/@tiptap/extension-table-header/src/table-header.ts", "../node_modules/@tiptap/extension-table-row/src/table-row.ts", "../node_modules/@tiptap/extension-image/src/image.ts", "../node_modules/linkifyjs/dist/linkify.es.js", "../node_modules/@tiptap/extension-link/src/helpers/autolink.ts", "../node_modules/@tiptap/extension-link/src/helpers/clickHandler.ts", "../node_modules/@tiptap/extension-link/src/helpers/pasteHandler.ts", "../node_modules/@tiptap/extension-link/src/link.ts", "../node_modules/@tiptap/extension-task-list/src/task-list.ts", "../node_modules/@tiptap/extension-task-item/src/task-item.ts", "../node_modules/@tiptap/extension-placeholder/src/placeholder.ts", "../node_modules/@popperjs/core/lib/enums.js", "../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js", "../node_modules/@popperjs/core/lib/dom-utils/getWindow.js", "../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js", "../node_modules/@popperjs/core/lib/modifiers/applyStyles.js", "../node_modules/@popperjs/core/lib/utils/getBasePlacement.js", "../node_modules/@popperjs/core/lib/utils/math.js", "../node_modules/@popperjs/core/lib/utils/userAgent.js", "../node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js", "../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js", "../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js", "../node_modules/@popperjs/core/lib/dom-utils/contains.js", "../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js", "../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js", "../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js", "../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js", "../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js", "../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js", "../node_modules/@popperjs/core/lib/utils/within.js", "../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js", "../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js", "../node_modules/@popperjs/core/lib/utils/expandToHashMap.js", "../node_modules/@popperjs/core/lib/modifiers/arrow.js", "../node_modules/@popperjs/core/lib/utils/getVariation.js", "../node_modules/@popperjs/core/lib/modifiers/computeStyles.js", "../node_modules/@popperjs/core/lib/modifiers/eventListeners.js", "../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js", "../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js", "../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js", "../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js", "../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js", "../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js", "../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js", "../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js", "../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js", "../node_modules/@popperjs/core/lib/utils/rectToClientRect.js", "../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js", "../node_modules/@popperjs/core/lib/utils/computeOffsets.js", "../node_modules/@popperjs/core/lib/utils/detectOverflow.js", "../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js", "../node_modules/@popperjs/core/lib/modifiers/flip.js", "../node_modules/@popperjs/core/lib/modifiers/hide.js", "../node_modules/@popperjs/core/lib/modifiers/offset.js", "../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js", "../node_modules/@popperjs/core/lib/utils/getAltAxis.js", "../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js", "../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js", "../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js", "../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js", "../node_modules/@popperjs/core/lib/utils/orderModifiers.js", "../node_modules/@popperjs/core/lib/utils/debounce.js", "../node_modules/@popperjs/core/lib/utils/mergeByName.js", "../node_modules/@popperjs/core/lib/createPopper.js", "../node_modules/@popperjs/core/lib/popper.js", "../node_modules/tippy.js/src/constants.ts", "../node_modules/tippy.js/src/utils.ts", "../node_modules/tippy.js/src/dom-utils.ts", "../node_modules/tippy.js/src/bindGlobalEventListeners.ts", "../node_modules/tippy.js/src/browser.ts", "../node_modules/tippy.js/src/validation.ts", "../node_modules/tippy.js/src/props.ts", "../node_modules/tippy.js/src/template.ts", "../node_modules/tippy.js/src/createTippy.ts", "../node_modules/tippy.js/src/index.ts", "../node_modules/tippy.js/src/addons/createSingleton.ts", "../node_modules/tippy.js/src/addons/delegate.ts", "../node_modules/tippy.js/src/plugins/animateFill.ts", "../node_modules/tippy.js/src/plugins/followCursor.ts", "../node_modules/tippy.js/src/plugins/inlinePositioning.ts", "../node_modules/tippy.js/src/plugins/sticky.ts", "../node_modules/tippy.js/build/base.js", "../node_modules/@tiptap/extension-bubble-menu/src/bubble-menu-plugin.ts", "../node_modules/@tiptap/extension-bubble-menu/src/bubble-menu.ts", "../node_modules/@tiptap/extension-floating-menu/src/floating-menu-plugin.ts", "../node_modules/@tiptap/extension-floating-menu/src/floating-menu.ts", "../node_modules/@tiptap/extension-text-align/src/text-align.ts", "../node_modules/@tiptap/extension-highlight/src/highlight.ts", "../node_modules/css-what/lib/es/types.js", "../node_modules/css-what/lib/es/parse.js", "../node_modules/zeed-dom/src/encoding-he.ts", "../node_modules/zeed-dom/src/encoding.ts", "../node_modules/zeed-dom/src/h.ts", "../node_modules/zeed-dom/src/html.ts", "../node_modules/zeed-dom/src/vcss.ts", "../node_modules/zeed-dom/src/vdom.ts", "../node_modules/zeed-dom/src/utils.ts", "../node_modules/zeed-dom/src/htmlparser.ts", "../node_modules/zeed-dom/src/vdomparser.ts", "../node_modules/zeed-dom/src/tidy.ts", "../node_modules/zeed-dom/src/xml.ts", "../node_modules/zeed-dom/src/manipulate.ts", "../node_modules/@tiptap/html/src/getHTMLFromFragment.ts", "../node_modules/@tiptap/html/src/generateHTML.ts", "../node_modules/@tiptap/html/src/generateJSON.ts", "../node_modules/lib0/map.js", "../node_modules/lib0/set.js", "../node_modules/lib0/array.js", "../node_modules/lib0/observable.js", "../node_modules/lib0/math.js", "../node_modules/lib0/number.js", "../node_modules/lib0/string.js", "../node_modules/lib0/encoding.js", "../node_modules/lib0/error.js", "../node_modules/lib0/decoding.js", "../node_modules/lib0/webcrypto.js", "../node_modules/lib0/random.js", "../node_modules/lib0/time.js", "../node_modules/lib0/promise.js", "../node_modules/lib0/conditions.js", "../node_modules/lib0/storage.js", "../node_modules/lib0/object.js", "../node_modules/lib0/function.js", "../node_modules/lib0/environment.js", "../node_modules/lib0/buffer.js", "../node_modules/lib0/pair.js", "../node_modules/lib0/dom.js", "../node_modules/lib0/eventloop.js", "../node_modules/lib0/symbol.js", "../node_modules/lib0/logging.common.js", "../node_modules/lib0/logging.js", "../node_modules/lib0/iterator.js", "../node_modules/yjs/src/utils/AbstractConnector.js", "../node_modules/yjs/src/utils/DeleteSet.js", "../node_modules/yjs/src/utils/Doc.js", "../node_modules/yjs/src/utils/UpdateDecoder.js", "../node_modules/yjs/src/utils/UpdateEncoder.js", "../node_modules/yjs/src/utils/encoding.js", "../node_modules/yjs/src/utils/EventHandler.js", "../node_modules/yjs/src/utils/ID.js", "../node_modules/yjs/src/utils/isParentOf.js", "../node_modules/yjs/src/utils/logging.js", "../node_modules/yjs/src/utils/PermanentUserData.js", "../node_modules/yjs/src/utils/RelativePosition.js", "../node_modules/yjs/src/utils/Snapshot.js", "../node_modules/yjs/src/utils/StructStore.js", "../node_modules/yjs/src/utils/Transaction.js", "../node_modules/yjs/src/utils/UndoManager.js", "../node_modules/yjs/src/utils/updates.js", "../node_modules/yjs/src/utils/YEvent.js", "../node_modules/yjs/src/types/AbstractType.js", "../node_modules/yjs/src/types/YArray.js", "../node_modules/yjs/src/types/YMap.js", "../node_modules/yjs/src/types/YText.js", "../node_modules/yjs/src/types/YXmlFragment.js", "../node_modules/yjs/src/types/YXmlElement.js", "../node_modules/yjs/src/types/YXmlEvent.js", "../node_modules/yjs/src/types/YXmlHook.js", "../node_modules/yjs/src/types/YXmlText.js", "../node_modules/yjs/src/structs/AbstractStruct.js", "../node_modules/yjs/src/structs/GC.js", "../node_modules/yjs/src/structs/ContentBinary.js", "../node_modules/yjs/src/structs/ContentDeleted.js", "../node_modules/yjs/src/structs/ContentDoc.js", "../node_modules/yjs/src/structs/ContentEmbed.js", "../node_modules/yjs/src/structs/ContentFormat.js", "../node_modules/yjs/src/structs/ContentJSON.js", "../node_modules/yjs/src/structs/ContentAny.js", "../node_modules/yjs/src/structs/ContentString.js", "../node_modules/yjs/src/structs/ContentType.js", "../node_modules/yjs/src/structs/Item.js", "../node_modules/yjs/src/structs/Skip.js", "../node_modules/yjs/src/index.js", "../node_modules/lib0/mutex.js", "../node_modules/lib0/diff.js", "../node_modules/y-prosemirror/src/plugins/keys.js", "../node_modules/y-prosemirror/src/plugins/sync-plugin.js", "../node_modules/y-prosemirror/src/lib.js", "../node_modules/y-prosemirror/src/plugins/cursor-plugin.js", "../node_modules/y-prosemirror/src/plugins/undo-plugin.js", "../node_modules/@tiptap/extension-collaboration/src/collaboration.ts", "../node_modules/@tiptap/extension-collaboration/src/helpers/isChangeOrigin.ts", "../node_modules/@tiptap/extension-collaboration-cursor/src/collaboration-cursor.ts", "../node_modules/node_modules/lib0/math.js", "../node_modules/node_modules/lib0/binary.js", "../node_modules/node_modules/lib0/number.js", "../node_modules/node_modules/lib0/string.js", "../node_modules/node_modules/lib0/encoding.js", "../node_modules/node_modules/lib0/error.js", "../node_modules/node_modules/lib0/decoding.js", "../node_modules/@hocuspocus/common/src/auth.ts", "../node_modules/@hocuspocus/common/src/CloseEvents.ts", "../node_modules/@hocuspocus/common/src/awarenessStatesToArray.ts", "../node_modules/@hocuspocus/common/src/types.ts", "../node_modules/@lifeomic/attempt/dist/es6/src/index.js", "../node_modules/node_modules/lib0/map.js", "../node_modules/node_modules/lib0/set.js", "../node_modules/node_modules/lib0/array.js", "../node_modules/node_modules/lib0/string.js", "../node_modules/node_modules/lib0/conditions.js", "../node_modules/node_modules/lib0/storage.js", "../node_modules/node_modules/lib0/object.js", "../node_modules/node_modules/lib0/function.js", "../node_modules/node_modules/lib0/environment.js", "../node_modules/node_modules/lib0/math.js", "../node_modules/node_modules/lib0/binary.js", "../node_modules/node_modules/lib0/number.js", "../node_modules/node_modules/lib0/encoding.js", "../node_modules/node_modules/lib0/error.js", "../node_modules/node_modules/lib0/decoding.js", "../node_modules/node_modules/lib0/buffer.js", "../node_modules/node_modules/lib0/broadcastchannel.js", "../node_modules/node_modules/lib0/mutex.js", "../node_modules/node_modules/lib0/time.js", "../node_modules/node_modules/lib0/observable.js", "../node_modules/node_modules/y-protocols/awareness.js", "../node_modules/@hocuspocus/provider/src/EventEmitter.ts", "../node_modules/node_modules/lib0/url.js", "../node_modules/@hocuspocus/provider/src/types.ts", "../node_modules/@hocuspocus/provider/src/IncomingMessage.ts", "../node_modules/@hocuspocus/provider/src/HocuspocusProviderWebsocket.ts", "../node_modules/node_modules/y-protocols/sync.js", "../node_modules/@hocuspocus/provider/src/OutgoingMessage.ts", "../node_modules/@hocuspocus/provider/src/MessageReceiver.ts", "../node_modules/@hocuspocus/provider/src/MessageSender.ts", "../node_modules/@hocuspocus/provider/src/OutgoingMessages/AuthenticationMessage.ts", "../node_modules/@hocuspocus/provider/src/OutgoingMessages/AwarenessMessage.ts", "../node_modules/@hocuspocus/provider/src/OutgoingMessages/CloseMessage.ts", "../node_modules/@hocuspocus/provider/src/OutgoingMessages/QueryAwarenessMessage.ts", "../node_modules/@hocuspocus/provider/src/OutgoingMessages/StatelessMessage.ts", "../node_modules/@hocuspocus/provider/src/OutgoingMessages/SyncStepOneMessage.ts", "../node_modules/@hocuspocus/provider/src/OutgoingMessages/SyncStepTwoMessage.ts", "../node_modules/@hocuspocus/provider/src/OutgoingMessages/UpdateMessage.ts", "../node_modules/@hocuspocus/provider/src/HocuspocusProvider.ts", "../node_modules/@hocuspocus/provider/src/TiptapCollabProviderWebsocket.ts", "../node_modules/@hocuspocus/provider/src/TiptapCollabProvider.ts", "../node_modules/@liveblocks/core/src/version.ts", "../node_modules/@liveblocks/core/src/dupe-detection.ts", "../node_modules/@liveblocks/core/src/lib/assert.ts", "../node_modules/@liveblocks/core/src/lib/controlledPromise.ts", "../node_modules/@liveblocks/core/src/lib/EventSource.ts", "../node_modules/@liveblocks/core/src/lib/fancy-console.ts", "../node_modules/@liveblocks/core/src/lib/fsm.ts", "../node_modules/@liveblocks/core/src/lib/utils.ts", "../node_modules/@liveblocks/core/src/protocol/ServerMsg.ts", "../node_modules/@liveblocks/core/src/types/IWebSocket.ts", "../node_modules/@liveblocks/core/src/connection.ts", "../node_modules/@liveblocks/core/src/protocol/AuthToken.ts", "../node_modules/@liveblocks/core/src/auth-manager.ts", "../node_modules/@liveblocks/core/src/constants.ts", "../node_modules/@liveblocks/core/src/internal.ts", "../node_modules/@liveblocks/core/src/devtools/bridge.ts", "../node_modules/@liveblocks/core/src/devtools/index.ts", "../node_modules/@liveblocks/core/src/lib/stringify.ts", "../node_modules/@liveblocks/core/src/lib/batch.ts", "../node_modules/@liveblocks/core/src/lib/create-store.ts", "../node_modules/@liveblocks/core/src/lib/deprecation.ts", "../node_modules/@liveblocks/core/src/convert-plain-data.ts", "../node_modules/@liveblocks/core/src/lib/url.ts", "../node_modules/@liveblocks/core/src/notifications.ts", "../node_modules/@liveblocks/core/src/lib/position.ts", "../node_modules/@liveblocks/core/src/protocol/Op.ts", "../node_modules/@liveblocks/core/src/crdts/AbstractCrdt.ts", "../node_modules/@liveblocks/core/src/protocol/SerializedCrdt.ts", "../node_modules/@liveblocks/core/src/lib/nanoid.ts", "../node_modules/@liveblocks/core/src/crdts/LiveRegister.ts", "../node_modules/@liveblocks/core/src/crdts/LiveList.ts", "../node_modules/@liveblocks/core/src/lib/freeze.ts", "../node_modules/@liveblocks/core/src/crdts/LiveMap.ts", "../node_modules/@liveblocks/core/src/crdts/LiveObject.ts", "../node_modules/@liveblocks/core/src/crdts/liveblocks-helpers.ts", "../node_modules/@liveblocks/core/src/lib/debug.ts", "../node_modules/@liveblocks/core/src/lib/Json.ts", "../node_modules/@liveblocks/core/src/protocol/ClientMsg.ts", "../node_modules/@liveblocks/core/src/refs/ImmutableRef.ts", "../node_modules/@liveblocks/core/src/refs/OthersRef.ts", "../node_modules/@liveblocks/core/src/refs/PatchableRef.ts", "../node_modules/@liveblocks/core/src/refs/ValueRef.ts", "../node_modules/@liveblocks/core/src/room.ts", "../node_modules/@liveblocks/core/src/store.ts", "../node_modules/@liveblocks/core/src/client.ts", "../node_modules/@liveblocks/core/src/comments/comment-body.ts", "../node_modules/@liveblocks/core/src/crdts/utils.ts", "../node_modules/@liveblocks/core/src/immutable.ts", "../node_modules/@liveblocks/core/src/lib/Poller.ts", "../node_modules/@liveblocks/core/src/lib/shallow.ts", "../node_modules/@liveblocks/core/src/index.ts", "../node_modules/@liveblocks/client/src/index.ts", "../node_modules/@liveblocks/client/src/version.ts", "../node_modules/js-base64/base64.mjs", "../node_modules/@liveblocks/yjs/src/index.ts", "../node_modules/node_modules/lib0/map.js", "../node_modules/node_modules/lib0/set.js", "../node_modules/node_modules/lib0/array.js", "../node_modules/node_modules/lib0/observable.js", "../node_modules/@liveblocks/yjs/src/awareness.ts", "../node_modules/@liveblocks/yjs/src/doc.ts", "../node_modules/@liveblocks/yjs/src/version.ts", "../index.js"],
  "sourcesContent": ["// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) \u2192 ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) \u2192 OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) \u2192 OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) \u2192 OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) \u2192 OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) \u2192 OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) \u2192 OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) \u2192 OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) \u2192 OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: () \u2192 Object\n  // Turn ordered map into a plain object.\n  toObject: function() {\n    var result = {};\n    this.forEach(function(key, value) { result[key] = value; });\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) \u2192 OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n", "import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", first = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            let nodeText = node.isText ? node.text.slice(Math.max(from, pos) - pos, to - pos)\n                : !node.isLeaf ? \"\"\n                    : leafText ? (typeof leafText === \"function\" ? leafText(node) : leafText)\n                        : node.type.spec.leafText ? node.type.spec.leafText(node)\n                            : \"\";\n            if (node.isBlock && (node.isLeaf && nodeText || node.isTextblock) && blockSeparator) {\n                if (first)\n                    first = false;\n                else\n                    text += blockSeparator;\n            }\n            text += nodeText;\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. (Not public.)\n    */\n    findIndex(pos, round = -1) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos || round > 0)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        return type.create(json.attrs);\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are \u2018open\u2019 (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment\u2014i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    node.type.checkContent(content);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent\u2014text nodes are \u2018flat\u2019 in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        for (let i = 0; i < resolveCache.length; i++) {\n            let cached = resolveCache[i];\n            if (cached.pos == pos && cached.doc == doc)\n                return cached;\n        }\n        let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos);\n        resolveCachePos = (resolveCachePos + 1) % resolveCacheSize;\n        return result;\n    }\n}\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12;\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    position relative to the original node (method receiver),\n    its parent node, and its child index. When the callback returns\n    false for a given node, that node's children will not be\n    recursed over. The last parameter can be used to specify a\n    starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise error when they do not.\n    */\n    check() {\n        this.type.checkContent(this.content);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++)\n            copy = this.marks[i].addToSet(copy);\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = null;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        return schema.nodeType(json.type).create(json.attrs, content, marks);\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length != 0 && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_\u200Bth outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.groups.indexOf(name) > -1)\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n/**\nConstruct an NFA from an expression as returned by the parser. The\nNFA is represented as an array of states, which are themselves\narrays of edges, which are `{term, to}` objects. The first state is\nthe entry state and the last node is the success state.\n\nNote that unlike typical NFAs, the edge ordering in this one is\nsignificant, in that it is used to contruct filler content when\nnecessary.\n*/\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction initAttrs(attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        this.checkContent(content);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type with the given attributes.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Throws a RangeError if the given fragment is not valid content for this\n    node type.\n    @internal\n    */\n    checkContent(content) {\n        if (!this.validContent(content))\n            throw new RangeError(`Invalid content for node ${this.name}: ${content.toString().slice(0, 50)}`);\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        let instanceSpec = this.spec = {};\n        for (let prop in spec)\n            instanceSpec[prop] = spec[prop];\n        instanceSpec.nodes = OrderedMap.from(spec.nodes),\n            instanceSpec.marks = OrderedMap.from(spec.marks || {}),\n            this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = this.nodeFromJSON.bind(this);\n        this.markFromJSON = this.markFromJSON.bind(this);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    Deserialize a node from its JSON representation. This method is\n    bound.\n    */\n    nodeFromJSON(json) {\n        return Node.fromJSON(this, json);\n    }\n    /**\n    Deserialize a mark from its JSON representation. This method is\n    bound.\n    */\n    markFromJSON(json) {\n        return Mark.fromJSON(this, json);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        rules.forEach(rule => {\n            if (rule.tag)\n                this.tags.push(rule);\n            else if (rule.style)\n                this.styles.push(rule);\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.mark || rule.ignore || rule.clearMark))\n                        rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.node || rule.ignore || rule.mark))\n                        rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, \n    // Marks applied to this node itself\n    marks, \n    // Marks that can't apply here, but will be used in children if possible\n    pendingMarks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.pendingMarks = pendingMarks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        // Nested Marks with same type\n        this.stashMarks = [];\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    popFromStashMark(mark) {\n        for (let i = this.stashMarks.length - 1; i >= 0; i--)\n            if (mark.eq(this.stashMarks[i]))\n                return this.stashMarks.splice(i, 1)[0];\n    }\n    applyPending(nextType) {\n        for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n            let mark = pending[i];\n            if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n                !mark.isInSet(this.activeMarks)) {\n                this.activeMarks = mark.addToSet(this.activeMarks);\n                this.pendingMarks = mark.removeFromSet(this.pendingMarks);\n            }\n        }\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom) {\n        if (dom.nodeType == 3)\n            this.addTextNode(dom);\n        else if (dom.nodeType == 1)\n            this.addElement(dom);\n    }\n    withStyleRules(dom, f) {\n        let style = dom.getAttribute(\"style\");\n        if (!style)\n            return f();\n        let marks = this.readStyles(parseStyles(style));\n        if (!marks)\n            return; // A style with ignore: true\n        let [addMarks, removeMarks] = marks, top = this.top;\n        for (let i = 0; i < removeMarks.length; i++)\n            this.removePendingMark(removeMarks[i], top);\n        for (let i = 0; i < addMarks.length; i++)\n            this.addPendingMark(addMarks[i]);\n        f();\n        for (let i = 0; i < addMarks.length; i++)\n            this.removePendingMark(addMarks[i], top);\n        for (let i = 0; i < removeMarks.length; i++)\n            this.addPendingMark(removeMarks[i]);\n    }\n    addTextNode(dom) {\n        let value = dom.nodeValue;\n        let top = this.top;\n        if (top.options & OPT_PRESERVE_WS_FULL ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!(top.options & OPT_PRESERVE_WS)) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            else {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            if (value)\n                this.insertNode(this.parser.schema.text(value));\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, matchAfter) {\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, top = this.top, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                if (top.content.length && top.content[0].isInline && this.open) {\n                    this.open--;\n                    top = this.top;\n                }\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom);\n                return;\n            }\n            if (rule && rule.skip)\n                this.addAll(dom);\n            else\n                this.withStyleRules(dom, () => this.addAll(dom));\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            this.withStyleRules(dom, () => {\n                this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : undefined);\n            });\n        }\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"));\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"));\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an array of marks, or null to indicate some of the styles\n    // had a rule with `ignore` set.\n    readStyles(styles) {\n        let add = Mark.none, remove = Mark.none;\n        for (let i = 0; i < styles.length; i += 2) {\n            for (let after = undefined;;) {\n                let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after);\n                if (!rule)\n                    break;\n                if (rule.ignore)\n                    return null;\n                if (rule.clearMark) {\n                    this.top.pendingMarks.concat(this.top.activeMarks).forEach(m => {\n                        if (rule.clearMark(m))\n                            remove = m.addToSet(remove);\n                    });\n                }\n                else {\n                    add = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(add);\n                }\n                if (rule.consuming === false)\n                    after = rule;\n                else\n                    break;\n            }\n        }\n        return [add, remove];\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, continueAfter) {\n        let sync, nodeType, mark;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                sync = this.enter(nodeType, rule.attrs || null, rule.preserveWhitespace);\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs))) {\n                this.leafFallback(dom);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            mark = markType.create(rule.attrs);\n            this.addPendingMark(mark);\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n        if (mark)\n            this.removePendingMark(mark, startIn);\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node) {\n        let route, sync;\n        for (let depth = this.open; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid)\n                break;\n        }\n        if (!route)\n            return false;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            this.enterInner(route[i], null, false);\n        return true;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                this.enterInner(block);\n        }\n        if (this.findPlace(node)) {\n            this.closeExtra();\n            let top = this.top;\n            top.applyPending(node.type);\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let marks = top.activeMarks;\n            for (let i = 0; i < node.marks.length; i++)\n                if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n                    marks = node.marks[i].addToSet(marks);\n            top.content.push(node.mark(marks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, preserveWS) {\n        let ok = this.findPlace(type.create(attrs));\n        if (ok)\n            this.enterInner(type, attrs, true, preserveWS);\n        return ok;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs = null, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.applyPending(type);\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options));\n        this.open++;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(this.isOpen || this.options.topOpen);\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--)\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n    addPendingMark(mark) {\n        let found = findSameMarkInSet(mark, this.top.pendingMarks);\n        if (found)\n            this.top.stashMarks.push(found);\n        this.top.pendingMarks = mark.addToSet(this.top.pendingMarks);\n    }\n    removePendingMark(mark, upto) {\n        for (let depth = this.open; depth >= 0; depth--) {\n            let level = this.nodes[depth];\n            let found = level.pendingMarks.lastIndexOf(mark);\n            if (found > -1) {\n                level.pendingMarks = mark.removeFromSet(level.pendingMarks);\n            }\n            else {\n                level.activeMarks = mark.removeFromSet(level.activeMarks);\n                let stashMark = level.popFromStashMark(mark);\n                if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n                    level.activeMarks = stashMark.addToSet(level.activeMarks);\n            }\n            if (level == upto)\n                break;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n    let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = [];\n    while (m = re.exec(style))\n        result.push(m[1], m[2].trim());\n    return result;\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\nfunction findSameMarkInSet(mark, set) {\n    for (let i = 0; i < set.length; i++) {\n        if (mark.eq(set[i]))\n            return set[i];\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node));\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline));\n    }\n    /**\n    Render an [output spec](https://prosemirror.net/docs/ref/#model.DOMOutputSpec) to a DOM node. If\n    the spec has a hole (zero) in it, `contentDOM` will point at the\n    node with the hole.\n    */\n    static renderSpec(doc, structure, xmlNS = null) {\n        if (typeof structure == \"string\")\n            return { dom: doc.createTextNode(structure) };\n        if (structure.nodeType != null)\n            return { dom: structure };\n        if (structure.dom && structure.dom.nodeType != null)\n            return structure;\n        let tagName = structure[0], space = tagName.indexOf(\" \");\n        if (space > 0) {\n            xmlNS = tagName.slice(0, space);\n            tagName = tagName.slice(space + 1);\n        }\n        let contentDOM;\n        let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n        let attrs = structure[1], start = 1;\n        if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n            start = 2;\n            for (let name in attrs)\n                if (attrs[name] != null) {\n                    let space = name.indexOf(\" \");\n                    if (space > 0)\n                        dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                    else\n                        dom.setAttribute(name, attrs[name]);\n                }\n        }\n        for (let i = start; i < structure.length; i++) {\n            let child = structure[i];\n            if (child === 0) {\n                if (i < structure.length - 1 || i > start)\n                    throw new RangeError(\"Content hole must be the only child of its parent node\");\n                return { dom, contentDOM: dom };\n            }\n            else {\n                let { dom: inner, contentDOM: innerContent } = DOMSerializer.renderSpec(doc, child, xmlNS);\n                dom.appendChild(inner);\n                if (innerContent) {\n                    if (contentDOM)\n                        throw new RangeError(\"Multiple content holes\");\n                    contentDOM = innerContent;\n                }\n            }\n        }\n        return { dom, contentDOM };\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n", "import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n\u2018[rebasing](/docs/guide/#transform.rebasing)\u2019 steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(\n    /**\n    The step maps in this mapping.\n    */\n    maps = [], \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps.length) {\n        this.maps = maps;\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this.maps, this.mirror, from, to);\n    }\n    /**\n    @internal\n    */\n    copy() {\n        return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        this.to = this.maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this.maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this.maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this.maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this.maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`\u2014the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch) {\n    let node = tr.doc.nodeAt(pos);\n    let replSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            replSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n            if (child.isText && !parentType.spec.code) {\n                let m, newline = /\\r?\\n|\\r/g, slice;\n                while (m = newline.exec(child.text)) {\n                    if (!slice)\n                        slice = new Slice(Fragment.from(parentType.schema.text(\" \", parentType.allowedMarks(child.marks))), 0, 0);\n                    replSteps.push(new ReplaceStep(cur + m.index, cur + m.index + m[0].length, slice));\n                }\n            }\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = replSteps.length - 1; i >= 0; i--)\n        tr.step(replSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            tr.clearIncompatible(tr.mapping.slice(mapFrom).map(pos, 1), type);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n            return false;\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let overrideChild = typesAfter && typesAfter[i + 1];\n        if (overrideChild)\n            rest = rest.replaceChild(0, overrideChild.type.create(overrideChild.attrs));\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && a.canAppend(b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true);\n    tr.step(step);\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n\u2018Fit\u2019 a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let leftNode = leftNodes[d], def = definesContent(leftNode.type);\n        if (def && !leftNode.sameMarkup($from.node(Math.abs(preferredTarget) - 1)))\n            preferredDepth = d;\n        else if (def || !leftNode.type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n/**\nUpdate an attribute in the doc node.\n*/\nclass DocAttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let attrs = Object.create(null);\n        for (let name in doc.attrs)\n            attrs[name] = doc.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = doc.type.create(attrs, doc.content, doc.marks);\n        return StepResult.ok(updated);\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new DocAttrStep(this.attr, doc.attrs[this.attr]);\n    }\n    map(mapping) {\n        return this;\n    }\n    toJSON() {\n        return { stepType: \"docAttr\", attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for DocAttrStep.fromJSON\");\n        return new DocAttrStep(json.attr, json.value);\n    }\n}\nStep.jsonID(\"docAttr\", DocAttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    The `pos` addresses the document content. Use `setDocAttribute`\n    to set attributes on the document itself.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Set a single attribute on the document to a new value.\n    */\n    setDocAttribute(attr, value) {\n        this.step(new DocAttrStep(attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or a mark of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        if (!(mark instanceof Mark)) {\n            let node = this.doc.nodeAt(pos);\n            if (!node)\n                throw new RangeError(\"No node at position \" + pos);\n            mark = mark.isInSet(node.marks);\n            if (!mark)\n                return this;\n        }\n        this.step(new RemoveNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split.\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, DocAttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n", "import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata\nproperties: it will attach a property `\"pointer\"` with the value\n`true` to selection transactions directly caused by mouse or touch\ninput, a `\"composition\"` property holding an ID identifying the\ncomposition that caused it to transactions caused by composed DOM\ninput, and a `\"uiEvent\"` property of that may be `\"paste\"`,\n`\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure\u2014it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @internal\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n", "import { TextSelection, NodeSelection, AllSelection, Selection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? nodeSize(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction caretFromPoint(doc, x, y) {\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                return { node: pos.offsetNode, offset: pos.offset };\n        }\n        catch (_) { }\n    }\n    if (doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(x, y);\n        if (range)\n            return { node: range.startContainer, offset: range.startOffset };\n    }\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst windows = nav ? /Win/.test(nav.platform) : false;\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1)\n            continue;\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - rect.top > bounding.bottom - bounding.top\n                ? rect.top + getSide(scrollMargin, \"top\") - bounding.top\n                : rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        if (atTop || /^(fixed|sticky)$/.test(getComputedStyle(parent).position))\n            break;\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    let firstBelow, coordsBelow;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            else if (rect.top > coords.top && !firstBelow && rect.left <= coords.left && rect.right >= coords.left) {\n                firstBelow = child;\n                coordsBelow = { left: Math.max(rect.left, Math.min(rect.right, coords.left)), top: rect.top };\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (!closest && firstBelow) {\n        closest = firstBelow;\n        coordsClosest = coordsBelow;\n        dxClosest = 0;\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outsideBlock = -1;\n    for (let cur = node, sawBlock = false;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true);\n        if (!desc)\n            return null;\n        if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent && !sawBlock || !desc.contentDOM)) {\n            let rect = desc.dom.getBoundingClientRect();\n            if (desc.node.isBlock && desc.parent && !sawBlock) {\n                sawBlock = true;\n                if (rect.left > coords.left || rect.top > coords.top)\n                    outsideBlock = desc.posBefore;\n                else if (rect.right < coords.left || rect.bottom < coords.top)\n                    outsideBlock = desc.posAfter;\n            }\n            if (!desc.contentDOM && outsideBlock < 0 && !desc.node.isText) {\n                // If we are inside a leaf, return the side of the leaf closer to the coords\n                let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2\n                    : coords.left < (rect.left + rect.right) / 2;\n                return before ? desc.posBefore : desc.posAfter;\n            }\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    let caret = caretFromPoint(doc, coords.left, coords.top);\n    if (caret)\n        ({ node, offset } = caret);\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        let prev;\n        // When clicking above the right side of an uneditable node, Chrome will report a cursor position after that node.\n        if (webkit && offset && node.nodeType == 1 && (prev = node.childNodes[offset - 1]).nodeType == 1 &&\n            prev.contentEditable == \"false\" && prev.getBoundingClientRect().top >= coords.top)\n            offset--;\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction nonZero(rect) {\n    return rect.top < rect.bottom || rect.left < rect.right;\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    if (rects.length) {\n        let first = rects[bias < 0 ? 0 : rects.length - 1];\n        if (nonZero(first))\n            return first;\n    }\n    return Array.prototype.find.call(rects, nonZero) || target.getBoundingClientRect();\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.contentDOM || nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length)\n                    child = child.children[0];\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, root, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = root.getSelection();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n            let after = domSel.focusNode.childNodes[domSel.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline));\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            ({ dom, contentDOM } = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)));\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i, off)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let sel = view.domSelectionRange();\n        let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.removeAttribute(\"draggable\");\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    let docView = new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n    if (docView.contentDOM)\n        docView.updateChildren(view, 0);\n    return docView;\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, root, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n            : super.setSelection(anchor, head, root, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                let next = this.top.children[i];\n                if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index, pos) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom, updated;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.isLocked(nextDOM) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                else if (!locked && (updated = this.recreateWrapper(next, node, outerDeco, innerDeco, view, pos))) {\n                    this.top.children[this.index] = updated;\n                    if (updated.contentDOM) {\n                        updated.dirty = CONTENT_DIRTY;\n                        updated.updateChildren(view, pos + 1);\n                        updated.dirty = NOT_DIRTY;\n                    }\n                    this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // When a node with content is replaced by a different node with\n    // identical content, move over its children.\n    recreateWrapper(next, node, outerDeco, innerDeco, view, pos) {\n        if (next.dirty || node.isAtom || !next.children.length ||\n            !next.node.content.eq(node.content))\n            return null;\n        let wrapper = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (wrapper.contentDOM) {\n            wrapper.children = next.children;\n            next.children = [];\n            for (let ch of wrapper.children)\n                ch.parent = wrapper;\n        }\n        next.destroy();\n        return wrapper;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        let desc = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (desc.contentDOM)\n            desc.updateChildren(view, pos + 1);\n        this.top.children.splice(this.index++, 0, desc);\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n    isLocked(node) {\n        return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        let widget, widgets;\n        while (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let next = locals[decoIndex++];\n            if (next.widget) {\n                if (!widget)\n                    widget = next;\n                else\n                    (widgets || (widgets = [widget])).push(next);\n            }\n        }\n        if (widget) {\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        else {\n            while (decoIndex < locals.length && locals[decoIndex].to < end)\n                decoIndex++;\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\nfunction nearbyTextNode(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n                return node.childNodes[offset];\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            if (pos >= to && str.slice(to - text.length - childStart, to - childStart) == text)\n                return to - text.length;\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), $anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        $anchor = $head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        if (anchor < 0)\n            return null;\n        $anchor = doc.resolve(anchor);\n    }\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view.root, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setEnd(node.parentNode, domIndex(node) + 1);\n    else\n        range.setEnd(node, 0);\n    range.collapse(false);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (mods.indexOf(\"s\") > -1) {\n            let { $head } = sel, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter;\n            if (!node || node.isText || !node.isLeaf)\n                return false;\n            let $newHead = view.state.doc.resolve($head.pos + node.nodeSize * (dir < 0 ? -1 : 1));\n            return apply(view, new TextSelection(sel.$anchor, $newHead));\n        }\n        else if (!sel.empty) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom, dir) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dir < 0 || dom.nextSibling || dom.nodeName != \"BR\");\n}\nfunction skipIgnoredNodes(view, dir) {\n    return dir < 0 ? skipIgnoredNodesBefore(view) : skipIgnoredNodesAfter(view);\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesBefore(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset], -1))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before, -1)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev, -1)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesAfter(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after, 1)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next, 1)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction textNodeAfter(node, offset) {\n    while (node && offset == node.childNodes.length && !hasBlockDesc(node)) {\n        offset = domIndex(node) + 1;\n        node = node.parentNode;\n    }\n    while (node && offset < node.childNodes.length) {\n        let next = node.childNodes[offset];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = 0;\n    }\n}\nfunction textNodeBefore(node, offset) {\n    while (node && !offset && !hasBlockDesc(node)) {\n        offset = domIndex(node);\n        node = node.parentNode;\n    }\n    while (node && offset) {\n        let next = node.childNodes[offset - 1];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = node.childNodes.length;\n    }\n}\nfunction setSelFocus(view, node, offset) {\n    if (node.nodeType != 3) {\n        let before, after;\n        if (after = textNodeAfter(node, offset)) {\n            node = after;\n            offset = 0;\n        }\n        else if (before = textNodeBefore(node, offset)) {\n            node = before;\n            offset = before.nodeValue.length;\n        }\n    }\n    let sel = view.domSelection();\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\nfunction findDirection(view, pos) {\n    let $pos = view.state.doc.resolve(pos);\n    if (!(chrome || windows) && $pos.parent.inlineContent) {\n        let coords = view.coordsAtPos(pos);\n        if (pos > $pos.start()) {\n            let before = view.coordsAtPos(pos - 1);\n            let mid = (before.top + before.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(before.left - coords.left) > 1)\n                return before.left < coords.left ? \"ltr\" : \"rtl\";\n        }\n        if (pos < $pos.end()) {\n            let after = view.coordsAtPos(pos + 1);\n            let mid = (after.top + after.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(after.left - coords.left) > 1)\n                return after.left > coords.left ? \"ltr\" : \"rtl\";\n        }\n    }\n    let computed = getComputedStyle(view.dom).direction;\n    return computed == \"rtl\" ? \"rtl\" : \"ltr\";\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodes(view, -1);\n    }\n    else if ((code == 46 && !event.shiftKey) || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodes(view, 1);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        let dir = code == 37 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? -1 : 1) : -1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        let dir = code == 39 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? 1 : -1) : 1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodes(view, -1);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodes(view, 1);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice, view); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText, view); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html, view); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0; i--) {\n            let child = dom.firstChild;\n            while (child && child.nodeType != 1)\n                child = child.nextSibling;\n            if (!child)\n                break;\n            dom = child;\n        }\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (fragment.childCount > 1)\n        openEnd = 0;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = html;\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\" };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastAndroidDelete = 0;\n        this.composing = false;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.compositionID = 1;\n        // Set to a composition ID when there are pending changes at compositionend\n        this.compositionPendingChanges = 0;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n            view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$from;\n        if (state.selection.empty &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        view.domSelection().collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        view.input.compositionPendingChanges = view.domObserver.pendingRecords().length ? view.input.compositionID : 0;\n        if (view.input.compositionPendingChanges)\n            Promise.resolve().then(() => view.domObserver.flush());\n        view.input.compositionID++;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, forceUpdate = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (forceUpdate || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view);\n        if (sel && !sel.eq(view.state.selection))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API\u2014all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, plain, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, plain, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n    let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, preferPlain)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\nfunction getText(clipboardData) {\n    let text = clipboardData.getData(\"text/plain\") || clipboardData.getData(\"Text\");\n    if (text)\n        return text;\n    let uris = clipboardData.getData(\"text/uri-list\");\n    return uris ? uris.replace(/\\r?\\n/g, \" \") : \"\";\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    if (data && doPaste(view, getText(data), data.getData(\"text/html\"), plain, event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move, node) {\n        this.slice = slice;\n        this.move = move;\n        this.node = node;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    let node;\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        node = NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos);\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            node = NodeSelection.create(view.state.doc, desc.posBefore);\n    }\n    let slice = (node || view.state.selection).content(), { dom, text } = serializeForClipboard(view, slice);\n    event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, !event[dragCopyModifier], node);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    }\n    else {\n        slice = parseFromClipboard(view, getText(event.dataTransfer), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && !event[dragCopyModifier]);\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move) {\n        let { node } = dragging;\n        if (node)\n            node.replace(tr);\n        else\n            tr.deleteSelection();\n    }\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants\u2014see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n    /**\n    @internal\n    */\n    get widget() { return this.type instanceof WidgetType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure\u2014it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document. This will consume (modify) the `decorations` array, so\n    you must make a copy if you want need to preserve that.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Consumes the `decorations` array. Needs\n    access to the current document to create the appropriate tree\n    structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    /**\n    @internal\n    */\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members :\n                members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n        }\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (oldStart >= baseOffset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    pendingRecords() {\n        if (this.observer)\n            for (let mut of this.observer.takeRecords())\n                this.queue.push(mut);\n        return this.queue;\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.pendingRecords();\n        if (mutations.length)\n            this.queue = [];\n        let sel = view.domSelectionRange();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length > 1) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let a = brs[0], b = brs[1];\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++)\n                added.push(mut.addedNodes[i]);\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view) {\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it\u2014using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    let compositionID = view.input.compositionPendingChanges || (view.composing ? view.input.compositionID : 0);\n    view.input.compositionPendingChanges = 0;\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            if (chrome && android &&\n                view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime &&\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n                return;\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            if (compositionID)\n                tr.setMeta(\"composition\", compositionID);\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection)) {\n                    let tr = view.state.tr.setSelection(sel);\n                    if (compositionID)\n                        tr.setMeta(\"composition\", compositionID);\n                    view.dispatch(tr);\n                }\n            }\n            return;\n        }\n    }\n    // Chrome sometimes leaves the cursor before the inserted text when\n    // composing after a cursor wrapper. This moves it forward.\n    if (chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from &&\n        parse.sel.head == parse.sel.anchor) {\n        let size = change.endB - change.start;\n        parse.sel = { anchor: parse.sel.anchor + size, head: parse.sel.anchor + size };\n    }\n    view.input.domChangeCount++;\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size && !$from.sameParent($to) &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head == $to.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome Android will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && android && change.endB == change.start)\n        view.input.lastAndroidDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let tr, storedMarks, markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            tr = view.state.tr.delete(chFrom, chTo);\n            storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            tr = view.state.tr;\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text)))\n                return;\n            tr = view.state.tr.insertText(text, chFrom, chTo);\n        }\n    }\n    if (!tr)\n        tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n    if (parse.sel) {\n        let sel = resolveSelection(view, tr.doc, parse.sel);\n        // Chrome Android will sometimes, during composition, report the\n        // selection in the wrong place. If it looks like that is\n        // happening, don't update the selection.\n        // Edge just doesn't move the cursor forward when you start typing\n        // in an empty block or between br nodes.\n        if (sel && !(chrome && android && view.composing && sel.empty &&\n            (change.start != change.endB || view.input.lastAndroidDelete < Date.now() - 100) &&\n            (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n            ie && sel.empty && sel.head == chFrom))\n            tr.setSelection(sel);\n    }\n    if (storedMarks)\n        tr.ensureMarks(storedMarks);\n    if (compositionID)\n        tr.setMeta(\"composition\", compositionID);\n    view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n    if (!$newStart.parent.isTextblock ||\n        // The content must have shrunk\n        end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < b.size && isSurrogatePair(b.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < a.size && isSurrogatePair(a.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\nfunction isSurrogatePair(str) {\n    if (str.length != 2)\n        return false;\n    let a = str.charCodeAt(0), b = str.charCodeAt(1);\n    return a >= 0xDC00 && a <= 0xDFFF && b >= 0xD800 && b <= 0xDBFF;\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        var _a;\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco([]);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (((_a = this.dragging) === null || _a === void 0 ? void 0 : _a.node) && !prev.doc.eq(state.doc))\n            this.updateDraggedNode(this.dragging, prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    updateDraggedNode(dragging, prev) {\n        let sel = dragging.node, found = -1;\n        if (this.state.doc.nodeAt(sel.from) == sel.node) {\n            found = sel.from;\n        }\n        else {\n            let movedPos = sel.from + (this.state.doc.content.size - prev.doc.content.size);\n            let moved = movedPos > 0 && this.state.doc.nodeAt(movedPos);\n            if (moved == sel.node)\n                found = movedPos;\n        }\n        this.dragging = new Dragging(dragging.slice, dragging.move, found < 0 ? undefined : NodeSelection.create(this.state.doc, found));\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    When an existing editor view is moved to a new document or\n    shadow tree, call this to make it recompute its root.\n    */\n    updateRoot() {\n        this._root = null;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes\u2014for example when interpreting an event\n    target\u2014you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Run the editor's paste logic with the given HTML string. The\n    `event`, if given, will be passed to the\n    [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n    */\n    pasteHTML(html, event) {\n        return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Run the editor's paste logic with the given plain-text input.\n    */\n    pasteText(text, event) {\n        return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    Dispatch a transaction. Will call\n    [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n    when given, and otherwise defaults to applying the transaction to\n    the current state and calling\n    [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n    This method is bound to the view instance, so that it can be\n    easily passed around.\n    */\n    dispatch(tr) {\n        let dispatchTransaction = this._props.dispatchTransaction;\n        if (dispatchTransaction)\n            dispatchTransaction.call(this, tr);\n        else\n            this.updateState(this.state.apply(tr));\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        return safari && this.root.nodeType === 11 && deepActiveElement(this.dom.ownerDocument) == this.dom\n            ? safariShadowSelectionRange(this) : this.domSelection();\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                else if (attr == \"style\")\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    if (!attrs.translate)\n        attrs.translate = \"no\";\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.head, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };\n", "export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n", "import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift = true) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`\u2014a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), baseName, direct = map[modifiers(name, event)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        // A character key\n        if (name.length == 1 && name != \" \") {\n            if (event.shiftKey) {\n                // In case the name was already modified by shift, try looking\n                // it up without its shift modifier\n                let noShift = map[modifiers(name, event, false)];\n                if (noShift && noShift(view.state, view.dispatch, view))\n                    return true;\n            }\n            if ((event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n                (baseName = base[event.keyCode]) && baseName != name) {\n                // Try falling back to the keyCode when there's a modifier\n                // active or the character produced isn't ASCII, and our table\n                // produces a different name from the the keyCode. See #668,\n                // #1060\n                let fromCode = map[modifiers(baseName, event)];\n                if (fromCode && fromCode(view.state, view.dispatch, view))\n                    return true;\n            }\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n", "import { liftTarget, replaceStep, ReplaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, TextSelection, AllSelection } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\nfunction atBlockStart(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it\u2014if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                    : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nA more limited form of [`joinBackward`]($commands.joinBackward)\nthat only tries to join the current textblock to the one before\nit, if the cursor is at the start of a textblock.\n*/\nconst joinTextblockBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\n/**\nA more limited form of [`joinForward`]($commands.joinForward)\nthat only tries to join the current textblock to the one after\nit, if the cursor is at the end of a textblock.\n*/\nconst joinTextblockForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\nfunction joinTextblocksAround(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, beforeText = before, beforePos = $cut.pos - 1;\n    for (; !beforeText.isTextblock; beforePos--) {\n        if (beforeText.type.spec.isolating)\n            return false;\n        let child = beforeText.lastChild;\n        if (!child)\n            return false;\n        beforeText = child;\n    }\n    let after = $cut.nodeAfter, afterText = after, afterPos = $cut.pos + 1;\n    for (; !afterText.isTextblock; afterPos++) {\n        if (afterText.type.spec.isolating)\n            return false;\n        let child = afterText.firstChild;\n        if (!child)\n            return false;\n        afterText = child;\n    }\n    let step = replaceStep(state.doc, beforePos, afterPos, Slice.empty);\n    if (!step || step.from != beforePos ||\n        step instanceof ReplaceStep && step.slice.size >= afterPos - beforePos)\n        return false;\n    if (dispatch) {\n        let tr = state.tr.step(step);\n        tr.setSelection(TextSelection.create(tr.doc, beforePos));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\nfunction atBlockEnd(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nCreate a variant of [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock) that uses\na custom function to determine the type of the newly split off block.\n*/\nfunction splitBlockAs(splitNode) {\n    return (state, dispatch) => {\n        let { $from, $to } = state.selection;\n        if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n            if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n                return false;\n            if (dispatch)\n                dispatch(state.tr.split($from.pos).scrollIntoView());\n            return true;\n        }\n        if (!$from.parent.isBlock)\n            return false;\n        if (dispatch) {\n            let atEnd = $to.parentOffset == $to.parent.content.size;\n            let tr = state.tr;\n            if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n                tr.deleteSelection();\n            let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n            let splitType = splitNode && splitNode($to.parent, atEnd);\n            let types = splitType ? [splitType] : atEnd && deflt ? [{ type: deflt }] : undefined;\n            let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n            if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\n                if (deflt)\n                    types = [{ type: deflt }];\n                can = true;\n            }\n            if (can) {\n                tr.split(tr.mapping.map($from.pos), 1, types);\n                if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n                    let first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first);\n                    if (deflt && $from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                        tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n                }\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = splitBlockAs();\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr\n            .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n            .join($pos.pos)\n            .scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    if (before.type.spec.isolating || after.type.spec.isolating)\n        return false;\n    if (joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let joinAt = end + 2 * conn.length;\n            if (canJoin(tr.doc, joinAt))\n                tr.join(joinAt);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let applicable = false;\n        for (let i = 0; i < state.selection.ranges.length && !applicable; i++) {\n            let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n            state.doc.nodesBetween(from, to, (node, pos) => {\n                if (applicable)\n                    return false;\n                if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                    return;\n                if (node.type == nodeType) {\n                    applicable = true;\n                }\n                else {\n                    let $pos = state.doc.resolve(pos), index = $pos.index();\n                    applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n                }\n            });\n        }\n        if (!applicable)\n            return false;\n        if (dispatch) {\n            let tr = state.tr;\n            for (let i = 0; i < state.selection.ranges.length; i++) {\n                let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n                tr.setBlockType(from, to, nodeType, attrs);\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, node => {\n            if (can)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null) {\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let has = false, tr = state.tr;\n                for (let i = 0; !has && i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    has = state.doc.rangeHasMark($from.pos, $to.pos, markType);\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (has) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinTextblockBackward, joinTextblockForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockAs, splitBlockKeepMarks, toggleMark, wrapIn };\n", "import { findWrapping, ReplaceAroundStep, canSplit, liftTarget, canJoin } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n/**\nAn ordered list [node spec](https://prosemirror.net/docs/ref/#model.NodeSpec). Has a single\nattribute, `order`, which determines the number at which the list\nstarts counting, and defaults to 1. Represented as an `<ol>`\nelement.\n*/\nconst orderedList = {\n    attrs: { order: { default: 1 } },\n    parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1 };\n            } }],\n    toDOM(node) {\n        return node.attrs.order == 1 ? olDOM : [\"ol\", { start: node.attrs.order }, 0];\n    }\n};\n/**\nA bullet list node spec, represented in the DOM as `<ul>`.\n*/\nconst bulletList = {\n    parseDOM: [{ tag: \"ul\" }],\n    toDOM() { return ulDOM; }\n};\n/**\nA list item (`<li>`) spec.\n*/\nconst listItem = {\n    parseDOM: [{ tag: \"li\" }],\n    toDOM() { return liDOM; },\n    defining: true\n};\nfunction add(obj, props) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    for (let prop in props)\n        copy[prop] = props[prop];\n    return copy;\n}\n/**\nConvenience function for adding list-related node types to a map\nspecifying the nodes for a schema. Adds\n[`orderedList`](https://prosemirror.net/docs/ref/#schema-list.orderedList) as `\"ordered_list\"`,\n[`bulletList`](https://prosemirror.net/docs/ref/#schema-list.bulletList) as `\"bullet_list\"`, and\n[`listItem`](https://prosemirror.net/docs/ref/#schema-list.listItem) as `\"list_item\"`.\n\n`itemContent` determines the content expression for the list items.\nIf you want the commands defined in this module to apply to your\nlist structure, it should have a shape like `\"paragraph block*\"` or\n`\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\ngiven to assign a group name to the list node types, for example\n`\"block\"`.\n*/\nfunction addListNodes(nodes, itemContent, listGroup) {\n    return nodes.append({\n        ordered_list: add(orderedList, { content: \"list_item+\", group: listGroup }),\n        bullet_list: add(bulletList, { content: \"list_item+\", group: listGroup }),\n        list_item: add(listItem, { content: itemContent })\n    });\n}\n/**\nReturns a command function that wraps the selection in a list with\nthe given type an attributes. If `dispatch` is null, only return a\nvalue to indicate whether this is possible, but don't actually\nperform the change.\n*/\nfunction wrapInList(listType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), doJoin = false, outerRange = range;\n        if (!range)\n            return false;\n        // This is at the top of an existing list item\n        if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n            // Don't do anything if this is the top of the list\n            if ($from.index(range.depth - 1) == 0)\n                return false;\n            let $insert = state.doc.resolve(range.start - 2);\n            outerRange = new NodeRange($insert, $insert, range.depth);\n            if (range.endIndex < range.parent.childCount)\n                range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth);\n            doJoin = true;\n        }\n        let wrap = findWrapping(outerRange, listType, attrs, range);\n        if (!wrap)\n            return false;\n        if (dispatch)\n            dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView());\n        return true;\n    };\n}\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--)\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end, new Slice(content, 0, 0), wrappers.length, true));\n    let found = 0;\n    for (let i = 0; i < wrappers.length; i++)\n        if (wrappers[i].type == listType)\n            found = i + 1;\n    let splitDepth = wrappers.length - found;\n    let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n    for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += 2 * splitDepth;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\n/**\nBuild a command that splits a non-empty textblock at the top level\nof a list item by also splitting that list item.\n*/\nfunction splitListItem(itemType, itemAttrs) {\n    return function (state, dispatch) {\n        let { $from, $to, node } = state.selection;\n        if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to))\n            return false;\n        let grandParent = $from.node(-1);\n        if (grandParent.type != itemType)\n            return false;\n        if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth == 3 || $from.node(-3).type != itemType ||\n                $from.index(-2) != $from.node(-2).childCount - 1)\n                return false;\n            if (dispatch) {\n                let wrap = Fragment.empty;\n                let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n                // Build a fragment containing empty versions of the structure\n                // from the outer list item to the parent node of the cursor\n                for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n                    wrap = Fragment.from($from.node(d).copy(wrap));\n                let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n                    : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n                // Add a second list item with an empty default start node\n                wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n                let start = $from.before($from.depth - (depthBefore - 1));\n                let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n                let sel = -1;\n                tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n                    if (sel > -1)\n                        return false;\n                    if (node.isTextblock && node.content.size == 0)\n                        sel = pos + 1;\n                });\n                if (sel > -1)\n                    tr.setSelection(Selection.near(tr.doc.resolve(sel)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        let tr = state.tr.delete($from.pos, $to.pos);\n        let types = nextType ? [itemAttrs ? { type: itemType, attrs: itemAttrs } : null, { type: nextType }] : undefined;\n        if (!canSplit(tr.doc, $from.pos, 2, types))\n            return false;\n        if (dispatch)\n            dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n        return true;\n    };\n}\n/**\nCreate a command to lift the list item around the selection up into\na wrapping list.\n*/\nfunction liftListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        if (!dispatch)\n            return true;\n        if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n            return liftToOuterList(state, dispatch, itemType, range);\n        else // Outer list node\n            return liftOutOfList(state, dispatch, range);\n    };\n}\nfunction liftToOuterList(state, dispatch, itemType, range) {\n    let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n    }\n    const target = liftTarget(range);\n    if (target == null)\n        return false;\n    tr.lift(range, target);\n    let after = tr.mapping.map(end, -1) - 1;\n    if (canJoin(tr.doc, after))\n        tr.join(after);\n    dispatch(tr.scrollIntoView());\n    return true;\n}\nfunction liftOutOfList(state, dispatch, range) {\n    let tr = state.tr, list = range.parent;\n    // Merge the list items into a single big item\n    for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    let $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n    if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize)\n        return false;\n    let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n    let parent = $start.node(-1), indexBefore = $start.index(-1);\n    if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n        return false;\n    let start = $start.pos, end = start + item.nodeSize;\n    // Strip off the surrounding list. At the sides where we're not at\n    // the end of the list, the existing list is closed. At sides where\n    // this is the end, it is overwritten to its end.\n    tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n        .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    dispatch(tr.scrollIntoView());\n    return true;\n}\n/**\nCreate a command to sink the list item around the selection down\ninto an inner list.\n*/\nfunction sinkListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        let startIndex = range.startIndex;\n        if (startIndex == 0)\n            return false;\n        let parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n        if (nodeBefore.type != itemType)\n            return false;\n        if (dispatch) {\n            let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n            let inner = Fragment.from(nestedBefore ? itemType.create() : null);\n            let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            let before = range.start, after = range.end;\n            dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true))\n                .scrollIntoView());\n        }\n        return true;\n    };\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, wrapInList };\n", "import { EditorState, Transaction } from '@tiptap/pm/state'\n\nexport function createChainableState(config: {\n  transaction: Transaction\n  state: EditorState\n}): EditorState {\n  const { state, transaction } = config\n  let { selection } = transaction\n  let { doc } = transaction\n  let { storedMarks } = transaction\n\n  return {\n    ...state,\n    apply: state.apply.bind(state),\n    applyTransaction: state.applyTransaction.bind(state),\n    plugins: state.plugins,\n    schema: state.schema,\n    reconfigure: state.reconfigure.bind(state),\n    toJSON: state.toJSON.bind(state),\n    get storedMarks() {\n      return storedMarks\n    },\n    get selection() {\n      return selection\n    },\n    get doc() {\n      return doc\n    },\n    get tr() {\n      selection = transaction.selection\n      doc = transaction.doc\n      storedMarks = transaction.storedMarks\n\n      return transaction\n    },\n  }\n}\n", "import { EditorState, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { createChainableState } from './helpers/createChainableState.js'\nimport {\n  AnyCommands, CanCommands, ChainedCommands, CommandProps, SingleCommands,\n} from './types.js'\n\nexport class CommandManager {\n  editor: Editor\n\n  rawCommands: AnyCommands\n\n  customState?: EditorState\n\n  constructor(props: { editor: Editor; state?: EditorState }) {\n    this.editor = props.editor\n    this.rawCommands = this.editor.extensionManager.commands\n    this.customState = props.state\n  }\n\n  get hasCustomState(): boolean {\n    return !!this.customState\n  }\n\n  get state(): EditorState {\n    return this.customState || this.editor.state\n  }\n\n  get commands(): SingleCommands {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n    const { tr } = state\n    const props = this.buildProps(tr)\n\n    return Object.fromEntries(\n      Object.entries(rawCommands).map(([name, command]) => {\n        const method = (...args: any[]) => {\n          const callback = command(...args)(props)\n\n          if (!tr.getMeta('preventDispatch') && !this.hasCustomState) {\n            view.dispatch(tr)\n          }\n\n          return callback\n        }\n\n        return [name, method]\n      }),\n    ) as unknown as SingleCommands\n  }\n\n  get chain(): () => ChainedCommands {\n    return () => this.createChain()\n  }\n\n  get can(): () => CanCommands {\n    return () => this.createCan()\n  }\n\n  public createChain(startTr?: Transaction, shouldDispatch = true): ChainedCommands {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n    const callbacks: boolean[] = []\n    const hasStartTransaction = !!startTr\n    const tr = startTr || state.tr\n\n    const run = () => {\n      if (\n        !hasStartTransaction\n        && shouldDispatch\n        && !tr.getMeta('preventDispatch')\n        && !this.hasCustomState\n      ) {\n        view.dispatch(tr)\n      }\n\n      return callbacks.every(callback => callback === true)\n    }\n\n    const chain = {\n      ...Object.fromEntries(\n        Object.entries(rawCommands).map(([name, command]) => {\n          const chainedCommand = (...args: never[]) => {\n            const props = this.buildProps(tr, shouldDispatch)\n            const callback = command(...args)(props)\n\n            callbacks.push(callback)\n\n            return chain\n          }\n\n          return [name, chainedCommand]\n        }),\n      ),\n      run,\n    } as unknown as ChainedCommands\n\n    return chain\n  }\n\n  public createCan(startTr?: Transaction): CanCommands {\n    const { rawCommands, state } = this\n    const dispatch = false\n    const tr = startTr || state.tr\n    const props = this.buildProps(tr, dispatch)\n    const formattedCommands = Object.fromEntries(\n      Object.entries(rawCommands).map(([name, command]) => {\n        return [name, (...args: never[]) => command(...args)({ ...props, dispatch: undefined })]\n      }),\n    ) as unknown as SingleCommands\n\n    return {\n      ...formattedCommands,\n      chain: () => this.createChain(tr, dispatch),\n    } as CanCommands\n  }\n\n  public buildProps(tr: Transaction, shouldDispatch = true): CommandProps {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n\n    const props: CommandProps = {\n      tr,\n      editor,\n      view,\n      state: createChainableState({\n        state,\n        transaction: tr,\n      }),\n      dispatch: shouldDispatch ? () => undefined : undefined,\n      chain: () => this.createChain(tr, shouldDispatch),\n      can: () => this.createCan(tr),\n      get commands() {\n        return Object.fromEntries(\n          Object.entries(rawCommands).map(([name, command]) => {\n            return [name, (...args: never[]) => command(...args)(props)]\n          }),\n        ) as unknown as SingleCommands\n      },\n    }\n\n    return props\n  }\n}\n", "type StringKeyOf<T> = Extract<keyof T, string>\ntype CallbackType<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>,\n> = T[EventName] extends any[] ? T[EventName] : [T[EventName]]\ntype CallbackFunction<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>,\n> = (...props: CallbackType<T, EventName>) => any\n\nexport class EventEmitter<T extends Record<string, any>> {\n\n  private callbacks: { [key: string]: Function[] } = {}\n\n  public on<EventName extends StringKeyOf<T>>(event: EventName, fn: CallbackFunction<T, EventName>): this {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    this.callbacks[event].push(fn)\n\n    return this\n  }\n\n  protected emit<EventName extends StringKeyOf<T>>(event: EventName, ...args: CallbackType<T, EventName>): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args))\n    }\n\n    return this\n  }\n\n  public off<EventName extends StringKeyOf<T>>(event: EventName, fn?: CallbackFunction<T, EventName>): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter(callback => callback !== fn)\n      } else {\n        delete this.callbacks[event]\n      }\n    }\n\n    return this\n  }\n\n  protected removeAllListeners(): void {\n    this.callbacks = {}\n  }\n}\n", "import { AnyExtension, MaybeThisParameterType, RemoveThis } from '../types.js'\n\nexport function getExtensionField<T = any>(\n  extension: AnyExtension,\n  field: string,\n  context?: Omit<MaybeThisParameterType<T>, 'parent'>,\n): RemoveThis<T> {\n\n  if (extension.config[field] === undefined && extension.parent) {\n    return getExtensionField(extension.parent, field, context)\n  }\n\n  if (typeof extension.config[field] === 'function') {\n    const value = extension.config[field].bind({\n      ...context,\n      parent: extension.parent\n        ? getExtensionField(extension.parent, field, context)\n        : null,\n    })\n\n    return value\n  }\n\n  return extension.config[field]\n}\n", "import { Extension } from '../Extension.js'\nimport { Mark } from '../Mark.js'\nimport { Node } from '../Node.js'\nimport { Extensions } from '../types.js'\n\nexport function splitExtensions(extensions: Extensions) {\n  const baseExtensions = extensions.filter(extension => extension.type === 'extension') as Extension[]\n  const nodeExtensions = extensions.filter(extension => extension.type === 'node') as Node[]\n  const markExtensions = extensions.filter(extension => extension.type === 'mark') as Mark[]\n\n  return {\n    baseExtensions,\n    nodeExtensions,\n    markExtensions,\n  }\n}\n", "import { MarkConfig, NodeConfig } from '../index.js'\nimport {\n  AnyConfig,\n  Attribute,\n  Attributes,\n  ExtensionAttribute,\n  Extensions,\n  GlobalAttributes,\n} from '../types.js'\nimport { getExtensionField } from './getExtensionField.js'\nimport { splitExtensions } from './splitExtensions.js'\n\n/**\n * Get a list of all extension attributes defined in `addAttribute` and `addGlobalAttribute`.\n * @param extensions List of extensions\n */\nexport function getAttributesFromExtensions(extensions: Extensions): ExtensionAttribute[] {\n  const extensionAttributes: ExtensionAttribute[] = []\n  const { nodeExtensions, markExtensions } = splitExtensions(extensions)\n  const nodeAndMarkExtensions = [...nodeExtensions, ...markExtensions]\n  const defaultAttribute: Required<Attribute> = {\n    default: null,\n    rendered: true,\n    renderHTML: null,\n    parseHTML: null,\n    keepOnSplit: true,\n    isRequired: false,\n  }\n\n  extensions.forEach(extension => {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    const addGlobalAttributes = getExtensionField<AnyConfig['addGlobalAttributes']>(\n      extension,\n      'addGlobalAttributes',\n      context,\n    )\n\n    if (!addGlobalAttributes) {\n      return\n    }\n\n    // TODO: remove `as GlobalAttributes`\n    const globalAttributes = addGlobalAttributes() as GlobalAttributes\n\n    globalAttributes.forEach(globalAttribute => {\n      globalAttribute.types.forEach(type => {\n        Object\n          .entries(globalAttribute.attributes)\n          .forEach(([name, attribute]) => {\n            extensionAttributes.push({\n              type,\n              name,\n              attribute: {\n                ...defaultAttribute,\n                ...attribute,\n              },\n            })\n          })\n      })\n    })\n  })\n\n  nodeAndMarkExtensions.forEach(extension => {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    const addAttributes = getExtensionField<NodeConfig['addAttributes'] | MarkConfig['addAttributes']>(\n      extension,\n      'addAttributes',\n      context,\n    )\n\n    if (!addAttributes) {\n      return\n    }\n\n    // TODO: remove `as Attributes`\n    const attributes = addAttributes() as Attributes\n\n    Object\n      .entries(attributes)\n      .forEach(([name, attribute]) => {\n        const mergedAttr = {\n          ...defaultAttribute,\n          ...attribute,\n        }\n\n        if (typeof mergedAttr?.default === 'function') {\n          mergedAttr.default = mergedAttr.default()\n        }\n\n        if (mergedAttr?.isRequired && mergedAttr?.default === undefined) {\n          delete mergedAttr.default\n        }\n\n        extensionAttributes.push({\n          type: extension.name,\n          name,\n          attribute: mergedAttr,\n        })\n      })\n  })\n\n  return extensionAttributes\n}\n", "import { NodeType, Schema } from '@tiptap/pm/model'\n\nexport function getNodeType(nameOrType: string | NodeType, schema: Schema): NodeType {\n  if (typeof nameOrType === 'string') {\n    if (!schema.nodes[nameOrType]) {\n      throw Error(\n        `There is no node type named '${nameOrType}'. Maybe you forgot to add the extension?`,\n      )\n    }\n\n    return schema.nodes[nameOrType]\n  }\n\n  return nameOrType\n}\n", "export function mergeAttributes(...objects: Record<string, any>[]): Record<string, any> {\n  return objects\n    .filter(item => !!item)\n    .reduce((items, item) => {\n      const mergedAttributes = { ...items }\n\n      Object.entries(item).forEach(([key, value]) => {\n        const exists = mergedAttributes[key]\n\n        if (!exists) {\n          mergedAttributes[key] = value\n\n          return\n        }\n\n        if (key === 'class') {\n          const valueClasses: string[] = value ? value.split(' ') : []\n          const existingClasses: string[] = mergedAttributes[key] ? mergedAttributes[key].split(' ') : []\n\n          const insertClasses = valueClasses.filter(\n            valueClass => !existingClasses.includes(valueClass),\n          )\n\n          mergedAttributes[key] = [...existingClasses, ...insertClasses].join(' ')\n        } else if (key === 'style') {\n          mergedAttributes[key] = [mergedAttributes[key], value].join('; ')\n        } else {\n          mergedAttributes[key] = value\n        }\n      })\n\n      return mergedAttributes\n    }, {})\n}\n", "import { Mark, Node } from '@tiptap/pm/model'\n\nimport { ExtensionAttribute } from '../types.js'\nimport { mergeAttributes } from '../utilities/mergeAttributes.js'\n\nexport function getRenderedAttributes(\n  nodeOrMark: Node | Mark,\n  extensionAttributes: ExtensionAttribute[],\n): Record<string, any> {\n  return extensionAttributes\n    .filter(item => item.attribute.rendered)\n    .map(item => {\n      if (!item.attribute.renderHTML) {\n        return {\n          [item.name]: nodeOrMark.attrs[item.name],\n        }\n      }\n\n      return item.attribute.renderHTML(nodeOrMark.attrs) || {}\n    })\n    .reduce((attributes, attribute) => mergeAttributes(attributes, attribute), {})\n}\n", "export function isFunction(value: any): value is Function {\n  return typeof value === 'function'\n}\n", "import { MaybeReturnType } from '../types.js'\nimport { isFunction } from './isFunction.js'\n\n/**\n * Optionally calls `value` as a function.\n * Otherwise it is returned directly.\n * @param value Function or any value.\n * @param context Optional context to bind to function.\n * @param props Optional props to pass to function.\n */\nexport function callOrReturn<T>(value: T, context: any = undefined, ...props: any[]): MaybeReturnType<T> {\n  if (isFunction(value)) {\n    if (context) {\n      return value.bind(context)(...props)\n    }\n\n    return value(...props)\n  }\n\n  return value as MaybeReturnType<T>\n}\n", "export function isEmptyObject(value = {}): boolean {\n  return Object.keys(value).length === 0 && value.constructor === Object\n}\n", "export function fromString(value: any): any {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  if (value.match(/^[+-]?(?:\\d*\\.)?\\d+$/)) {\n    return Number(value)\n  }\n\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  return value\n}\n", "import { ParseRule } from '@tiptap/pm/model'\n\nimport { ExtensionAttribute } from '../types.js'\nimport { fromString } from '../utilities/fromString.js'\n\n/**\n * This function merges extension attributes into parserule attributes (`attrs` or `getAttrs`).\n * Cancels when `getAttrs` returned `false`.\n * @param parseRule ProseMirror ParseRule\n * @param extensionAttributes List of attributes to inject\n */\nexport function injectExtensionAttributesToParseRule(\n  parseRule: ParseRule,\n  extensionAttributes: ExtensionAttribute[],\n): ParseRule {\n  if (parseRule.style) {\n    return parseRule\n  }\n\n  return {\n    ...parseRule,\n    getAttrs: node => {\n      const oldAttributes = parseRule.getAttrs ? parseRule.getAttrs(node) : parseRule.attrs\n\n      if (oldAttributes === false) {\n        return false\n      }\n\n      const newAttributes = extensionAttributes.reduce((items, item) => {\n        const value = item.attribute.parseHTML\n          ? item.attribute.parseHTML(node as HTMLElement)\n          : fromString((node as HTMLElement).getAttribute(item.name))\n\n        if (value === null || value === undefined) {\n          return items\n        }\n\n        return {\n          ...items,\n          [item.name]: value,\n        }\n      }, {})\n\n      return { ...oldAttributes, ...newAttributes }\n    },\n  }\n}\n", "import { MarkSpec, NodeSpec, Schema } from '@tiptap/pm/model'\n\nimport { Editor, MarkConfig, NodeConfig } from '../index.js'\nimport { AnyConfig, Extensions } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\nimport { isEmptyObject } from '../utilities/isEmptyObject.js'\nimport { getAttributesFromExtensions } from './getAttributesFromExtensions.js'\nimport { getExtensionField } from './getExtensionField.js'\nimport { getRenderedAttributes } from './getRenderedAttributes.js'\nimport { injectExtensionAttributesToParseRule } from './injectExtensionAttributesToParseRule.js'\nimport { splitExtensions } from './splitExtensions.js'\n\nfunction cleanUpSchemaItem<T>(data: T) {\n  return Object.fromEntries(\n    // @ts-ignore\n    Object.entries(data).filter(([key, value]) => {\n      if (key === 'attrs' && isEmptyObject(value as {} | undefined)) {\n        return false\n      }\n\n      return value !== null && value !== undefined\n    }),\n  ) as T\n}\n\nexport function getSchemaByResolvedExtensions(extensions: Extensions, editor?: Editor): Schema {\n  const allAttributes = getAttributesFromExtensions(extensions)\n  const { nodeExtensions, markExtensions } = splitExtensions(extensions)\n  const topNode = nodeExtensions.find(extension => getExtensionField(extension, 'topNode'))?.name\n\n  const nodes = Object.fromEntries(\n    nodeExtensions.map(extension => {\n      const extensionAttributes = allAttributes.filter(\n        attribute => attribute.type === extension.name,\n      )\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor,\n      }\n\n      const extraNodeFields = extensions.reduce((fields, e) => {\n        const extendNodeSchema = getExtensionField<AnyConfig['extendNodeSchema']>(\n          e,\n          'extendNodeSchema',\n          context,\n        )\n\n        return {\n          ...fields,\n          ...(extendNodeSchema ? extendNodeSchema(extension) : {}),\n        }\n      }, {})\n\n      const schema: NodeSpec = cleanUpSchemaItem({\n        ...extraNodeFields,\n        content: callOrReturn(\n          getExtensionField<NodeConfig['content']>(extension, 'content', context),\n        ),\n        marks: callOrReturn(getExtensionField<NodeConfig['marks']>(extension, 'marks', context)),\n        group: callOrReturn(getExtensionField<NodeConfig['group']>(extension, 'group', context)),\n        inline: callOrReturn(getExtensionField<NodeConfig['inline']>(extension, 'inline', context)),\n        atom: callOrReturn(getExtensionField<NodeConfig['atom']>(extension, 'atom', context)),\n        selectable: callOrReturn(\n          getExtensionField<NodeConfig['selectable']>(extension, 'selectable', context),\n        ),\n        draggable: callOrReturn(\n          getExtensionField<NodeConfig['draggable']>(extension, 'draggable', context),\n        ),\n        code: callOrReturn(getExtensionField<NodeConfig['code']>(extension, 'code', context)),\n        defining: callOrReturn(\n          getExtensionField<NodeConfig['defining']>(extension, 'defining', context),\n        ),\n        isolating: callOrReturn(\n          getExtensionField<NodeConfig['isolating']>(extension, 'isolating', context),\n        ),\n        attrs: Object.fromEntries(\n          extensionAttributes.map(extensionAttribute => {\n            return [extensionAttribute.name, { default: extensionAttribute?.attribute?.default }]\n          }),\n        ),\n      })\n\n      const parseHTML = callOrReturn(\n        getExtensionField<NodeConfig['parseHTML']>(extension, 'parseHTML', context),\n      )\n\n      if (parseHTML) {\n        schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes))\n      }\n\n      const renderHTML = getExtensionField<NodeConfig['renderHTML']>(\n        extension,\n        'renderHTML',\n        context,\n      )\n\n      if (renderHTML) {\n        schema.toDOM = node => renderHTML({\n          node,\n          HTMLAttributes: getRenderedAttributes(node, extensionAttributes),\n        })\n      }\n\n      const renderText = getExtensionField<NodeConfig['renderText']>(\n        extension,\n        'renderText',\n        context,\n      )\n\n      if (renderText) {\n        schema.toText = renderText\n      }\n\n      return [extension.name, schema]\n    }),\n  )\n\n  const marks = Object.fromEntries(\n    markExtensions.map(extension => {\n      const extensionAttributes = allAttributes.filter(\n        attribute => attribute.type === extension.name,\n      )\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor,\n      }\n\n      const extraMarkFields = extensions.reduce((fields, e) => {\n        const extendMarkSchema = getExtensionField<AnyConfig['extendMarkSchema']>(\n          e,\n          'extendMarkSchema',\n          context,\n        )\n\n        return {\n          ...fields,\n          ...(extendMarkSchema ? extendMarkSchema(extension) : {}),\n        }\n      }, {})\n\n      const schema: MarkSpec = cleanUpSchemaItem({\n        ...extraMarkFields,\n        inclusive: callOrReturn(\n          getExtensionField<MarkConfig['inclusive']>(extension, 'inclusive', context),\n        ),\n        excludes: callOrReturn(\n          getExtensionField<MarkConfig['excludes']>(extension, 'excludes', context),\n        ),\n        group: callOrReturn(getExtensionField<MarkConfig['group']>(extension, 'group', context)),\n        spanning: callOrReturn(\n          getExtensionField<MarkConfig['spanning']>(extension, 'spanning', context),\n        ),\n        code: callOrReturn(getExtensionField<MarkConfig['code']>(extension, 'code', context)),\n        attrs: Object.fromEntries(\n          extensionAttributes.map(extensionAttribute => {\n            return [extensionAttribute.name, { default: extensionAttribute?.attribute?.default }]\n          }),\n        ),\n      })\n\n      const parseHTML = callOrReturn(\n        getExtensionField<MarkConfig['parseHTML']>(extension, 'parseHTML', context),\n      )\n\n      if (parseHTML) {\n        schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes))\n      }\n\n      const renderHTML = getExtensionField<MarkConfig['renderHTML']>(\n        extension,\n        'renderHTML',\n        context,\n      )\n\n      if (renderHTML) {\n        schema.toDOM = mark => renderHTML({\n          mark,\n          HTMLAttributes: getRenderedAttributes(mark, extensionAttributes),\n        })\n      }\n\n      return [extension.name, schema]\n    }),\n  )\n\n  return new Schema({\n    topNode,\n    nodes,\n    marks,\n  })\n}\n", "import { MarkType, NodeType, Schema } from '@tiptap/pm/model'\n\nexport function getSchemaTypeByName(name: string, schema: Schema): NodeType | MarkType | null {\n  return schema.nodes[name] || schema.marks[name] || null\n}\n", "import { AnyExtension, EnableRules } from '../types.js'\n\nexport function isExtensionRulesEnabled(extension: AnyExtension, enabled: EnableRules): boolean {\n  if (Array.isArray(enabled)) {\n    return enabled.some(enabledExtension => {\n      const name = typeof enabledExtension === 'string'\n        ? enabledExtension\n        : enabledExtension.name\n\n      return name === extension.name\n    })\n  }\n\n  return enabled\n}\n", "import { ResolvedPos } from '@tiptap/pm/model'\n\nexport const getTextContentFromNodes = ($from: ResolvedPos, maxMatch = 500) => {\n  let textBefore = ''\n\n  const sliceEndPos = $from.parentOffset\n\n  $from.parent.nodesBetween(\n    Math.max(0, sliceEndPos - maxMatch),\n    sliceEndPos,\n    (node, pos, parent, index) => {\n      const chunk = node.type.spec.toText?.({\n        node,\n        pos,\n        parent,\n        index,\n      })\n        || node.textContent\n        || '%leaf%'\n\n      textBefore += chunk.slice(0, Math.max(0, sliceEndPos - pos))\n    },\n  )\n\n  return textBefore\n}\n", "export function isRegExp(value: any): value is RegExp {\n  return Object.prototype.toString.call(value) === '[object RegExp]'\n}\n", "import { EditorState, Plugin, TextSelection } from '@tiptap/pm/state'\n\nimport { CommandManager } from './CommandManager.js'\nimport { Editor } from './Editor.js'\nimport { createChainableState } from './helpers/createChainableState.js'\nimport { getTextContentFromNodes } from './helpers/getTextContentFromNodes.js'\nimport {\n  CanCommands,\n  ChainedCommands,\n  ExtendedRegExpMatchArray,\n  Range,\n  SingleCommands,\n} from './types.js'\nimport { isRegExp } from './utilities/isRegExp.js'\n\nexport type InputRuleMatch = {\n  index: number\n  text: string\n  replaceWith?: string\n  match?: RegExpMatchArray\n  data?: Record<string, any>\n}\n\nexport type InputRuleFinder = RegExp | ((text: string) => InputRuleMatch | null)\n\nexport class InputRule {\n  find: InputRuleFinder\n\n  handler: (props: {\n    state: EditorState\n    range: Range\n    match: ExtendedRegExpMatchArray\n    commands: SingleCommands\n    chain: () => ChainedCommands\n    can: () => CanCommands\n  }) => void | null\n\n  constructor(config: {\n    find: InputRuleFinder\n    handler: (props: {\n      state: EditorState\n      range: Range\n      match: ExtendedRegExpMatchArray\n      commands: SingleCommands\n      chain: () => ChainedCommands\n      can: () => CanCommands\n    }) => void | null\n  }) {\n    this.find = config.find\n    this.handler = config.handler\n  }\n}\n\nconst inputRuleMatcherHandler = (\n  text: string,\n  find: InputRuleFinder,\n): ExtendedRegExpMatchArray | null => {\n  if (isRegExp(find)) {\n    return find.exec(text)\n  }\n\n  const inputRuleMatch = find(text)\n\n  if (!inputRuleMatch) {\n    return null\n  }\n\n  const result: ExtendedRegExpMatchArray = [inputRuleMatch.text]\n\n  result.index = inputRuleMatch.index\n  result.input = text\n  result.data = inputRuleMatch.data\n\n  if (inputRuleMatch.replaceWith) {\n    if (!inputRuleMatch.text.includes(inputRuleMatch.replaceWith)) {\n      console.warn(\n        '[tiptap warn]: \"inputRuleMatch.replaceWith\" must be part of \"inputRuleMatch.text\".',\n      )\n    }\n\n    result.push(inputRuleMatch.replaceWith)\n  }\n\n  return result\n}\n\nfunction run(config: {\n  editor: Editor\n  from: number\n  to: number\n  text: string\n  rules: InputRule[]\n  plugin: Plugin\n}): boolean {\n  const {\n    editor, from, to, text, rules, plugin,\n  } = config\n  const { view } = editor\n\n  if (view.composing) {\n    return false\n  }\n\n  const $from = view.state.doc.resolve(from)\n\n  if (\n    // check for code node\n    $from.parent.type.spec.code\n    // check for code mark\n    || !!($from.nodeBefore || $from.nodeAfter)?.marks.find(mark => mark.type.spec.code)\n  ) {\n    return false\n  }\n\n  let matched = false\n\n  const textBefore = getTextContentFromNodes($from) + text\n\n  rules.forEach(rule => {\n    if (matched) {\n      return\n    }\n\n    const match = inputRuleMatcherHandler(textBefore, rule.find)\n\n    if (!match) {\n      return\n    }\n\n    const tr = view.state.tr\n    const state = createChainableState({\n      state: view.state,\n      transaction: tr,\n    })\n    const range = {\n      from: from - (match[0].length - text.length),\n      to,\n    }\n\n    const { commands, chain, can } = new CommandManager({\n      editor,\n      state,\n    })\n\n    const handler = rule.handler({\n      state,\n      range,\n      match,\n      commands,\n      chain,\n      can,\n    })\n\n    // stop if there are no changes\n    if (handler === null || !tr.steps.length) {\n      return\n    }\n\n    // store transform as meta data\n    // so we can undo input rules within the `undoInputRules` command\n    tr.setMeta(plugin, {\n      transform: tr,\n      from,\n      to,\n      text,\n    })\n\n    view.dispatch(tr)\n    matched = true\n  })\n\n  return matched\n}\n\n/**\n * Create an input rules plugin. When enabled, it will cause text\n * input that matches any of the given rules to trigger the rule’s\n * action.\n */\nexport function inputRulesPlugin(props: { editor: Editor; rules: InputRule[] }): Plugin {\n  const { editor, rules } = props\n  const plugin = new Plugin({\n    state: {\n      init() {\n        return null\n      },\n      apply(tr, prev) {\n        const stored = tr.getMeta(plugin)\n\n        if (stored) {\n          return stored\n        }\n\n        return tr.selectionSet || tr.docChanged ? null : prev\n      },\n    },\n\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run({\n          editor,\n          from,\n          to,\n          text,\n          rules,\n          plugin,\n        })\n      },\n\n      handleDOMEvents: {\n        compositionend: view => {\n          setTimeout(() => {\n            const { $cursor } = view.state.selection as TextSelection\n\n            if ($cursor) {\n              run({\n                editor,\n                from: $cursor.pos,\n                to: $cursor.pos,\n                text: '',\n                rules,\n                plugin,\n              })\n            }\n          })\n\n          return false\n        },\n      },\n\n      // add support for input rules to trigger on enter\n      // this is useful for example for code blocks\n      handleKeyDown(view, event) {\n        if (event.key !== 'Enter') {\n          return false\n        }\n\n        const { $cursor } = view.state.selection as TextSelection\n\n        if ($cursor) {\n          return run({\n            editor,\n            from: $cursor.pos,\n            to: $cursor.pos,\n            text: '\\n',\n            rules,\n            plugin,\n          })\n        }\n\n        return false\n      },\n    },\n\n    // @ts-ignore\n    isInputRules: true,\n  }) as Plugin\n\n  return plugin\n}\n", "export function isNumber(value: any): value is number {\n  return typeof value === 'number'\n}\n", "import { EditorState, Plugin } from '@tiptap/pm/state'\n\nimport { CommandManager } from './CommandManager.js'\nimport { Editor } from './Editor.js'\nimport { createChainableState } from './helpers/createChainableState.js'\nimport {\n  CanCommands,\n  ChainedCommands,\n  ExtendedRegExpMatchArray,\n  Range,\n  SingleCommands,\n} from './types.js'\nimport { isNumber } from './utilities/isNumber.js'\nimport { isRegExp } from './utilities/isRegExp.js'\n\nexport type PasteRuleMatch = {\n  index: number\n  text: string\n  replaceWith?: string\n  match?: RegExpMatchArray\n  data?: Record<string, any>\n}\n\nexport type PasteRuleFinder = RegExp | ((text: string, event?: ClipboardEvent) => PasteRuleMatch[] | null | undefined)\n\nexport class PasteRule {\n  find: PasteRuleFinder\n\n  handler: (props: {\n    state: EditorState\n    range: Range\n    match: ExtendedRegExpMatchArray\n    commands: SingleCommands\n    chain: () => ChainedCommands\n    can: () => CanCommands\n    pasteEvent: ClipboardEvent\n    dropEvent: DragEvent\n  }) => void | null\n\n  constructor(config: {\n    find: PasteRuleFinder\n    handler: (props: {\n      can: () => CanCommands\n      chain: () => ChainedCommands\n      commands: SingleCommands\n      dropEvent: DragEvent\n      match: ExtendedRegExpMatchArray\n      pasteEvent: ClipboardEvent\n      range: Range\n      state: EditorState\n    }) => void | null\n  }) {\n    this.find = config.find\n    this.handler = config.handler\n  }\n}\n\nconst pasteRuleMatcherHandler = (\n  text: string,\n  find: PasteRuleFinder,\n  event?: ClipboardEvent,\n): ExtendedRegExpMatchArray[] => {\n  if (isRegExp(find)) {\n    return [...text.matchAll(find)]\n  }\n\n  const matches = find(text, event)\n\n  if (!matches) {\n    return []\n  }\n\n  return matches.map(pasteRuleMatch => {\n    const result: ExtendedRegExpMatchArray = [pasteRuleMatch.text]\n\n    result.index = pasteRuleMatch.index\n    result.input = text\n    result.data = pasteRuleMatch.data\n\n    if (pasteRuleMatch.replaceWith) {\n      if (!pasteRuleMatch.text.includes(pasteRuleMatch.replaceWith)) {\n        console.warn(\n          '[tiptap warn]: \"pasteRuleMatch.replaceWith\" must be part of \"pasteRuleMatch.text\".',\n        )\n      }\n\n      result.push(pasteRuleMatch.replaceWith)\n    }\n\n    return result\n  })\n}\n\nfunction run(config: {\n  editor: Editor\n  state: EditorState\n  from: number\n  to: number\n  rule: PasteRule\n  pasteEvent: ClipboardEvent\n  dropEvent: DragEvent\n}): boolean {\n  const {\n    editor, state, from, to, rule, pasteEvent, dropEvent,\n  } = config\n\n  const { commands, chain, can } = new CommandManager({\n    editor,\n    state,\n  })\n\n  const handlers: (void | null)[] = []\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (!node.isTextblock || node.type.spec.code) {\n      return\n    }\n\n    const resolvedFrom = Math.max(from, pos)\n    const resolvedTo = Math.min(to, pos + node.content.size)\n    const textToMatch = node.textBetween(resolvedFrom - pos, resolvedTo - pos, undefined, '\\ufffc')\n\n    const matches = pasteRuleMatcherHandler(textToMatch, rule.find, pasteEvent)\n\n    matches.forEach(match => {\n      if (match.index === undefined) {\n        return\n      }\n\n      const start = resolvedFrom + match.index + 1\n      const end = start + match[0].length\n      const range = {\n        from: state.tr.mapping.map(start),\n        to: state.tr.mapping.map(end),\n      }\n\n      const handler = rule.handler({\n        state,\n        range,\n        match,\n        commands,\n        chain,\n        can,\n        pasteEvent,\n        dropEvent,\n      })\n\n      handlers.push(handler)\n    })\n  })\n\n  const success = handlers.every(handler => handler !== null)\n\n  return success\n}\n\n/**\n * Create an paste rules plugin. When enabled, it will cause pasted\n * text that matches any of the given rules to trigger the rule’s\n * action.\n */\nexport function pasteRulesPlugin(props: { editor: Editor; rules: PasteRule[] }): Plugin[] {\n  const { editor, rules } = props\n  let dragSourceElement: Element | null = null\n  let isPastedFromProseMirror = false\n  let isDroppedFromProseMirror = false\n  let pasteEvent = new ClipboardEvent('paste')\n  let dropEvent = new DragEvent('drop')\n\n  const plugins = rules.map(rule => {\n    return new Plugin({\n      // we register a global drag handler to track the current drag source element\n      view(view) {\n        const handleDragstart = (event: DragEvent) => {\n          dragSourceElement = view.dom.parentElement?.contains(event.target as Element)\n            ? view.dom.parentElement\n            : null\n        }\n\n        window.addEventListener('dragstart', handleDragstart)\n\n        return {\n          destroy() {\n            window.removeEventListener('dragstart', handleDragstart)\n          },\n        }\n      },\n\n      props: {\n        handleDOMEvents: {\n          drop: (view, event: Event) => {\n            isDroppedFromProseMirror = dragSourceElement === view.dom.parentElement\n            dropEvent = event as DragEvent\n\n            return false\n          },\n\n          paste: (_view, event: Event) => {\n            const html = (event as ClipboardEvent).clipboardData?.getData('text/html')\n\n            pasteEvent = event as ClipboardEvent\n\n            isPastedFromProseMirror = !!html?.includes('data-pm-slice')\n\n            return false\n          },\n        },\n      },\n\n      appendTransaction: (transactions, oldState, state) => {\n        const transaction = transactions[0]\n        const isPaste = transaction.getMeta('uiEvent') === 'paste' && !isPastedFromProseMirror\n        const isDrop = transaction.getMeta('uiEvent') === 'drop' && !isDroppedFromProseMirror\n\n        if (!isPaste && !isDrop) {\n          return\n        }\n\n        // stop if there is no changed range\n        const from = oldState.doc.content.findDiffStart(state.doc.content)\n        const to = oldState.doc.content.findDiffEnd(state.doc.content)\n\n        if (!isNumber(from) || !to || from === to.b) {\n          return\n        }\n\n        // build a chainable state\n        // so we can use a single transaction for all paste rules\n        const tr = state.tr\n        const chainableState = createChainableState({\n          state,\n          transaction: tr,\n        })\n\n        const handler = run({\n          editor,\n          state: chainableState,\n          from: Math.max(from - 1, 0),\n          to: to.b - 1,\n          rule,\n          pasteEvent,\n          dropEvent,\n        })\n\n        // stop if there are no changes\n        if (!handler || !tr.steps.length) {\n          return\n        }\n\n        dropEvent = new DragEvent('drop')\n        pasteEvent = new ClipboardEvent('paste')\n\n        return tr\n      },\n    })\n  })\n\n  return plugins\n}\n", "export function findDuplicates(items: any[]): any[] {\n  const filtered = items.filter((el, index) => items.indexOf(el) !== index)\n\n  return [...new Set(filtered)]\n}\n", "import { keymap } from '@tiptap/pm/keymap'\nimport { Node as ProsemirrorNode, Schema } from '@tiptap/pm/model'\nimport { Plugin } from '@tiptap/pm/state'\nimport { Decoration, EditorView } from '@tiptap/pm/view'\n\nimport { Editor } from './Editor.js'\nimport { getAttributesFromExtensions } from './helpers/getAttributesFromExtensions.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { getNodeType } from './helpers/getNodeType.js'\nimport { getRenderedAttributes } from './helpers/getRenderedAttributes.js'\nimport { getSchemaByResolvedExtensions } from './helpers/getSchemaByResolvedExtensions.js'\nimport { getSchemaTypeByName } from './helpers/getSchemaTypeByName.js'\nimport { isExtensionRulesEnabled } from './helpers/isExtensionRulesEnabled.js'\nimport { splitExtensions } from './helpers/splitExtensions.js'\nimport { Mark, NodeConfig } from './index.js'\nimport { inputRulesPlugin } from './InputRule.js'\nimport { pasteRulesPlugin } from './PasteRule.js'\nimport { AnyConfig, Extensions, RawCommands } from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { findDuplicates } from './utilities/findDuplicates.js'\n\nexport class ExtensionManager {\n  editor: Editor\n\n  schema: Schema\n\n  extensions: Extensions\n\n  splittableMarks: string[] = []\n\n  constructor(extensions: Extensions, editor: Editor) {\n    this.editor = editor\n    this.extensions = ExtensionManager.resolve(extensions)\n    this.schema = getSchemaByResolvedExtensions(this.extensions, editor)\n\n    this.extensions.forEach(extension => {\n      // store extension storage in editor\n      this.editor.extensionStorage[extension.name] = extension.storage\n\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor: this.editor,\n        type: getSchemaTypeByName(extension.name, this.schema),\n      }\n\n      if (extension.type === 'mark') {\n        const keepOnSplit = callOrReturn(getExtensionField(extension, 'keepOnSplit', context)) ?? true\n\n        if (keepOnSplit) {\n          this.splittableMarks.push(extension.name)\n        }\n      }\n\n      const onBeforeCreate = getExtensionField<AnyConfig['onBeforeCreate']>(\n        extension,\n        'onBeforeCreate',\n        context,\n      )\n\n      if (onBeforeCreate) {\n        this.editor.on('beforeCreate', onBeforeCreate)\n      }\n\n      const onCreate = getExtensionField<AnyConfig['onCreate']>(extension, 'onCreate', context)\n\n      if (onCreate) {\n        this.editor.on('create', onCreate)\n      }\n\n      const onUpdate = getExtensionField<AnyConfig['onUpdate']>(extension, 'onUpdate', context)\n\n      if (onUpdate) {\n        this.editor.on('update', onUpdate)\n      }\n\n      const onSelectionUpdate = getExtensionField<AnyConfig['onSelectionUpdate']>(\n        extension,\n        'onSelectionUpdate',\n        context,\n      )\n\n      if (onSelectionUpdate) {\n        this.editor.on('selectionUpdate', onSelectionUpdate)\n      }\n\n      const onTransaction = getExtensionField<AnyConfig['onTransaction']>(\n        extension,\n        'onTransaction',\n        context,\n      )\n\n      if (onTransaction) {\n        this.editor.on('transaction', onTransaction)\n      }\n\n      const onFocus = getExtensionField<AnyConfig['onFocus']>(extension, 'onFocus', context)\n\n      if (onFocus) {\n        this.editor.on('focus', onFocus)\n      }\n\n      const onBlur = getExtensionField<AnyConfig['onBlur']>(extension, 'onBlur', context)\n\n      if (onBlur) {\n        this.editor.on('blur', onBlur)\n      }\n\n      const onDestroy = getExtensionField<AnyConfig['onDestroy']>(extension, 'onDestroy', context)\n\n      if (onDestroy) {\n        this.editor.on('destroy', onDestroy)\n      }\n    })\n  }\n\n  static resolve(extensions: Extensions): Extensions {\n    const resolvedExtensions = ExtensionManager.sort(ExtensionManager.flatten(extensions))\n    const duplicatedNames = findDuplicates(resolvedExtensions.map(extension => extension.name))\n\n    if (duplicatedNames.length) {\n      console.warn(\n        `[tiptap warn]: Duplicate extension names found: [${duplicatedNames\n          .map(item => `'${item}'`)\n          .join(', ')}]. This can lead to issues.`,\n      )\n    }\n\n    return resolvedExtensions\n  }\n\n  static flatten(extensions: Extensions): Extensions {\n    return (\n      extensions\n        .map(extension => {\n          const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n          }\n\n          const addExtensions = getExtensionField<AnyConfig['addExtensions']>(\n            extension,\n            'addExtensions',\n            context,\n          )\n\n          if (addExtensions) {\n            return [extension, ...this.flatten(addExtensions())]\n          }\n\n          return extension\n        })\n        // `Infinity` will break TypeScript so we set a number that is probably high enough\n        .flat(10)\n    )\n  }\n\n  static sort(extensions: Extensions): Extensions {\n    const defaultPriority = 100\n\n    return extensions.sort((a, b) => {\n      const priorityA = getExtensionField<AnyConfig['priority']>(a, 'priority') || defaultPriority\n      const priorityB = getExtensionField<AnyConfig['priority']>(b, 'priority') || defaultPriority\n\n      if (priorityA > priorityB) {\n        return -1\n      }\n\n      if (priorityA < priorityB) {\n        return 1\n      }\n\n      return 0\n    })\n  }\n\n  get commands(): RawCommands {\n    return this.extensions.reduce((commands, extension) => {\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor: this.editor,\n        type: getSchemaTypeByName(extension.name, this.schema),\n      }\n\n      const addCommands = getExtensionField<AnyConfig['addCommands']>(\n        extension,\n        'addCommands',\n        context,\n      )\n\n      if (!addCommands) {\n        return commands\n      }\n\n      return {\n        ...commands,\n        ...addCommands(),\n      }\n    }, {} as RawCommands)\n  }\n\n  get plugins(): Plugin[] {\n    const { editor } = this\n\n    // With ProseMirror, first plugins within an array are executed first.\n    // In Tiptap, we provide the ability to override plugins,\n    // so it feels more natural to run plugins at the end of an array first.\n    // That’s why we have to reverse the `extensions` array and sort again\n    // based on the `priority` option.\n    const extensions = ExtensionManager.sort([...this.extensions].reverse())\n\n    const inputRules: any[] = []\n    const pasteRules: any[] = []\n\n    const allPlugins = extensions\n      .map(extension => {\n        const context = {\n          name: extension.name,\n          options: extension.options,\n          storage: extension.storage,\n          editor,\n          type: getSchemaTypeByName(extension.name, this.schema),\n        }\n\n        const plugins: Plugin[] = []\n\n        const addKeyboardShortcuts = getExtensionField<AnyConfig['addKeyboardShortcuts']>(\n          extension,\n          'addKeyboardShortcuts',\n          context,\n        )\n\n        let defaultBindings: Record<string, () => boolean> = {}\n\n        // bind exit handling\n        if (extension.type === 'mark' && extension.config.exitable) {\n          defaultBindings.ArrowRight = () => Mark.handleExit({ editor, mark: extension as Mark })\n        }\n\n        if (addKeyboardShortcuts) {\n          const bindings = Object.fromEntries(\n            Object.entries(addKeyboardShortcuts()).map(([shortcut, method]) => {\n              return [shortcut, () => method({ editor })]\n            }),\n          )\n\n          defaultBindings = { ...defaultBindings, ...bindings }\n        }\n\n        const keyMapPlugin = keymap(defaultBindings)\n\n        plugins.push(keyMapPlugin)\n\n        const addInputRules = getExtensionField<AnyConfig['addInputRules']>(\n          extension,\n          'addInputRules',\n          context,\n        )\n\n        if (isExtensionRulesEnabled(extension, editor.options.enableInputRules) && addInputRules) {\n          inputRules.push(...addInputRules())\n        }\n\n        const addPasteRules = getExtensionField<AnyConfig['addPasteRules']>(\n          extension,\n          'addPasteRules',\n          context,\n        )\n\n        if (isExtensionRulesEnabled(extension, editor.options.enablePasteRules) && addPasteRules) {\n          pasteRules.push(...addPasteRules())\n        }\n\n        const addProseMirrorPlugins = getExtensionField<AnyConfig['addProseMirrorPlugins']>(\n          extension,\n          'addProseMirrorPlugins',\n          context,\n        )\n\n        if (addProseMirrorPlugins) {\n          const proseMirrorPlugins = addProseMirrorPlugins()\n\n          plugins.push(...proseMirrorPlugins)\n        }\n\n        return plugins\n      })\n      .flat()\n\n    return [\n      inputRulesPlugin({\n        editor,\n        rules: inputRules,\n      }),\n      ...pasteRulesPlugin({\n        editor,\n        rules: pasteRules,\n      }),\n      ...allPlugins,\n    ]\n  }\n\n  get attributes() {\n    return getAttributesFromExtensions(this.extensions)\n  }\n\n  get nodeViews() {\n    const { editor } = this\n    const { nodeExtensions } = splitExtensions(this.extensions)\n\n    return Object.fromEntries(\n      nodeExtensions\n        .filter(extension => !!getExtensionField(extension, 'addNodeView'))\n        .map(extension => {\n          const extensionAttributes = this.attributes.filter(\n            attribute => attribute.type === extension.name,\n          )\n          const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            editor,\n            type: getNodeType(extension.name, this.schema),\n          }\n          const addNodeView = getExtensionField<NodeConfig['addNodeView']>(\n            extension,\n            'addNodeView',\n            context,\n          )\n\n          if (!addNodeView) {\n            return []\n          }\n\n          const nodeview = (\n            node: ProsemirrorNode,\n            view: EditorView,\n            getPos: (() => number) | boolean,\n            decorations: Decoration[],\n          ) => {\n            const HTMLAttributes = getRenderedAttributes(node, extensionAttributes)\n\n            return addNodeView()({\n              editor,\n              node,\n              getPos,\n              decorations,\n              HTMLAttributes,\n              extension,\n            })\n          }\n\n          return [extension.name, nodeview]\n        }),\n    )\n  }\n}\n", "// see: https://github.com/mesqueeb/is-what/blob/88d6e4ca92fb2baab6003c54e02eedf4e729e5ab/src/index.ts\n\nfunction getType(value: any): string {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nexport function isPlainObject(value: any): value is Record<string, any> {\n  if (getType(value) !== 'Object') {\n    return false\n  }\n\n  return value.constructor === Object && Object.getPrototypeOf(value) === Object.prototype\n}\n", "import { isPlainObject } from './isPlainObject.js'\n\nexport function mergeDeep(target: Record<string, any>, source: Record<string, any>): Record<string, any> {\n  const output = { ...target }\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isPlainObject(source[key])) {\n        if (!(key in target)) {\n          Object.assign(output, { [key]: source[key] })\n        } else {\n          output[key] = mergeDeep(target[key], source[key])\n        }\n      } else {\n        Object.assign(output, { [key]: source[key] })\n      }\n    })\n  }\n\n  return output\n}\n", "import { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { ExtensionConfig } from './index.js'\nimport { InputRule } from './InputRule.js'\nimport { Mark } from './Mark.js'\nimport { Node } from './Node.js'\nimport { PasteRule } from './PasteRule.js'\nimport {\n  AnyConfig,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  ParentConfig,\n  RawCommands,\n} from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { mergeDeep } from './utilities/mergeDeep.js'\n\ndeclare module '@tiptap/core' {\n  interface ExtensionConfig<Options = any, Storage = any> {\n    [key: string]: any\n\n    /**\n     * Name\n     */\n    name: string\n\n    /**\n     * Priority\n     */\n    priority?: number\n\n    /**\n     * Default options\n     */\n    defaultOptions?: Options\n\n    /**\n     * Default Options\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<ExtensionConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * Default Storage\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<ExtensionConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * Global attributes\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes | {}\n\n    /**\n     * Raw\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * Keyboard shortcuts\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * Input rules\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * Paste rules\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * ProseMirror plugins\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * Extensions\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * Extend Node Schema\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * Extend Mark Schema\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['extendMarkSchema']\n          },\n          extension: Mark,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn’t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n  }\n}\n\nexport class Extension<Options = any, Storage = any> {\n  type = 'extension'\n\n  name = 'extension'\n\n  parent: Extension | null = null\n\n  child: Extension | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: ExtensionConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<ExtensionConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<ExtensionConfig<O, S>> = {}) {\n    return new Extension<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend()\n\n    extension.options = mergeDeep(this.options as Record<string, any>, options) as Options\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<ExtensionConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Extension<ExtendedOptions, ExtendedStorage>({ ...this.config, ...extendedConfig })\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { Range, TextSerializer } from '../types.js'\n\nexport function getTextBetween(\n  startNode: ProseMirrorNode,\n  range: Range,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n): string {\n  const { from, to } = range\n  const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n  let text = ''\n  let separated = true\n\n  startNode.nodesBetween(from, to, (node, pos, parent, index) => {\n    const textSerializer = textSerializers?.[node.type.name]\n\n    if (textSerializer) {\n      if (node.isBlock && !separated) {\n        text += blockSeparator\n        separated = true\n      }\n\n      if (parent) {\n        text += textSerializer({\n          node,\n          pos,\n          parent,\n          index,\n          range,\n        })\n      }\n    } else if (node.isText) {\n      text += node?.text?.slice(Math.max(from, pos) - pos, to - pos) // eslint-disable-line\n      separated = false\n    } else if (node.isBlock && !separated) {\n      text += blockSeparator\n      separated = true\n    }\n  })\n\n  return text\n}\n", "import { Schema } from '@tiptap/pm/model'\n\nimport { TextSerializer } from '../types.js'\n\nexport function getTextSerializersFromSchema(schema: Schema): Record<string, TextSerializer> {\n  return Object.fromEntries(\n    Object.entries(schema.nodes)\n      .filter(([, node]) => node.spec.toText)\n      .map(([name, node]) => [name, node.spec.toText]),\n  )\n}\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\nimport { getTextBetween } from '../helpers/getTextBetween.js'\nimport { getTextSerializersFromSchema } from '../helpers/getTextSerializersFromSchema.js'\n\nexport const ClipboardTextSerializer = Extension.create({\n  name: 'clipboardTextSerializer',\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('clipboardTextSerializer'),\n        props: {\n          clipboardTextSerializer: () => {\n            const { editor } = this\n            const { state, schema } = editor\n            const { doc, selection } = state\n            const { ranges } = selection\n            const from = Math.min(...ranges.map(range => range.$from.pos))\n            const to = Math.max(...ranges.map(range => range.$to.pos))\n            const textSerializers = getTextSerializersFromSchema(schema)\n            const range = { from, to }\n\n            return getTextBetween(doc, range, {\n              textSerializers,\n            })\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blur: {\n      /**\n       * Removes focus from the editor.\n       */\n      blur: () => ReturnType,\n    }\n  }\n}\n\nexport const blur: RawCommands['blur'] = () => ({ editor, view }) => {\n  requestAnimationFrame(() => {\n    if (!editor.isDestroyed) {\n      (view.dom as HTMLElement).blur()\n\n      // Browsers should remove the caret on blur but safari does not.\n      // See: https://github.com/ueberdosis/tiptap/issues/2405\n      window?.getSelection()?.removeAllRanges()\n    }\n  })\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    clearContent: {\n      /**\n       * Clear the whole document.\n       */\n      clearContent: (emitUpdate?: boolean) => ReturnType,\n    }\n  }\n}\n\nexport const clearContent: RawCommands['clearContent'] = (emitUpdate = false) => ({ commands }) => {\n  return commands.setContent('', emitUpdate)\n}\n", "import { liftTarget } from '@tiptap/pm/transform'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    clearNodes: {\n      /**\n       * Normalize nodes to a simple paragraph.\n       */\n      clearNodes: () => ReturnType,\n    }\n  }\n}\n\nexport const clearNodes: RawCommands['clearNodes'] = () => ({ state, tr, dispatch }) => {\n  const { selection } = tr\n  const { ranges } = selection\n\n  if (!dispatch) {\n    return true\n  }\n\n  ranges.forEach(({ $from, $to }) => {\n    state.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n      if (node.type.isText) {\n        return\n      }\n\n      const { doc, mapping } = tr\n      const $mappedFrom = doc.resolve(mapping.map(pos))\n      const $mappedTo = doc.resolve(mapping.map(pos + node.nodeSize))\n      const nodeRange = $mappedFrom.blockRange($mappedTo)\n\n      if (!nodeRange) {\n        return\n      }\n\n      const targetLiftDepth = liftTarget(nodeRange)\n\n      if (node.type.isTextblock) {\n        const { defaultType } = $mappedFrom.parent.contentMatchAt($mappedFrom.index())\n\n        tr.setNodeMarkup(nodeRange.start, defaultType)\n      }\n\n      if (targetLiftDepth || targetLiftDepth === 0) {\n        tr.lift(nodeRange, targetLiftDepth)\n      }\n    })\n  })\n\n  return true\n}\n", "import { Command, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    command: {\n      /**\n       * Define a command inline.\n       */\n      command: (fn: (props: Parameters<Command>[0]) => boolean) => ReturnType,\n    }\n  }\n}\n\nexport const command: RawCommands['command'] = fn => props => {\n  return fn(props)\n}\n", "import { createParagraphNear as originalCreateParagraphNear } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    createParagraphNear: {\n      /**\n       * Create a paragraph nearby.\n       */\n      createParagraphNear: () => ReturnType\n    }\n  }\n}\n\nexport const createParagraphNear: RawCommands['createParagraphNear'] = () => ({ state, dispatch }) => {\n  return originalCreateParagraphNear(state, dispatch)\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    cut: {\n      /**\n       * Cuts content from a range and inserts it at a given position.\n       */\n      cut: ({ from, to }: { from: number, to: number }, targetPos: number) => ReturnType,\n    }\n  }\n}\n\nexport const cut: RawCommands['cut'] = (originRange, targetPos) => ({ editor, tr }) => {\n  const { state } = editor\n\n  const contentSlice = state.doc.slice(originRange.from, originRange.to)\n\n  tr.deleteRange(originRange.from, originRange.to)\n  const newPos = tr.mapping.map(targetPos)\n\n  tr.insert(newPos, contentSlice.content)\n\n  tr.setSelection(new TextSelection(tr.doc.resolve(newPos - 1)))\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteCurrentNode: {\n      /**\n       * Delete the node that currently has the selection anchor.\n       */\n      deleteCurrentNode: () => ReturnType,\n    }\n  }\n}\n\nexport const deleteCurrentNode: RawCommands['deleteCurrentNode'] = () => ({ tr, dispatch }) => {\n  const { selection } = tr\n  const currentNode = selection.$anchor.node()\n\n  // if there is content inside the current node, break out of this command\n  if (currentNode.content.size > 0) {\n    return false\n  }\n\n  const $pos = tr.selection.$anchor\n\n  for (let depth = $pos.depth; depth > 0; depth -= 1) {\n    const node = $pos.node(depth)\n\n    if (node.type === currentNode.type) {\n      if (dispatch) {\n        const from = $pos.before(depth)\n        const to = $pos.after(depth)\n\n        tr.delete(from, to).scrollIntoView()\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteNode: {\n      /**\n       * Delete a node.\n       */\n      deleteNode: (typeOrName: string | NodeType) => ReturnType,\n    }\n  }\n}\n\nexport const deleteNode: RawCommands['deleteNode'] = typeOrName => ({ tr, state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const $pos = tr.selection.$anchor\n\n  for (let depth = $pos.depth; depth > 0; depth -= 1) {\n    const node = $pos.node(depth)\n\n    if (node.type === type) {\n      if (dispatch) {\n        const from = $pos.before(depth)\n        const to = $pos.after(depth)\n\n        tr.delete(from, to).scrollIntoView()\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { Range, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteRange: {\n      /**\n       * Delete a given range.\n       */\n      deleteRange: (range: Range) => ReturnType,\n    }\n  }\n}\n\nexport const deleteRange: RawCommands['deleteRange'] = range => ({ tr, dispatch }) => {\n  const { from, to } = range\n\n  if (dispatch) {\n    tr.delete(from, to)\n  }\n\n  return true\n}\n", "import { deleteSelection as originalDeleteSelection } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteSelection: {\n      /**\n       * Delete the selection, if there is one.\n       */\n      deleteSelection: () => ReturnType\n    }\n  }\n}\n\nexport const deleteSelection: RawCommands['deleteSelection'] = () => ({ state, dispatch }) => {\n  return originalDeleteSelection(state, dispatch)\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    enter: {\n      /**\n       * Trigger enter.\n       */\n      enter: () => ReturnType,\n    }\n  }\n}\n\nexport const enter: RawCommands['enter'] = () => ({ commands }) => {\n  return commands.keyboardShortcut('Enter')\n}\n", "import { exitCode as originalExitCode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    exitCode: {\n      /**\n       * Exit from a code block.\n       */\n      exitCode: () => ReturnType\n    }\n  }\n}\n\nexport const exitCode: RawCommands['exitCode'] = () => ({ state, dispatch }) => {\n  return originalExitCode(state, dispatch)\n}\n", "import { isRegExp } from './isRegExp.js'\n\n/**\n * Check if object1 includes object2\n * @param object1 Object\n * @param object2 Object\n */\nexport function objectIncludes(\n  object1: Record<string, any>,\n  object2: Record<string, any>,\n  options: { strict: boolean } = { strict: true },\n): boolean {\n  const keys = Object.keys(object2)\n\n  if (!keys.length) {\n    return true\n  }\n\n  return keys.every(key => {\n    if (options.strict) {\n      return object2[key] === object1[key]\n    }\n\n    if (isRegExp(object2[key])) {\n      return object2[key].test(object1[key])\n    }\n\n    return object2[key] === object1[key]\n  })\n}\n", "import { Mark as ProseMirrorMark, MarkType, ResolvedPos } from '@tiptap/pm/model'\n\nimport { Range } from '../types.js'\nimport { objectIncludes } from '../utilities/objectIncludes.js'\n\nfunction findMarkInSet(\n  marks: ProseMirrorMark[],\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): ProseMirrorMark | undefined {\n  return marks.find(item => {\n    return item.type === type && objectIncludes(item.attrs, attributes)\n  })\n}\n\nfunction isMarkInSet(\n  marks: ProseMirrorMark[],\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): boolean {\n  return !!findMarkInSet(marks, type, attributes)\n}\n\nexport function getMarkRange(\n  $pos: ResolvedPos,\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): Range | void {\n  if (!$pos || !type) {\n    return\n  }\n\n  let start = $pos.parent.childAfter($pos.parentOffset)\n\n  if ($pos.parentOffset === start.offset && start.offset !== 0) {\n    start = $pos.parent.childBefore($pos.parentOffset)\n  }\n\n  if (!start.node) {\n    return\n  }\n\n  const mark = findMarkInSet([...start.node.marks], type, attributes)\n\n  if (!mark) {\n    return\n  }\n\n  let startIndex = start.index\n  let startPos = $pos.start() + start.offset\n  let endIndex = startIndex + 1\n  let endPos = startPos + start.node.nodeSize\n\n  findMarkInSet([...start.node.marks], type, attributes)\n\n  while (startIndex > 0 && mark.isInSet($pos.parent.child(startIndex - 1).marks)) {\n    startIndex -= 1\n    startPos -= $pos.parent.child(startIndex).nodeSize\n  }\n\n  while (\n    endIndex < $pos.parent.childCount\n    && isMarkInSet([...$pos.parent.child(endIndex).marks], type, attributes)\n  ) {\n    endPos += $pos.parent.child(endIndex).nodeSize\n    endIndex += 1\n  }\n\n  return {\n    from: startPos,\n    to: endPos,\n  }\n}\n", "import { MarkType, Schema } from '@tiptap/pm/model'\n\nexport function getMarkType(nameOrType: string | MarkType, schema: Schema): MarkType {\n  if (typeof nameOrType === 'string') {\n    if (!schema.marks[nameOrType]) {\n      throw Error(\n        `There is no mark type named '${nameOrType}'. Maybe you forgot to add the extension?`,\n      )\n    }\n\n    return schema.marks[nameOrType]\n  }\n\n  return nameOrType\n}\n", "import { MarkType } from '@tiptap/pm/model'\nimport { TextSelection } from '@tiptap/pm/state'\n\nimport { getMarkRange } from '../helpers/getMarkRange.js'\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    extendMarkRange: {\n      /**\n       * Extends the text selection to the current mark.\n       */\n      extendMarkRange: (\n        typeOrName: string | MarkType,\n        attributes?: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const extendMarkRange: RawCommands['extendMarkRange'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  const type = getMarkType(typeOrName, state.schema)\n  const { doc, selection } = tr\n  const { $from, from, to } = selection\n\n  if (dispatch) {\n    const range = getMarkRange($from, type, attributes)\n\n    if (range && range.from <= from && range.to >= to) {\n      const newSelection = TextSelection.create(doc, range.from, range.to)\n\n      tr.setSelection(newSelection)\n    }\n  }\n\n  return true\n}\n", "import { Command, CommandProps, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    first: {\n      /**\n       * Runs one command after the other and stops at the first which returns true.\n       */\n      first: (commands: Command[] | ((props: CommandProps) => Command[])) => ReturnType,\n    }\n  }\n}\n\nexport const first: RawCommands['first'] = commands => props => {\n  const items = typeof commands === 'function'\n    ? commands(props)\n    : commands\n\n  for (let i = 0; i < items.length; i += 1) {\n    if (items[i](props)) {\n      return true\n    }\n  }\n\n  return false\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nexport function isTextSelection(value: unknown): value is TextSelection {\n  return value instanceof TextSelection\n}\n", "export function minMax(value = 0, min = 0, max = 0): number {\n  return Math.min(Math.max(value, min), max)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Selection, TextSelection } from '@tiptap/pm/state'\n\nimport { FocusPosition } from '../types.js'\nimport { minMax } from '../utilities/minMax.js'\n\nexport function resolveFocusPosition(\n  doc: ProseMirrorNode,\n  position: FocusPosition = null,\n): Selection | null {\n  if (!position) {\n    return null\n  }\n\n  const selectionAtStart = Selection.atStart(doc)\n  const selectionAtEnd = Selection.atEnd(doc)\n\n  if (position === 'start' || position === true) {\n    return selectionAtStart\n  }\n\n  if (position === 'end') {\n    return selectionAtEnd\n  }\n\n  const minPos = selectionAtStart.from\n  const maxPos = selectionAtEnd.to\n\n  if (position === 'all') {\n    return TextSelection.create(\n      doc,\n      minMax(0, minPos, maxPos),\n      minMax(doc.content.size, minPos, maxPos),\n    )\n  }\n\n  return TextSelection.create(\n    doc,\n    minMax(position, minPos, maxPos),\n    minMax(position, minPos, maxPos),\n  )\n}\n", "export function isiOS(): boolean {\n  return [\n    'iPad Simulator',\n    'iPhone Simulator',\n    'iPod Simulator',\n    'iPad',\n    'iPhone',\n    'iPod',\n  ].includes(navigator.platform)\n  // iPad on iOS 13 detection\n  || (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n}\n", "import { isTextSelection } from '../helpers/isTextSelection.js'\nimport { resolveFocusPosition } from '../helpers/resolveFocusPosition.js'\nimport { FocusPosition, RawCommands } from '../types.js'\nimport { isiOS } from '../utilities/isiOS.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    focus: {\n      /**\n       * Focus the editor at the given position.\n       */\n      focus: (\n        position?: FocusPosition,\n        options?: {\n          scrollIntoView?: boolean,\n        },\n      ) => ReturnType,\n    }\n  }\n}\n\nexport const focus: RawCommands['focus'] = (position = null, options = {}) => ({\n  editor,\n  view,\n  tr,\n  dispatch,\n}) => {\n  options = {\n    scrollIntoView: true,\n    ...options,\n  }\n\n  const delayedFocus = () => {\n    // focus within `requestAnimationFrame` breaks focus on iOS\n    // so we have to call this\n    if (isiOS()) {\n      (view.dom as HTMLElement).focus()\n    }\n\n    // For React we have to focus asynchronously. Otherwise wild things happen.\n    // see: https://github.com/ueberdosis/tiptap/issues/1520\n    requestAnimationFrame(() => {\n      if (!editor.isDestroyed) {\n        view.focus()\n\n        if (options?.scrollIntoView) {\n          editor.commands.scrollIntoView()\n        }\n      }\n    })\n  }\n\n  if ((view.hasFocus() && position === null) || position === false) {\n    return true\n  }\n\n  // we don’t try to resolve a NodeSelection or CellSelection\n  if (dispatch && position === null && !isTextSelection(editor.state.selection)) {\n    delayedFocus()\n    return true\n  }\n\n  // pass through tr.doc instead of editor.state.doc\n  // since transactions could change the editors state before this command has been run\n  const selection = resolveFocusPosition(tr.doc, position) || editor.state.selection\n  const isSameSelection = editor.state.selection.eq(selection)\n\n  if (dispatch) {\n    if (!isSameSelection) {\n      tr.setSelection(selection)\n    }\n\n    // `tr.setSelection` resets the stored marks\n    // so we’ll restore them if the selection is the same as before\n    if (isSameSelection && tr.storedMarks) {\n      tr.setStoredMarks(tr.storedMarks)\n    }\n\n    delayedFocus()\n  }\n\n  return true\n}\n", "import { CommandProps, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    forEach: {\n      /**\n       * Loop through an array of items.\n       */\n      forEach: <T>(\n        items: T[],\n        fn: (\n          item: T,\n          props: CommandProps & {\n            index: number,\n          },\n        ) => boolean,\n      ) => ReturnType,\n    }\n  }\n}\n\nexport const forEach: RawCommands['forEach'] = (items, fn) => props => {\n  return items.every((item, index) => fn(item, { ...props, index }))\n}\n", "import { ParseOptions } from '@tiptap/pm/model'\n\nimport { Content, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    insertContent: {\n      /**\n       * Insert a node or string of HTML at the current position.\n       */\n      insertContent: (\n        value: Content,\n        options?: {\n          parseOptions?: ParseOptions\n          updateSelection?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const insertContent: RawCommands['insertContent'] = (value, options) => ({ tr, commands }) => {\n  return commands.insertContentAt(\n    { from: tr.selection.from, to: tr.selection.to },\n    value,\n    options,\n  )\n}\n", "const removeWhitespaces = (node: HTMLElement) => {\n  const children = node.childNodes\n\n  for (let i = children.length - 1; i >= 0; i -= 1) {\n    const child = children[i]\n\n    if (child.nodeType === 3 && child.nodeValue && /^(\\n\\s\\s|\\n)$/.test(child.nodeValue)) {\n      node.removeChild(child)\n    } else if (child.nodeType === 1) {\n      removeWhitespaces(child as HTMLElement)\n    }\n  }\n\n  return node\n}\n\nexport function elementFromString(value: string): HTMLElement {\n  // add a wrapper to preserve leading and trailing whitespace\n  const wrappedValue = `<body>${value}</body>`\n\n  const html = new window.DOMParser().parseFromString(wrappedValue, 'text/html').body\n\n  return removeWhitespaces(html)\n}\n", "import {\n  DOMParser,\n  Fragment,\n  Node as ProseMirrorNode,\n  ParseOptions,\n  Schema,\n} from '@tiptap/pm/model'\n\nimport { Content } from '../types.js'\nimport { elementFromString } from '../utilities/elementFromString.js'\n\nexport type CreateNodeFromContentOptions = {\n  slice?: boolean\n  parseOptions?: ParseOptions\n}\n\nexport function createNodeFromContent(\n  content: Content,\n  schema: Schema,\n  options?: CreateNodeFromContentOptions,\n): ProseMirrorNode | Fragment {\n  options = {\n    slice: true,\n    parseOptions: {},\n    ...options,\n  }\n\n  if (typeof content === 'object' && content !== null) {\n    try {\n      if (Array.isArray(content) && content.length > 0) {\n        return Fragment.fromArray(content.map(item => schema.nodeFromJSON(item)))\n      }\n\n      return schema.nodeFromJSON(content)\n    } catch (error) {\n      console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error)\n\n      return createNodeFromContent('', schema, options)\n    }\n  }\n\n  if (typeof content === 'string') {\n    const parser = DOMParser.fromSchema(schema)\n\n    return options.slice\n      ? parser.parseSlice(elementFromString(content), options.parseOptions).content\n      : parser.parse(elementFromString(content), options.parseOptions)\n  }\n\n  return createNodeFromContent('', schema, options)\n}\n", "import { Selection, Transaction } from '@tiptap/pm/state'\nimport { ReplaceAroundStep, ReplaceStep } from '@tiptap/pm/transform'\n\n// source: https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.js#L466\nexport function selectionToInsertionEnd(tr: Transaction, startLen: number, bias: number) {\n  const last = tr.steps.length - 1\n\n  if (last < startLen) {\n    return\n  }\n\n  const step = tr.steps[last]\n\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) {\n    return\n  }\n\n  const map = tr.mapping.maps[last]\n  let end = 0\n\n  map.forEach((_from, _to, _newFrom, newTo) => {\n    if (end === 0) {\n      end = newTo\n    }\n  })\n\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias))\n}\n", "import { Fragment, Node as ProseMirrorNode, ParseOptions } from '@tiptap/pm/model'\n\nimport { createNodeFromContent } from '../helpers/createNodeFromContent.js'\nimport { selectionToInsertionEnd } from '../helpers/selectionToInsertionEnd.js'\nimport { Content, Range, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    insertContentAt: {\n      /**\n       * Insert a node or string of HTML at a specific position.\n       */\n      insertContentAt: (\n        position: number | Range,\n        value: Content,\n        options?: {\n          parseOptions?: ParseOptions\n          updateSelection?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nconst isFragment = (nodeOrFragment: ProseMirrorNode | Fragment): nodeOrFragment is Fragment => {\n  return nodeOrFragment.toString().startsWith('<')\n}\n\nexport const insertContentAt: RawCommands['insertContentAt'] = (position, value, options) => ({ tr, dispatch, editor }) => {\n  if (dispatch) {\n    options = {\n      parseOptions: {},\n      updateSelection: true,\n      ...options,\n    }\n\n    const content = createNodeFromContent(value, editor.schema, {\n      parseOptions: {\n        preserveWhitespace: 'full',\n        ...options.parseOptions,\n      },\n    })\n\n    // don’t dispatch an empty fragment because this can lead to strange errors\n    if (content.toString() === '<>') {\n      return true\n    }\n\n    let { from, to } = typeof position === 'number' ? { from: position, to: position } : { from: position.from, to: position.to }\n\n    let isOnlyTextContent = true\n    let isOnlyBlockContent = true\n    const nodes = isFragment(content) ? content : [content]\n\n    nodes.forEach(node => {\n      // check if added node is valid\n      node.check()\n\n      isOnlyTextContent = isOnlyTextContent ? node.isText && node.marks.length === 0 : false\n\n      isOnlyBlockContent = isOnlyBlockContent ? node.isBlock : false\n    })\n\n    // check if we can replace the wrapping node by\n    // the newly inserted content\n    // example:\n    // replace an empty paragraph by an inserted image\n    // instead of inserting the image below the paragraph\n    if (from === to && isOnlyBlockContent) {\n      const { parent } = tr.doc.resolve(from)\n      const isEmptyTextBlock = parent.isTextblock && !parent.type.spec.code && !parent.childCount\n\n      if (isEmptyTextBlock) {\n        from -= 1\n        to += 1\n      }\n    }\n\n    // if there is only plain text we have to use `insertText`\n    // because this will keep the current marks\n    if (isOnlyTextContent) {\n      // if value is string, we can use it directly\n      // otherwise if it is an array, we have to join it\n      if (Array.isArray(value)) {\n        tr.insertText(value.map(v => v.text || '').join(''), from, to)\n      } else if (typeof value === 'object' && !!value && !!value.text) {\n        tr.insertText(value.text, from, to)\n      } else {\n        tr.insertText(value as string, from, to)\n      }\n    } else {\n      tr.replaceWith(from, to, content)\n    }\n\n    // set cursor at end of inserted content\n    if (options.updateSelection) {\n      selectionToInsertionEnd(tr, tr.steps.length - 1, -1)\n    }\n  }\n\n  return true\n}\n", "import {\n  joinBackward as originalJoinBackward,\n  joinDown as originalJoinDown,\n  joinForward as originalJoinForward,\n  joinUp as originalJoinUp,\n} from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinUp: {\n      /**\n       * Join two nodes Up.\n       */\n      joinUp: () => ReturnType\n    }\n    joinDown: {\n      /**\n       * Join two nodes Down.\n       */\n      joinDown: () => ReturnType\n    }\n    joinBackward: {\n      /**\n       * Join two nodes Backwards.\n       */\n      joinBackward: () => ReturnType\n    }\n    joinForward: {\n      /**\n       * Join two nodes Forwards.\n       */\n      joinForward: () => ReturnType\n    }\n  }\n}\n\nexport const joinUp: RawCommands['joinUp'] = () => ({ state, dispatch }) => {\n  return originalJoinUp(state, dispatch)\n}\n\nexport const joinDown: RawCommands['joinDown'] = () => ({ state, dispatch }) => {\n  return originalJoinDown(state, dispatch)\n}\n\nexport const joinBackward: RawCommands['joinBackward'] = () => ({ state, dispatch }) => {\n  return originalJoinBackward(state, dispatch)\n}\n\nexport const joinForward: RawCommands['joinForward'] = () => ({ state, dispatch }) => {\n  return originalJoinForward(state, dispatch)\n}\n", "import { joinPoint } from '@tiptap/pm/transform'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinItemBackward: {\n      /**\n       * Join two nodes Forwards.\n       */\n      joinItemBackward: () => ReturnType\n    }\n  }\n}\n\nexport const joinItemBackward: RawCommands['joinItemBackward'] = () => ({\n  tr, state, dispatch,\n}) => {\n  try {\n    const point = joinPoint(state.doc, state.selection.$from.pos, -1)\n\n    if (point === null || point === undefined) {\n      return false\n    }\n\n    tr.join(point, 2)\n\n    if (dispatch) {\n      dispatch(tr)\n    }\n\n    return true\n  } catch {\n    return false\n  }\n}\n", "import { joinPoint } from '@tiptap/pm/transform'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinItemForward: {\n      /**\n       * Join two nodes Forwards.\n       */\n      joinItemForward: () => ReturnType\n    }\n  }\n}\n\nexport const joinItemForward: RawCommands['joinItemForward'] = () => ({\n  state,\n  dispatch,\n  tr,\n}) => {\n  try {\n    const point = joinPoint(state.doc, state.selection.$from.pos, +1)\n\n    if (point === null || point === undefined) {\n      return false\n    }\n\n    tr.join(point, 2)\n\n    if (dispatch) {\n      dispatch(tr)\n    }\n\n    return true\n  } catch (e) {\n    return false\n  }\n}\n", "import { joinTextblockBackward as originalCommand } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinTextblockBackward: {\n      /**\n       * A more limited form of joinBackward that only tries to join the current textblock to the one before it, if the cursor is at the start of a textblock.\n       */\n      joinTextblockBackward: () => ReturnType\n    }\n  }\n}\n\nexport const joinTextblockBackward: RawCommands['joinTextblockBackward'] = () => ({ state, dispatch }) => {\n  return originalCommand(state, dispatch)\n}\n", "import { joinTextblockForward as originalCommand } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinTextblockForward: {\n      /**\n       * A more limited form of joinForward that only tries to join the current textblock to the one after it, if the cursor is at the end of a textblock.\n       */\n      joinTextblockForward: () => ReturnType\n    }\n  }\n}\n\nexport const joinTextblockForward: RawCommands['joinTextblockForward'] = () => ({ state, dispatch }) => {\n  return originalCommand(state, dispatch)\n}\n", "export function isMacOS(): boolean {\n  return typeof navigator !== 'undefined'\n    ? /Mac/.test(navigator.platform)\n    : false\n}\n", "import { RawCommands } from '../types.js'\nimport { isiOS } from '../utilities/isiOS.js'\nimport { isMacOS } from '../utilities/isMacOS.js'\n\nfunction normalizeKeyName(name: string) {\n  const parts = name.split(/-(?!$)/)\n  let result = parts[parts.length - 1]\n\n  if (result === 'Space') {\n    result = ' '\n  }\n\n  let alt\n  let ctrl\n  let shift\n  let meta\n\n  for (let i = 0; i < parts.length - 1; i += 1) {\n    const mod = parts[i]\n\n    if (/^(cmd|meta|m)$/i.test(mod)) {\n      meta = true\n    } else if (/^a(lt)?$/i.test(mod)) {\n      alt = true\n    } else if (/^(c|ctrl|control)$/i.test(mod)) {\n      ctrl = true\n    } else if (/^s(hift)?$/i.test(mod)) {\n      shift = true\n    } else if (/^mod$/i.test(mod)) {\n      if (isiOS() || isMacOS()) {\n        meta = true\n      } else {\n        ctrl = true\n      }\n    } else {\n      throw new Error(`Unrecognized modifier name: ${mod}`)\n    }\n  }\n\n  if (alt) {\n    result = `Alt-${result}`\n  }\n\n  if (ctrl) {\n    result = `Ctrl-${result}`\n  }\n\n  if (meta) {\n    result = `Meta-${result}`\n  }\n\n  if (shift) {\n    result = `Shift-${result}`\n  }\n\n  return result\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    keyboardShortcut: {\n      /**\n       * Trigger a keyboard shortcut.\n       */\n      keyboardShortcut: (name: string) => ReturnType,\n    }\n  }\n}\n\nexport const keyboardShortcut: RawCommands['keyboardShortcut'] = name => ({\n  editor,\n  view,\n  tr,\n  dispatch,\n}) => {\n  const keys = normalizeKeyName(name).split(/-(?!$)/)\n  const key = keys.find(item => !['Alt', 'Ctrl', 'Meta', 'Shift'].includes(item))\n  const event = new KeyboardEvent('keydown', {\n    key: key === 'Space'\n      ? ' '\n      : key,\n    altKey: keys.includes('Alt'),\n    ctrlKey: keys.includes('Ctrl'),\n    metaKey: keys.includes('Meta'),\n    shiftKey: keys.includes('Shift'),\n    bubbles: true,\n    cancelable: true,\n  })\n\n  const capturedTransaction = editor.captureTransaction(() => {\n    view.someProp('handleKeyDown', f => f(view, event))\n  })\n\n  capturedTransaction?.steps.forEach(step => {\n    const newStep = step.map(tr.mapping)\n\n    if (newStep && dispatch) {\n      tr.maybeStep(newStep)\n    }\n  })\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { NodeRange } from '../types.js'\nimport { objectIncludes } from '../utilities/objectIncludes.js'\nimport { getNodeType } from './getNodeType.js'\n\nexport function isNodeActive(\n  state: EditorState,\n  typeOrName: NodeType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { from, to, empty } = state.selection\n  const type = typeOrName ? getNodeType(typeOrName, state.schema) : null\n\n  const nodeRanges: NodeRange[] = []\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isText) {\n      return\n    }\n\n    const relativeFrom = Math.max(from, pos)\n    const relativeTo = Math.min(to, pos + node.nodeSize)\n\n    nodeRanges.push({\n      node,\n      from: relativeFrom,\n      to: relativeTo,\n    })\n  })\n\n  const selectionRange = to - from\n  const matchedNodeRanges = nodeRanges\n    .filter(nodeRange => {\n      if (!type) {\n        return true\n      }\n\n      return type.name === nodeRange.node.type.name\n    })\n    .filter(nodeRange => objectIncludes(nodeRange.node.attrs, attributes, { strict: false }))\n\n  if (empty) {\n    return !!matchedNodeRanges.length\n  }\n\n  const range = matchedNodeRanges.reduce((sum, nodeRange) => sum + nodeRange.to - nodeRange.from, 0)\n\n  return range >= selectionRange\n}\n", "import { lift as originalLift } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isNodeActive } from '../helpers/isNodeActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    lift: {\n      /**\n       * Removes an existing wrap.\n       */\n      lift: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const lift: RawCommands['lift'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (!isActive) {\n    return false\n  }\n\n  return originalLift(state, dispatch)\n}\n", "import { liftEmptyBlock as originalLiftEmptyBlock } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    liftEmptyBlock: {\n      /**\n       * Lift block if empty.\n       */\n      liftEmptyBlock: () => ReturnType,\n    }\n  }\n}\n\nexport const liftEmptyBlock: RawCommands['liftEmptyBlock'] = () => ({ state, dispatch }) => {\n  return originalLiftEmptyBlock(state, dispatch)\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { liftListItem as originalLiftListItem } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    liftListItem: {\n      /**\n       * Lift the list item into a wrapping list.\n       */\n      liftListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const liftListItem: RawCommands['liftListItem'] = typeOrName => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalLiftListItem(type)(state, dispatch)\n}\n", "import { newlineInCode as originalNewlineInCode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    newlineInCode: {\n      /**\n       * Add a newline character in code.\n       */\n      newlineInCode: () => ReturnType\n    }\n  }\n}\n\nexport const newlineInCode: RawCommands['newlineInCode'] = () => ({ state, dispatch }) => {\n  return originalNewlineInCode(state, dispatch)\n}\n", "import { Schema } from '@tiptap/pm/model'\n\nexport function getSchemaTypeNameByName(name: string, schema: Schema): 'node' | 'mark' | null {\n  if (schema.nodes[name]) {\n    return 'node'\n  }\n\n  if (schema.marks[name]) {\n    return 'mark'\n  }\n\n  return null\n}\n", "/**\n * Remove a property or an array of properties from an object\n * @param obj Object\n * @param key Key to remove\n */\nexport function deleteProps(obj: Record<string, any>, propOrProps: string | string[]): Record<string, any> {\n  const props = typeof propOrProps === 'string'\n    ? [propOrProps]\n    : propOrProps\n\n  return Object\n    .keys(obj)\n    .reduce((newObj: Record<string, any>, prop) => {\n      if (!props.includes(prop)) {\n        newObj[prop] = obj[prop]\n      }\n\n      return newObj\n    }, {})\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { getSchemaTypeNameByName } from '../helpers/getSchemaTypeNameByName.js'\nimport { RawCommands } from '../types.js'\nimport { deleteProps } from '../utilities/deleteProps.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    resetAttributes: {\n      /**\n       * Resets some node attributes to the default value.\n       */\n      resetAttributes: (\n        typeOrName: string | NodeType | MarkType,\n        attributes: string | string[],\n      ) => ReturnType\n    }\n  }\n}\n\nexport const resetAttributes: RawCommands['resetAttributes'] = (typeOrName, attributes) => ({ tr, state, dispatch }) => {\n  let nodeType: NodeType | null = null\n  let markType: MarkType | null = null\n\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (!schemaType) {\n    return false\n  }\n\n  if (schemaType === 'node') {\n    nodeType = getNodeType(typeOrName as NodeType, state.schema)\n  }\n\n  if (schemaType === 'mark') {\n    markType = getMarkType(typeOrName as MarkType, state.schema)\n  }\n\n  if (dispatch) {\n    tr.selection.ranges.forEach(range => {\n      state.doc.nodesBetween(range.$from.pos, range.$to.pos, (node, pos) => {\n        if (nodeType && nodeType === node.type) {\n          tr.setNodeMarkup(pos, undefined, deleteProps(node.attrs, attributes))\n        }\n\n        if (markType && node.marks.length) {\n          node.marks.forEach(mark => {\n            if (markType === mark.type) {\n              tr.addMark(\n                pos,\n                pos + node.nodeSize,\n                markType.create(deleteProps(mark.attrs, attributes)),\n              )\n            }\n          })\n        }\n      })\n    })\n  }\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    scrollIntoView: {\n      /**\n       * Scroll the selection into view.\n       */\n      scrollIntoView: () => ReturnType,\n    }\n  }\n}\n\nexport const scrollIntoView: RawCommands['scrollIntoView'] = () => ({ tr, dispatch }) => {\n  if (dispatch) {\n    tr.scrollIntoView()\n  }\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectAll: {\n      /**\n       * Select the whole document.\n       */\n      selectAll: () => ReturnType,\n    }\n  }\n}\n\nexport const selectAll: RawCommands['selectAll'] = () => ({ tr, commands }) => {\n  return commands.setTextSelection({\n    from: 0,\n    to: tr.doc.content.size,\n  })\n}\n", "import { selectNodeBackward as originalSelectNodeBackward } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectNodeBackward: {\n      /**\n       * Select a node backward.\n       */\n      selectNodeBackward: () => ReturnType\n    }\n  }\n}\n\nexport const selectNodeBackward: RawCommands['selectNodeBackward'] = () => ({ state, dispatch }) => {\n  return originalSelectNodeBackward(state, dispatch)\n}\n", "import { selectNodeForward as originalSelectNodeForward } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectNodeForward: {\n      /**\n       * Select a node forward.\n       */\n      selectNodeForward: () => ReturnType\n    }\n  }\n}\n\nexport const selectNodeForward: RawCommands['selectNodeForward'] = () => ({ state, dispatch }) => {\n  return originalSelectNodeForward(state, dispatch)\n}\n", "import { selectParentNode as originalSelectParentNode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectParentNode: {\n      /**\n       * Select the parent node.\n       */\n      selectParentNode: () => ReturnType\n    }\n  }\n}\n\nexport const selectParentNode: RawCommands['selectParentNode'] = () => ({ state, dispatch }) => {\n  return originalSelectParentNode(state, dispatch)\n}\n", "// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nimport { selectTextblockEnd as originalSelectTextblockEnd } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectTextblockEnd: {\n      /**\n       * Moves the cursor to the end of current text block.\n       */\n      selectTextblockEnd: () => ReturnType\n    }\n  }\n}\n\nexport const selectTextblockEnd: RawCommands['selectTextblockEnd'] = () => ({ state, dispatch }) => {\n  return originalSelectTextblockEnd(state, dispatch)\n}\n", "// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nimport { selectTextblockStart as originalSelectTextblockStart } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectTextblockStart: {\n      /**\n       * Moves the cursor to the start of current text block.\n       */\n      selectTextblockStart: () => ReturnType\n    }\n  }\n}\n\nexport const selectTextblockStart: RawCommands['selectTextblockStart'] = () => ({ state, dispatch }) => {\n  return originalSelectTextblockStart(state, dispatch)\n}\n", "import { Node as ProseMirrorNode, ParseOptions, Schema } from '@tiptap/pm/model'\n\nimport { Content } from '../types.js'\nimport { createNodeFromContent } from './createNodeFromContent.js'\n\nexport function createDocument(\n  content: Content,\n  schema: Schema,\n  parseOptions: ParseOptions = {},\n): ProseMirrorNode {\n  return createNodeFromContent(content, schema, { slice: false, parseOptions }) as ProseMirrorNode\n}\n", "import { ParseOptions } from '@tiptap/pm/model'\n\nimport { createDocument } from '../helpers/createDocument.js'\nimport { Content, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setContent: {\n      /**\n       * Replace the whole document with new content.\n       */\n      setContent: (\n        content: Content,\n        emitUpdate?: boolean,\n        parseOptions?: ParseOptions,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const setContent: RawCommands['setContent'] = (content, emitUpdate = false, parseOptions = {}) => ({ tr, editor, dispatch }) => {\n  const { doc } = tr\n  const document = createDocument(content, editor.schema, parseOptions)\n\n  if (dispatch) {\n    tr.replaceWith(0, doc.content.size, document).setMeta('preventUpdate', !emitUpdate)\n  }\n\n  return true\n}\n", "import { Mark, MarkType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getMarkType } from './getMarkType.js'\n\nexport function getMarkAttributes(\n  state: EditorState,\n  typeOrName: string | MarkType,\n): Record<string, any> {\n  const type = getMarkType(typeOrName, state.schema)\n  const { from, to, empty } = state.selection\n  const marks: Mark[] = []\n\n  if (empty) {\n    if (state.storedMarks) {\n      marks.push(...state.storedMarks)\n    }\n\n    marks.push(...state.selection.$head.marks())\n  } else {\n    state.doc.nodesBetween(from, to, node => {\n      marks.push(...node.marks)\n    })\n  }\n\n  const mark = marks.find(markItem => markItem.type.name === type.name)\n\n  if (!mark) {\n    return {}\n  }\n\n  return { ...mark.attrs }\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Transaction } from '@tiptap/pm/state'\nimport { Transform } from '@tiptap/pm/transform'\n\n/**\n * Returns a new `Transform` based on all steps of the passed transactions.\n */\nexport function combineTransactionSteps(\n  oldDoc: ProseMirrorNode,\n  transactions: Transaction[],\n): Transform {\n  const transform = new Transform(oldDoc)\n\n  transactions.forEach(transaction => {\n    transaction.steps.forEach(step => {\n      transform.step(step)\n    })\n  })\n\n  return transform\n}\n", "import { ContentMatch, NodeType } from '@tiptap/pm/model'\n\nexport function defaultBlockAt(match: ContentMatch): NodeType | null {\n  for (let i = 0; i < match.edgeCount; i += 1) {\n    const { type } = match.edge(i)\n\n    if (type.isTextblock && !type.hasRequiredAttrs()) {\n      return type\n    }\n  }\n\n  return null\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { NodeWithPos, Predicate } from '../types.js'\n\nexport function findChildren(node: ProseMirrorNode, predicate: Predicate): NodeWithPos[] {\n  const nodesWithPos: NodeWithPos[] = []\n\n  node.descendants((child, pos) => {\n    if (predicate(child)) {\n      nodesWithPos.push({\n        node: child,\n        pos,\n      })\n    }\n  })\n\n  return nodesWithPos\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { NodeWithPos, Predicate, Range } from '../types.js'\n\n/**\n * Same as `findChildren` but searches only within a `range`.\n */\nexport function findChildrenInRange(\n  node: ProseMirrorNode,\n  range: Range,\n  predicate: Predicate,\n): NodeWithPos[] {\n  const nodesWithPos: NodeWithPos[] = []\n\n  // if (range.from === range.to) {\n  //   const nodeAt = node.nodeAt(range.from)\n\n  //   if (nodeAt) {\n  //     nodesWithPos.push({\n  //       node: nodeAt,\n  //       pos: range.from,\n  //     })\n  //   }\n  // }\n\n  node.nodesBetween(range.from, range.to, (child, pos) => {\n    if (predicate(child)) {\n      nodesWithPos.push({\n        node: child,\n        pos,\n      })\n    }\n  })\n\n  return nodesWithPos\n}\n", "import { Node as ProseMirrorNode, ResolvedPos } from '@tiptap/pm/model'\n\nimport { Predicate } from '../types.js'\n\nexport function findParentNodeClosestToPos(\n  $pos: ResolvedPos,\n  predicate: Predicate,\n):\n  | {\n      pos: number\n      start: number\n      depth: number\n      node: ProseMirrorNode\n    }\n  | undefined {\n  for (let i = $pos.depth; i > 0; i -= 1) {\n    const node = $pos.node(i)\n\n    if (predicate(node)) {\n      return {\n        pos: i > 0 ? $pos.before(i) : 0,\n        start: $pos.start(i),\n        depth: i,\n        node,\n      }\n    }\n  }\n}\n", "import { Selection } from '@tiptap/pm/state'\n\nimport { Predicate } from '../types.js'\nimport { findParentNodeClosestToPos } from './findParentNodeClosestToPos.js'\n\nexport function findParentNode(predicate: Predicate) {\n  return (selection: Selection) => findParentNodeClosestToPos(selection.$from, predicate)\n}\n", "import { DOMSerializer, Fragment, Schema } from '@tiptap/pm/model'\n\nexport function getHTMLFromFragment(fragment: Fragment, schema: Schema): string {\n  const documentFragment = DOMSerializer.fromSchema(schema).serializeFragment(fragment)\n\n  const temporaryDocument = document.implementation.createHTMLDocument()\n  const container = temporaryDocument.createElement('div')\n\n  container.appendChild(documentFragment)\n\n  return container.innerHTML\n}\n", "import { Schema } from '@tiptap/pm/model'\n\nimport { Editor } from '../Editor.js'\nimport { ExtensionManager } from '../ExtensionManager.js'\nimport { Extensions } from '../types.js'\nimport { getSchemaByResolvedExtensions } from './getSchemaByResolvedExtensions.js'\n\nexport function getSchema(extensions: Extensions, editor?: Editor): Schema {\n  const resolvedExtensions = ExtensionManager.resolve(extensions)\n\n  return getSchemaByResolvedExtensions(resolvedExtensions, editor)\n}\n", "import { Node } from '@tiptap/pm/model'\n\nimport { Extensions, JSONContent } from '../types.js'\nimport { getHTMLFromFragment } from './getHTMLFromFragment.js'\nimport { getSchema } from './getSchema.js'\n\nexport function generateHTML(doc: JSONContent, extensions: Extensions): string {\n  const schema = getSchema(extensions)\n  const contentNode = Node.fromJSON(schema, doc)\n\n  return getHTMLFromFragment(contentNode.content, schema)\n}\n", "import { DOMParser } from '@tiptap/pm/model'\n\nimport { Extensions } from '../types.js'\nimport { elementFromString } from '../utilities/elementFromString.js'\nimport { getSchema } from './getSchema.js'\n\nexport function generateJSON(html: string, extensions: Extensions): Record<string, any> {\n  const schema = getSchema(extensions)\n  const dom = elementFromString(html)\n\n  return DOMParser.fromSchema(schema).parse(dom).toJSON()\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { TextSerializer } from '../types.js'\nimport { getTextBetween } from './getTextBetween.js'\n\nexport function getText(\n  node: ProseMirrorNode,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n) {\n  const range = {\n    from: 0,\n    to: node.content.size,\n  }\n\n  return getTextBetween(node, range, options)\n}\n", "import { Node } from '@tiptap/pm/model'\n\nimport { Extensions, JSONContent, TextSerializer } from '../types.js'\nimport { getSchema } from './getSchema.js'\nimport { getText } from './getText.js'\nimport { getTextSerializersFromSchema } from './getTextSerializersFromSchema.js'\n\nexport function generateText(\n  doc: JSONContent,\n  extensions: Extensions,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n): string {\n  const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n  const schema = getSchema(extensions)\n  const contentNode = Node.fromJSON(schema, doc)\n\n  return getText(contentNode, {\n    blockSeparator,\n    textSerializers: {\n      ...getTextSerializersFromSchema(schema),\n      ...textSerializers,\n    },\n  })\n}\n", "import { Node, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getNodeType } from './getNodeType.js'\n\nexport function getNodeAttributes(\n  state: EditorState,\n  typeOrName: string | NodeType,\n): Record<string, any> {\n  const type = getNodeType(typeOrName, state.schema)\n  const { from, to } = state.selection\n  const nodes: Node[] = []\n\n  state.doc.nodesBetween(from, to, node => {\n    nodes.push(node)\n  })\n\n  const node = nodes.reverse().find(nodeItem => nodeItem.type.name === type.name)\n\n  if (!node) {\n    return {}\n  }\n\n  return { ...node.attrs }\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getMarkAttributes } from './getMarkAttributes.js'\nimport { getNodeAttributes } from './getNodeAttributes.js'\nimport { getSchemaTypeNameByName } from './getSchemaTypeNameByName.js'\n\nexport function getAttributes(\n  state: EditorState,\n  typeOrName: string | NodeType | MarkType,\n): Record<string, any> {\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (schemaType === 'node') {\n    return getNodeAttributes(state, typeOrName as NodeType)\n  }\n\n  if (schemaType === 'mark') {\n    return getMarkAttributes(state, typeOrName as MarkType)\n  }\n\n  return {}\n}\n", "/**\n * Removes duplicated values within an array.\n * Supports numbers, strings and objects.\n */\nexport function removeDuplicates<T>(array: T[], by = JSON.stringify): T[] {\n  const seen: Record<any, any> = {}\n\n  return array.filter(item => {\n    const key = by(item)\n\n    return Object.prototype.hasOwnProperty.call(seen, key)\n      ? false\n      : (seen[key] = true)\n  })\n}\n", "import { Step, Transform } from '@tiptap/pm/transform'\n\nimport { Range } from '../types.js'\nimport { removeDuplicates } from '../utilities/removeDuplicates.js'\n\nexport type ChangedRange = {\n  oldRange: Range,\n  newRange: Range,\n}\n\n/**\n * Removes duplicated ranges and ranges that are\n * fully captured by other ranges.\n */\nfunction simplifyChangedRanges(changes: ChangedRange[]): ChangedRange[] {\n  const uniqueChanges = removeDuplicates(changes)\n\n  return uniqueChanges.length === 1\n    ? uniqueChanges\n    : uniqueChanges.filter((change, index) => {\n      const rest = uniqueChanges.filter((_, i) => i !== index)\n\n      return !rest.some(otherChange => {\n        return change.oldRange.from >= otherChange.oldRange.from\n          && change.oldRange.to <= otherChange.oldRange.to\n          && change.newRange.from >= otherChange.newRange.from\n          && change.newRange.to <= otherChange.newRange.to\n      })\n    })\n}\n\n/**\n * Returns a list of changed ranges\n * based on the first and last state of all steps.\n */\nexport function getChangedRanges(transform: Transform): ChangedRange[] {\n  const { mapping, steps } = transform\n  const changes: ChangedRange[] = []\n\n  mapping.maps.forEach((stepMap, index) => {\n    const ranges: Range[] = []\n\n    // This accounts for step changes where no range was actually altered\n    // e.g. when setting a mark, node attribute, etc.\n    // @ts-ignore\n    if (!stepMap.ranges.length) {\n      const { from, to } = steps[index] as Step & {\n        from?: number,\n        to?: number,\n      }\n\n      if (from === undefined || to === undefined) {\n        return\n      }\n\n      ranges.push({ from, to })\n    } else {\n      stepMap.forEach((from, to) => {\n        ranges.push({ from, to })\n      })\n    }\n\n    ranges.forEach(({ from, to }) => {\n      const newStart = mapping.slice(index).map(from, -1)\n      const newEnd = mapping.slice(index).map(to)\n      const oldStart = mapping.invert().map(newStart, -1)\n      const oldEnd = mapping.invert().map(newEnd)\n\n      changes.push({\n        oldRange: {\n          from: oldStart,\n          to: oldEnd,\n        },\n        newRange: {\n          from: newStart,\n          to: newEnd,\n        },\n      })\n    })\n  })\n\n  return simplifyChangedRanges(changes)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { JSONContent } from '../types.js'\n\ninterface DebugJSONContent extends JSONContent {\n  from: number\n  to: number\n}\n\nexport function getDebugJSON(node: ProseMirrorNode, startOffset = 0): DebugJSONContent {\n  const isTopNode = node.type === node.type.schema.topNodeType\n  const increment = isTopNode ? 0 : 1\n  const from = startOffset\n  const to = from + node.nodeSize\n  const marks = node.marks.map(mark => {\n    const output: { type: string; attrs?: Record<string, any> } = {\n      type: mark.type.name,\n    }\n\n    if (Object.keys(mark.attrs).length) {\n      output.attrs = { ...mark.attrs }\n    }\n\n    return output\n  })\n  const attrs = { ...node.attrs }\n  const output: DebugJSONContent = {\n    type: node.type.name,\n    from,\n    to,\n  }\n\n  if (Object.keys(attrs).length) {\n    output.attrs = attrs\n  }\n\n  if (marks.length) {\n    output.marks = marks\n  }\n\n  if (node.content.childCount) {\n    output.content = []\n\n    node.forEach((child, offset) => {\n      output.content?.push(getDebugJSON(child, startOffset + offset + increment))\n    })\n  }\n\n  if (node.text) {\n    output.text = node.text\n  }\n\n  return output\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { MarkRange } from '../types.js'\nimport { getMarkRange } from './getMarkRange.js'\n\nexport function getMarksBetween(from: number, to: number, doc: ProseMirrorNode): MarkRange[] {\n  const marks: MarkRange[] = []\n\n  // get all inclusive marks on empty selection\n  if (from === to) {\n    doc\n      .resolve(from)\n      .marks()\n      .forEach(mark => {\n        const $pos = doc.resolve(from - 1)\n        const range = getMarkRange($pos, mark.type)\n\n        if (!range) {\n          return\n        }\n\n        marks.push({\n          mark,\n          ...range,\n        })\n      })\n  } else {\n    doc.nodesBetween(from, to, (node, pos) => {\n      if (!node || node?.nodeSize === undefined) {\n        return\n      }\n\n      marks.push(\n        ...node.marks.map(mark => ({\n          from: pos,\n          to: pos + node.nodeSize,\n          mark,\n        })),\n      )\n    })\n  }\n\n  return marks\n}\n", "import { Node, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\n/**\n * Finds the first node of a given type or name in the current selection.\n * @param state The editor state.\n * @param typeOrName The node type or name.\n * @param pos The position to start searching from.\n * @param maxDepth The maximum depth to search.\n * @returns The node and the depth as an array.\n */\nexport const getNodeAtPosition = (state: EditorState, typeOrName: string | NodeType, pos: number, maxDepth = 20) => {\n  const $pos = state.doc.resolve(pos)\n\n  let currentDepth = maxDepth\n  let node: Node | null = null\n\n  while (currentDepth > 0 && node === null) {\n    const currentNode = $pos.node(currentDepth)\n\n    if (currentNode?.type.name === typeOrName) {\n      node = currentNode\n    } else {\n      currentDepth -= 1\n    }\n  }\n\n  return [node, currentDepth] as [Node | null, number]\n}\n", "import { ExtensionAttribute } from '../types.js'\n\nexport function getSplittedAttributes(\n  extensionAttributes: ExtensionAttribute[],\n  typeName: string,\n  attributes: Record<string, any>,\n): Record<string, any> {\n  return Object.fromEntries(Object\n    .entries(attributes)\n    .filter(([name]) => {\n      const extensionAttribute = extensionAttributes.find(item => {\n        return item.type === typeName && item.name === name\n      })\n\n      if (!extensionAttribute) {\n        return false\n      }\n\n      return extensionAttribute.attribute.keepOnSplit\n    }))\n}\n", "import { MarkType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { MarkRange } from '../types.js'\nimport { objectIncludes } from '../utilities/objectIncludes.js'\nimport { getMarkType } from './getMarkType.js'\n\nexport function isMarkActive(\n  state: EditorState,\n  typeOrName: MarkType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { empty, ranges } = state.selection\n  const type = typeOrName ? getMarkType(typeOrName, state.schema) : null\n\n  if (empty) {\n    return !!(state.storedMarks || state.selection.$from.marks())\n      .filter(mark => {\n        if (!type) {\n          return true\n        }\n\n        return type.name === mark.type.name\n      })\n      .find(mark => objectIncludes(mark.attrs, attributes, { strict: false }))\n  }\n\n  let selectionRange = 0\n  const markRanges: MarkRange[] = []\n\n  ranges.forEach(({ $from, $to }) => {\n    const from = $from.pos\n    const to = $to.pos\n\n    state.doc.nodesBetween(from, to, (node, pos) => {\n      if (!node.isText && !node.marks.length) {\n        return\n      }\n\n      const relativeFrom = Math.max(from, pos)\n      const relativeTo = Math.min(to, pos + node.nodeSize)\n      const range = relativeTo - relativeFrom\n\n      selectionRange += range\n\n      markRanges.push(\n        ...node.marks.map(mark => ({\n          mark,\n          from: relativeFrom,\n          to: relativeTo,\n        })),\n      )\n    })\n  })\n\n  if (selectionRange === 0) {\n    return false\n  }\n\n  // calculate range of matched mark\n  const matchedRange = markRanges\n    .filter(markRange => {\n      if (!type) {\n        return true\n      }\n\n      return type.name === markRange.mark.type.name\n    })\n    .filter(markRange => objectIncludes(markRange.mark.attrs, attributes, { strict: false }))\n    .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0)\n\n  // calculate range of marks that excludes the searched mark\n  // for example `code` doesn’t allow any other marks\n  const excludedRange = markRanges\n    .filter(markRange => {\n      if (!type) {\n        return true\n      }\n\n      return markRange.mark.type !== type && markRange.mark.type.excludes(type)\n    })\n    .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0)\n\n  // we only include the result of `excludedRange`\n  // if there is a match at all\n  const range = matchedRange > 0 ? matchedRange + excludedRange : matchedRange\n\n  return range >= selectionRange\n}\n", "import { EditorState } from '@tiptap/pm/state'\n\nimport { getSchemaTypeNameByName } from './getSchemaTypeNameByName.js'\nimport { isMarkActive } from './isMarkActive.js'\nimport { isNodeActive } from './isNodeActive.js'\n\nexport function isActive(\n  state: EditorState,\n  name: string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  if (!name) {\n    return isNodeActive(state, null, attributes) || isMarkActive(state, null, attributes)\n  }\n\n  const schemaType = getSchemaTypeNameByName(name, state.schema)\n\n  if (schemaType === 'node') {\n    return isNodeActive(state, name, attributes)\n  }\n\n  if (schemaType === 'mark') {\n    return isMarkActive(state, name, attributes)\n  }\n\n  return false\n}\n", "import { EditorState } from '@tiptap/pm/state'\n\nimport { findParentNode } from './findParentNode.js'\n\nexport const isAtEndOfNode = (state: EditorState, nodeType?: string) => {\n  const { $from, $to, $anchor } = state.selection\n\n  if (nodeType) {\n    const parentNode = findParentNode(node => node.type.name === nodeType)(state.selection)\n\n    if (!parentNode) {\n      return false\n    }\n\n    const $parentPos = state.doc.resolve(parentNode.pos + 1)\n\n    if ($anchor.pos + 1 === $parentPos.end()) {\n      return true\n    }\n\n    return false\n  }\n\n  if ($to.parentOffset < $to.parent.nodeSize - 2 || $from.pos !== $to.pos) {\n    return false\n  }\n\n  return true\n}\n", "import { EditorState } from '@tiptap/pm/state'\n\nexport const isAtStartOfNode = (state: EditorState) => {\n  const { $from, $to } = state.selection\n\n  if ($from.parentOffset > 0 || $from.pos !== $to.pos) {\n    return false\n  }\n\n  return true\n}\n", "import { getExtensionField } from '../helpers/getExtensionField.js'\nimport { NodeConfig } from '../index.js'\nimport { Extensions } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\nimport { splitExtensions } from './splitExtensions.js'\n\nexport function isList(name: string, extensions: Extensions): boolean {\n  const { nodeExtensions } = splitExtensions(extensions)\n  const extension = nodeExtensions.find(item => item.name === name)\n\n  if (!extension) {\n    return false\n  }\n\n  const context = {\n    name: extension.name,\n    options: extension.options,\n    storage: extension.storage,\n  }\n  const group = callOrReturn(getExtensionField<NodeConfig['group']>(extension, 'group', context))\n\n  if (typeof group !== 'string') {\n    return false\n  }\n\n  return group.split(' ').includes('list')\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nexport function isNodeEmpty(node: ProseMirrorNode): boolean {\n  const defaultContent = node.type.createAndFill()?.toJSON()\n  const content = node.toJSON()\n\n  return JSON.stringify(defaultContent) === JSON.stringify(content)\n}\n", "import { NodeSelection } from '@tiptap/pm/state'\n\nexport function isNodeSelection(value: unknown): value is NodeSelection {\n  return value instanceof NodeSelection\n}\n", "import { EditorView } from '@tiptap/pm/view'\n\nimport { minMax } from '../utilities/minMax.js'\n\nexport function posToDOMRect(view: EditorView, from: number, to: number): DOMRect {\n  const minPos = 0\n  const maxPos = view.state.doc.content.size\n  const resolvedFrom = minMax(from, minPos, maxPos)\n  const resolvedEnd = minMax(to, minPos, maxPos)\n  const start = view.coordsAtPos(resolvedFrom)\n  const end = view.coordsAtPos(resolvedEnd, -1)\n  const top = Math.min(start.top, end.top)\n  const bottom = Math.max(start.bottom, end.bottom)\n  const left = Math.min(start.left, end.left)\n  const right = Math.max(start.right, end.right)\n  const width = right - left\n  const height = bottom - top\n  const x = left\n  const y = top\n  const data = {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height,\n    x,\n    y,\n  }\n\n  return {\n    ...data,\n    toJSON: () => data,\n  }\n}\n", "import { MarkType, ResolvedPos } from '@tiptap/pm/model'\nimport { EditorState, Transaction } from '@tiptap/pm/state'\n\nimport { getMarkAttributes } from '../helpers/getMarkAttributes.js'\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { isTextSelection } from '../helpers/index.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setMark: {\n      /**\n       * Add a mark with new attributes.\n       */\n      setMark: (typeOrName: string | MarkType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nfunction canSetMark(state: EditorState, tr: Transaction, newMarkType: MarkType) {\n  const { selection } = tr\n  let cursor: ResolvedPos | null = null\n\n  if (isTextSelection(selection)) {\n    cursor = selection.$cursor\n  }\n\n  if (cursor) {\n    const currentMarks = state.storedMarks ?? cursor.marks()\n\n    // There can be no current marks that exclude the new mark\n    return (\n      !!newMarkType.isInSet(currentMarks)\n      || !currentMarks.some(mark => mark.type.excludes(newMarkType))\n    )\n  }\n\n  const { ranges } = selection\n\n  return ranges.some(({ $from, $to }) => {\n    let someNodeSupportsMark = $from.depth === 0\n      ? state.doc.inlineContent && state.doc.type.allowsMarkType(newMarkType)\n      : false\n\n    state.doc.nodesBetween($from.pos, $to.pos, (node, _pos, parent) => {\n      // If we already found a mark that we can enable, return false to bypass the remaining search\n      if (someNodeSupportsMark) {\n        return false\n      }\n\n      if (node.isInline) {\n        const parentAllowsMarkType = !parent || parent.type.allowsMarkType(newMarkType)\n        const currentMarksAllowMarkType = !!newMarkType.isInSet(node.marks)\n          || !node.marks.some(otherMark => otherMark.type.excludes(newMarkType))\n\n        someNodeSupportsMark = parentAllowsMarkType && currentMarksAllowMarkType\n      }\n      return !someNodeSupportsMark\n    })\n\n    return someNodeSupportsMark\n  })\n}\nexport const setMark: RawCommands['setMark'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  const { selection } = tr\n  const { empty, ranges } = selection\n  const type = getMarkType(typeOrName, state.schema)\n\n  if (dispatch) {\n    if (empty) {\n      const oldAttributes = getMarkAttributes(state, type)\n\n      tr.addStoredMark(\n        type.create({\n          ...oldAttributes,\n          ...attributes,\n        }),\n      )\n    } else {\n      ranges.forEach(range => {\n        const from = range.$from.pos\n        const to = range.$to.pos\n\n        state.doc.nodesBetween(from, to, (node, pos) => {\n          const trimmedFrom = Math.max(pos, from)\n          const trimmedTo = Math.min(pos + node.nodeSize, to)\n          const someHasMark = node.marks.find(mark => mark.type === type)\n\n          // if there is already a mark of this type\n          // we know that we have to merge its attributes\n          // otherwise we add a fresh new mark\n          if (someHasMark) {\n            node.marks.forEach(mark => {\n              if (type === mark.type) {\n                tr.addMark(\n                  trimmedFrom,\n                  trimmedTo,\n                  type.create({\n                    ...mark.attrs,\n                    ...attributes,\n                  }),\n                )\n              }\n            })\n          } else {\n            tr.addMark(trimmedFrom, trimmedTo, type.create(attributes))\n          }\n        })\n      })\n    }\n  }\n\n  return canSetMark(state, tr, type)\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setMeta: {\n      /**\n       * Store a metadata property in the current transaction.\n       */\n      setMeta: (key: string, value: any) => ReturnType,\n    }\n  }\n}\n\nexport const setMeta: RawCommands['setMeta'] = (key, value) => ({ tr }) => {\n  tr.setMeta(key, value)\n\n  return true\n}\n", "import { setBlockType } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setNode: {\n      /**\n       * Replace a given range with a node.\n       */\n      setNode: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const setNode: RawCommands['setNode'] = (typeOrName, attributes = {}) => ({ state, dispatch, chain }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  // TODO: use a fallback like insertContent?\n  if (!type.isTextblock) {\n    console.warn('[tiptap warn]: Currently \"setNode()\" only supports text block nodes.')\n\n    return false\n  }\n\n  return (\n    chain()\n    // try to convert node to default node if needed\n      .command(({ commands }) => {\n        const canSetBlock = setBlockType(type, attributes)(state)\n\n        if (canSetBlock) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .command(({ state: updatedState }) => {\n        return setBlockType(type, attributes)(updatedState, dispatch)\n      })\n      .run()\n  )\n}\n", "import { NodeSelection } from '@tiptap/pm/state'\n\nimport { RawCommands } from '../types.js'\nimport { minMax } from '../utilities/minMax.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setNodeSelection: {\n      /**\n       * Creates a NodeSelection.\n       */\n      setNodeSelection: (position: number) => ReturnType\n    }\n  }\n}\n\nexport const setNodeSelection: RawCommands['setNodeSelection'] = position => ({ tr, dispatch }) => {\n  if (dispatch) {\n    const { doc } = tr\n    const from = minMax(position, 0, doc.content.size)\n    const selection = NodeSelection.create(doc, from)\n\n    tr.setSelection(selection)\n  }\n\n  return true\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nimport { Range, RawCommands } from '../types.js'\nimport { minMax } from '../utilities/minMax.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setTextSelection: {\n      /**\n       * Creates a TextSelection.\n       */\n      setTextSelection: (position: number | Range) => ReturnType\n    }\n  }\n}\n\nexport const setTextSelection: RawCommands['setTextSelection'] = position => ({ tr, dispatch }) => {\n  if (dispatch) {\n    const { doc } = tr\n    const { from, to } = typeof position === 'number' ? { from: position, to: position } : position\n    const minPos = TextSelection.atStart(doc).from\n    const maxPos = TextSelection.atEnd(doc).to\n    const resolvedFrom = minMax(from, minPos, maxPos)\n    const resolvedEnd = minMax(to, minPos, maxPos)\n    const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd)\n\n    tr.setSelection(selection)\n  }\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { sinkListItem as originalSinkListItem } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    sinkListItem: {\n      /**\n       * Sink the list item down into an inner list.\n       */\n      sinkListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const sinkListItem: RawCommands['sinkListItem'] = typeOrName => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalSinkListItem(type)(state, dispatch)\n}\n", "import { EditorState, NodeSelection, TextSelection } from '@tiptap/pm/state'\nimport { canSplit } from '@tiptap/pm/transform'\n\nimport { defaultBlockAt } from '../helpers/defaultBlockAt.js'\nimport { getSplittedAttributes } from '../helpers/getSplittedAttributes.js'\nimport { RawCommands } from '../types.js'\n\nfunction ensureMarks(state: EditorState, splittableMarks?: string[]) {\n  const marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks())\n\n  if (marks) {\n    const filteredMarks = marks.filter(mark => splittableMarks?.includes(mark.type.name))\n\n    state.tr.ensureMarks(filteredMarks)\n  }\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    splitBlock: {\n      /**\n       * Forks a new node from an existing node.\n       */\n      splitBlock: (options?: { keepMarks?: boolean }) => ReturnType\n    }\n  }\n}\n\nexport const splitBlock: RawCommands['splitBlock'] = ({ keepMarks = true } = {}) => ({\n  tr, state, dispatch, editor,\n}) => {\n  const { selection, doc } = tr\n  const { $from, $to } = selection\n  const extensionAttributes = editor.extensionManager.attributes\n  const newAttributes = getSplittedAttributes(\n    extensionAttributes,\n    $from.node().type.name,\n    $from.node().attrs,\n  )\n\n  if (selection instanceof NodeSelection && selection.node.isBlock) {\n    if (!$from.parentOffset || !canSplit(doc, $from.pos)) {\n      return false\n    }\n\n    if (dispatch) {\n      if (keepMarks) {\n        ensureMarks(state, editor.extensionManager.splittableMarks)\n      }\n\n      tr.split($from.pos).scrollIntoView()\n    }\n\n    return true\n  }\n\n  if (!$from.parent.isBlock) {\n    return false\n  }\n\n  if (dispatch) {\n    const atEnd = $to.parentOffset === $to.parent.content.size\n\n    if (selection instanceof TextSelection) {\n      tr.deleteSelection()\n    }\n\n    const deflt = $from.depth === 0\n      ? undefined\n      : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)))\n\n    let types = atEnd && deflt\n      ? [\n        {\n          type: deflt,\n          attrs: newAttributes,\n        },\n      ]\n      : undefined\n\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types)\n\n    if (\n      !types\n        && !can\n        && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)\n    ) {\n      can = true\n      types = deflt\n        ? [\n          {\n            type: deflt,\n            attrs: newAttributes,\n          },\n        ]\n        : undefined\n    }\n\n    if (can) {\n      tr.split(tr.mapping.map($from.pos), 1, types)\n\n      if (deflt && !atEnd && !$from.parentOffset && $from.parent.type !== deflt) {\n        const first = tr.mapping.map($from.before())\n        const $first = tr.doc.resolve(first)\n\n        if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt)) {\n          tr.setNodeMarkup(tr.mapping.map($from.before()), deflt)\n        }\n      }\n    }\n\n    if (keepMarks) {\n      ensureMarks(state, editor.extensionManager.splittableMarks)\n    }\n\n    tr.scrollIntoView()\n  }\n\n  return true\n}\n", "import {\n  Fragment, Node as ProseMirrorNode, NodeType, Slice,\n} from '@tiptap/pm/model'\nimport { TextSelection } from '@tiptap/pm/state'\nimport { canSplit } from '@tiptap/pm/transform'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { getSplittedAttributes } from '../helpers/getSplittedAttributes.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    splitListItem: {\n      /**\n       * Splits one list item into two list items.\n       */\n      splitListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const splitListItem: RawCommands['splitListItem'] = typeOrName => ({\n  tr, state, dispatch, editor,\n}) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const { $from, $to } = state.selection\n\n  // @ts-ignore\n  // eslint-disable-next-line\n    const node: ProseMirrorNode = state.selection.node\n\n  if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) {\n    return false\n  }\n\n  const grandParent = $from.node(-1)\n\n  if (grandParent.type !== type) {\n    return false\n  }\n\n  const extensionAttributes = editor.extensionManager.attributes\n\n  if ($from.parent.content.size === 0 && $from.node(-1).childCount === $from.indexAfter(-1)) {\n    // In an empty block. If this is a nested list, the wrapping\n    // list item should be split. Otherwise, bail out and let next\n    // command handle lifting.\n    if (\n      $from.depth === 2\n        || $from.node(-3).type !== type\n        || $from.index(-2) !== $from.node(-2).childCount - 1\n    ) {\n      return false\n    }\n\n    if (dispatch) {\n      let wrap = Fragment.empty\n      // eslint-disable-next-line\n        const depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3\n\n      // Build a fragment containing empty versions of the structure\n      // from the outer list item to the parent node of the cursor\n      for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d -= 1) {\n        wrap = Fragment.from($from.node(d).copy(wrap))\n      }\n\n      // eslint-disable-next-line\n        const depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1 : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3\n\n      // Add a second list item with an empty default start node\n      const newNextTypeAttributes = getSplittedAttributes(\n        extensionAttributes,\n        $from.node().type.name,\n        $from.node().attrs,\n      )\n      const nextType = type.contentMatch.defaultType?.createAndFill(newNextTypeAttributes) || undefined\n\n      wrap = wrap.append(Fragment.from(type.createAndFill(null, nextType) || undefined))\n\n      const start = $from.before($from.depth - (depthBefore - 1))\n\n      tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0))\n\n      let sel = -1\n\n      tr.doc.nodesBetween(start, tr.doc.content.size, (n, pos) => {\n        if (sel > -1) {\n          return false\n        }\n\n        if (n.isTextblock && n.content.size === 0) {\n          sel = pos + 1\n        }\n      })\n\n      if (sel > -1) {\n        tr.setSelection(TextSelection.near(tr.doc.resolve(sel)))\n      }\n\n      tr.scrollIntoView()\n    }\n\n    return true\n  }\n\n  const nextType = $to.pos === $from.end() ? grandParent.contentMatchAt(0).defaultType : null\n\n  const newTypeAttributes = getSplittedAttributes(\n    extensionAttributes,\n    grandParent.type.name,\n    grandParent.attrs,\n  )\n  const newNextTypeAttributes = getSplittedAttributes(\n    extensionAttributes,\n    $from.node().type.name,\n    $from.node().attrs,\n  )\n\n  tr.delete($from.pos, $to.pos)\n\n  const types = nextType\n    ? [\n      { type, attrs: newTypeAttributes },\n      { type: nextType, attrs: newNextTypeAttributes },\n    ]\n    : [{ type, attrs: newTypeAttributes }]\n\n  if (!canSplit(tr.doc, $from.pos, 2)) {\n    return false\n  }\n\n  if (dispatch) {\n    const { selection, storedMarks } = state\n    const { splittableMarks } = editor.extensionManager\n    const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n    tr.split($from.pos, 2, types).scrollIntoView()\n\n    if (!marks || !dispatch) {\n      return true\n    }\n\n    const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n    tr.ensureMarks(filteredMarks)\n  }\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { Transaction } from '@tiptap/pm/state'\nimport { canJoin } from '@tiptap/pm/transform'\n\nimport { findParentNode } from '../helpers/findParentNode.js'\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isList } from '../helpers/isList.js'\nimport { RawCommands } from '../types.js'\n\nconst joinListBackwards = (tr: Transaction, listType: NodeType): boolean => {\n  const list = findParentNode(node => node.type === listType)(tr.selection)\n\n  if (!list) {\n    return true\n  }\n\n  const before = tr.doc.resolve(Math.max(0, list.pos - 1)).before(list.depth)\n\n  if (before === undefined) {\n    return true\n  }\n\n  const nodeBefore = tr.doc.nodeAt(before)\n  const canJoinBackwards = list.node.type === nodeBefore?.type && canJoin(tr.doc, list.pos)\n\n  if (!canJoinBackwards) {\n    return true\n  }\n\n  tr.join(list.pos)\n\n  return true\n}\n\nconst joinListForwards = (tr: Transaction, listType: NodeType): boolean => {\n  const list = findParentNode(node => node.type === listType)(tr.selection)\n\n  if (!list) {\n    return true\n  }\n\n  const after = tr.doc.resolve(list.start).after(list.depth)\n\n  if (after === undefined) {\n    return true\n  }\n\n  const nodeAfter = tr.doc.nodeAt(after)\n  const canJoinForwards = list.node.type === nodeAfter?.type && canJoin(tr.doc, after)\n\n  if (!canJoinForwards) {\n    return true\n  }\n\n  tr.join(after)\n\n  return true\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleList: {\n      /**\n       * Toggle between different list types.\n       */\n      toggleList: (listTypeOrName: string | NodeType, itemTypeOrName: string | NodeType, keepMarks?: boolean, attributes?: Record<string, any>) => ReturnType;\n    }\n  }\n}\n\nexport const toggleList: RawCommands['toggleList'] = (listTypeOrName, itemTypeOrName, keepMarks, attributes = {}) => ({\n  editor, tr, state, dispatch, chain, commands, can,\n}) => {\n  const { extensions, splittableMarks } = editor.extensionManager\n  const listType = getNodeType(listTypeOrName, state.schema)\n  const itemType = getNodeType(itemTypeOrName, state.schema)\n  const { selection, storedMarks } = state\n  const { $from, $to } = selection\n  const range = $from.blockRange($to)\n\n  const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n  if (!range) {\n    return false\n  }\n\n  const parentList = findParentNode(node => isList(node.type.name, extensions))(selection)\n\n  if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n    // remove list\n    if (parentList.node.type === listType) {\n      return commands.liftListItem(itemType)\n    }\n\n    // change list type\n    if (\n      isList(parentList.node.type.name, extensions)\n        && listType.validContent(parentList.node.content)\n        && dispatch\n    ) {\n      return chain()\n        .command(() => {\n          tr.setNodeMarkup(parentList.pos, listType)\n\n          return true\n        })\n        .command(() => joinListBackwards(tr, listType))\n        .command(() => joinListForwards(tr, listType))\n        .run()\n    }\n  }\n  if (!keepMarks || !marks || !dispatch) {\n\n    return chain()\n      // try to convert node to default node if needed\n      .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes)\n\n        if (canWrapInList) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .wrapInList(listType, attributes)\n      .command(() => joinListBackwards(tr, listType))\n      .command(() => joinListForwards(tr, listType))\n      .run()\n  }\n\n  return (\n    chain()\n    // try to convert node to default node if needed\n      .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes)\n\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n        tr.ensureMarks(filteredMarks)\n\n        if (canWrapInList) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .wrapInList(listType, attributes)\n      .command(() => joinListBackwards(tr, listType))\n      .command(() => joinListForwards(tr, listType))\n      .run()\n  )\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { isMarkActive } from '../helpers/isMarkActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleMark: {\n      /**\n       * Toggle a mark on and off.\n       */\n      toggleMark: (\n        typeOrName: string | MarkType,\n        attributes?: Record<string, any>,\n        options?: {\n          /**\n           * Removes the mark even across the current selection. Defaults to `false`.\n           */\n          extendEmptyMarkRange?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const toggleMark: RawCommands['toggleMark'] = (typeOrName, attributes = {}, options = {}) => ({ state, commands }) => {\n  const { extendEmptyMarkRange = false } = options\n  const type = getMarkType(typeOrName, state.schema)\n  const isActive = isMarkActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.unsetMark(type, { extendEmptyMarkRange })\n  }\n\n  return commands.setMark(type, attributes)\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isNodeActive } from '../helpers/isNodeActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleNode: {\n      /**\n       * Toggle a node with another node.\n       */\n      toggleNode: (\n        typeOrName: string | NodeType,\n        toggleTypeOrName: string | NodeType,\n        attributes?: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const toggleNode: RawCommands['toggleNode'] = (typeOrName, toggleTypeOrName, attributes = {}) => ({ state, commands }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const toggleType = getNodeType(toggleTypeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.setNode(toggleType)\n  }\n\n  return commands.setNode(type, attributes)\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isNodeActive } from '../helpers/isNodeActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleWrap: {\n      /**\n       * Wraps nodes in another node, or removes an existing wrap.\n       */\n      toggleWrap: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const toggleWrap: RawCommands['toggleWrap'] = (typeOrName, attributes = {}) => ({ state, commands }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.lift(type)\n  }\n\n  return commands.wrapIn(type, attributes)\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    undoInputRule: {\n      /**\n       * Undo an input rule.\n       */\n      undoInputRule: () => ReturnType,\n    }\n  }\n}\n\nexport const undoInputRule: RawCommands['undoInputRule'] = () => ({ state, dispatch }) => {\n  const plugins = state.plugins\n\n  for (let i = 0; i < plugins.length; i += 1) {\n    const plugin = plugins[i]\n    let undoable\n\n    // @ts-ignore\n    // eslint-disable-next-line\n    if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n      if (dispatch) {\n        const tr = state.tr\n        const toUndo = undoable.transform\n\n        for (let j = toUndo.steps.length - 1; j >= 0; j -= 1) {\n          tr.step(toUndo.steps[j].invert(toUndo.docs[j]))\n        }\n\n        if (undoable.text) {\n          const marks = tr.doc.resolve(undoable.from).marks()\n\n          tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks))\n        } else {\n          tr.delete(undoable.from, undoable.to)\n        }\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    unsetAllMarks: {\n      /**\n       * Remove all marks in the current selection.\n       */\n      unsetAllMarks: () => ReturnType,\n    }\n  }\n}\n\nexport const unsetAllMarks: RawCommands['unsetAllMarks'] = () => ({ tr, dispatch }) => {\n  const { selection } = tr\n  const { empty, ranges } = selection\n\n  if (empty) {\n    return true\n  }\n\n  if (dispatch) {\n    ranges.forEach(range => {\n      tr.removeMark(range.$from.pos, range.$to.pos)\n    })\n  }\n\n  return true\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarkRange } from '../helpers/getMarkRange.js'\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    unsetMark: {\n      /**\n       * Remove all marks in the current selection.\n       */\n      unsetMark: (\n        typeOrName: string | MarkType,\n        options?: {\n          /**\n           * Removes the mark even across the current selection. Defaults to `false`.\n           */\n          extendEmptyMarkRange?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const unsetMark: RawCommands['unsetMark'] = (typeOrName, options = {}) => ({ tr, state, dispatch }) => {\n  const { extendEmptyMarkRange = false } = options\n  const { selection } = tr\n  const type = getMarkType(typeOrName, state.schema)\n  const { $from, empty, ranges } = selection\n\n  if (!dispatch) {\n    return true\n  }\n\n  if (empty && extendEmptyMarkRange) {\n    let { from, to } = selection\n    const attrs = $from.marks().find(mark => mark.type === type)?.attrs\n    const range = getMarkRange($from, type, attrs)\n\n    if (range) {\n      from = range.from\n      to = range.to\n    }\n\n    tr.removeMark(from, to, type)\n  } else {\n    ranges.forEach(range => {\n      tr.removeMark(range.$from.pos, range.$to.pos, type)\n    })\n  }\n\n  tr.removeStoredMark(type)\n\n  return true\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { getSchemaTypeNameByName } from '../helpers/getSchemaTypeNameByName.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    updateAttributes: {\n      /**\n       * Update attributes of a node or mark.\n       */\n      updateAttributes: (\n        typeOrName: string | NodeType | MarkType,\n        attributes: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const updateAttributes: RawCommands['updateAttributes'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  let nodeType: NodeType | null = null\n  let markType: MarkType | null = null\n\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (!schemaType) {\n    return false\n  }\n\n  if (schemaType === 'node') {\n    nodeType = getNodeType(typeOrName as NodeType, state.schema)\n  }\n\n  if (schemaType === 'mark') {\n    markType = getMarkType(typeOrName as MarkType, state.schema)\n  }\n\n  if (dispatch) {\n    tr.selection.ranges.forEach(range => {\n      const from = range.$from.pos\n      const to = range.$to.pos\n\n      state.doc.nodesBetween(from, to, (node, pos) => {\n        if (nodeType && nodeType === node.type) {\n          tr.setNodeMarkup(pos, undefined, {\n            ...node.attrs,\n            ...attributes,\n          })\n        }\n\n        if (markType && node.marks.length) {\n          node.marks.forEach(mark => {\n            if (markType === mark.type) {\n              const trimmedFrom = Math.max(pos, from)\n              const trimmedTo = Math.min(pos + node.nodeSize, to)\n\n              tr.addMark(\n                trimmedFrom,\n                trimmedTo,\n                markType.create({\n                  ...mark.attrs,\n                  ...attributes,\n                }),\n              )\n            }\n          })\n        }\n      })\n    })\n  }\n\n  return true\n}\n", "import { wrapIn as originalWrapIn } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    wrapIn: {\n      /**\n       * Wraps nodes in another node.\n       */\n      wrapIn: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const wrapIn: RawCommands['wrapIn'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalWrapIn(type, attributes)(state, dispatch)\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { wrapInList as originalWrapInList } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    wrapInList: {\n      /**\n       * Wrap a node in a list.\n       */\n      wrapInList: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const wrapInList: RawCommands['wrapInList'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalWrapInList(type, attributes)(state, dispatch)\n}\n", "import * as commands from '../commands/index.js'\nimport { Extension } from '../Extension.js'\n\nexport * from '../commands/index.js'\n\nexport const Commands = Extension.create({\n  name: 'commands',\n\n  addCommands() {\n    return {\n      ...commands,\n    }\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\n\nexport const Editable = Extension.create({\n  name: 'editable',\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('editable'),\n        props: {\n          editable: () => this.editor.options.editable,\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\n\nexport const FocusEvents = Extension.create({\n  name: 'focusEvents',\n\n  addProseMirrorPlugins() {\n    const { editor } = this\n\n    return [\n      new Plugin({\n        key: new PluginKey('focusEvents'),\n        props: {\n          handleDOMEvents: {\n            focus: (view, event: Event) => {\n              editor.isFocused = true\n\n              const transaction = editor.state.tr\n                .setMeta('focus', { event })\n                .setMeta('addToHistory', false)\n\n              view.dispatch(transaction)\n\n              return false\n            },\n            blur: (view, event: Event) => {\n              editor.isFocused = false\n\n              const transaction = editor.state.tr\n                .setMeta('blur', { event })\n                .setMeta('addToHistory', false)\n\n              view.dispatch(transaction)\n\n              return false\n            },\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey, Selection } from '@tiptap/pm/state'\n\nimport { CommandManager } from '../CommandManager.js'\nimport { Extension } from '../Extension.js'\nimport { createChainableState } from '../helpers/createChainableState.js'\nimport { isiOS } from '../utilities/isiOS.js'\nimport { isMacOS } from '../utilities/isMacOS.js'\n\nexport const Keymap = Extension.create({\n  name: 'keymap',\n\n  addKeyboardShortcuts() {\n    const handleBackspace = () => this.editor.commands.first(({ commands }) => [\n      () => commands.undoInputRule(),\n\n      // maybe convert first text block node to default node\n      () => commands.command(({ tr }) => {\n        const { selection, doc } = tr\n        const { empty, $anchor } = selection\n        const { pos, parent } = $anchor\n        const $parentPos = $anchor.parent.isTextblock ? tr.doc.resolve(pos - 1) : $anchor\n        const parentIsIsolating = $parentPos.parent.type.spec.isolating\n\n        const parentPos = $anchor.pos - $anchor.parentOffset\n\n        const isAtStart = (parentIsIsolating && $parentPos.parent.childCount === 1)\n          ? parentPos === $anchor.pos\n          : Selection.atStart(doc).from === pos\n\n        if (!empty || !isAtStart || !parent.type.isTextblock || parent.textContent.length) {\n          return false\n        }\n\n        return commands.clearNodes()\n      }),\n\n      () => commands.deleteSelection(),\n      () => commands.joinBackward(),\n      () => commands.selectNodeBackward(),\n    ])\n\n    const handleDelete = () => this.editor.commands.first(({ commands }) => [\n      () => commands.deleteSelection(),\n      () => commands.deleteCurrentNode(),\n      () => commands.joinForward(),\n      () => commands.selectNodeForward(),\n    ])\n\n    const handleEnter = () => this.editor.commands.first(({ commands }) => [\n      () => commands.newlineInCode(),\n      () => commands.createParagraphNear(),\n      () => commands.liftEmptyBlock(),\n      () => commands.splitBlock(),\n    ])\n\n    const baseKeymap = {\n      Enter: handleEnter,\n      'Mod-Enter': () => this.editor.commands.exitCode(),\n      Backspace: handleBackspace,\n      'Mod-Backspace': handleBackspace,\n      'Shift-Backspace': handleBackspace,\n      Delete: handleDelete,\n      'Mod-Delete': handleDelete,\n      'Mod-a': () => this.editor.commands.selectAll(),\n    }\n\n    const pcKeymap = {\n      ...baseKeymap,\n    }\n\n    const macKeymap = {\n      ...baseKeymap,\n      'Ctrl-h': handleBackspace,\n      'Alt-Backspace': handleBackspace,\n      'Ctrl-d': handleDelete,\n      'Ctrl-Alt-Backspace': handleDelete,\n      'Alt-Delete': handleDelete,\n      'Alt-d': handleDelete,\n      'Ctrl-a': () => this.editor.commands.selectTextblockStart(),\n      'Ctrl-e': () => this.editor.commands.selectTextblockEnd(),\n    }\n\n    if (isiOS() || isMacOS()) {\n      return macKeymap\n    }\n\n    return pcKeymap\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      // With this plugin we check if the whole document was selected and deleted.\n      // In this case we will additionally call `clearNodes()` to convert e.g. a heading\n      // to a paragraph if necessary.\n      // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well\n      // with many other commands.\n      new Plugin({\n        key: new PluginKey('clearDocument'),\n        appendTransaction: (transactions, oldState, newState) => {\n          const docChanges = transactions.some(transaction => transaction.docChanged)\n            && !oldState.doc.eq(newState.doc)\n\n          if (!docChanges) {\n            return\n          }\n\n          const { empty, from, to } = oldState.selection\n          const allFrom = Selection.atStart(oldState.doc).from\n          const allEnd = Selection.atEnd(oldState.doc).to\n          const allWasSelected = from === allFrom && to === allEnd\n\n          if (empty || !allWasSelected) {\n            return\n          }\n\n          const isEmpty = newState.doc.textBetween(0, newState.doc.content.size, ' ', ' ').length === 0\n\n          if (!isEmpty) {\n            return\n          }\n\n          const tr = newState.tr\n          const state = createChainableState({\n            state: newState,\n            transaction: tr,\n          })\n          const { commands } = new CommandManager({\n            editor: this.editor,\n            state,\n          })\n\n          commands.clearNodes()\n\n          if (!tr.steps.length) {\n            return\n          }\n\n          return tr\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\n\nexport const Tabindex = Extension.create({\n  name: 'tabindex',\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('tabindex'),\n        props: {\n          attributes: this.editor.isEditable ? { tabindex: '0' } : {},\n        },\n      }),\n    ]\n  },\n})\n", "import {\n  Fragment, Node, ResolvedPos,\n} from '@tiptap/pm/model'\n\nimport { Editor } from './Editor.js'\nimport { Content, Range } from './types.js'\n\nexport class NodePos {\n  private resolvedPos: ResolvedPos\n\n  private editor: Editor\n\n  constructor(pos: ResolvedPos, editor: Editor) {\n    this.resolvedPos = pos\n    this.editor = editor\n  }\n\n  get node(): Node {\n    return this.resolvedPos.node()\n  }\n\n  get element(): HTMLElement {\n    return this.editor.view.domAtPos(this.pos).node as HTMLElement\n  }\n\n  get depth(): number {\n    return this.resolvedPos.depth\n  }\n\n  get pos(): number {\n    return this.resolvedPos.pos\n  }\n\n  get content(): Fragment {\n    return this.node.content\n  }\n\n  set content(content: Content) {\n    this.editor.commands.insertContentAt({ from: this.from, to: this.to }, content)\n  }\n\n  get attributes() : { [key: string]: any } {\n    return this.node.attrs\n  }\n\n  get textContent(): string {\n    return this.node.textContent\n  }\n\n  get size(): number {\n    return this.node.nodeSize\n  }\n\n  get from(): number {\n    return this.resolvedPos.start(this.resolvedPos.depth)\n  }\n\n  get range(): Range {\n    return {\n      from: this.from,\n      to: this.to,\n    }\n  }\n\n  get to(): number {\n    return this.resolvedPos.end(this.resolvedPos.depth) + (this.node.isText ? 0 : 1)\n  }\n\n  get parent(): NodePos | null {\n    if (this.depth === 0) {\n      return null\n    }\n\n    const parentPos = this.resolvedPos.start(this.resolvedPos.depth - 1)\n    const $pos = this.resolvedPos.doc.resolve(parentPos)\n\n    return new NodePos($pos, this.editor)\n  }\n\n  get before(): NodePos | null {\n    let $pos = this.resolvedPos.doc.resolve(this.from - 2)\n\n    if ($pos.depth !== this.depth) {\n      $pos = this.resolvedPos.doc.resolve(this.from - 3)\n    }\n\n    return new NodePos($pos, this.editor)\n  }\n\n  get after(): NodePos | null {\n    let $pos = this.resolvedPos.doc.resolve(this.to + 2)\n\n    if ($pos.depth !== this.depth) {\n      $pos = this.resolvedPos.doc.resolve(this.to + 3)\n    }\n\n    return new NodePos($pos, this.editor)\n  }\n\n  get children(): NodePos[] {\n    const children: NodePos[] = []\n\n    this.node.content.forEach((node, offset) => {\n      const targetPos = this.pos + offset + 1\n      const $pos = this.resolvedPos.doc.resolve(targetPos)\n\n      if ($pos.depth === this.depth) {\n        return\n      }\n\n      children.push(new NodePos($pos, this.editor))\n    })\n\n    return children\n  }\n\n  get firstChild(): NodePos | null {\n    return this.children[0] || null\n  }\n\n  get lastChild(): NodePos | null {\n    const children = this.children\n\n    return children[children.length - 1] || null\n  }\n\n  closest(selector: string, attributes: { [key: string]: any } = {}): NodePos | null {\n    let node: NodePos | null = null\n    let currentNode = this.parent\n\n    while (currentNode && !node) {\n      if (currentNode.node.type.name === selector) {\n        if (Object.keys(attributes).length > 0) {\n          const nodeAttributes = currentNode.node.attrs\n          const attrKeys = Object.keys(attributes)\n\n          for (let index = 0; index < attrKeys.length; index += 1) {\n            const key = attrKeys[index]\n\n            if (nodeAttributes[key] !== attributes[key]) {\n              break\n            }\n          }\n        } else {\n          node = currentNode\n        }\n      }\n\n      currentNode = currentNode.parent\n    }\n\n    return node\n  }\n\n  querySelector(selector: string, attributes: { [key: string]: any } = {}): NodePos | null {\n    return this.querySelectorAll(selector, attributes, true)[0] || null\n  }\n\n  querySelectorAll(selector: string, attributes: { [key: string]: any } = {}, firstItemOnly = false): NodePos[] {\n    let nodes: NodePos[] = []\n\n    // iterate through children recursively finding all nodes which match the selector with the node name\n    if (!this.children || this.children.length === 0) {\n      return nodes\n    }\n\n    this.children.forEach(node => {\n      if (node.node.type.name === selector) {\n        if (Object.keys(attributes).length > 0) {\n          const nodeAttributes = node.node.attrs\n          const attrKeys = Object.keys(attributes)\n\n          for (let index = 0; index < attrKeys.length; index += 1) {\n            const key = attrKeys[index]\n\n            if (nodeAttributes[key] !== attributes[key]) {\n              return\n            }\n          }\n        }\n\n        nodes.push(node)\n\n        if (firstItemOnly) {\n          return\n        }\n      }\n\n      nodes = nodes.concat(node.querySelectorAll(selector))\n    })\n\n    return nodes\n  }\n\n  setAttribute(attributes: { [key: string]: any }) {\n    const oldSelection = this.editor.state.selection\n\n    this.editor.chain().setTextSelection(this.from).updateAttributes(this.node.type.name, attributes).setTextSelection(oldSelection.from)\n      .run()\n  }\n}\n", "export const style = `.ProseMirror {\n  position: relative;\n}\n\n.ProseMirror {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  white-space: break-spaces;\n  -webkit-font-variant-ligatures: none;\n  font-variant-ligatures: none;\n  font-feature-settings: \"liga\" 0; /* the above doesn't seem to work in Edge */\n}\n\n.ProseMirror [contenteditable=\"false\"] {\n  white-space: normal;\n}\n\n.ProseMirror [contenteditable=\"false\"] [contenteditable=\"true\"] {\n  white-space: pre-wrap;\n}\n\n.ProseMirror pre {\n  white-space: pre-wrap;\n}\n\nimg.ProseMirror-separator {\n  display: inline !important;\n  border: none !important;\n  margin: 0 !important;\n  width: 1px !important;\n  height: 1px !important;\n}\n\n.ProseMirror-gapcursor {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n  margin: 0;\n}\n\n.ProseMirror-gapcursor:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: -2px;\n  width: 20px;\n  border-top: 1px solid black;\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n}\n\n@keyframes ProseMirror-cursor-blink {\n  to {\n    visibility: hidden;\n  }\n}\n\n.ProseMirror-hideselection *::selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection *::-moz-selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection * {\n  caret-color: transparent;\n}\n\n.ProseMirror-focused .ProseMirror-gapcursor {\n  display: block;\n}\n\n.tippy-box[data-animation=fade][data-state=hidden] {\n  opacity: 0\n}`\n", "export function createStyleTag(style: string, nonce?: string, suffix?: string): HTMLStyleElement {\n  const tiptapStyleTag = (<HTMLStyleElement>document.querySelector(`style[data-tiptap-style${suffix ? `-${suffix}` : ''}]`))\n\n  if (tiptapStyleTag !== null) {\n    return tiptapStyleTag\n  }\n\n  const styleNode = document.createElement('style')\n\n  if (nonce) {\n    styleNode.setAttribute('nonce', nonce)\n  }\n\n  styleNode.setAttribute(`data-tiptap-style${suffix ? `-${suffix}` : ''}`, '')\n  styleNode.innerHTML = style\n  document.getElementsByTagName('head')[0].appendChild(styleNode)\n\n  return styleNode\n}\n", "import {\n  MarkType, NodeType, Schema,\n} from '@tiptap/pm/model'\nimport {\n  EditorState, Plugin, PluginKey, Transaction,\n} from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\n\nimport { CommandManager } from './CommandManager.js'\nimport { EventEmitter } from './EventEmitter.js'\nimport { ExtensionManager } from './ExtensionManager.js'\nimport * as extensions from './extensions/index.js'\nimport { createDocument } from './helpers/createDocument.js'\nimport { getAttributes } from './helpers/getAttributes.js'\nimport { getHTMLFromFragment } from './helpers/getHTMLFromFragment.js'\nimport { getText } from './helpers/getText.js'\nimport { getTextSerializersFromSchema } from './helpers/getTextSerializersFromSchema.js'\nimport { isActive } from './helpers/isActive.js'\nimport { isNodeEmpty } from './helpers/isNodeEmpty.js'\nimport { resolveFocusPosition } from './helpers/resolveFocusPosition.js'\nimport { NodePos } from './NodePos.js'\nimport { style } from './style.js'\nimport {\n  CanCommands,\n  ChainedCommands,\n  EditorEvents,\n  EditorOptions,\n  JSONContent,\n  SingleCommands,\n  TextSerializer,\n} from './types.js'\nimport { createStyleTag } from './utilities/createStyleTag.js'\nimport { isFunction } from './utilities/isFunction.js'\n\nexport { extensions }\n\nexport interface HTMLElement {\n  editor?: Editor\n}\n\nexport class Editor extends EventEmitter<EditorEvents> {\n  private commandManager!: CommandManager\n\n  public extensionManager!: ExtensionManager\n\n  private css!: HTMLStyleElement\n\n  public schema!: Schema\n\n  public view!: EditorView\n\n  public isFocused = false\n\n  public extensionStorage: Record<string, any> = {}\n\n  public options: EditorOptions = {\n    element: document.createElement('div'),\n    content: '',\n    injectCSS: true,\n    injectNonce: undefined,\n    extensions: [],\n    autofocus: false,\n    editable: true,\n    editorProps: {},\n    parseOptions: {},\n    enableInputRules: true,\n    enablePasteRules: true,\n    enableCoreExtensions: true,\n    onBeforeCreate: () => null,\n    onCreate: () => null,\n    onUpdate: () => null,\n    onSelectionUpdate: () => null,\n    onTransaction: () => null,\n    onFocus: () => null,\n    onBlur: () => null,\n    onDestroy: () => null,\n  }\n\n  constructor(options: Partial<EditorOptions> = {}) {\n    super()\n    this.setOptions(options)\n    this.createExtensionManager()\n    this.createCommandManager()\n    this.createSchema()\n    this.on('beforeCreate', this.options.onBeforeCreate)\n    this.emit('beforeCreate', { editor: this })\n    this.createView()\n    this.injectCSS()\n    this.on('create', this.options.onCreate)\n    this.on('update', this.options.onUpdate)\n    this.on('selectionUpdate', this.options.onSelectionUpdate)\n    this.on('transaction', this.options.onTransaction)\n    this.on('focus', this.options.onFocus)\n    this.on('blur', this.options.onBlur)\n    this.on('destroy', this.options.onDestroy)\n\n    window.setTimeout(() => {\n      if (this.isDestroyed) {\n        return\n      }\n\n      this.commands.focus(this.options.autofocus)\n      this.emit('create', { editor: this })\n    }, 0)\n  }\n\n  /**\n   * Returns the editor storage.\n   */\n  public get storage(): Record<string, any> {\n    return this.extensionStorage\n  }\n\n  /**\n   * An object of all registered commands.\n   */\n  public get commands(): SingleCommands {\n    return this.commandManager.commands\n  }\n\n  /**\n   * Create a command chain to call multiple commands at once.\n   */\n  public chain(): ChainedCommands {\n    return this.commandManager.chain()\n  }\n\n  /**\n   * Check if a command or a command chain can be executed. Without executing it.\n   */\n  public can(): CanCommands {\n    return this.commandManager.can()\n  }\n\n  /**\n   * Inject CSS styles.\n   */\n  private injectCSS(): void {\n    if (this.options.injectCSS && document) {\n      this.css = createStyleTag(style, this.options.injectNonce)\n    }\n  }\n\n  /**\n   * Update editor options.\n   *\n   * @param options A list of options\n   */\n  public setOptions(options: Partial<EditorOptions> = {}): void {\n    this.options = {\n      ...this.options,\n      ...options,\n    }\n\n    if (!this.view || !this.state || this.isDestroyed) {\n      return\n    }\n\n    if (this.options.editorProps) {\n      this.view.setProps(this.options.editorProps)\n    }\n\n    this.view.updateState(this.state)\n  }\n\n  /**\n   * Update editable state of the editor.\n   */\n  public setEditable(editable: boolean, emitUpdate = true): void {\n    this.setOptions({ editable })\n\n    if (emitUpdate) {\n      this.emit('update', { editor: this, transaction: this.state.tr })\n    }\n  }\n\n  /**\n   * Returns whether the editor is editable.\n   */\n  public get isEditable(): boolean {\n    // since plugins are applied after creating the view\n    // `editable` is always `true` for one tick.\n    // that’s why we also have to check for `options.editable`\n    return this.options.editable && this.view && this.view.editable\n  }\n\n  /**\n   * Returns the editor state.\n   */\n  public get state(): EditorState {\n    return this.view.state\n  }\n\n  /**\n   * Register a ProseMirror plugin.\n   *\n   * @param plugin A ProseMirror plugin\n   * @param handlePlugins Control how to merge the plugin into the existing plugins.\n   */\n  public registerPlugin(\n    plugin: Plugin,\n    handlePlugins?: (newPlugin: Plugin, plugins: Plugin[]) => Plugin[],\n  ): void {\n    const plugins = isFunction(handlePlugins)\n      ? handlePlugins(plugin, [...this.state.plugins])\n      : [...this.state.plugins, plugin]\n\n    const state = this.state.reconfigure({ plugins })\n\n    this.view.updateState(state)\n  }\n\n  /**\n   * Unregister a ProseMirror plugin.\n   *\n   * @param nameOrPluginKey The plugins name\n   */\n  public unregisterPlugin(nameOrPluginKey: string | PluginKey): void {\n    if (this.isDestroyed) {\n      return\n    }\n\n    // @ts-ignore\n    const name = typeof nameOrPluginKey === 'string' ? `${nameOrPluginKey}$` : nameOrPluginKey.key\n\n    const state = this.state.reconfigure({\n      // @ts-ignore\n      plugins: this.state.plugins.filter(plugin => !plugin.key.startsWith(name)),\n    })\n\n    this.view.updateState(state)\n  }\n\n  /**\n   * Creates an extension manager.\n   */\n  private createExtensionManager(): void {\n    const coreExtensions = this.options.enableCoreExtensions ? Object.values(extensions) : []\n    const allExtensions = [...coreExtensions, ...this.options.extensions].filter(extension => {\n      return ['extension', 'node', 'mark'].includes(extension?.type)\n    })\n\n    this.extensionManager = new ExtensionManager(allExtensions, this)\n  }\n\n  /**\n   * Creates an command manager.\n   */\n  private createCommandManager(): void {\n    this.commandManager = new CommandManager({\n      editor: this,\n    })\n  }\n\n  /**\n   * Creates a ProseMirror schema.\n   */\n  private createSchema(): void {\n    this.schema = this.extensionManager.schema\n  }\n\n  /**\n   * Creates a ProseMirror view.\n   */\n  private createView(): void {\n    const doc = createDocument(this.options.content, this.schema, this.options.parseOptions)\n    const selection = resolveFocusPosition(doc, this.options.autofocus)\n\n    this.view = new EditorView(this.options.element, {\n      ...this.options.editorProps,\n      dispatchTransaction: this.dispatchTransaction.bind(this),\n      state: EditorState.create({\n        doc,\n        selection: selection || undefined,\n      }),\n    })\n\n    // `editor.view` is not yet available at this time.\n    // Therefore we will add all plugins and node views directly afterwards.\n    const newState = this.state.reconfigure({\n      plugins: this.extensionManager.plugins,\n    })\n\n    this.view.updateState(newState)\n\n    this.createNodeViews()\n    this.prependClass()\n\n    // Let’s store the editor instance in the DOM element.\n    // So we’ll have access to it for tests.\n    const dom = this.view.dom as HTMLElement\n\n    dom.editor = this\n  }\n\n  /**\n   * Creates all node views.\n   */\n  public createNodeViews(): void {\n    this.view.setProps({\n      nodeViews: this.extensionManager.nodeViews,\n    })\n  }\n\n  /**\n   * Prepend class name to element.\n   */\n  public prependClass(): void {\n    this.view.dom.className = `tiptap ${this.view.dom.className}`\n  }\n\n  public isCapturingTransaction = false\n\n  private capturedTransaction: Transaction | null = null\n\n  public captureTransaction(fn: Function) {\n    this.isCapturingTransaction = true\n    fn()\n    this.isCapturingTransaction = false\n\n    const tr = this.capturedTransaction\n\n    this.capturedTransaction = null\n\n    return tr\n  }\n\n  /**\n   * The callback over which to send transactions (state updates) produced by the view.\n   *\n   * @param transaction An editor state transaction\n   */\n  private dispatchTransaction(transaction: Transaction): void {\n    // if the editor / the view of the editor was destroyed\n    // the transaction should not be dispatched as there is no view anymore.\n    if (this.view.isDestroyed) {\n      return\n    }\n\n    if (this.isCapturingTransaction) {\n      if (!this.capturedTransaction) {\n        this.capturedTransaction = transaction\n\n        return\n      }\n\n      transaction.steps.forEach(step => this.capturedTransaction?.step(step))\n\n      return\n    }\n\n    const state = this.state.apply(transaction)\n    const selectionHasChanged = !this.state.selection.eq(state.selection)\n\n    this.view.updateState(state)\n    this.emit('transaction', {\n      editor: this,\n      transaction,\n    })\n\n    if (selectionHasChanged) {\n      this.emit('selectionUpdate', {\n        editor: this,\n        transaction,\n      })\n    }\n\n    const focus = transaction.getMeta('focus')\n    const blur = transaction.getMeta('blur')\n\n    if (focus) {\n      this.emit('focus', {\n        editor: this,\n        event: focus.event,\n        transaction,\n      })\n    }\n\n    if (blur) {\n      this.emit('blur', {\n        editor: this,\n        event: blur.event,\n        transaction,\n      })\n    }\n\n    if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n      return\n    }\n\n    this.emit('update', {\n      editor: this,\n      transaction,\n    })\n  }\n\n  /**\n   * Get attributes of the currently selected node or mark.\n   */\n  public getAttributes(nameOrType: string | NodeType | MarkType): Record<string, any> {\n    return getAttributes(this.state, nameOrType)\n  }\n\n  /**\n   * Returns if the currently selected node or mark is active.\n   *\n   * @param name Name of the node or mark\n   * @param attributes Attributes of the node or mark\n   */\n  public isActive(name: string, attributes?: {}): boolean\n  public isActive(attributes: {}): boolean\n  public isActive(nameOrAttributes: string, attributesOrUndefined?: {}): boolean {\n    const name = typeof nameOrAttributes === 'string' ? nameOrAttributes : null\n\n    const attributes = typeof nameOrAttributes === 'string' ? attributesOrUndefined : nameOrAttributes\n\n    return isActive(this.state, name, attributes)\n  }\n\n  /**\n   * Get the document as JSON.\n   */\n  public getJSON(): JSONContent {\n    return this.state.doc.toJSON()\n  }\n\n  /**\n   * Get the document as HTML.\n   */\n  public getHTML(): string {\n    return getHTMLFromFragment(this.state.doc.content, this.schema)\n  }\n\n  /**\n   * Get the document as text.\n   */\n  public getText(options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  }): string {\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n\n    return getText(this.state.doc, {\n      blockSeparator,\n      textSerializers: {\n        ...getTextSerializersFromSchema(this.schema),\n        ...textSerializers,\n      },\n    })\n  }\n\n  /**\n   * Check if there is no content.\n   */\n  public get isEmpty(): boolean {\n    return isNodeEmpty(this.state.doc)\n  }\n\n  /**\n   * Get the number of characters for the current document.\n   *\n   * @deprecated\n   */\n  public getCharacterCount(): number {\n    console.warn(\n      '[tiptap warn]: \"editor.getCharacterCount()\" is deprecated. Please use \"editor.storage.characterCount.characters()\" instead.',\n    )\n\n    return this.state.doc.content.size - 2\n  }\n\n  /**\n   * Destroy the editor.\n   */\n  public destroy(): void {\n    this.emit('destroy')\n\n    if (this.view) {\n      this.view.destroy()\n    }\n\n    this.removeAllListeners()\n  }\n\n  /**\n   * Check if the editor is already destroyed.\n   */\n  public get isDestroyed(): boolean {\n    // @ts-ignore\n    return !this.view?.docView\n  }\n\n  public $node(selector: string, attributes?: { [key: string]: any }): NodePos | null {\n    return this.$doc?.querySelector(selector, attributes) || null\n  }\n\n  public $nodes(selector: string, attributes?: { [key: string]: any }): NodePos[] | null {\n    return this.$doc?.querySelectorAll(selector, attributes) || null\n  }\n\n  public $pos(pos: number) {\n    const $pos = this.state.doc.resolve(pos)\n\n    return new NodePos($pos, this)\n  }\n\n  get $doc() {\n    return this.$pos(0)\n  }\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarksBetween } from '../helpers/getMarksBetween.js'\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule that adds a mark when the\n * matched text is typed into it.\n */\nexport function markInputRule(config: {\n  find: InputRuleFinder\n  type: MarkType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      const { tr } = state\n      const captureGroup = match[match.length - 1]\n      const fullMatch = match[0]\n\n      if (captureGroup) {\n        const startSpaces = fullMatch.search(/\\S/)\n        const textStart = range.from + fullMatch.indexOf(captureGroup)\n        const textEnd = textStart + captureGroup.length\n\n        const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n          .filter(item => {\n            // @ts-ignore\n            const excluded = item.mark.type.excluded as MarkType[]\n\n            return excluded.find(type => type === config.type && type !== item.mark.type)\n          })\n          .filter(item => item.to > textStart)\n\n        if (excludedMarks.length) {\n          return null\n        }\n\n        if (textEnd < range.to) {\n          tr.delete(textEnd, range.to)\n        }\n\n        if (textStart > range.from) {\n          tr.delete(range.from + startSpaces, textStart)\n        }\n\n        const markEnd = range.from + startSpaces + captureGroup.length\n\n        tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}))\n\n        tr.removeStoredMark(config.type)\n      }\n    },\n  })\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule that adds a node when the\n * matched text is typed into it.\n */\nexport function nodeInputRule(config: {\n  /**\n   * The regex to match.\n   */\n  find: InputRuleFinder\n\n  /**\n   * The node type to add.\n   */\n  type: NodeType\n\n  /**\n   * A function that returns the attributes for the node\n   * can also be an object of attributes\n   */\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n      const { tr } = state\n      const start = range.from\n      let end = range.to\n\n      const newNode = config.type.create(attributes)\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n        let matchStart = start + offset\n\n        if (matchStart > end) {\n          matchStart = end\n        } else {\n          end = matchStart + match[1].length\n        }\n\n        // insert last typed character\n        const lastChar = match[0][match[0].length - 1]\n\n        tr.insertText(lastChar, start + match[0].length - 1)\n\n        // insert node from input rule\n        tr.replaceWith(matchStart, end, newNode)\n      } else if (match[0]) {\n        tr.insert(start - 1, config.type.create(attributes)).delete(\n          tr.mapping.map(start),\n          tr.mapping.map(end),\n        )\n      }\n\n      tr.scrollIntoView()\n    },\n  })\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule that changes the type of a textblock when the\n * matched text is typed into it. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n */\nexport function textblockTypeInputRule(config: {\n  find: InputRuleFinder\n  type: NodeType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const $start = state.doc.resolve(range.from)\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n\n      if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), config.type)) {\n        return null\n      }\n\n      state.tr\n        .delete(range.from, range.to)\n        .setBlockType(range.from, range.from, config.type, attributes)\n    },\n  })\n}\n", "import { InputRule, InputRuleFinder } from '../InputRule.js'\n\n/**\n * Build an input rule that replaces text when the\n * matched text is typed into it.\n */\nexport function textInputRule(config: {\n  find: InputRuleFinder,\n  replace: string,\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      let insert = config.replace\n      let start = range.from\n      const end = range.to\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n\n        insert += match[0].slice(offset + match[1].length)\n        start += offset\n\n        const cutOff = start - end\n\n        if (cutOff > 0) {\n          insert = match[0].slice(offset - cutOff, offset) + insert\n          start = end\n        }\n      }\n\n      state.tr.insertText(insert, start, end)\n    },\n  })\n}\n", "import { Node as ProseMirrorNode, NodeType } from '@tiptap/pm/model'\nimport { canJoin, findWrapping } from '@tiptap/pm/transform'\n\nimport { Editor } from '../Editor.js'\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule for automatically wrapping a textblock when a\n * given string is typed. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n *\n * `type` is the type of node to wrap in.\n *\n * By default, if there’s a node with the same type above the newly\n * wrapped node, the rule will try to join those\n * two nodes. You can pass a join predicate, which takes a regular\n * expression match and the node before the wrapped node, and can\n * return a boolean to indicate whether a join should happen.\n */\nexport function wrappingInputRule(config: {\n  find: InputRuleFinder,\n  type: NodeType,\n  keepMarks?: boolean,\n  keepAttributes?: boolean,\n  editor?: Editor\n  getAttributes?:\n  | Record<string, any>\n  | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n  | false\n  | null\n  ,\n  joinPredicate?: (match: ExtendedRegExpMatchArray, node: ProseMirrorNode) => boolean,\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({\n      state, range, match, chain,\n    }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n      const tr = state.tr.delete(range.from, range.to)\n      const $start = tr.doc.resolve(range.from)\n      const blockRange = $start.blockRange()\n      const wrapping = blockRange && findWrapping(blockRange, config.type, attributes)\n\n      if (!wrapping) {\n        return null\n      }\n\n      tr.wrap(blockRange, wrapping)\n\n      if (config.keepMarks && config.editor) {\n        const { selection, storedMarks } = state\n        const { splittableMarks } = config.editor.extensionManager\n        const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n        if (marks) {\n          const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n          tr.ensureMarks(filteredMarks)\n        }\n      }\n      if (config.keepAttributes) {\n        /** If the nodeType is `bulletList` or `orderedList` set the `nodeType` as `listItem` */\n        const nodeType = config.type.name === 'bulletList' || config.type.name === 'orderedList' ? 'listItem' : 'taskList'\n\n        chain().updateAttributes(nodeType, attributes).run()\n      }\n\n      const before = tr.doc.resolve(range.from - 1).nodeBefore\n\n      if (\n        before\n        && before.type === config.type\n        && canJoin(tr.doc, range.from - 1)\n        && (!config.joinPredicate || config.joinPredicate(match, before))\n      ) {\n        tr.join(range.from - 1)\n      }\n    },\n  })\n}\n", "import {\n  DOMOutputSpec, Mark as ProseMirrorMark, MarkSpec, MarkType,\n} from '@tiptap/pm/model'\nimport { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { MarkConfig } from './index.js'\nimport { InputRule } from './InputRule.js'\nimport { Node } from './Node.js'\nimport { PasteRule } from './PasteRule.js'\nimport {\n  AnyConfig,\n  Attributes,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  ParentConfig,\n  RawCommands,\n} from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { mergeDeep } from './utilities/mergeDeep.js'\n\ndeclare module '@tiptap/core' {\n  export interface MarkConfig<Options = any, Storage = any> {\n    [key: string]: any\n\n    /**\n     * Name\n     */\n    name: string\n\n    /**\n     * Priority\n     */\n    priority?: number\n\n    /**\n     * Default options\n     */\n    defaultOptions?: Options\n\n    /**\n     * Default Options\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<MarkConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * Default Storage\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<MarkConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * Global attributes\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes | {}\n\n    /**\n     * Raw\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * Keyboard shortcuts\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * Input rules\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * Paste rules\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * ProseMirror plugins\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * Extensions\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * Extend Node Schema\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * Extend Mark Schema\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['extendMarkSchema']\n          },\n          extension: Mark,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn’t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n\n    /**\n     * Keep mark after split node\n     */\n    keepOnSplit?: boolean | (() => boolean)\n\n    /**\n     * Inclusive\n     */\n    inclusive?:\n      | MarkSpec['inclusive']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['inclusive']\n          editor?: Editor\n        }) => MarkSpec['inclusive'])\n\n    /**\n     * Excludes\n     */\n    excludes?:\n      | MarkSpec['excludes']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['excludes']\n          editor?: Editor\n        }) => MarkSpec['excludes'])\n\n    /**\n     * Marks this Mark as exitable\n     */\n    exitable?: boolean | (() => boolean)\n\n    /**\n     * Group\n     */\n    group?:\n      | MarkSpec['group']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['group']\n          editor?: Editor\n        }) => MarkSpec['group'])\n\n    /**\n     * Spanning\n     */\n    spanning?:\n      | MarkSpec['spanning']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['spanning']\n          editor?: Editor\n        }) => MarkSpec['spanning'])\n\n    /**\n     * Code\n     */\n    code?:\n      | boolean\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['code']\n          editor?: Editor\n        }) => boolean)\n\n    /**\n     * Parse HTML\n     */\n    parseHTML?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['parseHTML']\n      editor?: Editor\n    }) => MarkSpec['parseDOM']\n\n    /**\n     * Render HTML\n     */\n    renderHTML?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['renderHTML']\n            editor?: Editor\n          },\n          props: {\n            mark: ProseMirrorMark\n            HTMLAttributes: Record<string, any>\n          },\n        ) => DOMOutputSpec)\n      | null\n\n    /**\n     * Attributes\n     */\n    addAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addAttributes']\n      editor?: Editor\n    }) => Attributes | {}\n  }\n}\n\nexport class Mark<Options = any, Storage = any> {\n  type = 'mark'\n\n  name = 'mark'\n\n  parent: Mark | null = null\n\n  child: Mark | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: MarkConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<MarkConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<MarkConfig<O, S>> = {}) {\n    return new Mark<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend()\n\n    extension.options = mergeDeep(this.options as Record<string, any>, options) as Options\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<MarkConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Mark<ExtendedOptions, ExtendedStorage>({ ...this.config, ...extendedConfig })\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  static handleExit({ editor, mark }: { editor: Editor; mark: Mark }) {\n    const { tr } = editor.state\n    const currentPos = editor.state.selection.$from\n    const isAtEnd = currentPos.pos === currentPos.end()\n\n    if (isAtEnd) {\n      const currentMarks = currentPos.marks()\n      const isInMark = !!currentMarks.find(m => m?.type.name === mark.name)\n\n      if (!isInMark) {\n        return false\n      }\n\n      const removeMark = currentMarks.find(m => m?.type.name === mark.name)\n\n      if (removeMark) {\n        tr.removeStoredMark(removeMark)\n      }\n      tr.insertText(' ', currentPos.pos)\n\n      editor.view.dispatch(tr)\n\n      return true\n    }\n\n    return false\n  }\n}\n", "import {\n  DOMOutputSpec, Node as ProseMirrorNode, NodeSpec, NodeType,\n} from '@tiptap/pm/model'\nimport { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { NodeConfig } from './index.js'\nimport { InputRule } from './InputRule.js'\nimport { PasteRule } from './PasteRule.js'\nimport {\n  AnyConfig,\n  Attributes,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  NodeViewRenderer,\n  ParentConfig,\n  RawCommands,\n} from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { mergeDeep } from './utilities/mergeDeep.js'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options = any, Storage = any> {\n    [key: string]: any\n\n    /**\n     * Name\n     */\n    name: string\n\n    /**\n     * Priority\n     */\n    priority?: number\n\n    /**\n     * Default options\n     */\n    defaultOptions?: Options\n\n    /**\n     * Default Options\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<NodeConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * Default Storage\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<NodeConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * Global attributes\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes | {}\n\n    /**\n     * Raw\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * Keyboard shortcuts\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * Input rules\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * Paste rules\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * ProseMirror plugins\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * Extensions\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * Extend Node Schema\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * Extend Mark Schema\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['extendMarkSchema']\n            editor?: Editor\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn’t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n\n    /**\n     * Node View\n     */\n    addNodeView?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['addNodeView']\n        }) => NodeViewRenderer)\n      | null\n\n    /**\n     * TopNode\n     */\n    topNode?: boolean\n\n    /**\n     * Content\n     */\n    content?:\n      | NodeSpec['content']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['content']\n          editor?: Editor\n        }) => NodeSpec['content'])\n\n    /**\n     * Marks\n     */\n    marks?:\n      | NodeSpec['marks']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['marks']\n          editor?: Editor\n        }) => NodeSpec['marks'])\n\n    /**\n     * Group\n     */\n    group?:\n      | NodeSpec['group']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['group']\n          editor?: Editor\n        }) => NodeSpec['group'])\n\n    /**\n     * Inline\n     */\n    inline?:\n      | NodeSpec['inline']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['inline']\n          editor?: Editor\n        }) => NodeSpec['inline'])\n\n    /**\n     * Atom\n     */\n    atom?:\n      | NodeSpec['atom']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['atom']\n          editor?: Editor\n        }) => NodeSpec['atom'])\n\n    /**\n     * Selectable\n     */\n    selectable?:\n      | NodeSpec['selectable']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['selectable']\n          editor?: Editor\n        }) => NodeSpec['selectable'])\n\n    /**\n     * Draggable\n     */\n    draggable?:\n      | NodeSpec['draggable']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['draggable']\n          editor?: Editor\n        }) => NodeSpec['draggable'])\n\n    /**\n     * Code\n     */\n    code?:\n      | NodeSpec['code']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['code']\n          editor?: Editor\n        }) => NodeSpec['code'])\n\n    /**\n     * Whitespace\n     */\n    whitespace?:\n      | NodeSpec['whitespace']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['whitespace']\n          editor?: Editor\n        }) => NodeSpec['whitespace'])\n\n    /**\n     * Defining\n     */\n    defining?:\n      | NodeSpec['defining']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['defining']\n          editor?: Editor\n        }) => NodeSpec['defining'])\n\n    /**\n     * Isolating\n     */\n    isolating?:\n      | NodeSpec['isolating']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['isolating']\n          editor?: Editor\n        }) => NodeSpec['isolating'])\n\n    /**\n     * Parse HTML\n     */\n    parseHTML?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['parseHTML']\n      editor?: Editor\n    }) => NodeSpec['parseDOM']\n\n    /**\n     * Render HTML\n     */\n    renderHTML?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['renderHTML']\n            editor?: Editor\n          },\n          props: {\n            node: ProseMirrorNode\n            HTMLAttributes: Record<string, any>\n          },\n        ) => DOMOutputSpec)\n      | null\n\n    /**\n     * Render Text\n     */\n    renderText?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['renderText']\n            editor?: Editor\n          },\n          props: {\n            node: ProseMirrorNode\n            pos: number\n            parent: ProseMirrorNode\n            index: number\n          },\n        ) => string)\n      | null\n\n    /**\n     * Add Attributes\n     */\n    addAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addAttributes']\n      editor?: Editor\n    }) => Attributes | {}\n  }\n}\n\nexport class Node<Options = any, Storage = any> {\n  type = 'node'\n\n  name = 'node'\n\n  parent: Node | null = null\n\n  child: Node | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: NodeConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<NodeConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<NodeConfig<O, S>> = {}) {\n    return new Node<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend()\n\n    extension.options = mergeDeep(this.options as Record<string, any>, options) as Options\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<NodeConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Node<ExtendedOptions, ExtendedStorage>({ ...this.config, ...extendedConfig })\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n}\n", "export function isAndroid(): boolean {\n  return navigator.platform === 'Android' || /android/i.test(navigator.userAgent)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { NodeSelection } from '@tiptap/pm/state'\nimport { NodeView as ProseMirrorNodeView } from '@tiptap/pm/view'\n\nimport { Editor as CoreEditor } from './Editor.js'\nimport { Node } from './Node.js'\nimport { DecorationWithType, NodeViewRendererOptions, NodeViewRendererProps } from './types.js'\nimport { isAndroid } from './utilities/isAndroid.js'\nimport { isiOS } from './utilities/isiOS.js'\n\nexport class NodeView<\n  Component,\n  NodeEditor extends CoreEditor = CoreEditor,\n  Options extends NodeViewRendererOptions = NodeViewRendererOptions,\n> implements ProseMirrorNodeView {\n  component: Component\n\n  editor: NodeEditor\n\n  options: Options\n\n  extension: Node\n\n  node: ProseMirrorNode\n\n  decorations: DecorationWithType[]\n\n  getPos: any\n\n  isDragging = false\n\n  constructor(component: Component, props: NodeViewRendererProps, options?: Partial<Options>) {\n    this.component = component\n    this.editor = props.editor as NodeEditor\n    this.options = {\n      stopEvent: null,\n      ignoreMutation: null,\n      ...options,\n    } as Options\n    this.extension = props.extension\n    this.node = props.node\n    this.decorations = props.decorations as DecorationWithType[]\n    this.getPos = props.getPos\n    this.mount()\n  }\n\n  mount() {\n    // eslint-disable-next-line\n    return\n  }\n\n  get dom(): HTMLElement {\n    return this.editor.view.dom as HTMLElement\n  }\n\n  get contentDOM(): HTMLElement | null {\n    return null\n  }\n\n  onDragStart(event: DragEvent) {\n    const { view } = this.editor\n    const target = event.target as HTMLElement\n\n    // get the drag handle element\n    // `closest` is not available for text nodes so we may have to use its parent\n    const dragHandle = target.nodeType === 3\n      ? target.parentElement?.closest('[data-drag-handle]')\n      : target.closest('[data-drag-handle]')\n\n    if (!this.dom || this.contentDOM?.contains(target) || !dragHandle) {\n      return\n    }\n\n    let x = 0\n    let y = 0\n\n    // calculate offset for drag element if we use a different drag handle element\n    if (this.dom !== dragHandle) {\n      const domBox = this.dom.getBoundingClientRect()\n      const handleBox = dragHandle.getBoundingClientRect()\n\n      // In React, we have to go through nativeEvent to reach offsetX/offsetY.\n      const offsetX = event.offsetX ?? (event as any).nativeEvent?.offsetX\n      const offsetY = event.offsetY ?? (event as any).nativeEvent?.offsetY\n\n      x = handleBox.x - domBox.x + offsetX\n      y = handleBox.y - domBox.y + offsetY\n    }\n\n    event.dataTransfer?.setDragImage(this.dom, x, y)\n\n    // we need to tell ProseMirror that we want to move the whole node\n    // so we create a NodeSelection\n    const selection = NodeSelection.create(view.state.doc, this.getPos())\n    const transaction = view.state.tr.setSelection(selection)\n\n    view.dispatch(transaction)\n  }\n\n  stopEvent(event: Event) {\n    if (!this.dom) {\n      return false\n    }\n\n    if (typeof this.options.stopEvent === 'function') {\n      return this.options.stopEvent({ event })\n    }\n\n    const target = event.target as HTMLElement\n    const isInElement = this.dom.contains(target) && !this.contentDOM?.contains(target)\n\n    // any event from child nodes should be handled by ProseMirror\n    if (!isInElement) {\n      return false\n    }\n\n    const isDragEvent = event.type.startsWith('drag')\n    const isDropEvent = event.type === 'drop'\n    const isInput = ['INPUT', 'BUTTON', 'SELECT', 'TEXTAREA'].includes(target.tagName) || target.isContentEditable\n\n    // any input event within node views should be ignored by ProseMirror\n    if (isInput && !isDropEvent && !isDragEvent) {\n      return true\n    }\n\n    const { isEditable } = this.editor\n    const { isDragging } = this\n    const isDraggable = !!this.node.type.spec.draggable\n    const isSelectable = NodeSelection.isSelectable(this.node)\n    const isCopyEvent = event.type === 'copy'\n    const isPasteEvent = event.type === 'paste'\n    const isCutEvent = event.type === 'cut'\n    const isClickEvent = event.type === 'mousedown'\n\n    // ProseMirror tries to drag selectable nodes\n    // even if `draggable` is set to `false`\n    // this fix prevents that\n    if (!isDraggable && isSelectable && isDragEvent) {\n      event.preventDefault()\n    }\n\n    if (isDraggable && isDragEvent && !isDragging) {\n      event.preventDefault()\n      return false\n    }\n\n    // we have to store that dragging started\n    if (isDraggable && isEditable && !isDragging && isClickEvent) {\n      const dragHandle = target.closest('[data-drag-handle]')\n      const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle))\n\n      if (isValidDragHandle) {\n        this.isDragging = true\n\n        document.addEventListener(\n          'dragend',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n\n        document.addEventListener(\n          'drop',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n\n        document.addEventListener(\n          'mouseup',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n      }\n    }\n\n    // these events are handled by prosemirror\n    if (\n      isDragging\n      || isDropEvent\n      || isCopyEvent\n      || isPasteEvent\n      || isCutEvent\n      || (isClickEvent && isSelectable)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  ignoreMutation(mutation: MutationRecord | { type: 'selection'; target: Element }) {\n    if (!this.dom || !this.contentDOM) {\n      return true\n    }\n\n    if (typeof this.options.ignoreMutation === 'function') {\n      return this.options.ignoreMutation({ mutation })\n    }\n\n    // a leaf/atom node is like a black box for ProseMirror\n    // and should be fully handled by the node view\n    if (this.node.isLeaf || this.node.isAtom) {\n      return true\n    }\n\n    // ProseMirror should handle any selections\n    if (mutation.type === 'selection') {\n      return false\n    }\n\n    // try to prevent a bug on iOS and Android that will break node views on enter\n    // this is because ProseMirror can’t preventDispatch on enter\n    // this will lead to a re-render of the node view on enter\n    // see: https://github.com/ueberdosis/tiptap/issues/1214\n    // see: https://github.com/ueberdosis/tiptap/issues/2534\n    if (\n      this.dom.contains(mutation.target)\n      && mutation.type === 'childList'\n      && (isiOS() || isAndroid())\n      && this.editor.isFocused\n    ) {\n      const changedNodes = [\n        ...Array.from(mutation.addedNodes),\n        ...Array.from(mutation.removedNodes),\n      ] as HTMLElement[]\n\n      // we’ll check if every changed node is contentEditable\n      // to make sure it’s probably mutated by ProseMirror\n      if (changedNodes.every(node => node.isContentEditable)) {\n        return false\n      }\n    }\n\n    // we will allow mutation contentDOM with attributes\n    // so we can for example adding classes within our node view\n    if (this.contentDOM === mutation.target && mutation.type === 'attributes') {\n      return true\n    }\n\n    // ProseMirror should handle any changes within contentDOM\n    if (this.contentDOM.contains(mutation.target)) {\n      return false\n    }\n\n    return true\n  }\n\n  updateAttributes(attributes: {}) {\n    this.editor.commands.command(({ tr }) => {\n      const pos = this.getPos()\n\n      tr.setNodeMarkup(pos, undefined, {\n        ...this.node.attrs,\n        ...attributes,\n      })\n\n      return true\n    })\n  }\n\n  deleteNode(): void {\n    const from = this.getPos()\n    const to = from + this.node.nodeSize\n\n    this.editor.commands.deleteRange({ from, to })\n  }\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarksBetween } from '../helpers/getMarksBetween.js'\nimport { PasteRule, PasteRuleFinder } from '../PasteRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an paste rule that adds a mark when the\n * matched text is pasted into it.\n */\nexport function markPasteRule(config: {\n  find: PasteRuleFinder\n  type: MarkType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray, event: ClipboardEvent) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler: ({\n      state, range, match, pasteEvent,\n    }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      const { tr } = state\n      const captureGroup = match[match.length - 1]\n      const fullMatch = match[0]\n      let markEnd = range.to\n\n      if (captureGroup) {\n        const startSpaces = fullMatch.search(/\\S/)\n        const textStart = range.from + fullMatch.indexOf(captureGroup)\n        const textEnd = textStart + captureGroup.length\n\n        const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n          .filter(item => {\n            // @ts-ignore\n            const excluded = item.mark.type.excluded as MarkType[]\n\n            return excluded.find(type => type === config.type && type !== item.mark.type)\n          })\n          .filter(item => item.to > textStart)\n\n        if (excludedMarks.length) {\n          return null\n        }\n\n        if (textEnd < range.to) {\n          tr.delete(textEnd, range.to)\n        }\n\n        if (textStart > range.from) {\n          tr.delete(range.from + startSpaces, textStart)\n        }\n\n        markEnd = range.from + startSpaces + captureGroup.length\n\n        tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}))\n\n        tr.removeStoredMark(config.type)\n      }\n    },\n  })\n}\n", "// source: https://stackoverflow.com/a/6969486\nexport function escapeForRegEx(string: string): string {\n  return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n}\n", "export function isString(value: any): value is string {\n  return typeof value === 'string'\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { PasteRule, PasteRuleFinder } from '../PasteRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/index.js'\n\n/**\n * Build an paste rule that adds a node when the\n * matched text is pasted into it.\n */\nexport function nodePasteRule(config: {\n  find: PasteRuleFinder\n  type: NodeType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray, event: ClipboardEvent) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler({\n      match, chain, range, pasteEvent,\n    }) {\n      const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      if (match.input) {\n        chain().deleteRange(range).insertContentAt(range.from, {\n          type: config.type.name,\n          attrs: attributes,\n        })\n      }\n    },\n  })\n}\n", "import { PasteRule, PasteRuleFinder } from '../PasteRule.js'\n\n/**\n * Build an paste rule that replaces text when the\n * matched text is pasted into it.\n */\nexport function textPasteRule(config: {\n  find: PasteRuleFinder,\n  replace: string,\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      let insert = config.replace\n      let start = range.from\n      const end = range.to\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n\n        insert += match[0].slice(offset + match[1].length)\n        start += offset\n\n        const cutOff = start - end\n\n        if (cutOff > 0) {\n          insert = match[0].slice(offset - cutOff, offset) + insert\n          start = end\n        }\n      }\n\n      state.tr.insertText(insert, start, end)\n    },\n  })\n}\n", "import { Transaction } from '@tiptap/pm/state'\n\nexport interface TrackerResult {\n  position: number\n  deleted: boolean\n}\n\nexport class Tracker {\n  transaction: Transaction\n\n  currentStep: number\n\n  constructor(transaction: Transaction) {\n    this.transaction = transaction\n    this.currentStep = this.transaction.steps.length\n  }\n\n  map(position: number): TrackerResult {\n    let deleted = false\n\n    const mappedPosition = this.transaction.steps\n      .slice(this.currentStep)\n      .reduce((newPosition, step) => {\n        const mapResult = step.getMap().mapResult(newPosition)\n\n        if (mapResult.deleted) {\n          deleted = true\n        }\n\n        return mapResult.pos\n      }, position)\n\n    return {\n      position: mappedPosition,\n      deleted,\n    }\n  }\n}\n", "import { Node } from '@tiptap/core'\n\nexport const Document = Node.create({\n  name: 'doc',\n  topNode: true,\n  content: 'block+',\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface HardBreakOptions {\n  keepMarks: boolean,\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    hardBreak: {\n      /**\n       * Add a hard break\n       */\n      setHardBreak: () => ReturnType,\n    }\n  }\n}\n\nexport const HardBreak = Node.create<HardBreakOptions>({\n  name: 'hardBreak',\n\n  addOptions() {\n    return {\n      keepMarks: true,\n      HTMLAttributes: {},\n    }\n  },\n\n  inline: true,\n\n  group: 'inline',\n\n  selectable: false,\n\n  parseHTML() {\n    return [\n      { tag: 'br' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  renderText() {\n    return '\\n'\n  },\n\n  addCommands() {\n    return {\n      setHardBreak: () => ({\n        commands,\n        chain,\n        state,\n        editor,\n      }) => {\n        return commands.first([\n          () => commands.exitCode(),\n          () => commands.command(() => {\n            const { selection, storedMarks } = state\n\n            if (selection.$from.parent.type.spec.isolating) {\n              return false\n            }\n\n            const { keepMarks } = this.options\n            const { splittableMarks } = editor.extensionManager\n            const marks = storedMarks\n              || (selection.$to.parentOffset && selection.$from.marks())\n\n            return chain()\n              .insertContent({ type: this.name })\n              .command(({ tr, dispatch }) => {\n                if (dispatch && marks && keepMarks) {\n                  const filteredMarks = marks\n                    .filter(mark => splittableMarks.includes(mark.type.name))\n\n                  tr.ensureMarks(filteredMarks)\n                }\n\n                return true\n              })\n              .run()\n          }),\n        ])\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak(),\n    }\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ParagraphOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    paragraph: {\n      /**\n       * Toggle a paragraph\n       */\n      setParagraph: () => ReturnType,\n    }\n  }\n}\n\nexport const Paragraph = Node.create<ParagraphOptions>({\n  name: 'paragraph',\n\n  priority: 1000,\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  content: 'inline*',\n\n  parseHTML() {\n    return [\n      { tag: 'p' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setParagraph: () => ({ commands }) => {\n        return commands.setNode(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-0': () => this.editor.commands.setParagraph(),\n    }\n  },\n})\n", "import { Node } from '@tiptap/core'\n\nexport const Text = Node.create({\n  name: 'text',\n  group: 'inline',\n})\n", "import { mergeAttributes, Node, textblockTypeInputRule } from '@tiptap/core'\n\nexport type Level = 1 | 2 | 3 | 4 | 5 | 6\n\nexport interface HeadingOptions {\n  levels: Level[],\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    heading: {\n      /**\n       * Set a heading node\n       */\n      setHeading: (attributes: { level: Level }) => ReturnType,\n      /**\n       * Toggle a heading node\n       */\n      toggleHeading: (attributes: { level: Level }) => ReturnType,\n    }\n  }\n}\n\nexport const Heading = Node.create<HeadingOptions>({\n  name: 'heading',\n\n  addOptions() {\n    return {\n      levels: [1, 2, 3, 4, 5, 6],\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'inline*',\n\n  group: 'block',\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return this.options.levels\n      .map((level: Level) => ({\n        tag: `h${level}`,\n        attrs: { level },\n      }))\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    const hasLevel = this.options.levels.includes(node.attrs.level)\n    const level = hasLevel\n      ? node.attrs.level\n      : this.options.levels[0]\n\n    return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.setNode(this.name, attributes)\n      },\n      toggleHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.toggleNode(this.name, 'paragraph', attributes)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return this.options.levels.reduce((items, level) => ({\n      ...items,\n      ...{\n        [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({ level }),\n      },\n    }), {})\n  },\n\n  addInputRules() {\n    return this.options.levels.map(level => {\n      return textblockTypeInputRule({\n        find: new RegExp(`^(#{1,${level}})\\\\s$`),\n        type: this.type,\n        getAttributes: {\n          level,\n        },\n      })\n    })\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface BoldOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bold: {\n      /**\n       * Set a bold mark\n       */\n      setBold: () => ReturnType,\n      /**\n       * Toggle a bold mark\n       */\n      toggleBold: () => ReturnType,\n      /**\n       * Unset a bold mark\n       */\n      unsetBold: () => ReturnType,\n    }\n  }\n}\n\nexport const starInputRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))$/\nexport const starPasteRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))/g\nexport const underscoreInputRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))$/\nexport const underscorePasteRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))/g\n\nexport const Bold = Mark.create<BoldOptions>({\n  name: 'bold',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'strong',\n      },\n      {\n        tag: 'b',\n        getAttrs: node => (node as HTMLElement).style.fontWeight !== 'normal' && null,\n      },\n      {\n        style: 'font-weight',\n        getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value as string) && null,\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBold: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleBold: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetBold: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-b': () => this.editor.commands.toggleBold(),\n      'Mod-B': () => this.editor.commands.toggleBold(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface CodeOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    code: {\n      /**\n       * Set a code mark\n       */\n      setCode: () => ReturnType,\n      /**\n       * Toggle inline code\n       */\n      toggleCode: () => ReturnType,\n      /**\n       * Unset a code mark\n       */\n      unsetCode: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))$/\nexport const pasteRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))/g\n\nexport const Code = Mark.create<CodeOptions>({\n  name: 'code',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  excludes: '_',\n\n  code: true,\n\n  exitable: true,\n\n  parseHTML() {\n    return [\n      { tag: 'code' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setCode: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleCode: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetCode: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-e': () => this.editor.commands.toggleCode(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { mergeAttributes, Node, textblockTypeInputRule } from '@tiptap/core'\nimport { Plugin, PluginKey, TextSelection } from '@tiptap/pm/state'\n\nexport interface CodeBlockOptions {\n  /**\n   * Adds a prefix to language classes that are applied to code tags.\n   * Defaults to `'language-'`.\n   */\n  languageClassPrefix: string\n  /**\n   * Define whether the node should be exited on triple enter.\n   * Defaults to `true`.\n   */\n  exitOnTripleEnter: boolean\n  /**\n   * Define whether the node should be exited on arrow down if there is no node after it.\n   * Defaults to `true`.\n   */\n  exitOnArrowDown: boolean\n  /**\n   * Custom HTML attributes that should be added to the rendered HTML tag.\n   */\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    codeBlock: {\n      /**\n       * Set a code block\n       */\n      setCodeBlock: (attributes?: { language: string }) => ReturnType\n      /**\n       * Toggle a code block\n       */\n      toggleCodeBlock: (attributes?: { language: string }) => ReturnType\n    }\n  }\n}\n\nexport const backtickInputRegex = /^```([a-z]+)?[\\s\\n]$/\nexport const tildeInputRegex = /^~~~([a-z]+)?[\\s\\n]$/\n\nexport const CodeBlock = Node.create<CodeBlockOptions>({\n  name: 'codeBlock',\n\n  addOptions() {\n    return {\n      languageClassPrefix: 'language-',\n      exitOnTripleEnter: true,\n      exitOnArrowDown: true,\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'text*',\n\n  marks: '',\n\n  group: 'block',\n\n  code: true,\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      language: {\n        default: null,\n        parseHTML: element => {\n          const { languageClassPrefix } = this.options\n          const classNames = [...(element.firstElementChild?.classList || [])]\n          const languages = classNames\n            .filter(className => className.startsWith(languageClassPrefix))\n            .map(className => className.replace(languageClassPrefix, ''))\n          const language = languages[0]\n\n          if (!language) {\n            return null\n          }\n\n          return language\n        },\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'pre',\n        preserveWhitespace: 'full',\n      },\n    ]\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    return [\n      'pre',\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n      [\n        'code',\n        {\n          class: node.attrs.language\n            ? this.options.languageClassPrefix + node.attrs.language\n            : null,\n        },\n        0,\n      ],\n    ]\n  },\n\n  addCommands() {\n    return {\n      setCodeBlock:\n        attributes => ({ commands }) => {\n          return commands.setNode(this.name, attributes)\n        },\n      toggleCodeBlock:\n        attributes => ({ commands }) => {\n          return commands.toggleNode(this.name, 'paragraph', attributes)\n        },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-c': () => this.editor.commands.toggleCodeBlock(),\n\n      // remove code block when at start of document or code block is empty\n      Backspace: () => {\n        const { empty, $anchor } = this.editor.state.selection\n        const isAtStart = $anchor.pos === 1\n\n        if (!empty || $anchor.parent.type.name !== this.name) {\n          return false\n        }\n\n        if (isAtStart || !$anchor.parent.textContent.length) {\n          return this.editor.commands.clearNodes()\n        }\n\n        return false\n      },\n\n      // exit node on triple enter\n      Enter: ({ editor }) => {\n        if (!this.options.exitOnTripleEnter) {\n          return false\n        }\n\n        const { state } = editor\n        const { selection } = state\n        const { $from, empty } = selection\n\n        if (!empty || $from.parent.type !== this.type) {\n          return false\n        }\n\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2\n        const endsWithDoubleNewline = $from.parent.textContent.endsWith('\\n\\n')\n\n        if (!isAtEnd || !endsWithDoubleNewline) {\n          return false\n        }\n\n        return editor\n          .chain()\n          .command(({ tr }) => {\n            tr.delete($from.pos - 2, $from.pos)\n\n            return true\n          })\n          .exitCode()\n          .run()\n      },\n\n      // exit node on arrow down\n      ArrowDown: ({ editor }) => {\n        if (!this.options.exitOnArrowDown) {\n          return false\n        }\n\n        const { state } = editor\n        const { selection, doc } = state\n        const { $from, empty } = selection\n\n        if (!empty || $from.parent.type !== this.type) {\n          return false\n        }\n\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2\n\n        if (!isAtEnd) {\n          return false\n        }\n\n        const after = $from.after()\n\n        if (after === undefined) {\n          return false\n        }\n\n        const nodeAfter = doc.nodeAt(after)\n\n        if (nodeAfter) {\n          return false\n        }\n\n        return editor.commands.exitCode()\n      },\n    }\n  },\n\n  addInputRules() {\n    return [\n      textblockTypeInputRule({\n        find: backtickInputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          language: match[1],\n        }),\n      }),\n      textblockTypeInputRule({\n        find: tildeInputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          language: match[1],\n        }),\n      }),\n    ]\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      // this plugin creates a code block for pasted content from VS Code\n      // we can also detect the copied code language\n      new Plugin({\n        key: new PluginKey('codeBlockVSCodeHandler'),\n        props: {\n          handlePaste: (view, event) => {\n            if (!event.clipboardData) {\n              return false\n            }\n\n            // don’t create a new code block within code blocks\n            if (this.editor.isActive(this.type.name)) {\n              return false\n            }\n\n            const text = event.clipboardData.getData('text/plain')\n            const vscode = event.clipboardData.getData('vscode-editor-data')\n            const vscodeData = vscode ? JSON.parse(vscode) : undefined\n            const language = vscodeData?.mode\n\n            if (!text || !language) {\n              return false\n            }\n\n            const { tr } = view.state\n\n            // create an empty code block\n            tr.replaceSelectionWith(this.type.create({ language }))\n\n            // put cursor inside the newly created code block\n            tr.setSelection(TextSelection.near(tr.doc.resolve(Math.max(0, tr.selection.from - 2))))\n\n            // add text to code block\n            // strip carriage return chars from text pasted as code\n            // see: https://github.com/ProseMirror/prosemirror-view/commit/a50a6bcceb4ce52ac8fcc6162488d8875613aacd\n            tr.insertText(text.replace(/\\r\\n?/g, '\\n'))\n\n            // store meta information\n            // this is useful for other plugins that depends on the paste event\n            // like the paste rule plugin\n            tr.setMeta('paste', true)\n\n            view.dispatch(tr)\n\n            return true\n          },\n        },\n      }),\n    ]\n  },\n})\n", "var deepFreezeEs6 = {exports: {}};\n\nfunction deepFreeze(obj) {\n    if (obj instanceof Map) {\n        obj.clear = obj.delete = obj.set = function () {\n            throw new Error('map is read-only');\n        };\n    } else if (obj instanceof Set) {\n        obj.add = obj.clear = obj.delete = function () {\n            throw new Error('set is read-only');\n        };\n    }\n\n    // Freeze self\n    Object.freeze(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (name) {\n        var prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n        }\n    });\n\n    return obj;\n}\n\ndeepFreezeEs6.exports = deepFreeze;\ndeepFreezeEs6.exports.default = deepFreeze;\n\n/** @typedef {import('highlight.js').CallbackResponse} CallbackResponse */\n/** @typedef {import('highlight.js').CompiledMode} CompiledMode */\n/** @implements CallbackResponse */\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n    this.isMatchIgnored = false;\n  }\n\n  ignoreMatch() {\n    this.isMatchIgnored = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit$1(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  // rarely we can have a sublanguage where language is undefined\n  // TODO: track down why\n  return !!node.scope || (node.sublanguage && node.language);\n};\n\n/**\n *\n * @param {string} name\n * @param {{prefix:string}} options\n */\nconst scopeToCSSClass = (name, { prefix }) => {\n  if (name.includes(\".\")) {\n    const pieces = name.split(\".\");\n    return [\n      `${prefix}${pieces.shift()}`,\n      ...(pieces.map((x, i) => `${x}${\"_\".repeat(i + 1)}`))\n    ].join(\" \");\n  }\n  return `${prefix}${name}`;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let className = \"\";\n    if (node.sublanguage) {\n      className = `language-${node.language}`;\n    } else {\n      className = scopeToCSSClass(node.scope, { prefix: this.classPrefix });\n    }\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/** @typedef {import('highlight.js').Emitter} Emitter */\n/**  */\n\n/** @returns {DataNode} */\nconst newNode = (opts = {}) => {\n  /** @type DataNode */\n  const result = { children: [] };\n  Object.assign(result, opts);\n  return result;\n};\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = newNode();\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} scope */\n  openNode(scope) {\n    /** @type Node */\n    const node = newNode({ scope });\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, scope)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(scope)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} scope\n   */\n  addKeyword(text, scope) {\n    if (text === \"\") { return; }\n\n    this.openNode(scope);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.sublanguage = true;\n    node.language = name;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(?:', re, ')*');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/**\n * @param {RegExp | string} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  const match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// BACKREF_RE matches an open parenthesis or backreference. To avoid\n// an incorrect parse, it additionally matches the following:\n// - [...] elements, where the meaning of parentheses and escapes change\n// - other escape sequences, so we do not misparse escape sequences as\n//   interesting elements\n// - non-matching or lookahead parentheses, which do not capture. These\n//   follow the '(' with a '?'.\nconst BACKREF_RE = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n\n// **INTERNAL** Not intended for outside usage\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {{joinWith: string}} opts\n * @returns {string}\n */\nfunction _rewriteBackreferences(regexps, { joinWith }) {\n  let numCaptures = 0;\n\n  return regexps.map((regex) => {\n    numCaptures += 1;\n    const offset = numCaptures;\n    let re = source(regex);\n    let out = '';\n\n    while (re.length > 0) {\n      const match = BACKREF_RE.exec(re);\n      if (!match) {\n        out += re;\n        break;\n      }\n      out += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        out += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        out += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    return out;\n  }).map(re => `(${re})`).join(joinWith);\n}\n\n/** @typedef {import('highlight.js').Mode} Mode */\n/** @typedef {import('highlight.js').ModeCallback} ModeCallback */\n\n// Common regexps\nconst MATCH_NOTHING_RE = /\\b\\B/;\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit$1({\n    scope: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  scope: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  scope: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit$1(\n    {\n      scope: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push({\n    scope: 'doctag',\n    // hack to avoid the space from being included. the space is necessary to\n    // match here to prevent the plain text rule below from gobbling up doctags\n    begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n    excludeBegin: true,\n    relevance: 0\n  });\n  const ENGLISH_WORD = either(\n    // list of common 1 and 2 letter words in English\n    \"I\",\n    \"a\",\n    \"is\",\n    \"so\",\n    \"us\",\n    \"to\",\n    \"at\",\n    \"if\",\n    \"in\",\n    \"it\",\n    \"on\",\n    // note: this is not an exhaustive list of contractions, just popular ones\n    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc\n    /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.\n    /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences\n  );\n  // looking like plain text, more likely to be a comment\n  mode.contains.push(\n    {\n      // TODO: how to include \", (, ) without breaking grammars that use these for\n      // comment delimiters?\n      // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n      // ---\n\n      // this tries to find sequences of 3 english words in a row (without any\n      // \"programming\" type syntax) this gives us a strong signal that we've\n      // TRULY found a comment - vs perhaps scanning with the wrong language.\n      // It's possible to find something that LOOKS like the start of the\n      // comment - but then if there is no readable text - good chance it is a\n      // false match and not a comment.\n      //\n      // for a visual example please see:\n      // https://github.com/highlightjs/highlight.js/issues/2827\n\n      begin: concat(\n        /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n        '(',\n        ENGLISH_WORD,\n        /[.]?[:]?([.][ ]|[ ])/,\n        '){3}') // look for 3 words in a row\n    }\n  );\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  scope: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  scope: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  scope: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    scope: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  scope: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  scope: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MATCH_NOTHING_RE: MATCH_NOTHING_RE,\n    IDENT_RE: IDENT_RE,\n    UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n    NUMBER_RE: NUMBER_RE,\n    C_NUMBER_RE: C_NUMBER_RE,\n    BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n    RE_STARTERS_RE: RE_STARTERS_RE,\n    SHEBANG: SHEBANG,\n    BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n    APOS_STRING_MODE: APOS_STRING_MODE,\n    QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n    PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n    COMMENT: COMMENT,\n    C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n    C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n    HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n    NUMBER_MODE: NUMBER_MODE,\n    C_NUMBER_MODE: C_NUMBER_MODE,\n    BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n    REGEXP_MODE: REGEXP_MODE,\n    TITLE_MODE: TITLE_MODE,\n    UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n    METHOD_GUARD: METHOD_GUARD,\n    END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n/**\n@typedef {import('highlight.js').CallbackResponse} CallbackResponse\n@typedef {import('highlight.js').CompilerExt} CompilerExt\n*/\n\n// Grammar extensions / plugins\n// See: https://github.com/highlightjs/highlight.js/issues/2833\n\n// Grammar extensions allow \"syntactic sugar\" to be added to the grammar modes\n// without requiring any underlying changes to the compiler internals.\n\n// `compileMatch` being the perfect small example of now allowing a grammar\n// author to write `match` when they desire to match a single expression rather\n// than being forced to use `begin`.  The extension then just moves `match` into\n// `begin` when it runs.  Ie, no features have been added, but we've just made\n// the experience of writing (and reading grammars) a little bit nicer.\n\n// ------\n\n// TODO: We need negative look-behind support to do this properly\n/**\n * Skip a match if it has a preceding dot\n *\n * This is used for `beginKeywords` to prevent matching expressions such as\n * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n * @param {RegExpMatchArray} match\n * @param {CallbackResponse} response\n */\nfunction skipIfHasPrecedingDot(match, response) {\n  const before = match.input[match.index - 1];\n  if (before === \".\") {\n    response.ignoreMatch();\n  }\n}\n\n/**\n *\n * @type {CompilerExt}\n */\nfunction scopeClassName(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.className !== undefined) {\n    mode.scope = mode.className;\n    delete mode.className;\n  }\n}\n\n/**\n * `beginKeywords` syntactic sugar\n * @type {CompilerExt}\n */\nfunction beginKeywords(mode, parent) {\n  if (!parent) return;\n  if (!mode.beginKeywords) return;\n\n  // for languages with keywords that include non-word characters checking for\n  // a word boundary is not sufficient, so instead we check for a word boundary\n  // or whitespace - this does no harm in any case since our keyword engine\n  // doesn't allow spaces in keywords anyways and we still check for the boundary\n  // first\n  mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)';\n  mode.__beforeBegin = skipIfHasPrecedingDot;\n  mode.keywords = mode.keywords || mode.beginKeywords;\n  delete mode.beginKeywords;\n\n  // prevents double relevance, the keywords themselves provide\n  // relevance, the mode doesn't need to double it\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 0;\n}\n\n/**\n * Allow `illegal` to contain an array of illegal values\n * @type {CompilerExt}\n */\nfunction compileIllegal(mode, _parent) {\n  if (!Array.isArray(mode.illegal)) return;\n\n  mode.illegal = either(...mode.illegal);\n}\n\n/**\n * `match` to match a single expression for readability\n * @type {CompilerExt}\n */\nfunction compileMatch(mode, _parent) {\n  if (!mode.match) return;\n  if (mode.begin || mode.end) throw new Error(\"begin & end are not supported with match\");\n\n  mode.begin = mode.match;\n  delete mode.match;\n}\n\n/**\n * provides the default 1 relevance to all modes\n * @type {CompilerExt}\n */\nfunction compileRelevance(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 1;\n}\n\n// allow beforeMatch to act as a \"qualifier\" for the match\n// the full match begin must be [beforeMatch][begin]\nconst beforeMatchExt = (mode, parent) => {\n  if (!mode.beforeMatch) return;\n  // starts conflicts with endsParent which we need to make sure the child\n  // rule is not matched multiple times\n  if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\n\n  const originalMode = Object.assign({}, mode);\n  Object.keys(mode).forEach((key) => { delete mode[key]; });\n\n  mode.keywords = originalMode.keywords;\n  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n  mode.starts = {\n    relevance: 0,\n    contains: [\n      Object.assign(originalMode, { endsParent: true })\n    ]\n  };\n  mode.relevance = 0;\n\n  delete originalMode.beforeMatch;\n};\n\n// keywords that should have no default relevance value\nconst COMMON_KEYWORDS = [\n  'of',\n  'and',\n  'for',\n  'in',\n  'not',\n  'or',\n  'if',\n  'then',\n  'parent', // common variable name\n  'list', // common variable name\n  'value' // common variable name\n];\n\nconst DEFAULT_KEYWORD_SCOPE = \"keyword\";\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {\n  /** @type KeywordDict */\n  const compiledKeywords = Object.create(null);\n\n  // input can be a string of keywords, an array of keywords, or a object with\n  // named keys representing scopeName (which can then point to a string or array)\n  if (typeof rawKeywords === 'string') {\n    compileList(scopeName, rawKeywords.split(\" \"));\n  } else if (Array.isArray(rawKeywords)) {\n    compileList(scopeName, rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(scopeName) {\n      // collapse all our objects back into the parent object\n      Object.assign(\n        compiledKeywords,\n        compileKeywords(rawKeywords[scopeName], caseInsensitive, scopeName)\n      );\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} scopeName\n   * @param {Array<string>} keywordList\n   */\n  function compileList(scopeName, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.map(x => x.toLowerCase());\n    }\n    keywordList.forEach(function(keyword) {\n      const pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [scopeName, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\n/*\n\nFor the reasoning behind this please see:\nhttps://github.com/highlightjs/highlight.js/issues/2880#issuecomment-747275419\n\n*/\n\n/**\n * @type {Record<string, boolean>}\n */\nconst seenDeprecations = {};\n\n/**\n * @param {string} message\n */\nconst error = (message) => {\n  console.error(message);\n};\n\n/**\n * @param {string} message\n * @param {any} args\n */\nconst warn = (message, ...args) => {\n  console.log(`WARN: ${message}`, ...args);\n};\n\n/**\n * @param {string} version\n * @param {string} message\n */\nconst deprecated = (version, message) => {\n  if (seenDeprecations[`${version}/${message}`]) return;\n\n  console.log(`Deprecated as of ${version}. ${message}`);\n  seenDeprecations[`${version}/${message}`] = true;\n};\n\n/* eslint-disable no-throw-literal */\n\n/**\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n*/\n\nconst MultiClassError = new Error();\n\n/**\n * Renumbers labeled scope names to account for additional inner match\n * groups that otherwise would break everything.\n *\n * Lets say we 3 match scopes:\n *\n *   { 1 => ..., 2 => ..., 3 => ... }\n *\n * So what we need is a clean match like this:\n *\n *   (a)(b)(c) => [ \"a\", \"b\", \"c\" ]\n *\n * But this falls apart with inner match groups:\n *\n * (a)(((b)))(c) => [\"a\", \"b\", \"b\", \"b\", \"c\" ]\n *\n * Our scopes are now \"out of alignment\" and we're repeating `b` 3 times.\n * What needs to happen is the numbers are remapped:\n *\n *   { 1 => ..., 2 => ..., 5 => ... }\n *\n * We also need to know that the ONLY groups that should be output\n * are 1, 2, and 5.  This function handles this behavior.\n *\n * @param {CompiledMode} mode\n * @param {Array<RegExp | string>} regexes\n * @param {{key: \"beginScope\"|\"endScope\"}} opts\n */\nfunction remapScopeNames(mode, regexes, { key }) {\n  let offset = 0;\n  const scopeNames = mode[key];\n  /** @type Record<number,boolean> */\n  const emit = {};\n  /** @type Record<number,string> */\n  const positions = {};\n\n  for (let i = 1; i <= regexes.length; i++) {\n    positions[i + offset] = scopeNames[i];\n    emit[i + offset] = true;\n    offset += countMatchGroups(regexes[i - 1]);\n  }\n  // we use _emit to keep track of which match groups are \"top-level\" to avoid double\n  // output from inside match groups\n  mode[key] = positions;\n  mode[key]._emit = emit;\n  mode[key]._multi = true;\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction beginMultiClass(mode) {\n  if (!Array.isArray(mode.begin)) return;\n\n  if (mode.skip || mode.excludeBegin || mode.returnBegin) {\n    error(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.beginScope !== \"object\" || mode.beginScope === null) {\n    error(\"beginScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.begin, { key: \"beginScope\" });\n  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: \"\" });\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction endMultiClass(mode) {\n  if (!Array.isArray(mode.end)) return;\n\n  if (mode.skip || mode.excludeEnd || mode.returnEnd) {\n    error(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.endScope !== \"object\" || mode.endScope === null) {\n    error(\"endScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.end, { key: \"endScope\" });\n  mode.end = _rewriteBackreferences(mode.end, { joinWith: \"\" });\n}\n\n/**\n * this exists only to allow `scope: {}` to be used beside `match:`\n * Otherwise `beginScope` would necessary and that would look weird\n\n  {\n    match: [ /def/, /\\w+/ ]\n    scope: { 1: \"keyword\" , 2: \"title\" }\n  }\n\n * @param {CompiledMode} mode\n */\nfunction scopeSugar(mode) {\n  if (mode.scope && typeof mode.scope === \"object\" && mode.scope !== null) {\n    mode.beginScope = mode.scope;\n    delete mode.scope;\n  }\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction MultiClass(mode) {\n  scopeSugar(mode);\n\n  if (typeof mode.beginScope === \"string\") {\n    mode.beginScope = { _wrap: mode.beginScope };\n  }\n  if (typeof mode.endScope === \"string\") {\n    mode.endScope = { _wrap: mode.endScope };\n  }\n\n  beginMultiClass(mode);\n  endMultiClass(mode);\n}\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').CompiledLanguage} CompiledLanguage\n*/\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensitivity of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm'\n      + (language.case_insensitive ? 'i' : '')\n      + (language.unicodeRegex ? 'u' : '')\n      + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: '|' }), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminatorEnd) {\n      mm.addRule(mode.terminatorEnd, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.isCompiled) return cmode;\n\n    [\n      scopeClassName,\n      // do this early so compiler extensions generally don't have to worry about\n      // the distinction between match/begin\n      compileMatch,\n      MultiClass,\n      beforeMatchExt\n    ].forEach(ext => ext(mode, parent));\n\n    language.compilerExtensions.forEach(ext => ext(mode, parent));\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    [\n      beginKeywords,\n      // do this later so compiler extensions that come earlier have access to the\n      // raw array if they wanted to perhaps manipulate it, etc.\n      compileIllegal,\n      // default to 1 relevance if not specified\n      compileRelevance\n    ].forEach(ext => ext(mode, parent));\n\n    mode.isCompiled = true;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\" && mode.keywords.$pattern) {\n      // we need a copy because keywords might be compiled multiple times\n      // so we can't go deleting $pattern from the original on the first\n      // pass\n      mode.keywords = Object.assign({}, mode.keywords);\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n    keywordPattern = keywordPattern || /\\w+/;\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    cmode.keywordPatternRe = langRe(keywordPattern, true);\n\n    if (parent) {\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(cmode.begin);\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(cmode.end);\n      cmode.terminatorEnd = source(cmode.end) || '';\n      if (mode.endsWithParent && parent.terminatorEnd) {\n        cmode.terminatorEnd += (mode.end ? '|' : '') + parent.terminatorEnd;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(/** @type {RegExp | string} */ (mode.illegal));\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  if (!language.compilerExtensions) language.compilerExtensions = [];\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n\n  // we need a null object, which inherit will guarantee\n  language.classNameAliases = inherit$1(language.classNameAliases || {});\n\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cachedVariants) {\n    mode.cachedVariants = mode.variants.map(function(variant) {\n      return inherit$1(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cachedVariants) {\n    return mode.cachedVariants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit$1(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\nvar version = \"11.6.0\";\n\nclass HTMLInjectionError extends Error {\n  constructor(reason, html) {\n    super(reason);\n    this.name = \"HTMLInjectionError\";\n    this.html = html;\n  }\n}\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').CompiledScope} CompiledScope\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSApi} HLJSApi\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').PluginEvent} PluginEvent\n@typedef {import('highlight.js').HLJSOptions} HLJSOptions\n@typedef {import('highlight.js').LanguageFn} LanguageFn\n@typedef {import('highlight.js').HighlightedHTMLElement} HighlightedHTMLElement\n@typedef {import('highlight.js').BeforeHighlightContext} BeforeHighlightContext\n@typedef {import('highlight.js/private').MatchType} MatchType\n@typedef {import('highlight.js/private').KeywordData} KeywordData\n@typedef {import('highlight.js/private').EnhancedMatch} EnhancedMatch\n@typedef {import('highlight.js/private').AnnotatedError} AnnotatedError\n@typedef {import('highlight.js').AutoHighlightResult} AutoHighlightResult\n@typedef {import('highlight.js').HighlightOptions} HighlightOptions\n@typedef {import('highlight.js').HighlightResult} HighlightResult\n*/\n\n\nconst escape = escapeHTML;\nconst inherit = inherit$1;\nconst NO_MATCH = Symbol(\"nomatch\");\nconst MAX_KEYWORD_HITS = 7;\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  const languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  const aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  const plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  let SAFE_MODE = true;\n  const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  let options = {\n    ignoreUnescapedHTML: false,\n    throwUnescapedHTML: false,\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    cssSelector: 'pre code',\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    let classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      const language = getLanguage(match[1]);\n      if (!language) {\n        warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * OLD API\n   * highlight(lang, code, ignoreIllegals, continuation)\n   *\n   * NEW API\n   * highlight(code, {lang, ignoreIllegals})\n   *\n   * @param {string} codeOrLanguageName - the language to use for highlighting\n   * @param {string | HighlightOptions} optionsOrCode - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {CompiledMode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(codeOrLanguageName, optionsOrCode, ignoreIllegals) {\n    let code = \"\";\n    let languageName = \"\";\n    if (typeof optionsOrCode === \"object\") {\n      code = codeOrLanguageName;\n      ignoreIllegals = optionsOrCode.ignoreIllegals;\n      languageName = optionsOrCode.language;\n    } else {\n      // old API\n      deprecated(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\");\n      deprecated(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\");\n      languageName = codeOrLanguageName;\n      code = optionsOrCode;\n    }\n\n    // https://github.com/highlightjs/highlight.js/issues/3149\n    // eslint-disable-next-line no-undefined\n    if (ignoreIllegals === undefined) { ignoreIllegals = true; }\n\n    /** @type {BeforeHighlightContext} */\n    const context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    const result = context.result\n      ? context.result\n      : _highlight(context.language, context.code, ignoreIllegals);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} codeToHighlight - the code to highlight\n   * @param {boolean?} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode?} [continuation] - current continuation mode, if any\n   * @returns {HighlightResult} - result of the highlight operation\n  */\n  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {\n    const keywordHits = Object.create(null);\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {string} matchText - the textual match\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, matchText) {\n      return mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const word = language.case_insensitive ? match[0].toLowerCase() : match[0];\n        const data = keywordData(top, word);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          keywordHits[word] = (keywordHits[word] || 0) + 1;\n          if (keywordHits[word] <= MAX_KEYWORD_HITS) relevance += keywordRelevance;\n          if (kind.startsWith(\"_\")) {\n            // _ implied for relevance only, do not highlight\n            // by applying a class name\n            buf += match[0];\n          } else {\n            const cssClass = language.classNameAliases[kind] || kind;\n            emitter.addKeyword(match[0], cssClass);\n          }\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substring(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      let result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = /** @type {CompiledMode} */ (result._top);\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result._emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {CompiledScope} scope\n     * @param {RegExpMatchArray} match\n     */\n    function emitMultiClass(scope, match) {\n      let i = 1;\n      const max = match.length - 1;\n      while (i <= max) {\n        if (!scope._emit[i]) { i++; continue; }\n        const klass = language.classNameAliases[scope[i]] || scope[i];\n        const text = match[i];\n        if (klass) {\n          emitter.addKeyword(text, klass);\n        } else {\n          modeBuffer = text;\n          processKeywords();\n          modeBuffer = \"\";\n        }\n        i++;\n      }\n    }\n\n    /**\n     * @param {CompiledMode} mode - new mode to start\n     * @param {RegExpMatchArray} match\n     */\n    function startNewMode(mode, match) {\n      if (mode.scope && typeof mode.scope === \"string\") {\n        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);\n      }\n      if (mode.beginScope) {\n        // beginScope just wraps the begin match itself in a scope\n        if (mode.beginScope._wrap) {\n          emitter.addKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);\n          modeBuffer = \"\";\n        } else if (mode.beginScope._multi) {\n          // at this point modeBuffer should just be the match\n          emitMultiClass(mode.beginScope, match);\n          modeBuffer = \"\";\n        }\n      }\n\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.isMatchIgnored) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexes to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      const lexeme = match[0];\n      const newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.isMatchIgnored) return doIgnore(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode, match);\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      const lexeme = match[0];\n      const matchPlusRemainder = codeToHighlight.substring(match.index);\n\n      const endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      const origin = top;\n      if (top.endScope && top.endScope._wrap) {\n        processBuffer();\n        emitter.addKeyword(lexeme, top.endScope._wrap);\n      } else if (top.endScope && top.endScope._multi) {\n        processBuffer();\n        emitMultiClass(top.endScope, match);\n      } else if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.scope) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        startNewMode(endMode.starts, match);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      const list = [];\n      for (let current = top; current !== language; current = current.parent) {\n        if (current.scope) {\n          list.unshift(current.scope);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    let lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      const lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error(`0 width match regex (${languageName})`);\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.scope || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        const processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  An potential end match that was\n      triggered but could not be completed.  IE, `doEndMatch` returned NO_MATCH.\n      (this could be because a callback requests the match be ignored, etc)\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    const language = getLanguage(languageName);\n    if (!language) {\n      error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    const md = compileLanguage(language);\n    let result = '';\n    /** @type {CompiledMode} */\n    let top = continuation || md;\n    /** @type Record<string,CompiledMode> */\n    const continuations = {}; // keep continuations for sub-languages\n    const emitter = new options.__emitter(options);\n    processContinuations();\n    let modeBuffer = '';\n    let relevance = 0;\n    let index = 0;\n    let iterations = 0;\n    let resumeScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (resumeScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          resumeScanAtSamePosition = false;\n        } else {\n          top.matcher.considerAll();\n        }\n        top.matcher.lastIndex = index;\n\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substring(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        language: languageName,\n        value: result,\n        relevance: relevance,\n        illegal: false,\n        _emitter: emitter,\n        _top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: true,\n          relevance: 0,\n          _illegalBy: {\n            message: err.message,\n            index: index,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode,\n            resultSoFar: result\n          },\n          _emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: false,\n          relevance: 0,\n          errorRaised: err,\n          _emitter: emitter,\n          _top: top\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      value: escape(code),\n      illegal: false,\n      relevance: 0,\n      _top: PLAINTEXT_LANGUAGE,\n      _emitter: new options.__emitter(options)\n    };\n    result._emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - secondBest (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    const plaintext = justTextHighlightResult(code);\n\n    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>\n      _highlight(name, code, false)\n    );\n    results.unshift(plaintext); // plaintext is always an option\n\n    const sorted = results.sort((a, b) => {\n      // sort base on relevance\n      if (a.relevance !== b.relevance) return b.relevance - a.relevance;\n\n      // always award the tie to the base language\n      // ie if C++ and Arduino are tied, it's more likely to be C++\n      if (a.language && b.language) {\n        if (getLanguage(a.language).supersetOf === b.language) {\n          return 1;\n        } else if (getLanguage(b.language).supersetOf === a.language) {\n          return -1;\n        }\n      }\n\n      // otherwise say they are equal, which has the effect of sorting on\n      // relevance while preserving the original ordering - which is how ties\n      // have historically been settled, ie the language that comes first always\n      // wins in the case of a tie\n      return 0;\n    });\n\n    const [best, secondBest] = sorted;\n\n    /** @type {AutoHighlightResult} */\n    const result = best;\n    result.secondBest = secondBest;\n\n    return result;\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {HTMLElement} element\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function updateClassName(element, currentLang, resultLang) {\n    const language = (currentLang && aliases[currentLang]) || resultLang;\n\n    element.classList.add(\"hljs\");\n    element.classList.add(`language-${language}`);\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightElement(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightElement\",\n      { el: element, language: language });\n\n    // we should be all text, no child nodes (unescaped HTML) - this is possibly\n    // an HTML injection attack - it's likely too late if this is already in\n    // production (the code has likely already done its damage by the time\n    // we're seeing it)... but we yell loudly about this so that hopefully it's\n    // more likely to be caught in development before making it to production\n    if (element.children.length > 0) {\n      if (!options.ignoreUnescapedHTML) {\n        console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\");\n        console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\");\n        console.warn(\"The element with unescaped HTML:\");\n        console.warn(element);\n      }\n      if (options.throwUnescapedHTML) {\n        const err = new HTMLInjectionError(\n          \"One of your code blocks includes unescaped HTML.\",\n          element.innerHTML\n        );\n        throw err;\n      }\n    }\n\n    node = element;\n    const text = node.textContent;\n    const result = language ? highlight(text, { language, ignoreIllegals: true }) : highlightAuto(text);\n\n    element.innerHTML = result.value;\n    updateClassName(element, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relevance: result.relevance\n    };\n    if (result.secondBest) {\n      element.secondBest = {\n        language: result.secondBest.language,\n        relevance: result.secondBest.relevance\n      };\n    }\n\n    fire(\"after:highlightElement\", { el: element, result, text });\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {Partial<HLJSOptions>} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit(options, userOptions);\n  }\n\n  // TODO: remove v12, deprecated\n  const initHighlighting = () => {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n  };\n\n  // TODO: remove v12, deprecated\n  function initHighlightingOnLoad() {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n  }\n\n  let wantsHighlight = false;\n\n  /**\n   * auto-highlights all pre>code elements on the page\n   */\n  function highlightAll() {\n    // if we are called too early in the loading process\n    if (document.readyState === \"loading\") {\n      wantsHighlight = true;\n      return;\n    }\n\n    const blocks = document.querySelectorAll(options.cssSelector);\n    blocks.forEach(highlightElement);\n  }\n\n  function boot() {\n    // if a highlight was requested before DOM was loaded, do now\n    if (wantsHighlight) highlightAll();\n  }\n\n  // make sure we are in the browser environment\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('DOMContentLoaded', boot, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    let lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error$1) {\n      error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error$1; } else { error(error$1); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * Remove a language grammar module\n   *\n   * @param {string} languageName\n   */\n  function unregisterLanguage(languageName) {\n    delete languages[languageName];\n    for (const alias of Object.keys(aliases)) {\n      if (aliases[alias] === languageName) {\n        delete aliases[alias];\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias.toLowerCase()] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    const lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * Upgrades the old highlightBlock plugins to the new\n   * highlightElement API\n   * @param {HLJSPlugin} plugin\n   */\n  function upgradePluginAPI(plugin) {\n    // TODO: remove with v12\n    if (plugin[\"before:highlightBlock\"] && !plugin[\"before:highlightElement\"]) {\n      plugin[\"before:highlightElement\"] = (data) => {\n        plugin[\"before:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n    if (plugin[\"after:highlightBlock\"] && !plugin[\"after:highlightElement\"]) {\n      plugin[\"after:highlightElement\"] = (data) => {\n        plugin[\"after:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    upgradePluginAPI(plugin);\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    const cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n   * DEPRECATED\n   * @param {HighlightedHTMLElement} el\n   */\n  function deprecateHighlightBlock(el) {\n    deprecated(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\");\n    deprecated(\"10.7.0\", \"Please use highlightElement now.\");\n\n    return highlightElement(el);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    highlightAll,\n    highlightElement,\n    // TODO: Remove with v12 API\n    highlightBlock: deprecateHighlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    unregisterLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    autoDetection,\n    inherit,\n    addPlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  hljs.regex = {\n    concat: concat,\n    lookahead: lookahead,\n    either: either,\n    optional: optional,\n    anyNumberOfTimes: anyNumberOfTimes\n  };\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreezeEs6.exports(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexes into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\nhighlight.HighlightJS = highlight;\nhighlight.default = highlight;\n", "import { findChildren } from '@tiptap/core'\nimport { Node as ProsemirrorNode } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { Decoration, DecorationSet } from '@tiptap/pm/view'\n// @ts-ignore\nimport highlight from 'highlight.js/lib/core'\n\nfunction parseNodes(nodes: any[], className: string[] = []): { text: string; classes: string[] }[] {\n  return nodes\n    .map(node => {\n      const classes = [...className, ...(node.properties ? node.properties.className : [])]\n\n      if (node.children) {\n        return parseNodes(node.children, classes)\n      }\n\n      return {\n        text: node.value,\n        classes,\n      }\n    })\n    .flat()\n}\n\nfunction getHighlightNodes(result: any) {\n  // `.value` for lowlight v1, `.children` for lowlight v2\n  return result.value || result.children || []\n}\n\nfunction registered(aliasOrLanguage: string) {\n  return Boolean(highlight.getLanguage(aliasOrLanguage))\n}\n\nfunction getDecorations({\n  doc,\n  name,\n  lowlight,\n  defaultLanguage,\n}: {\n  doc: ProsemirrorNode\n  name: string\n  lowlight: any\n  defaultLanguage: string | null | undefined\n}) {\n  const decorations: Decoration[] = []\n\n  findChildren(doc, node => node.type.name === name).forEach(block => {\n    let from = block.pos + 1\n    const language = block.node.attrs.language || defaultLanguage\n    const languages = lowlight.listLanguages()\n\n    const nodes = language && (languages.includes(language) || registered(language))\n      ? getHighlightNodes(lowlight.highlight(language, block.node.textContent))\n      : getHighlightNodes(lowlight.highlightAuto(block.node.textContent))\n\n    parseNodes(nodes).forEach(node => {\n      const to = from + node.text.length\n\n      if (node.classes.length) {\n        const decoration = Decoration.inline(from, to, {\n          class: node.classes.join(' '),\n        })\n\n        decorations.push(decoration)\n      }\n\n      from = to\n    })\n  })\n\n  return DecorationSet.create(doc, decorations)\n}\n\nfunction isFunction(param: Function) {\n  return typeof param === 'function'\n}\n\nexport function LowlightPlugin({\n  name,\n  lowlight,\n  defaultLanguage,\n}: {\n  name: string\n  lowlight: any\n  defaultLanguage: string | null | undefined\n}) {\n  if (!['highlight', 'highlightAuto', 'listLanguages'].every(api => isFunction(lowlight[api]))) {\n    throw Error(\n      'You should provide an instance of lowlight to use the code-block-lowlight extension',\n    )\n  }\n\n  const lowlightPlugin: Plugin<any> = new Plugin({\n    key: new PluginKey('lowlight'),\n\n    state: {\n      init: (_, { doc }) => getDecorations({\n        doc,\n        name,\n        lowlight,\n        defaultLanguage,\n      }),\n      apply: (transaction, decorationSet, oldState, newState) => {\n        const oldNodeName = oldState.selection.$head.parent.type.name\n        const newNodeName = newState.selection.$head.parent.type.name\n        const oldNodes = findChildren(oldState.doc, node => node.type.name === name)\n        const newNodes = findChildren(newState.doc, node => node.type.name === name)\n\n        if (\n          transaction.docChanged\n          // Apply decorations if:\n          // selection includes named node,\n          && ([oldNodeName, newNodeName].includes(name)\n            // OR transaction adds/removes named node,\n            || newNodes.length !== oldNodes.length\n            // OR transaction has changes that completely encapsulte a node\n            // (for example, a transaction that affects the entire document).\n            // Such transactions can happen during collab syncing via y-prosemirror, for example.\n            || transaction.steps.some(step => {\n              // @ts-ignore\n              return (\n                // @ts-ignore\n                step.from !== undefined\n                // @ts-ignore\n                && step.to !== undefined\n                && oldNodes.some(node => {\n                  // @ts-ignore\n                  return (\n                    // @ts-ignore\n                    node.pos >= step.from\n                    // @ts-ignore\n                    && node.pos + node.node.nodeSize <= step.to\n                  )\n                })\n              )\n            }))\n        ) {\n          return getDecorations({\n            doc: transaction.doc,\n            name,\n            lowlight,\n            defaultLanguage,\n          })\n        }\n\n        return decorationSet.map(transaction.mapping, transaction.doc)\n      },\n    },\n\n    props: {\n      decorations(state) {\n        return lowlightPlugin.getState(state)\n      },\n    },\n  })\n\n  return lowlightPlugin\n}\n", "import CodeBlock, { CodeBlockOptions } from '@tiptap/extension-code-block'\n\nimport { LowlightPlugin } from './lowlight-plugin.js'\n\nexport interface CodeBlockLowlightOptions extends CodeBlockOptions {\n  lowlight: any,\n  defaultLanguage: string | null | undefined,\n}\n\nexport const CodeBlockLowlight = CodeBlock.extend<CodeBlockLowlightOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      lowlight: {},\n      defaultLanguage: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      ...this.parent?.() || [],\n      LowlightPlugin({\n        name: this.name,\n        lowlight: this.options.lowlight,\n        defaultLanguage: this.options.defaultLanguage,\n      }),\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface ItalicOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    italic: {\n      /**\n       * Set an italic mark\n       */\n      setItalic: () => ReturnType,\n      /**\n       * Toggle an italic mark\n       */\n      toggleItalic: () => ReturnType,\n      /**\n       * Unset an italic mark\n       */\n      unsetItalic: () => ReturnType,\n    }\n  }\n}\n\nexport const starInputRegex = /(?:^|\\s)((?:\\*)((?:[^*]+))(?:\\*))$/\nexport const starPasteRegex = /(?:^|\\s)((?:\\*)((?:[^*]+))(?:\\*))/g\nexport const underscoreInputRegex = /(?:^|\\s)((?:_)((?:[^_]+))(?:_))$/\nexport const underscorePasteRegex = /(?:^|\\s)((?:_)((?:[^_]+))(?:_))/g\n\nexport const Italic = Mark.create<ItalicOptions>({\n  name: 'italic',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'em',\n      },\n      {\n        tag: 'i',\n        getAttrs: node => (node as HTMLElement).style.fontStyle !== 'normal' && null,\n      },\n      {\n        style: 'font-style=italic',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setItalic: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleItalic: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetItalic: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-i': () => this.editor.commands.toggleItalic(),\n      'Mod-I': () => this.editor.commands.toggleItalic(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import {\n  isMacOS,\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface StrikeOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    strike: {\n      /**\n       * Set a strike mark\n       */\n      setStrike: () => ReturnType,\n      /**\n       * Toggle a strike mark\n       */\n      toggleStrike: () => ReturnType,\n      /**\n       * Unset a strike mark\n       */\n      unsetStrike: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))$/\nexport const pasteRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))/g\n\nexport const Strike = Mark.create<StrikeOptions>({\n  name: 'strike',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 's',\n      },\n      {\n        tag: 'del',\n      },\n      {\n        tag: 'strike',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('line-through') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setStrike: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleStrike: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetStrike: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    const shortcuts: Record<string, () => boolean> = {}\n\n    if (isMacOS()) {\n      shortcuts['Mod-Shift-s'] = () => this.editor.commands.toggleStrike()\n    } else {\n      shortcuts['Ctrl-Shift-s'] = () => this.editor.commands.toggleStrike()\n    }\n\n    return shortcuts\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n", "import { Extension } from '@tiptap/core'\nimport { dropCursor } from '@tiptap/pm/dropcursor'\n\nexport interface DropcursorOptions {\n  color: string | undefined,\n  width: number | undefined,\n  class: string | undefined,\n}\n\nexport const Dropcursor = Extension.create<DropcursorOptions>({\n  name: 'dropCursor',\n\n  addOptions() {\n    return {\n      color: 'currentColor',\n      width: 1,\n      class: undefined,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      dropCursor(this.options),\n    ]\n  },\n})\n", "import { keydownHandler } from 'prosemirror-keymap';\nimport { Selection, NodeSelection, TextSelection, Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\n/**\nGap cursor selections are represented using this class. Its\n`$anchor` and `$head` properties both point at the cursor position.\n*/\nclass GapCursor extends Selection {\n    /**\n    Create a gap cursor.\n    */\n    constructor($pos) {\n        super($pos, $pos);\n    }\n    map(doc, mapping) {\n        let $pos = doc.resolve(mapping.map(this.head));\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n    content() { return Slice.empty; }\n    eq(other) {\n        return other instanceof GapCursor && other.head == this.head;\n    }\n    toJSON() {\n        return { type: \"gapcursor\", pos: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for GapCursor.fromJSON\");\n        return new GapCursor(doc.resolve(json.pos));\n    }\n    /**\n    @internal\n    */\n    getBookmark() { return new GapBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static valid($pos) {\n        let parent = $pos.parent;\n        if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos))\n            return false;\n        let override = parent.type.spec.allowGapCursor;\n        if (override != null)\n            return override;\n        let deflt = parent.contentMatchAt($pos.index()).defaultType;\n        return deflt && deflt.isTextblock;\n    }\n    /**\n    @internal\n    */\n    static findGapCursorFrom($pos, dir, mustMove = false) {\n        search: for (;;) {\n            if (!mustMove && GapCursor.valid($pos))\n                return $pos;\n            let pos = $pos.pos, next = null;\n            // Scan up from this position\n            for (let d = $pos.depth;; d--) {\n                let parent = $pos.node(d);\n                if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n                    next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n                    break;\n                }\n                else if (d == 0) {\n                    return null;\n                }\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            // And then down into the next node\n            for (;;) {\n                let inside = dir > 0 ? next.firstChild : next.lastChild;\n                if (!inside) {\n                    if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n                        $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n                        mustMove = false;\n                        continue search;\n                    }\n                    break;\n                }\n                next = inside;\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            return null;\n        }\n    }\n}\nGapCursor.prototype.visible = false;\nGapCursor.findFrom = GapCursor.findGapCursorFrom;\nSelection.jsonID(\"gapcursor\", GapCursor);\nclass GapBookmark {\n    constructor(pos) {\n        this.pos = pos;\n    }\n    map(mapping) {\n        return new GapBookmark(mapping.map(this.pos));\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.pos);\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n}\nfunction closedBefore($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.index(d), parent = $pos.node(d);\n        // At the start of this parent, look at next one\n        if (index == 0) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        // See if the node before (or its first ancestor) is closed\n        for (let before = parent.child(index - 1);; before = before.lastChild) {\n            if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating)\n                return true;\n            if (before.inlineContent)\n                return false;\n        }\n    }\n    // Hit start of document\n    return true;\n}\nfunction closedAfter($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.indexAfter(d), parent = $pos.node(d);\n        if (index == parent.childCount) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        for (let after = parent.child(index);; after = after.firstChild) {\n            if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating)\n                return true;\n            if (after.inlineContent)\n                return false;\n        }\n    }\n    return true;\n}\n\n/**\nCreate a gap cursor plugin. When enabled, this will capture clicks\nnear and arrow-key-motion past places that don't have a normally\nselectable position nearby, and create a gap cursor selection for\nthem. The cursor is drawn as an element with class\n`ProseMirror-gapcursor`. You can either include\n`style/gapcursor.css` from the package's directory or add your own\nstyles to make it visible.\n*/\nfunction gapCursor() {\n    return new Plugin({\n        props: {\n            decorations: drawGapCursor,\n            createSelectionBetween(_view, $anchor, $head) {\n                return $anchor.pos == $head.pos && GapCursor.valid($head) ? new GapCursor($head) : null;\n            },\n            handleClick,\n            handleKeyDown,\n            handleDOMEvents: { beforeinput: beforeinput }\n        }\n    });\n}\nconst handleKeyDown = keydownHandler({\n    \"ArrowLeft\": arrow(\"horiz\", -1),\n    \"ArrowRight\": arrow(\"horiz\", 1),\n    \"ArrowUp\": arrow(\"vert\", -1),\n    \"ArrowDown\": arrow(\"vert\", 1)\n});\nfunction arrow(axis, dir) {\n    const dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\");\n    return function (state, dispatch, view) {\n        let sel = state.selection;\n        let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty;\n        if (sel instanceof TextSelection) {\n            if (!view.endOfTextblock(dirStr) || $start.depth == 0)\n                return false;\n            mustMove = false;\n            $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n        }\n        let $found = GapCursor.findGapCursorFrom($start, dir, mustMove);\n        if (!$found)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(new GapCursor($found)));\n        return true;\n    };\n}\nfunction handleClick(view, pos, event) {\n    if (!view || !view.editable)\n        return false;\n    let $pos = view.state.doc.resolve(pos);\n    if (!GapCursor.valid($pos))\n        return false;\n    let clickPos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (clickPos && clickPos.inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(clickPos.inside)))\n        return false;\n    view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n    return true;\n}\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n    if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor))\n        return false;\n    let { $from } = view.state.selection;\n    let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text);\n    if (!insert)\n        return false;\n    let frag = Fragment.empty;\n    for (let i = insert.length - 1; i >= 0; i--)\n        frag = Fragment.from(insert[i].createAndFill(null, frag));\n    let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0));\n    tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)));\n    view.dispatch(tr);\n    return false;\n}\nfunction drawGapCursor(state) {\n    if (!(state.selection instanceof GapCursor))\n        return null;\n    let node = document.createElement(\"div\");\n    node.className = \"ProseMirror-gapcursor\";\n    return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, { key: \"gapcursor\" })]);\n}\n\nexport { GapCursor, gapCursor };\n", "import {\n  callOrReturn,\n  Extension,\n  getExtensionField,\n  ParentConfig,\n} from '@tiptap/core'\nimport { gapCursor } from '@tiptap/pm/gapcursor'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options, Storage> {\n    /**\n     * Allow gap cursor\n     */\n    allowGapCursor?:\n      | boolean\n      | null\n      | ((this: {\n        name: string,\n        options: Options,\n        storage: Storage,\n        parent: ParentConfig<NodeConfig<Options>>['allowGapCursor'],\n      }) => boolean | null),\n  }\n}\n\nexport const Gapcursor = Extension.create({\n  name: 'gapCursor',\n\n  addProseMirrorPlugins() {\n    return [\n      gapCursor(),\n    ]\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    return {\n      allowGapCursor: callOrReturn(getExtensionField(extension, 'allowGapCursor', context)) ?? null,\n    }\n  },\n})\n", "var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) \u2192 RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) \u2192 RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) \u2192 T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) \u2192 ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) \u2192 U, ?number, ?number) \u2192 [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) \u2192 RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nexport default RopeSequence;\n", "import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' \u2014 a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime, prevComposition) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n        this.prevComposition = prevComposition;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0, -1);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime, history.prevComposition);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime, history.prevComposition);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let composition = tr.getMeta(\"composition\");\n        let newGroup = history.prevTime == 0 ||\n            (!appended && history.prevComposition != composition &&\n                (history.prevTime < (tr.time || 0) - options.newGroupDelay || !isAdjacentTo(tr, history.prevRanges)));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1]);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time, composition == null ? history.prevComposition : composition);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(map) {\n    let result = [];\n    map.forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0, -1);\n    dispatch(pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist }).scrollIntoView());\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0, -1);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = (state, dispatch) => {\n    let hist = historyKey.getState(state);\n    if (!hist || hist.done.eventCount == 0)\n        return false;\n    if (dispatch)\n        histTransaction(hist, state, dispatch, false);\n    return true;\n};\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = (state, dispatch) => {\n    let hist = historyKey.getState(state);\n    if (!hist || hist.undone.eventCount == 0)\n        return false;\n    if (dispatch)\n        histTransaction(hist, state, dispatch, true);\n    return true;\n};\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, undo, undoDepth };\n", "import { Extension } from '@tiptap/core'\nimport { history, redo, undo } from '@tiptap/pm/history'\n\nexport interface HistoryOptions {\n  depth: number,\n  newGroupDelay: number,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    history: {\n      /**\n       * Undo recent changes\n       */\n      undo: () => ReturnType,\n      /**\n       * Reapply reverted changes\n       */\n      redo: () => ReturnType,\n    }\n  }\n}\n\nexport const History = Extension.create<HistoryOptions>({\n  name: 'history',\n\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500,\n    }\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ state, dispatch }) => {\n        return undo(state, dispatch)\n      },\n      redo: () => ({ state, dispatch }) => {\n        return redo(state, dispatch)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      history(this.options),\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n      'Mod-y': () => this.editor.commands.redo(),\n\n      // Russian keyboard layouts\n      'Mod-я': () => this.editor.commands.undo(),\n      'Shift-Mod-я': () => this.editor.commands.redo(),\n    }\n  },\n})\n", "import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nexport interface BlockquoteOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blockQuote: {\n      /**\n       * Set a blockquote node\n       */\n      setBlockquote: () => ReturnType,\n      /**\n       * Toggle a blockquote node\n       */\n      toggleBlockquote: () => ReturnType,\n      /**\n       * Unset a blockquote node\n       */\n      unsetBlockquote: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /^\\s*>\\s$/\n\nexport const Blockquote = Node.create<BlockquoteOptions>({\n\n  name: 'blockquote',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  group: 'block',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      { tag: 'blockquote' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBlockquote: () => ({ commands }) => {\n        return commands.wrapIn(this.name)\n      },\n      toggleBlockquote: () => ({ commands }) => {\n        return commands.toggleWrap(this.name)\n      },\n      unsetBlockquote: () => ({ commands }) => {\n        return commands.lift(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  HTMLAttributes: Record<string, any>,\n  bulletListTypeName: string\n  orderedListTypeName: string\n}\n\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList',\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n", "import {\n  getMarkAttributes,\n  Mark,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface TextStyleOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    textStyle: {\n      /**\n       * Remove spans without inline style attributes.\n       */\n      removeEmptyTextStyle: () => ReturnType,\n    }\n  }\n}\n\nexport const TextStyle = Mark.create<TextStyleOptions>({\n  name: 'textStyle',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'span',\n        getAttrs: element => {\n          const hasStyles = (element as HTMLElement).hasAttribute('style')\n\n          if (!hasStyles) {\n            return false\n          }\n\n          return {}\n        },\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['span', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      removeEmptyTextStyle: () => ({ state, commands }) => {\n        const attributes = getMarkAttributes(state, this.type)\n        const hasStyles = Object.entries(attributes).some(([, value]) => !!value)\n\n        if (hasStyles) {\n          return true\n        }\n\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n})\n", "import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nimport ListItem from '../../extension-list-item/src/index.js'\nimport TextStyle from '../../extension-text-style/src/index.js'\n\nexport interface BulletListOptions {\n  itemTypeName: string,\n  HTMLAttributes: Record<string, any>,\n  keepMarks: boolean,\n  keepAttributes: boolean,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bulletList: {\n      /**\n       * Toggle a bullet list\n       */\n      toggleBulletList: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /^\\s*([-+*])\\s$/\n\nexport const BulletList = Node.create<BulletListOptions>({\n  name: 'bulletList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false,\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  parseHTML() {\n    return [\n      { tag: 'ul' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleBulletList: () => ({ commands, chain }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItem.name, this.editor.getAttributes(TextStyle.name)).run()\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-8': () => this.editor.commands.toggleBulletList(),\n    }\n  },\n\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n    })\n\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: () => { return this.editor.getAttributes(TextStyle.name) },\n        editor: this.editor,\n      })\n    }\n    return [\n      inputRule,\n    ]\n  },\n})\n", "import { mergeAttributes, Node, nodeInputRule } from '@tiptap/core'\nimport { NodeSelection, TextSelection } from '@tiptap/pm/state'\n\nexport interface HorizontalRuleOptions {\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    horizontalRule: {\n      /**\n       * Add a horizontal rule\n       */\n      setHorizontalRule: () => ReturnType\n    }\n  }\n}\n\nexport const HorizontalRule = Node.create<HorizontalRuleOptions>({\n  name: 'horizontalRule',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  parseHTML() {\n    return [{ tag: 'hr' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setHorizontalRule:\n        () => ({ chain, state }) => {\n          const { $to: $originTo } = state.selection\n\n          const currentChain = chain()\n\n          if ($originTo.parentOffset === 0) {\n            currentChain.insertContentAt(Math.max($originTo.pos - 2, 0), { type: this.name })\n          } else {\n            currentChain.insertContent({ type: this.name })\n          }\n\n          return (\n            currentChain\n              // set cursor after horizontal rule\n              .command(({ tr, dispatch }) => {\n                if (dispatch) {\n                  const { $to } = tr.selection\n                  const posAfter = $to.end()\n\n                  if ($to.nodeAfter) {\n                    if ($to.nodeAfter.isTextblock) {\n                      tr.setSelection(TextSelection.create(tr.doc, $to.pos + 1))\n                    } else if ($to.nodeAfter.isBlock) {\n                      tr.setSelection(NodeSelection.create(tr.doc, $to.pos))\n                    } else {\n                      tr.setSelection(TextSelection.create(tr.doc, $to.pos))\n                    }\n                  } else {\n                    // add node after horizontal rule if it’s the end of the document\n                    const node = $to.parent.type.contentMatch.defaultType?.create()\n\n                    if (node) {\n                      tr.insert(posAfter, node)\n                      tr.setSelection(TextSelection.create(tr.doc, posAfter + 1))\n                    }\n                  }\n\n                  tr.scrollIntoView()\n                }\n\n                return true\n              })\n              .run()\n          )\n        },\n    }\n  },\n\n  addInputRules() {\n    return [\n      nodeInputRule({\n        find: /^(?:---|—-|___\\s|\\*\\*\\*\\s)$/,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  HTMLAttributes: Record<string, any>,\n  bulletListTypeName: string\n  orderedListTypeName: string\n}\n\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList',\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  HTMLAttributes: Record<string, any>,\n  bulletListTypeName: string\n  orderedListTypeName: string\n}\n\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList',\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n", "import {\n  getMarkAttributes,\n  Mark,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface TextStyleOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    textStyle: {\n      /**\n       * Remove spans without inline style attributes.\n       */\n      removeEmptyTextStyle: () => ReturnType,\n    }\n  }\n}\n\nexport const TextStyle = Mark.create<TextStyleOptions>({\n  name: 'textStyle',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'span',\n        getAttrs: element => {\n          const hasStyles = (element as HTMLElement).hasAttribute('style')\n\n          if (!hasStyles) {\n            return false\n          }\n\n          return {}\n        },\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['span', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      removeEmptyTextStyle: () => ({ state, commands }) => {\n        const attributes = getMarkAttributes(state, this.type)\n        const hasStyles = Object.entries(attributes).some(([, value]) => !!value)\n\n        if (hasStyles) {\n          return true\n        }\n\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n})\n", "import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nimport ListItem from '../../extension-list-item/src/index.js'\nimport TextStyle from '../../extension-text-style/src/index.js'\n\nexport interface OrderedListOptions {\n  itemTypeName: string,\n  HTMLAttributes: Record<string, any>,\n  keepMarks: boolean,\n  keepAttributes: boolean,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    orderedList: {\n      /**\n       * Toggle an ordered list\n       */\n      toggleOrderedList: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /^(\\d+)\\.\\s$/\n\nexport const OrderedList = Node.create<OrderedListOptions>({\n  name: 'orderedList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false,\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  addAttributes() {\n    return {\n      start: {\n        default: 1,\n        parseHTML: element => {\n          return element.hasAttribute('start')\n            ? parseInt(element.getAttribute('start') || '', 10)\n            : 1\n        },\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'ol',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const { start, ...attributesWithoutStart } = HTMLAttributes\n\n    return start === 1\n      ? ['ol', mergeAttributes(this.options.HTMLAttributes, attributesWithoutStart), 0]\n      : ['ol', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleOrderedList: () => ({ commands, chain }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItem.name, this.editor.getAttributes(TextStyle.name)).run()\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-7': () => this.editor.commands.toggleOrderedList(),\n    }\n  },\n\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n      getAttributes: match => ({ start: +match[1] }),\n      joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n    })\n\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: match => ({ start: +match[1], ...this.editor.getAttributes(TextStyle.name) }),\n        joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n        editor: this.editor,\n      })\n    }\n    return [\n      inputRule,\n    ]\n  },\n})\n", "import { Extension } from '@tiptap/core'\nimport { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\n\nexport interface CharacterCountOptions {\n  /**\n   * The maximum number of characters that should be allowed. Defaults to `0`.\n   */\n  limit: number | null | undefined\n  /**\n   * The mode by which the size is calculated. Defaults to 'textSize'.\n   */\n  mode: 'textSize' | 'nodeSize'\n}\n\nexport interface CharacterCountStorage {\n  /**\n   * Get the number of characters for the current document.\n   */\n  characters: (options?: { node?: ProseMirrorNode; mode?: 'textSize' | 'nodeSize' }) => number\n\n  /**\n   * Get the number of words for the current document.\n   */\n  words: (options?: { node?: ProseMirrorNode }) => number\n}\n\nexport const CharacterCount = Extension.create<CharacterCountOptions, CharacterCountStorage>({\n  name: 'characterCount',\n\n  addOptions() {\n    return {\n      limit: null,\n      mode: 'textSize',\n    }\n  },\n\n  addStorage() {\n    return {\n      characters: () => 0,\n      words: () => 0,\n    }\n  },\n\n  onBeforeCreate() {\n    this.storage.characters = options => {\n      const node = options?.node || this.editor.state.doc\n      const mode = options?.mode || this.options.mode\n\n      if (mode === 'textSize') {\n        const text = node.textBetween(0, node.content.size, undefined, ' ')\n\n        return text.length\n      }\n\n      return node.nodeSize\n    }\n\n    this.storage.words = options => {\n      const node = options?.node || this.editor.state.doc\n      const text = node.textBetween(0, node.content.size, ' ', ' ')\n      const words = text.split(' ').filter(word => word !== '')\n\n      return words.length\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('characterCount'),\n        filterTransaction: (transaction, state) => {\n          const limit = this.options.limit\n\n          // Nothing has changed or no limit is defined. Ignore it.\n          if (!transaction.docChanged || limit === 0 || limit === null || limit === undefined) {\n            return true\n          }\n\n          const oldSize = this.storage.characters({ node: state.doc })\n          const newSize = this.storage.characters({ node: transaction.doc })\n\n          // Everything is in the limit. Good.\n          if (newSize <= limit) {\n            return true\n          }\n\n          // The limit has already been exceeded but will be reduced.\n          if (oldSize > limit && newSize > limit && newSize <= oldSize) {\n            return true\n          }\n\n          // The limit has already been exceeded and will be increased further.\n          if (oldSize > limit && newSize > limit && newSize > oldSize) {\n            return false\n          }\n\n          const isPaste = transaction.getMeta('paste')\n\n          // Block all exceeding transactions that were not pasted.\n          if (!isPaste) {\n            return false\n          }\n\n          // For pasted content, we try to remove the exceeding content.\n          const pos = transaction.selection.$head.pos\n          const over = newSize - limit\n          const from = pos - over\n          const to = pos\n\n          // It’s probably a bad idea to mutate transactions within `filterTransaction`\n          // but for now this is working fine.\n          transaction.deleteRange(from, to)\n\n          // In some situations, the limit will continue to be exceeded after trimming.\n          // This happens e.g. when truncating within a complex node (e.g. table)\n          // and ProseMirror has to close this node again.\n          // If this is the case, we prevent the transaction completely.\n          const updatedSize = this.storage.characters({ node: transaction.doc })\n\n          if (updatedSize > limit) {\n            return false\n          }\n\n          return true\n        },\n      }),\n    ]\n  },\n})\n", "export const YOUTUBE_REGEX = /^(https?:\\/\\/)?(www\\.|music\\.)?(youtube\\.com|youtu\\.be)\\/(?!channel\\/)(?!@)(.+)?$/\nexport const YOUTUBE_REGEX_GLOBAL = /^(https?:\\/\\/)?(www\\.|music\\.)?(youtube\\.com|youtu\\.be)\\/(?!channel\\/)(?!@)(.+)?$/g\n\nexport const isValidYoutubeUrl = (url: string) => {\n  return url.match(YOUTUBE_REGEX)\n}\n\nexport interface GetEmbedUrlOptions {\n  url: string;\n  allowFullscreen?: boolean;\n  autoplay?: boolean;\n  ccLanguage?:string;\n  ccLoadPolicy?:boolean;\n  controls?: boolean;\n  disableKBcontrols?: boolean,\n  enableIFrameApi?: boolean;\n  endTime?: number;\n  interfaceLanguage?: string;\n  ivLoadPolicy?: number;\n  loop?: boolean;\n  modestBranding?: boolean;\n  nocookie?: boolean;\n  origin?: string;\n  playlist?: string;\n  progressBarColor?: string;\n  startAt?: number;\n}\n\nexport const getYoutubeEmbedUrl = (nocookie?: boolean) => {\n  return nocookie ? 'https://www.youtube-nocookie.com/embed/' : 'https://www.youtube.com/embed/'\n}\n\nexport const getEmbedUrlFromYoutubeUrl = (options: GetEmbedUrlOptions) => {\n  const {\n    url,\n    allowFullscreen,\n    autoplay,\n    ccLanguage,\n    ccLoadPolicy,\n    controls,\n    disableKBcontrols,\n    enableIFrameApi,\n    endTime,\n    interfaceLanguage,\n    ivLoadPolicy,\n    loop,\n    modestBranding,\n    nocookie,\n    origin,\n    playlist,\n    progressBarColor,\n    startAt,\n  } = options\n\n  if (!isValidYoutubeUrl(url)) {\n    return null\n  }\n\n  // if is already an embed url, return it\n  if (url.includes('/embed/')) {\n    return url\n  }\n\n  // if is a youtu.be url, get the id after the /\n  if (url.includes('youtu.be')) {\n    const id = url.split('/').pop()\n\n    if (!id) {\n      return null\n    }\n    return `${getYoutubeEmbedUrl(nocookie)}${id}`\n  }\n\n  const videoIdRegex = /(?:v=|shorts\\/)([-\\w]+)/gm\n  const matches = videoIdRegex.exec(url)\n\n  if (!matches || !matches[1]) {\n    return null\n  }\n\n  let outputUrl = `${getYoutubeEmbedUrl(nocookie)}${matches[1]}`\n\n  const params = []\n\n  if (allowFullscreen === false) {\n    params.push('fs=0')\n  }\n\n  if (autoplay) {\n    params.push('autoplay=1')\n  }\n\n  if (ccLanguage) {\n    params.push(`cc_lang_pref=${ccLanguage}`)\n  }\n\n  if (ccLoadPolicy) {\n    params.push('cc_load_policy=1')\n  }\n\n  if (!controls) {\n    params.push('controls=0')\n  }\n\n  if (disableKBcontrols) {\n    params.push('disablekb=1')\n  }\n\n  if (enableIFrameApi) {\n    params.push('enablejsapi=1')\n  }\n\n  if (endTime) {\n    params.push(`end=${endTime}`)\n  }\n\n  if (interfaceLanguage) {\n    params.push(`hl=${interfaceLanguage}`)\n  }\n\n  if (ivLoadPolicy) {\n    params.push(`iv_load_policy=${ivLoadPolicy}`)\n  }\n\n  if (loop) {\n    params.push('loop=1')\n  }\n\n  if (modestBranding) {\n    params.push('modestbranding=1')\n  }\n\n  if (origin) {\n    params.push(`origin=${origin}`)\n  }\n\n  if (playlist) {\n    params.push(`playlist=${playlist}`)\n  }\n\n  if (startAt) {\n    params.push(`start=${startAt}`)\n  }\n\n  if (progressBarColor) {\n    params.push(`color=${progressBarColor}`)\n  }\n\n  if (params.length) {\n    outputUrl += `?${params.join('&')}`\n  }\n\n  return outputUrl\n}\n", "import { mergeAttributes, Node, nodePasteRule } from '@tiptap/core'\n\nimport { getEmbedUrlFromYoutubeUrl, isValidYoutubeUrl, YOUTUBE_REGEX_GLOBAL } from './utils.js'\n\nexport interface YoutubeOptions {\n  addPasteHandler: boolean;\n  allowFullscreen: boolean;\n  autoplay: boolean;\n  ccLanguage?: string;\n  ccLoadPolicy?: boolean;\n  controls: boolean;\n  disableKBcontrols: boolean;\n  enableIFrameApi: boolean;\n  endTime: number;\n  height: number;\n  interfaceLanguage?: string;\n  ivLoadPolicy: number;\n  loop: boolean;\n  modestBranding: boolean;\n  HTMLAttributes: Record<string, any>;\n  inline: boolean;\n  nocookie: boolean;\n  origin: string;\n  playlist: string;\n  progressBarColor?: string;\n  width: number;\n}\n\ntype SetYoutubeVideoOptions = { src: string, width?: number, height?: number, start?: number }\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    youtube: {\n      /**\n       * Insert a youtube video\n       */\n      setYoutubeVideo: (options: SetYoutubeVideoOptions) => ReturnType,\n    }\n  }\n}\n\nexport const Youtube = Node.create<YoutubeOptions>({\n  name: 'youtube',\n\n  addOptions() {\n    return {\n      addPasteHandler: true,\n      allowFullscreen: true,\n      autoplay: false,\n      ccLanguage: undefined,\n      ccLoadPolicy: undefined,\n      controls: true,\n      disableKBcontrols: false,\n      enableIFrameApi: false,\n      endTime: 0,\n      height: 480,\n      interfaceLanguage: undefined,\n      ivLoadPolicy: 0,\n      loop: false,\n      modestBranding: false,\n      HTMLAttributes: {},\n      inline: false,\n      nocookie: false,\n      origin: '',\n      playlist: '',\n      progressBarColor: undefined,\n      width: 640,\n    }\n  },\n\n  inline() {\n    return this.options.inline\n  },\n\n  group() {\n    return this.options.inline ? 'inline' : 'block'\n  },\n\n  draggable: true,\n\n  addAttributes() {\n    return {\n      src: {\n        default: null,\n      },\n      start: {\n        default: 0,\n      },\n      width: {\n        default: this.options.width,\n      },\n      height: {\n        default: this.options.height,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'div[data-youtube-video] iframe',\n      },\n    ]\n  },\n\n  addCommands() {\n    return {\n      setYoutubeVideo: (options: SetYoutubeVideoOptions) => ({ commands }) => {\n        if (!isValidYoutubeUrl(options.src)) {\n          return false\n        }\n\n        return commands.insertContent({\n          type: this.name,\n          attrs: options,\n        })\n      },\n    }\n  },\n\n  addPasteRules() {\n    if (!this.options.addPasteHandler) {\n      return []\n    }\n\n    return [\n      nodePasteRule({\n        find: YOUTUBE_REGEX_GLOBAL,\n        type: this.type,\n        getAttributes: match => {\n          return { src: match.input }\n        },\n      }),\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const embedUrl = getEmbedUrlFromYoutubeUrl({\n      url: HTMLAttributes.src,\n      allowFullscreen: this.options.allowFullscreen,\n      autoplay: this.options.autoplay,\n      ccLanguage: this.options.ccLanguage,\n      ccLoadPolicy: this.options.ccLoadPolicy,\n      controls: this.options.controls,\n      disableKBcontrols: this.options.disableKBcontrols,\n      enableIFrameApi: this.options.enableIFrameApi,\n      endTime: this.options.endTime,\n      interfaceLanguage: this.options.interfaceLanguage,\n      ivLoadPolicy: this.options.ivLoadPolicy,\n      loop: this.options.loop,\n      modestBranding: this.options.modestBranding,\n      nocookie: this.options.nocookie,\n      origin: this.options.origin,\n      playlist: this.options.playlist,\n      progressBarColor: this.options.progressBarColor,\n      startAt: HTMLAttributes.start || 0,\n    })\n\n    HTMLAttributes.src = embedUrl\n\n    return [\n      'div',\n      { 'data-youtube-video': '' },\n      [\n        'iframe',\n        mergeAttributes(\n          this.options.HTMLAttributes,\n          {\n            width: this.options.width,\n            height: this.options.height,\n            allowfullscreen: this.options.allowFullscreen,\n            autoplay: this.options.autoplay,\n            ccLanguage: this.options.ccLanguage,\n            ccLoadPolicy: this.options.ccLoadPolicy,\n            disableKBcontrols: this.options.disableKBcontrols,\n            enableIFrameApi: this.options.enableIFrameApi,\n            endTime: this.options.endTime,\n            interfaceLanguage: this.options.interfaceLanguage,\n            ivLoadPolicy: this.options.ivLoadPolicy,\n            loop: this.options.loop,\n            modestBranding: this.options.modestBranding,\n            origin: this.options.origin,\n            playlist: this.options.playlist,\n            progressBarColor: this.options.progressBarColor,\n          },\n          HTMLAttributes,\n        ),\n      ],\n    ]\n  },\n})\n", "import { Mark, mergeAttributes } from '@tiptap/core'\n\nexport interface UnderlineOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    underline: {\n      /**\n       * Set an underline mark\n       */\n      setUnderline: () => ReturnType,\n      /**\n       * Toggle an underline mark\n       */\n      toggleUnderline: () => ReturnType,\n      /**\n       * Unset an underline mark\n       */\n      unsetUnderline: () => ReturnType,\n    }\n  }\n}\n\nexport const Underline = Mark.create<UnderlineOptions>({\n  name: 'underline',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'u',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('underline') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['u', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setUnderline: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleUnderline: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetUnderline: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-u': () => this.editor.commands.toggleUnderline(),\n      'Mod-U': () => this.editor.commands.toggleUnderline(),\n    }\n  },\n})\n", "// src/index.ts\nimport { Plugin as Plugin2 } from \"prosemirror-state\";\n\n// src/cellselection.ts\nimport { Fragment, Slice } from \"prosemirror-model\";\nimport {\n  NodeSelection as NodeSelection2,\n  Selection,\n  SelectionRange,\n  TextSelection\n} from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\n// src/tablemap.ts\nvar readFromCache;\nvar addToCache;\nif (typeof WeakMap != \"undefined\") {\n  let cache = /* @__PURE__ */ new WeakMap();\n  readFromCache = (key) => cache.get(key);\n  addToCache = (key, value) => {\n    cache.set(key, value);\n    return value;\n  };\n} else {\n  const cache = [];\n  const cacheSize = 10;\n  let cachePos = 0;\n  readFromCache = (key) => {\n    for (let i = 0; i < cache.length; i += 2)\n      if (cache[i] == key)\n        return cache[i + 1];\n  };\n  addToCache = (key, value) => {\n    if (cachePos == cacheSize)\n      cachePos = 0;\n    cache[cachePos++] = key;\n    return cache[cachePos++] = value;\n  };\n}\nvar TableMap = class {\n  constructor(width, height, map, problems) {\n    this.width = width;\n    this.height = height;\n    this.map = map;\n    this.problems = problems;\n  }\n  // Find the dimensions of the cell at the given position.\n  findCell(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      const curPos = this.map[i];\n      if (curPos != pos)\n        continue;\n      const left = i % this.width;\n      const top = i / this.width | 0;\n      let right = left + 1;\n      let bottom = top + 1;\n      for (let j = 1; right < this.width && this.map[i + j] == curPos; j++) {\n        right++;\n      }\n      for (let j = 1; bottom < this.height && this.map[i + this.width * j] == curPos; j++) {\n        bottom++;\n      }\n      return { left, top, right, bottom };\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the left side of the cell at the given position.\n  colCount(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      if (this.map[i] == pos) {\n        return i % this.width;\n      }\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the next cell in the given direction, starting from the cell\n  // at `pos`, if any.\n  nextCell(pos, axis, dir) {\n    const { left, right, top, bottom } = this.findCell(pos);\n    if (axis == \"horiz\") {\n      if (dir < 0 ? left == 0 : right == this.width)\n        return null;\n      return this.map[top * this.width + (dir < 0 ? left - 1 : right)];\n    } else {\n      if (dir < 0 ? top == 0 : bottom == this.height)\n        return null;\n      return this.map[left + this.width * (dir < 0 ? top - 1 : bottom)];\n    }\n  }\n  // Get the rectangle spanning the two given cells.\n  rectBetween(a, b) {\n    const {\n      left: leftA,\n      right: rightA,\n      top: topA,\n      bottom: bottomA\n    } = this.findCell(a);\n    const {\n      left: leftB,\n      right: rightB,\n      top: topB,\n      bottom: bottomB\n    } = this.findCell(b);\n    return {\n      left: Math.min(leftA, leftB),\n      top: Math.min(topA, topB),\n      right: Math.max(rightA, rightB),\n      bottom: Math.max(bottomA, bottomB)\n    };\n  }\n  // Return the position of all cells that have the top left corner in\n  // the given rectangle.\n  cellsInRect(rect) {\n    const result = [];\n    const seen = {};\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const index = row * this.width + col;\n        const pos = this.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        if (col == rect.left && col && this.map[index - 1] == pos || row == rect.top && row && this.map[index - this.width] == pos) {\n          continue;\n        }\n        result.push(pos);\n      }\n    }\n    return result;\n  }\n  // Return the position at which the cell at the given row and column\n  // starts, or would start, if a cell started there.\n  positionAt(row, col, table) {\n    for (let i = 0, rowStart = 0; ; i++) {\n      const rowEnd = rowStart + table.child(i).nodeSize;\n      if (i == row) {\n        let index = col + row * this.width;\n        const rowEndIndex = (row + 1) * this.width;\n        while (index < rowEndIndex && this.map[index] < rowStart)\n          index++;\n        return index == rowEndIndex ? rowEnd - 1 : this.map[index];\n      }\n      rowStart = rowEnd;\n    }\n  }\n  // Find the table map for the given table node.\n  static get(table) {\n    return readFromCache(table) || addToCache(table, computeMap(table));\n  }\n};\nfunction computeMap(table) {\n  if (table.type.spec.tableRole != \"table\")\n    throw new RangeError(\"Not a table node: \" + table.type.name);\n  const width = findWidth(table), height = table.childCount;\n  const map = [];\n  let mapPos = 0;\n  let problems = null;\n  const colWidths = [];\n  for (let i = 0, e = width * height; i < e; i++)\n    map[i] = 0;\n  for (let row = 0, pos = 0; row < height; row++) {\n    const rowNode = table.child(row);\n    pos++;\n    for (let i = 0; ; i++) {\n      while (mapPos < map.length && map[mapPos] != 0)\n        mapPos++;\n      if (i == rowNode.childCount)\n        break;\n      const cellNode = rowNode.child(i);\n      const { colspan, rowspan, colwidth } = cellNode.attrs;\n      for (let h = 0; h < rowspan; h++) {\n        if (h + row >= height) {\n          (problems || (problems = [])).push({\n            type: \"overlong_rowspan\",\n            pos,\n            n: rowspan - h\n          });\n          break;\n        }\n        const start = mapPos + h * width;\n        for (let w = 0; w < colspan; w++) {\n          if (map[start + w] == 0)\n            map[start + w] = pos;\n          else\n            (problems || (problems = [])).push({\n              type: \"collision\",\n              row,\n              pos,\n              n: colspan - w\n            });\n          const colW = colwidth && colwidth[w];\n          if (colW) {\n            const widthIndex = (start + w) % width * 2, prev = colWidths[widthIndex];\n            if (prev == null || prev != colW && colWidths[widthIndex + 1] == 1) {\n              colWidths[widthIndex] = colW;\n              colWidths[widthIndex + 1] = 1;\n            } else if (prev == colW) {\n              colWidths[widthIndex + 1]++;\n            }\n          }\n        }\n      }\n      mapPos += colspan;\n      pos += cellNode.nodeSize;\n    }\n    const expectedPos = (row + 1) * width;\n    let missing = 0;\n    while (mapPos < expectedPos)\n      if (map[mapPos++] == 0)\n        missing++;\n    if (missing)\n      (problems || (problems = [])).push({ type: \"missing\", row, n: missing });\n    pos++;\n  }\n  const tableMap = new TableMap(width, height, map, problems);\n  let badWidths = false;\n  for (let i = 0; !badWidths && i < colWidths.length; i += 2)\n    if (colWidths[i] != null && colWidths[i + 1] < height)\n      badWidths = true;\n  if (badWidths)\n    findBadColWidths(tableMap, colWidths, table);\n  return tableMap;\n}\nfunction findWidth(table) {\n  let width = -1;\n  let hasRowSpan = false;\n  for (let row = 0; row < table.childCount; row++) {\n    const rowNode = table.child(row);\n    let rowWidth = 0;\n    if (hasRowSpan)\n      for (let j = 0; j < row; j++) {\n        const prevRow = table.child(j);\n        for (let i = 0; i < prevRow.childCount; i++) {\n          const cell = prevRow.child(i);\n          if (j + cell.attrs.rowspan > row)\n            rowWidth += cell.attrs.colspan;\n        }\n      }\n    for (let i = 0; i < rowNode.childCount; i++) {\n      const cell = rowNode.child(i);\n      rowWidth += cell.attrs.colspan;\n      if (cell.attrs.rowspan > 1)\n        hasRowSpan = true;\n    }\n    if (width == -1)\n      width = rowWidth;\n    else if (width != rowWidth)\n      width = Math.max(width, rowWidth);\n  }\n  return width;\n}\nfunction findBadColWidths(map, colWidths, table) {\n  if (!map.problems)\n    map.problems = [];\n  const seen = {};\n  for (let i = 0; i < map.map.length; i++) {\n    const pos = map.map[i];\n    if (seen[pos])\n      continue;\n    seen[pos] = true;\n    const node = table.nodeAt(pos);\n    if (!node) {\n      throw new RangeError(`No cell with offset ${pos} found`);\n    }\n    let updated = null;\n    const attrs = node.attrs;\n    for (let j = 0; j < attrs.colspan; j++) {\n      const col = (i + j) % map.width;\n      const colWidth = colWidths[col * 2];\n      if (colWidth != null && (!attrs.colwidth || attrs.colwidth[j] != colWidth))\n        (updated || (updated = freshColWidth(attrs)))[j] = colWidth;\n    }\n    if (updated)\n      map.problems.unshift({\n        type: \"colwidth mismatch\",\n        pos,\n        colwidth: updated\n      });\n  }\n}\nfunction freshColWidth(attrs) {\n  if (attrs.colwidth)\n    return attrs.colwidth.slice();\n  const result = [];\n  for (let i = 0; i < attrs.colspan; i++)\n    result.push(0);\n  return result;\n}\n\n// src/util.ts\nimport { PluginKey } from \"prosemirror-state\";\n\n// src/schema.ts\nfunction getCellAttrs(dom, extraAttrs) {\n  if (typeof dom === \"string\") {\n    return {};\n  }\n  const widthAttr = dom.getAttribute(\"data-colwidth\");\n  const widths = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(\",\").map((s) => Number(s)) : null;\n  const colspan = Number(dom.getAttribute(\"colspan\") || 1);\n  const result = {\n    colspan,\n    rowspan: Number(dom.getAttribute(\"rowspan\") || 1),\n    colwidth: widths && widths.length == colspan ? widths : null\n  };\n  for (const prop in extraAttrs) {\n    const getter = extraAttrs[prop].getFromDOM;\n    const value = getter && getter(dom);\n    if (value != null) {\n      result[prop] = value;\n    }\n  }\n  return result;\n}\nfunction setCellAttrs(node, extraAttrs) {\n  const attrs = {};\n  if (node.attrs.colspan != 1)\n    attrs.colspan = node.attrs.colspan;\n  if (node.attrs.rowspan != 1)\n    attrs.rowspan = node.attrs.rowspan;\n  if (node.attrs.colwidth)\n    attrs[\"data-colwidth\"] = node.attrs.colwidth.join(\",\");\n  for (const prop in extraAttrs) {\n    const setter = extraAttrs[prop].setDOMAttr;\n    if (setter)\n      setter(node.attrs[prop], attrs);\n  }\n  return attrs;\n}\nfunction tableNodes(options) {\n  const extraAttrs = options.cellAttributes || {};\n  const cellAttrs = {\n    colspan: { default: 1 },\n    rowspan: { default: 1 },\n    colwidth: { default: null }\n  };\n  for (const prop in extraAttrs)\n    cellAttrs[prop] = { default: extraAttrs[prop].default };\n  return {\n    table: {\n      content: \"table_row+\",\n      tableRole: \"table\",\n      isolating: true,\n      group: options.tableGroup,\n      parseDOM: [{ tag: \"table\" }],\n      toDOM() {\n        return [\"table\", [\"tbody\", 0]];\n      }\n    },\n    table_row: {\n      content: \"(table_cell | table_header)*\",\n      tableRole: \"row\",\n      parseDOM: [{ tag: \"tr\" }],\n      toDOM() {\n        return [\"tr\", 0];\n      }\n    },\n    table_cell: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"td\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"td\", setCellAttrs(node, extraAttrs), 0];\n      }\n    },\n    table_header: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"header_cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"th\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"th\", setCellAttrs(node, extraAttrs), 0];\n      }\n    }\n  };\n}\nfunction tableNodeTypes(schema) {\n  let result = schema.cached.tableNodeTypes;\n  if (!result) {\n    result = schema.cached.tableNodeTypes = {};\n    for (const name in schema.nodes) {\n      const type = schema.nodes[name], role = type.spec.tableRole;\n      if (role)\n        result[role] = type;\n    }\n  }\n  return result;\n}\n\n// src/util.ts\nvar tableEditingKey = new PluginKey(\"selectingCells\");\nfunction cellAround($pos) {\n  for (let d = $pos.depth - 1; d > 0; d--)\n    if ($pos.node(d).type.spec.tableRole == \"row\")\n      return $pos.node(0).resolve($pos.before(d + 1));\n  return null;\n}\nfunction cellWrapping($pos) {\n  for (let d = $pos.depth; d > 0; d--) {\n    const role = $pos.node(d).type.spec.tableRole;\n    if (role === \"cell\" || role === \"header_cell\")\n      return $pos.node(d);\n  }\n  return null;\n}\nfunction isInTable(state) {\n  const $head = state.selection.$head;\n  for (let d = $head.depth; d > 0; d--)\n    if ($head.node(d).type.spec.tableRole == \"row\")\n      return true;\n  return false;\n}\nfunction selectionCell(state) {\n  const sel = state.selection;\n  if (\"$anchorCell\" in sel && sel.$anchorCell) {\n    return sel.$anchorCell.pos > sel.$headCell.pos ? sel.$anchorCell : sel.$headCell;\n  } else if (\"node\" in sel && sel.node && sel.node.type.spec.tableRole == \"cell\") {\n    return sel.$anchor;\n  }\n  const $cell = cellAround(sel.$head) || cellNear(sel.$head);\n  if ($cell) {\n    return $cell;\n  }\n  throw new RangeError(`No cell found around position ${sel.head}`);\n}\nfunction cellNear($pos) {\n  for (let after = $pos.nodeAfter, pos = $pos.pos; after; after = after.firstChild, pos++) {\n    const role = after.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos);\n  }\n  for (let before = $pos.nodeBefore, pos = $pos.pos; before; before = before.lastChild, pos--) {\n    const role = before.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos - before.nodeSize);\n  }\n}\nfunction pointsAtCell($pos) {\n  return $pos.parent.type.spec.tableRole == \"row\" && !!$pos.nodeAfter;\n}\nfunction moveCellForward($pos) {\n  return $pos.node(0).resolve($pos.pos + $pos.nodeAfter.nodeSize);\n}\nfunction inSameTable($cellA, $cellB) {\n  return $cellA.depth == $cellB.depth && $cellA.pos >= $cellB.start(-1) && $cellA.pos <= $cellB.end(-1);\n}\nfunction findCell($pos) {\n  return TableMap.get($pos.node(-1)).findCell($pos.pos - $pos.start(-1));\n}\nfunction colCount($pos) {\n  return TableMap.get($pos.node(-1)).colCount($pos.pos - $pos.start(-1));\n}\nfunction nextCell($pos, axis, dir) {\n  const table = $pos.node(-1);\n  const map = TableMap.get(table);\n  const tableStart = $pos.start(-1);\n  const moved = map.nextCell($pos.pos - tableStart, axis, dir);\n  return moved == null ? null : $pos.node(0).resolve(tableStart + moved);\n}\nfunction removeColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan - n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    result.colwidth.splice(pos, n);\n    if (!result.colwidth.some((w) => w > 0))\n      result.colwidth = null;\n  }\n  return result;\n}\nfunction addColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan + n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    for (let i = 0; i < n; i++)\n      result.colwidth.splice(pos, 0, 0);\n  }\n  return result;\n}\nfunction columnIsHeader(map, table, col) {\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let row = 0; row < map.height; row++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false;\n  return true;\n}\n\n// src/cellselection.ts\nvar CellSelection = class _CellSelection extends Selection {\n  // A table selection is identified by its anchor and head cells. The\n  // positions given to this constructor should point _before_ two\n  // cells in the same table. They may be the same, to select a single\n  // cell.\n  constructor($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const rect = map.rectBetween(\n      $anchorCell.pos - tableStart,\n      $headCell.pos - tableStart\n    );\n    const doc = $anchorCell.node(0);\n    const cells = map.cellsInRect(rect).filter((p) => p != $headCell.pos - tableStart);\n    cells.unshift($headCell.pos - tableStart);\n    const ranges = cells.map((pos) => {\n      const cell = table.nodeAt(pos);\n      if (!cell) {\n        throw RangeError(`No cell with offset ${pos} found`);\n      }\n      const from = tableStart + pos + 1;\n      return new SelectionRange(\n        doc.resolve(from),\n        doc.resolve(from + cell.content.size)\n      );\n    });\n    super(ranges[0].$from, ranges[0].$to, ranges);\n    this.$anchorCell = $anchorCell;\n    this.$headCell = $headCell;\n  }\n  map(doc, mapping) {\n    const $anchorCell = doc.resolve(mapping.map(this.$anchorCell.pos));\n    const $headCell = doc.resolve(mapping.map(this.$headCell.pos));\n    if (pointsAtCell($anchorCell) && pointsAtCell($headCell) && inSameTable($anchorCell, $headCell)) {\n      const tableChanged = this.$anchorCell.node(-1) != $anchorCell.node(-1);\n      if (tableChanged && this.isRowSelection())\n        return _CellSelection.rowSelection($anchorCell, $headCell);\n      else if (tableChanged && this.isColSelection())\n        return _CellSelection.colSelection($anchorCell, $headCell);\n      else\n        return new _CellSelection($anchorCell, $headCell);\n    }\n    return TextSelection.between($anchorCell, $headCell);\n  }\n  // Returns a rectangular slice of table rows containing the selected\n  // cells.\n  content() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const rect = map.rectBetween(\n      this.$anchorCell.pos - tableStart,\n      this.$headCell.pos - tableStart\n    );\n    const seen = {};\n    const rows = [];\n    for (let row = rect.top; row < rect.bottom; row++) {\n      const rowContent = [];\n      for (let index = row * map.width + rect.left, col = rect.left; col < rect.right; col++, index++) {\n        const pos = map.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        const cellRect = map.findCell(pos);\n        let cell = table.nodeAt(pos);\n        if (!cell) {\n          throw RangeError(`No cell with offset ${pos} found`);\n        }\n        const extraLeft = rect.left - cellRect.left;\n        const extraRight = cellRect.right - rect.right;\n        if (extraLeft > 0 || extraRight > 0) {\n          let attrs = cell.attrs;\n          if (extraLeft > 0) {\n            attrs = removeColSpan(attrs, 0, extraLeft);\n          }\n          if (extraRight > 0) {\n            attrs = removeColSpan(\n              attrs,\n              attrs.colspan - extraRight,\n              extraRight\n            );\n          }\n          if (cellRect.left < rect.left) {\n            cell = cell.type.createAndFill(attrs);\n            if (!cell) {\n              throw RangeError(\n                `Could not create cell with attrs ${JSON.stringify(attrs)}`\n              );\n            }\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        if (cellRect.top < rect.top || cellRect.bottom > rect.bottom) {\n          const attrs = {\n            ...cell.attrs,\n            rowspan: Math.min(cellRect.bottom, rect.bottom) - Math.max(cellRect.top, rect.top)\n          };\n          if (cellRect.top < rect.top) {\n            cell = cell.type.createAndFill(attrs);\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        rowContent.push(cell);\n      }\n      rows.push(table.child(row).copy(Fragment.from(rowContent)));\n    }\n    const fragment = this.isColSelection() && this.isRowSelection() ? table : rows;\n    return new Slice(Fragment.from(fragment), 1, 1);\n  }\n  replace(tr, content = Slice.empty) {\n    const mapFrom = tr.steps.length, ranges = this.ranges;\n    for (let i = 0; i < ranges.length; i++) {\n      const { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n      tr.replace(\n        mapping.map($from.pos),\n        mapping.map($to.pos),\n        i ? Slice.empty : content\n      );\n    }\n    const sel = Selection.findFrom(\n      tr.doc.resolve(tr.mapping.slice(mapFrom).map(this.to)),\n      -1\n    );\n    if (sel)\n      tr.setSelection(sel);\n  }\n  replaceWith(tr, node) {\n    this.replace(tr, new Slice(Fragment.from(node), 0, 0));\n  }\n  forEachCell(f) {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const cells = map.cellsInRect(\n      map.rectBetween(\n        this.$anchorCell.pos - tableStart,\n        this.$headCell.pos - tableStart\n      )\n    );\n    for (let i = 0; i < cells.length; i++) {\n      f(table.nodeAt(cells[i]), tableStart + cells[i]);\n    }\n  }\n  // True if this selection goes all the way from the top to the\n  // bottom of the table.\n  isColSelection() {\n    const anchorTop = this.$anchorCell.index(-1);\n    const headTop = this.$headCell.index(-1);\n    if (Math.min(anchorTop, headTop) > 0)\n      return false;\n    const anchorBottom = anchorTop + this.$anchorCell.nodeAfter.attrs.rowspan;\n    const headBottom = headTop + this.$headCell.nodeAfter.attrs.rowspan;\n    return Math.max(anchorBottom, headBottom) == this.$headCell.node(-1).childCount;\n  }\n  // Returns the smallest column selection that covers the given anchor\n  // and head cell.\n  static colSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.top <= headRect.top) {\n      if (anchorRect.top > 0)\n        $anchorCell = doc.resolve(tableStart + map.map[anchorRect.left]);\n      if (headRect.bottom < map.height)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + headRect.right - 1]\n        );\n    } else {\n      if (headRect.top > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.left]);\n      if (anchorRect.bottom < map.height)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + anchorRect.right - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  // True if this selection goes all the way from the left to the\n  // right of the table.\n  isRowSelection() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const anchorLeft = map.colCount(this.$anchorCell.pos - tableStart);\n    const headLeft = map.colCount(this.$headCell.pos - tableStart);\n    if (Math.min(anchorLeft, headLeft) > 0)\n      return false;\n    const anchorRight = anchorLeft + this.$anchorCell.nodeAfter.attrs.colspan;\n    const headRight = headLeft + this.$headCell.nodeAfter.attrs.colspan;\n    return Math.max(anchorRight, headRight) == map.width;\n  }\n  eq(other) {\n    return other instanceof _CellSelection && other.$anchorCell.pos == this.$anchorCell.pos && other.$headCell.pos == this.$headCell.pos;\n  }\n  // Returns the smallest row selection that covers the given anchor\n  // and head cell.\n  static rowSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.left <= headRect.left) {\n      if (anchorRect.left > 0)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[anchorRect.top * map.width]\n        );\n      if (headRect.right < map.width)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (headRect.top + 1) - 1]\n        );\n    } else {\n      if (headRect.left > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.top * map.width]);\n      if (anchorRect.right < map.width)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (anchorRect.top + 1) - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  toJSON() {\n    return {\n      type: \"cell\",\n      anchor: this.$anchorCell.pos,\n      head: this.$headCell.pos\n    };\n  }\n  static fromJSON(doc, json) {\n    return new _CellSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n  }\n  static create(doc, anchorCell, headCell = anchorCell) {\n    return new _CellSelection(doc.resolve(anchorCell), doc.resolve(headCell));\n  }\n  getBookmark() {\n    return new CellBookmark(this.$anchorCell.pos, this.$headCell.pos);\n  }\n};\nCellSelection.prototype.visible = false;\nSelection.jsonID(\"cell\", CellSelection);\nvar CellBookmark = class _CellBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor;\n    this.head = head;\n  }\n  map(mapping) {\n    return new _CellBookmark(mapping.map(this.anchor), mapping.map(this.head));\n  }\n  resolve(doc) {\n    const $anchorCell = doc.resolve(this.anchor), $headCell = doc.resolve(this.head);\n    if ($anchorCell.parent.type.spec.tableRole == \"row\" && $headCell.parent.type.spec.tableRole == \"row\" && $anchorCell.index() < $anchorCell.parent.childCount && $headCell.index() < $headCell.parent.childCount && inSameTable($anchorCell, $headCell))\n      return new CellSelection($anchorCell, $headCell);\n    else\n      return Selection.near($headCell, 1);\n  }\n};\nfunction drawCellSelection(state) {\n  if (!(state.selection instanceof CellSelection))\n    return null;\n  const cells = [];\n  state.selection.forEachCell((node, pos) => {\n    cells.push(\n      Decoration.node(pos, pos + node.nodeSize, { class: \"selectedCell\" })\n    );\n  });\n  return DecorationSet.create(state.doc, cells);\n}\nfunction isCellBoundarySelection({ $from, $to }) {\n  if ($from.pos == $to.pos || $from.pos < $from.pos - 6)\n    return false;\n  let afterFrom = $from.pos;\n  let beforeTo = $to.pos;\n  let depth = $from.depth;\n  for (; depth >= 0; depth--, afterFrom++)\n    if ($from.after(depth + 1) < $from.end(depth))\n      break;\n  for (let d = $to.depth; d >= 0; d--, beforeTo--)\n    if ($to.before(d + 1) > $to.start(d))\n      break;\n  return afterFrom == beforeTo && /row|table/.test($from.node(depth).type.spec.tableRole);\n}\nfunction isTextSelectionAcrossCells({ $from, $to }) {\n  let fromCellBoundaryNode;\n  let toCellBoundaryNode;\n  for (let i = $from.depth; i > 0; i--) {\n    const node = $from.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      fromCellBoundaryNode = node;\n      break;\n    }\n  }\n  for (let i = $to.depth; i > 0; i--) {\n    const node = $to.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      toCellBoundaryNode = node;\n      break;\n    }\n  }\n  return fromCellBoundaryNode !== toCellBoundaryNode && $to.parentOffset === 0;\n}\nfunction normalizeSelection(state, tr, allowTableNodeSelection) {\n  const sel = (tr || state).selection;\n  const doc = (tr || state).doc;\n  let normalize;\n  let role;\n  if (sel instanceof NodeSelection2 && (role = sel.node.type.spec.tableRole)) {\n    if (role == \"cell\" || role == \"header_cell\") {\n      normalize = CellSelection.create(doc, sel.from);\n    } else if (role == \"row\") {\n      const $cell = doc.resolve(sel.from + 1);\n      normalize = CellSelection.rowSelection($cell, $cell);\n    } else if (!allowTableNodeSelection) {\n      const map = TableMap.get(sel.node);\n      const start = sel.from + 1;\n      const lastCell = start + map.map[map.width * map.height - 1];\n      normalize = CellSelection.create(doc, start + 1, lastCell);\n    }\n  } else if (sel instanceof TextSelection && isCellBoundarySelection(sel)) {\n    normalize = TextSelection.create(doc, sel.from);\n  } else if (sel instanceof TextSelection && isTextSelectionAcrossCells(sel)) {\n    normalize = TextSelection.create(doc, sel.$from.start(), sel.$from.end());\n  }\n  if (normalize)\n    (tr || (tr = state.tr)).setSelection(normalize);\n  return tr;\n}\n\n// src/fixtables.ts\nimport { PluginKey as PluginKey2 } from \"prosemirror-state\";\nvar fixTablesKey = new PluginKey2(\"fix-tables\");\nfunction changedDescendants(old, cur, offset, f) {\n  const oldSize = old.childCount, curSize = cur.childCount;\n  outer:\n    for (let i = 0, j = 0; i < curSize; i++) {\n      const child = cur.child(i);\n      for (let scan = j, e = Math.min(oldSize, i + 3); scan < e; scan++) {\n        if (old.child(scan) == child) {\n          j = scan + 1;\n          offset += child.nodeSize;\n          continue outer;\n        }\n      }\n      f(child, offset);\n      if (j < oldSize && old.child(j).sameMarkup(child))\n        changedDescendants(old.child(j), child, offset + 1, f);\n      else\n        child.nodesBetween(0, child.content.size, f, offset + 1);\n      offset += child.nodeSize;\n    }\n}\nfunction fixTables(state, oldState) {\n  let tr;\n  const check = (node, pos) => {\n    if (node.type.spec.tableRole == \"table\")\n      tr = fixTable(state, node, pos, tr);\n  };\n  if (!oldState)\n    state.doc.descendants(check);\n  else if (oldState.doc != state.doc)\n    changedDescendants(oldState.doc, state.doc, 0, check);\n  return tr;\n}\nfunction fixTable(state, table, tablePos, tr) {\n  const map = TableMap.get(table);\n  if (!map.problems)\n    return tr;\n  if (!tr)\n    tr = state.tr;\n  const mustAdd = [];\n  for (let i = 0; i < map.height; i++)\n    mustAdd.push(0);\n  for (let i = 0; i < map.problems.length; i++) {\n    const prob = map.problems[i];\n    if (prob.type == \"collision\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      const attrs = cell.attrs;\n      for (let j = 0; j < attrs.rowspan; j++)\n        mustAdd[prob.row + j] += prob.n;\n      tr.setNodeMarkup(\n        tr.mapping.map(tablePos + 1 + prob.pos),\n        null,\n        removeColSpan(attrs, attrs.colspan - prob.n, prob.n)\n      );\n    } else if (prob.type == \"missing\") {\n      mustAdd[prob.row] += prob.n;\n    } else if (prob.type == \"overlong_rowspan\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        rowspan: cell.attrs.rowspan - prob.n\n      });\n    } else if (prob.type == \"colwidth mismatch\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        colwidth: prob.colwidth\n      });\n    }\n  }\n  let first, last;\n  for (let i = 0; i < mustAdd.length; i++)\n    if (mustAdd[i]) {\n      if (first == null)\n        first = i;\n      last = i;\n    }\n  for (let i = 0, pos = tablePos + 1; i < map.height; i++) {\n    const row = table.child(i);\n    const end = pos + row.nodeSize;\n    const add = mustAdd[i];\n    if (add > 0) {\n      let role = \"cell\";\n      if (row.firstChild) {\n        role = row.firstChild.type.spec.tableRole;\n      }\n      const nodes = [];\n      for (let j = 0; j < add; j++) {\n        const node = tableNodeTypes(state.schema)[role].createAndFill();\n        if (node)\n          nodes.push(node);\n      }\n      const side = (i == 0 || first == i - 1) && last == i ? pos + 1 : end - 1;\n      tr.insert(tr.mapping.map(side), nodes);\n    }\n    pos = end;\n  }\n  return tr.setMeta(fixTablesKey, { fixTables: true });\n}\n\n// src/input.ts\nimport { Fragment as Fragment3, Slice as Slice3 } from \"prosemirror-model\";\nimport {\n  Selection as Selection2,\n  TextSelection as TextSelection2\n} from \"prosemirror-state\";\nimport { keydownHandler } from \"prosemirror-keymap\";\n\n// src/copypaste.ts\nimport { Fragment as Fragment2, Slice as Slice2 } from \"prosemirror-model\";\nimport { Transform } from \"prosemirror-transform\";\nfunction pastedCells(slice) {\n  if (!slice.size)\n    return null;\n  let { content, openStart, openEnd } = slice;\n  while (content.childCount == 1 && (openStart > 0 && openEnd > 0 || content.child(0).type.spec.tableRole == \"table\")) {\n    openStart--;\n    openEnd--;\n    content = content.child(0).content;\n  }\n  const first = content.child(0);\n  const role = first.type.spec.tableRole;\n  const schema = first.type.schema, rows = [];\n  if (role == \"row\") {\n    for (let i = 0; i < content.childCount; i++) {\n      let cells = content.child(i).content;\n      const left = i ? 0 : Math.max(0, openStart - 1);\n      const right = i < content.childCount - 1 ? 0 : Math.max(0, openEnd - 1);\n      if (left || right)\n        cells = fitSlice(\n          tableNodeTypes(schema).row,\n          new Slice2(cells, left, right)\n        ).content;\n      rows.push(cells);\n    }\n  } else if (role == \"cell\" || role == \"header_cell\") {\n    rows.push(\n      openStart || openEnd ? fitSlice(\n        tableNodeTypes(schema).row,\n        new Slice2(content, openStart, openEnd)\n      ).content : content\n    );\n  } else {\n    return null;\n  }\n  return ensureRectangular(schema, rows);\n}\nfunction ensureRectangular(schema, rows) {\n  const widths = [];\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    for (let j = row.childCount - 1; j >= 0; j--) {\n      const { rowspan, colspan } = row.child(j).attrs;\n      for (let r = i; r < i + rowspan; r++)\n        widths[r] = (widths[r] || 0) + colspan;\n    }\n  }\n  let width = 0;\n  for (let r = 0; r < widths.length; r++)\n    width = Math.max(width, widths[r]);\n  for (let r = 0; r < widths.length; r++) {\n    if (r >= rows.length)\n      rows.push(Fragment2.empty);\n    if (widths[r] < width) {\n      const empty = tableNodeTypes(schema).cell.createAndFill();\n      const cells = [];\n      for (let i = widths[r]; i < width; i++) {\n        cells.push(empty);\n      }\n      rows[r] = rows[r].append(Fragment2.from(cells));\n    }\n  }\n  return { height: rows.length, width, rows };\n}\nfunction fitSlice(nodeType, slice) {\n  const node = nodeType.createAndFill();\n  const tr = new Transform(node).replace(0, node.content.size, slice);\n  return tr.doc;\n}\nfunction clipCells({ width, height, rows }, newWidth, newHeight) {\n  if (width != newWidth) {\n    const added = [];\n    const newRows = [];\n    for (let row = 0; row < rows.length; row++) {\n      const frag = rows[row], cells = [];\n      for (let col = added[row] || 0, i = 0; col < newWidth; i++) {\n        let cell = frag.child(i % frag.childCount);\n        if (col + cell.attrs.colspan > newWidth)\n          cell = cell.type.createChecked(\n            removeColSpan(\n              cell.attrs,\n              cell.attrs.colspan,\n              col + cell.attrs.colspan - newWidth\n            ),\n            cell.content\n          );\n        cells.push(cell);\n        col += cell.attrs.colspan;\n        for (let j = 1; j < cell.attrs.rowspan; j++)\n          added[row + j] = (added[row + j] || 0) + cell.attrs.colspan;\n      }\n      newRows.push(Fragment2.from(cells));\n    }\n    rows = newRows;\n    width = newWidth;\n  }\n  if (height != newHeight) {\n    const newRows = [];\n    for (let row = 0, i = 0; row < newHeight; row++, i++) {\n      const cells = [], source = rows[i % height];\n      for (let j = 0; j < source.childCount; j++) {\n        let cell = source.child(j);\n        if (row + cell.attrs.rowspan > newHeight)\n          cell = cell.type.create(\n            {\n              ...cell.attrs,\n              rowspan: Math.max(1, newHeight - cell.attrs.rowspan)\n            },\n            cell.content\n          );\n        cells.push(cell);\n      }\n      newRows.push(Fragment2.from(cells));\n    }\n    rows = newRows;\n    height = newHeight;\n  }\n  return { width, height, rows };\n}\nfunction growTable(tr, map, table, start, width, height, mapFrom) {\n  const schema = tr.doc.type.schema;\n  const types = tableNodeTypes(schema);\n  let empty;\n  let emptyHead;\n  if (width > map.width) {\n    for (let row = 0, rowEnd = 0; row < map.height; row++) {\n      const rowNode = table.child(row);\n      rowEnd += rowNode.nodeSize;\n      const cells = [];\n      let add;\n      if (rowNode.lastChild == null || rowNode.lastChild.type == types.cell)\n        add = empty || (empty = types.cell.createAndFill());\n      else\n        add = emptyHead || (emptyHead = types.header_cell.createAndFill());\n      for (let i = map.width; i < width; i++)\n        cells.push(add);\n      tr.insert(tr.mapping.slice(mapFrom).map(rowEnd - 1 + start), cells);\n    }\n  }\n  if (height > map.height) {\n    const cells = [];\n    for (let i = 0, start2 = (map.height - 1) * map.width; i < Math.max(map.width, width); i++) {\n      const header = i >= map.width ? false : table.nodeAt(map.map[start2 + i]).type == types.header_cell;\n      cells.push(\n        header ? emptyHead || (emptyHead = types.header_cell.createAndFill()) : empty || (empty = types.cell.createAndFill())\n      );\n    }\n    const emptyRow = types.row.create(null, Fragment2.from(cells)), rows = [];\n    for (let i = map.height; i < height; i++)\n      rows.push(emptyRow);\n    tr.insert(tr.mapping.slice(mapFrom).map(start + table.nodeSize - 2), rows);\n  }\n  return !!(empty || emptyHead);\n}\nfunction isolateHorizontal(tr, map, table, start, left, right, top, mapFrom) {\n  if (top == 0 || top == map.height)\n    return false;\n  let found = false;\n  for (let col = left; col < right; col++) {\n    const index = top * map.width + col, pos = map.map[index];\n    if (map.map[index - map.width] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const { top: cellTop, left: cellLeft } = map.findCell(pos);\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + start), null, {\n        ...cell.attrs,\n        rowspan: top - cellTop\n      });\n      tr.insert(\n        tr.mapping.slice(mapFrom).map(map.positionAt(top, cellLeft, table)),\n        cell.type.createAndFill({\n          ...cell.attrs,\n          rowspan: cellTop + cell.attrs.rowspan - top\n        })\n      );\n      col += cell.attrs.colspan - 1;\n    }\n  }\n  return found;\n}\nfunction isolateVertical(tr, map, table, start, top, bottom, left, mapFrom) {\n  if (left == 0 || left == map.width)\n    return false;\n  let found = false;\n  for (let row = top; row < bottom; row++) {\n    const index = row * map.width + left, pos = map.map[index];\n    if (map.map[index - 1] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const cellLeft = map.colCount(pos);\n      const updatePos = tr.mapping.slice(mapFrom).map(pos + start);\n      tr.setNodeMarkup(\n        updatePos,\n        null,\n        removeColSpan(\n          cell.attrs,\n          left - cellLeft,\n          cell.attrs.colspan - (left - cellLeft)\n        )\n      );\n      tr.insert(\n        updatePos + cell.nodeSize,\n        cell.type.createAndFill(\n          removeColSpan(cell.attrs, 0, left - cellLeft)\n        )\n      );\n      row += cell.attrs.rowspan - 1;\n    }\n  }\n  return found;\n}\nfunction insertCells(state, dispatch, tableStart, rect, cells) {\n  let table = tableStart ? state.doc.nodeAt(tableStart - 1) : state.doc;\n  if (!table) {\n    throw new Error(\"No table found\");\n  }\n  let map = TableMap.get(table);\n  const { top, left } = rect;\n  const right = left + cells.width, bottom = top + cells.height;\n  const tr = state.tr;\n  let mapFrom = 0;\n  function recomp() {\n    table = tableStart ? tr.doc.nodeAt(tableStart - 1) : tr.doc;\n    if (!table) {\n      throw new Error(\"No table found\");\n    }\n    map = TableMap.get(table);\n    mapFrom = tr.mapping.maps.length;\n  }\n  if (growTable(tr, map, table, tableStart, right, bottom, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, top, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, bottom, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, left, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, right, mapFrom))\n    recomp();\n  for (let row = top; row < bottom; row++) {\n    const from = map.positionAt(row, left, table), to = map.positionAt(row, right, table);\n    tr.replace(\n      tr.mapping.slice(mapFrom).map(from + tableStart),\n      tr.mapping.slice(mapFrom).map(to + tableStart),\n      new Slice2(cells.rows[row - top], 0, 0)\n    );\n  }\n  recomp();\n  tr.setSelection(\n    new CellSelection(\n      tr.doc.resolve(tableStart + map.positionAt(top, left, table)),\n      tr.doc.resolve(tableStart + map.positionAt(bottom - 1, right - 1, table))\n    )\n  );\n  dispatch(tr);\n}\n\n// src/input.ts\nvar handleKeyDown = keydownHandler({\n  ArrowLeft: arrow(\"horiz\", -1),\n  ArrowRight: arrow(\"horiz\", 1),\n  ArrowUp: arrow(\"vert\", -1),\n  ArrowDown: arrow(\"vert\", 1),\n  \"Shift-ArrowLeft\": shiftArrow(\"horiz\", -1),\n  \"Shift-ArrowRight\": shiftArrow(\"horiz\", 1),\n  \"Shift-ArrowUp\": shiftArrow(\"vert\", -1),\n  \"Shift-ArrowDown\": shiftArrow(\"vert\", 1),\n  Backspace: deleteCellSelection,\n  \"Mod-Backspace\": deleteCellSelection,\n  Delete: deleteCellSelection,\n  \"Mod-Delete\": deleteCellSelection\n});\nfunction maybeSetSelection(state, dispatch, selection) {\n  if (selection.eq(state.selection))\n    return false;\n  if (dispatch)\n    dispatch(state.tr.setSelection(selection).scrollIntoView());\n  return true;\n}\nfunction arrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    if (sel instanceof CellSelection) {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(sel.$headCell, dir)\n      );\n    }\n    if (axis != \"horiz\" && !sel.empty)\n      return false;\n    const end = atEndOfCell(view, axis, dir);\n    if (end == null)\n      return false;\n    if (axis == \"horiz\") {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(state.doc.resolve(sel.head + dir), dir)\n      );\n    } else {\n      const $cell = state.doc.resolve(end);\n      const $next = nextCell($cell, axis, dir);\n      let newSel;\n      if ($next)\n        newSel = Selection2.near($next, 1);\n      else if (dir < 0)\n        newSel = Selection2.near(state.doc.resolve($cell.before(-1)), -1);\n      else\n        newSel = Selection2.near(state.doc.resolve($cell.after(-1)), 1);\n      return maybeSetSelection(state, dispatch, newSel);\n    }\n  };\n}\nfunction shiftArrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    let cellSel;\n    if (sel instanceof CellSelection) {\n      cellSel = sel;\n    } else {\n      const end = atEndOfCell(view, axis, dir);\n      if (end == null)\n        return false;\n      cellSel = new CellSelection(state.doc.resolve(end));\n    }\n    const $head = nextCell(cellSel.$headCell, axis, dir);\n    if (!$head)\n      return false;\n    return maybeSetSelection(\n      state,\n      dispatch,\n      new CellSelection(cellSel.$anchorCell, $head)\n    );\n  };\n}\nfunction deleteCellSelection(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const baseContent = tableNodeTypes(state.schema).cell.createAndFill().content;\n    sel.forEachCell((cell, pos) => {\n      if (!cell.content.eq(baseContent))\n        tr.replace(\n          tr.mapping.map(pos + 1),\n          tr.mapping.map(pos + cell.nodeSize - 1),\n          new Slice3(baseContent, 0, 0)\n        );\n    });\n    if (tr.docChanged)\n      dispatch(tr);\n  }\n  return true;\n}\nfunction handleTripleClick(view, pos) {\n  const doc = view.state.doc, $cell = cellAround(doc.resolve(pos));\n  if (!$cell)\n    return false;\n  view.dispatch(view.state.tr.setSelection(new CellSelection($cell)));\n  return true;\n}\nfunction handlePaste(view, _, slice) {\n  if (!isInTable(view.state))\n    return false;\n  let cells = pastedCells(slice);\n  const sel = view.state.selection;\n  if (sel instanceof CellSelection) {\n    if (!cells)\n      cells = {\n        width: 1,\n        height: 1,\n        rows: [\n          Fragment3.from(\n            fitSlice(tableNodeTypes(view.state.schema).cell, slice)\n          )\n        ]\n      };\n    const table = sel.$anchorCell.node(-1);\n    const start = sel.$anchorCell.start(-1);\n    const rect = TableMap.get(table).rectBetween(\n      sel.$anchorCell.pos - start,\n      sel.$headCell.pos - start\n    );\n    cells = clipCells(cells, rect.right - rect.left, rect.bottom - rect.top);\n    insertCells(view.state, view.dispatch, start, rect, cells);\n    return true;\n  } else if (cells) {\n    const $cell = selectionCell(view.state);\n    const start = $cell.start(-1);\n    insertCells(\n      view.state,\n      view.dispatch,\n      start,\n      TableMap.get($cell.node(-1)).findCell($cell.pos - start),\n      cells\n    );\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction handleMouseDown(view, startEvent) {\n  var _a;\n  if (startEvent.ctrlKey || startEvent.metaKey)\n    return;\n  const startDOMCell = domInCell(view, startEvent.target);\n  let $anchor;\n  if (startEvent.shiftKey && view.state.selection instanceof CellSelection) {\n    setCellSelection(view.state.selection.$anchorCell, startEvent);\n    startEvent.preventDefault();\n  } else if (startEvent.shiftKey && startDOMCell && ($anchor = cellAround(view.state.selection.$anchor)) != null && ((_a = cellUnderMouse(view, startEvent)) == null ? void 0 : _a.pos) != $anchor.pos) {\n    setCellSelection($anchor, startEvent);\n    startEvent.preventDefault();\n  } else if (!startDOMCell) {\n    return;\n  }\n  function setCellSelection($anchor2, event) {\n    let $head = cellUnderMouse(view, event);\n    const starting = tableEditingKey.getState(view.state) == null;\n    if (!$head || !inSameTable($anchor2, $head)) {\n      if (starting)\n        $head = $anchor2;\n      else\n        return;\n    }\n    const selection = new CellSelection($anchor2, $head);\n    if (starting || !view.state.selection.eq(selection)) {\n      const tr = view.state.tr.setSelection(selection);\n      if (starting)\n        tr.setMeta(tableEditingKey, $anchor2.pos);\n      view.dispatch(tr);\n    }\n  }\n  function stop() {\n    view.root.removeEventListener(\"mouseup\", stop);\n    view.root.removeEventListener(\"dragstart\", stop);\n    view.root.removeEventListener(\"mousemove\", move);\n    if (tableEditingKey.getState(view.state) != null)\n      view.dispatch(view.state.tr.setMeta(tableEditingKey, -1));\n  }\n  function move(_event) {\n    const event = _event;\n    const anchor = tableEditingKey.getState(view.state);\n    let $anchor2;\n    if (anchor != null) {\n      $anchor2 = view.state.doc.resolve(anchor);\n    } else if (domInCell(view, event.target) != startDOMCell) {\n      $anchor2 = cellUnderMouse(view, startEvent);\n      if (!$anchor2)\n        return stop();\n    }\n    if ($anchor2)\n      setCellSelection($anchor2, event);\n  }\n  view.root.addEventListener(\"mouseup\", stop);\n  view.root.addEventListener(\"dragstart\", stop);\n  view.root.addEventListener(\"mousemove\", move);\n}\nfunction atEndOfCell(view, axis, dir) {\n  if (!(view.state.selection instanceof TextSelection2))\n    return null;\n  const { $head } = view.state.selection;\n  for (let d = $head.depth - 1; d >= 0; d--) {\n    const parent = $head.node(d), index = dir < 0 ? $head.index(d) : $head.indexAfter(d);\n    if (index != (dir < 0 ? 0 : parent.childCount))\n      return null;\n    if (parent.type.spec.tableRole == \"cell\" || parent.type.spec.tableRole == \"header_cell\") {\n      const cellPos = $head.before(d);\n      const dirStr = axis == \"vert\" ? dir > 0 ? \"down\" : \"up\" : dir > 0 ? \"right\" : \"left\";\n      return view.endOfTextblock(dirStr) ? cellPos : null;\n    }\n  }\n  return null;\n}\nfunction domInCell(view, dom) {\n  for (; dom && dom != view.dom; dom = dom.parentNode) {\n    if (dom.nodeName == \"TD\" || dom.nodeName == \"TH\") {\n      return dom;\n    }\n  }\n  return null;\n}\nfunction cellUnderMouse(view, event) {\n  const mousePos = view.posAtCoords({\n    left: event.clientX,\n    top: event.clientY\n  });\n  if (!mousePos)\n    return null;\n  return mousePos ? cellAround(view.state.doc.resolve(mousePos.pos)) : null;\n}\n\n// src/columnresizing.ts\nimport { Plugin, PluginKey as PluginKey3 } from \"prosemirror-state\";\nimport {\n  Decoration as Decoration2,\n  DecorationSet as DecorationSet2\n} from \"prosemirror-view\";\n\n// src/tableview.ts\nvar TableView = class {\n  constructor(node, cellMinWidth) {\n    this.node = node;\n    this.cellMinWidth = cellMinWidth;\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"tableWrapper\";\n    this.table = this.dom.appendChild(document.createElement(\"table\"));\n    this.colgroup = this.table.appendChild(document.createElement(\"colgroup\"));\n    updateColumnsOnResize(node, this.colgroup, this.table, cellMinWidth);\n    this.contentDOM = this.table.appendChild(document.createElement(\"tbody\"));\n  }\n  update(node) {\n    if (node.type != this.node.type)\n      return false;\n    this.node = node;\n    updateColumnsOnResize(node, this.colgroup, this.table, this.cellMinWidth);\n    return true;\n  }\n  ignoreMutation(record) {\n    return record.type == \"attributes\" && (record.target == this.table || this.colgroup.contains(record.target));\n  }\n};\nfunction updateColumnsOnResize(node, colgroup, table, cellMinWidth, overrideCol, overrideValue) {\n  var _a;\n  let totalWidth = 0;\n  let fixedWidth = true;\n  let nextDOM = colgroup.firstChild;\n  const row = node.firstChild;\n  if (!row)\n    return;\n  for (let i = 0, col = 0; i < row.childCount; i++) {\n    const { colspan, colwidth } = row.child(i).attrs;\n    for (let j = 0; j < colspan; j++, col++) {\n      const hasWidth = overrideCol == col ? overrideValue : colwidth && colwidth[j];\n      const cssWidth = hasWidth ? hasWidth + \"px\" : \"\";\n      totalWidth += hasWidth || cellMinWidth;\n      if (!hasWidth)\n        fixedWidth = false;\n      if (!nextDOM) {\n        colgroup.appendChild(document.createElement(\"col\")).style.width = cssWidth;\n      } else {\n        if (nextDOM.style.width != cssWidth)\n          nextDOM.style.width = cssWidth;\n        nextDOM = nextDOM.nextSibling;\n      }\n    }\n  }\n  while (nextDOM) {\n    const after = nextDOM.nextSibling;\n    (_a = nextDOM.parentNode) == null ? void 0 : _a.removeChild(nextDOM);\n    nextDOM = after;\n  }\n  if (fixedWidth) {\n    table.style.width = totalWidth + \"px\";\n    table.style.minWidth = \"\";\n  } else {\n    table.style.width = \"\";\n    table.style.minWidth = totalWidth + \"px\";\n  }\n}\n\n// src/columnresizing.ts\nvar columnResizingPluginKey = new PluginKey3(\n  \"tableColumnResizing\"\n);\nfunction columnResizing({\n  handleWidth = 5,\n  cellMinWidth = 25,\n  View = TableView,\n  lastColumnResizable = true\n} = {}) {\n  const plugin = new Plugin({\n    key: columnResizingPluginKey,\n    state: {\n      init(_, state) {\n        plugin.spec.props.nodeViews[tableNodeTypes(state.schema).table.name] = (node, view) => new View(node, cellMinWidth, view);\n        return new ResizeState(-1, false);\n      },\n      apply(tr, prev) {\n        return prev.apply(tr);\n      }\n    },\n    props: {\n      attributes: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        return pluginState && pluginState.activeHandle > -1 ? { class: \"resize-cursor\" } : {};\n      },\n      handleDOMEvents: {\n        mousemove: (view, event) => {\n          handleMouseMove(\n            view,\n            event,\n            handleWidth,\n            cellMinWidth,\n            lastColumnResizable\n          );\n        },\n        mouseleave: (view) => {\n          handleMouseLeave(view);\n        },\n        mousedown: (view, event) => {\n          handleMouseDown2(view, event, cellMinWidth);\n        }\n      },\n      decorations: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        if (pluginState && pluginState.activeHandle > -1) {\n          return handleDecorations(state, pluginState.activeHandle);\n        }\n      },\n      nodeViews: {}\n    }\n  });\n  return plugin;\n}\nvar ResizeState = class _ResizeState {\n  constructor(activeHandle, dragging) {\n    this.activeHandle = activeHandle;\n    this.dragging = dragging;\n  }\n  apply(tr) {\n    const state = this;\n    const action = tr.getMeta(columnResizingPluginKey);\n    if (action && action.setHandle != null)\n      return new _ResizeState(action.setHandle, false);\n    if (action && action.setDragging !== void 0)\n      return new _ResizeState(state.activeHandle, action.setDragging);\n    if (state.activeHandle > -1 && tr.docChanged) {\n      let handle = tr.mapping.map(state.activeHandle, -1);\n      if (!pointsAtCell(tr.doc.resolve(handle))) {\n        handle = -1;\n      }\n      return new _ResizeState(handle, state.dragging);\n    }\n    return state;\n  }\n};\nfunction handleMouseMove(view, event, handleWidth, cellMinWidth, lastColumnResizable) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState)\n    return;\n  if (!pluginState.dragging) {\n    const target = domCellAround(event.target);\n    let cell = -1;\n    if (target) {\n      const { left, right } = target.getBoundingClientRect();\n      if (event.clientX - left <= handleWidth)\n        cell = edgeCell(view, event, \"left\", handleWidth);\n      else if (right - event.clientX <= handleWidth)\n        cell = edgeCell(view, event, \"right\", handleWidth);\n    }\n    if (cell != pluginState.activeHandle) {\n      if (!lastColumnResizable && cell !== -1) {\n        const $cell = view.state.doc.resolve(cell);\n        const table = $cell.node(-1);\n        const map = TableMap.get(table);\n        const tableStart = $cell.start(-1);\n        const col = map.colCount($cell.pos - tableStart) + $cell.nodeAfter.attrs.colspan - 1;\n        if (col == map.width - 1) {\n          return;\n        }\n      }\n      updateHandle(view, cell);\n    }\n  }\n}\nfunction handleMouseLeave(view) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (pluginState && pluginState.activeHandle > -1 && !pluginState.dragging)\n    updateHandle(view, -1);\n}\nfunction handleMouseDown2(view, event, cellMinWidth) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState || pluginState.activeHandle == -1 || pluginState.dragging)\n    return false;\n  const cell = view.state.doc.nodeAt(pluginState.activeHandle);\n  const width = currentColWidth(view, pluginState.activeHandle, cell.attrs);\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, {\n      setDragging: { startX: event.clientX, startWidth: width }\n    })\n  );\n  function finish(event2) {\n    window.removeEventListener(\"mouseup\", finish);\n    window.removeEventListener(\"mousemove\", move);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (pluginState2 == null ? void 0 : pluginState2.dragging) {\n      updateColumnWidth(\n        view,\n        pluginState2.activeHandle,\n        draggedWidth(pluginState2.dragging, event2, cellMinWidth)\n      );\n      view.dispatch(\n        view.state.tr.setMeta(columnResizingPluginKey, { setDragging: null })\n      );\n    }\n  }\n  function move(event2) {\n    if (!event2.which)\n      return finish(event2);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (!pluginState2)\n      return;\n    if (pluginState2.dragging) {\n      const dragged = draggedWidth(pluginState2.dragging, event2, cellMinWidth);\n      displayColumnWidth(view, pluginState2.activeHandle, dragged, cellMinWidth);\n    }\n  }\n  window.addEventListener(\"mouseup\", finish);\n  window.addEventListener(\"mousemove\", move);\n  event.preventDefault();\n  return true;\n}\nfunction currentColWidth(view, cellPos, { colspan, colwidth }) {\n  const width = colwidth && colwidth[colwidth.length - 1];\n  if (width)\n    return width;\n  const dom = view.domAtPos(cellPos);\n  const node = dom.node.childNodes[dom.offset];\n  let domWidth = node.offsetWidth, parts = colspan;\n  if (colwidth) {\n    for (let i = 0; i < colspan; i++)\n      if (colwidth[i]) {\n        domWidth -= colwidth[i];\n        parts--;\n      }\n  }\n  return domWidth / parts;\n}\nfunction domCellAround(target) {\n  while (target && target.nodeName != \"TD\" && target.nodeName != \"TH\")\n    target = target.classList && target.classList.contains(\"ProseMirror\") ? null : target.parentNode;\n  return target;\n}\nfunction edgeCell(view, event, side, handleWidth) {\n  const offset = side == \"right\" ? -handleWidth : handleWidth;\n  const found = view.posAtCoords({\n    left: event.clientX + offset,\n    top: event.clientY\n  });\n  if (!found)\n    return -1;\n  const { pos } = found;\n  const $cell = cellAround(view.state.doc.resolve(pos));\n  if (!$cell)\n    return -1;\n  if (side == \"right\")\n    return $cell.pos;\n  const map = TableMap.get($cell.node(-1)), start = $cell.start(-1);\n  const index = map.map.indexOf($cell.pos - start);\n  return index % map.width == 0 ? -1 : start + map.map[index - 1];\n}\nfunction draggedWidth(dragging, event, cellMinWidth) {\n  const offset = event.clientX - dragging.startX;\n  return Math.max(cellMinWidth, dragging.startWidth + offset);\n}\nfunction updateHandle(view, value) {\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, { setHandle: value })\n  );\n}\nfunction updateColumnWidth(view, cell, width) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  const tr = view.state.tr;\n  for (let row = 0; row < map.height; row++) {\n    const mapIndex = row * map.width + col;\n    if (row && map.map[mapIndex] == map.map[mapIndex - map.width])\n      continue;\n    const pos = map.map[mapIndex];\n    const attrs = table.nodeAt(pos).attrs;\n    const index = attrs.colspan == 1 ? 0 : col - map.colCount(pos);\n    if (attrs.colwidth && attrs.colwidth[index] == width)\n      continue;\n    const colwidth = attrs.colwidth ? attrs.colwidth.slice() : zeroes(attrs.colspan);\n    colwidth[index] = width;\n    tr.setNodeMarkup(start + pos, null, { ...attrs, colwidth });\n  }\n  if (tr.docChanged)\n    view.dispatch(tr);\n}\nfunction displayColumnWidth(view, cell, width, cellMinWidth) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), start = $cell.start(-1);\n  const col = TableMap.get(table).colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  let dom = view.domAtPos($cell.start(-1)).node;\n  while (dom && dom.nodeName != \"TABLE\") {\n    dom = dom.parentNode;\n  }\n  if (!dom)\n    return;\n  updateColumnsOnResize(\n    table,\n    dom.firstChild,\n    dom,\n    cellMinWidth,\n    col,\n    width\n  );\n}\nfunction zeroes(n) {\n  return Array(n).fill(0);\n}\nfunction handleDecorations(state, cell) {\n  const decorations = [];\n  const $cell = state.doc.resolve(cell);\n  const table = $cell.node(-1);\n  if (!table) {\n    return DecorationSet2.empty;\n  }\n  const map = TableMap.get(table);\n  const start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan;\n  for (let row = 0; row < map.height; row++) {\n    const index = col + row * map.width - 1;\n    if ((col == map.width || map.map[index] != map.map[index + 1]) && (row == 0 || map.map[index] != map.map[index - map.width])) {\n      const cellPos = map.map[index];\n      const pos = start + cellPos + table.nodeAt(cellPos).nodeSize - 1;\n      const dom = document.createElement(\"div\");\n      dom.className = \"column-resize-handle\";\n      decorations.push(Decoration2.widget(pos, dom));\n    }\n  }\n  return DecorationSet2.create(state.doc, decorations);\n}\n\n// src/commands.ts\nimport { Fragment as Fragment4 } from \"prosemirror-model\";\nimport {\n  TextSelection as TextSelection3\n} from \"prosemirror-state\";\nfunction selectedRect(state) {\n  const sel = state.selection;\n  const $pos = selectionCell(state);\n  const table = $pos.node(-1);\n  const tableStart = $pos.start(-1);\n  const map = TableMap.get(table);\n  const rect = sel instanceof CellSelection ? map.rectBetween(\n    sel.$anchorCell.pos - tableStart,\n    sel.$headCell.pos - tableStart\n  ) : map.findCell($pos.pos - tableStart);\n  return { ...rect, tableStart, map, table };\n}\nfunction addColumn(tr, { map, tableStart, table }, col) {\n  let refColumn = col > 0 ? -1 : 0;\n  if (columnIsHeader(map, table, col + refColumn)) {\n    refColumn = col == 0 || col == map.width ? null : 0;\n  }\n  for (let row = 0; row < map.height; row++) {\n    const index = row * map.width + col;\n    if (col > 0 && col < map.width && map.map[index - 1] == map.map[index]) {\n      const pos = map.map[index];\n      const cell = table.nodeAt(pos);\n      tr.setNodeMarkup(\n        tr.mapping.map(tableStart + pos),\n        null,\n        addColSpan(cell.attrs, col - map.colCount(pos))\n      );\n      row += cell.attrs.rowspan - 1;\n    } else {\n      const type = refColumn == null ? tableNodeTypes(table.type.schema).cell : table.nodeAt(map.map[index + refColumn]).type;\n      const pos = map.positionAt(row, col, table);\n      tr.insert(tr.mapping.map(tableStart + pos), type.createAndFill());\n    }\n  }\n  return tr;\n}\nfunction addColumnBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.left));\n  }\n  return true;\n}\nfunction addColumnAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.right));\n  }\n  return true;\n}\nfunction removeColumn(tr, { map, table, tableStart }, col) {\n  const mapStart = tr.mapping.maps.length;\n  for (let row = 0; row < map.height; ) {\n    const index = row * map.width + col;\n    const pos = map.map[index];\n    const cell = table.nodeAt(pos);\n    const attrs = cell.attrs;\n    if (col > 0 && map.map[index - 1] == pos || col < map.width - 1 && map.map[index + 1] == pos) {\n      tr.setNodeMarkup(\n        tr.mapping.slice(mapStart).map(tableStart + pos),\n        null,\n        removeColSpan(attrs, col - map.colCount(pos))\n      );\n    } else {\n      const start = tr.mapping.slice(mapStart).map(tableStart + pos);\n      tr.delete(start, start + cell.nodeSize);\n    }\n    row += attrs.rowspan;\n  }\n}\nfunction deleteColumn(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    const tr = state.tr;\n    if (rect.left == 0 && rect.right == rect.map.width)\n      return false;\n    for (let i = rect.right - 1; ; i--) {\n      removeColumn(tr, rect, i);\n      if (i == rect.left)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction rowIsHeader(map, table, row) {\n  var _a;\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let col = 0; col < map.width; col++)\n    if (((_a = table.nodeAt(map.map[col + row * map.width])) == null ? void 0 : _a.type) != headerCell)\n      return false;\n  return true;\n}\nfunction addRow(tr, { map, tableStart, table }, row) {\n  var _a;\n  let rowPos = tableStart;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const cells = [];\n  let refRow = row > 0 ? -1 : 0;\n  if (rowIsHeader(map, table, row + refRow))\n    refRow = row == 0 || row == map.height ? null : 0;\n  for (let col = 0, index = map.width * row; col < map.width; col++, index++) {\n    if (row > 0 && row < map.height && map.map[index] == map.map[index - map.width]) {\n      const pos = map.map[index];\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tableStart + pos, null, {\n        ...attrs,\n        rowspan: attrs.rowspan + 1\n      });\n      col += attrs.colspan - 1;\n    } else {\n      const type = refRow == null ? tableNodeTypes(table.type.schema).cell : (_a = table.nodeAt(map.map[index + refRow * map.width])) == null ? void 0 : _a.type;\n      const node = type == null ? void 0 : type.createAndFill();\n      if (node)\n        cells.push(node);\n    }\n  }\n  tr.insert(rowPos, tableNodeTypes(table.type.schema).row.create(null, cells));\n  return tr;\n}\nfunction addRowBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.top));\n  }\n  return true;\n}\nfunction addRowAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.bottom));\n  }\n  return true;\n}\nfunction removeRow(tr, { map, table, tableStart }, row) {\n  let rowPos = 0;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const nextRow = rowPos + table.child(row).nodeSize;\n  const mapFrom = tr.mapping.maps.length;\n  tr.delete(rowPos + tableStart, nextRow + tableStart);\n  const seen = /* @__PURE__ */ new Set();\n  for (let col = 0, index = row * map.width; col < map.width; col++, index++) {\n    const pos = map.map[index];\n    if (seen.has(pos))\n      continue;\n    seen.add(pos);\n    if (row > 0 && pos == map.map[index - map.width]) {\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + tableStart), null, {\n        ...attrs,\n        rowspan: attrs.rowspan - 1\n      });\n      col += attrs.colspan - 1;\n    } else if (row < map.height && pos == map.map[index + map.width]) {\n      const cell = table.nodeAt(pos);\n      const attrs = cell.attrs;\n      const copy = cell.type.create(\n        { ...attrs, rowspan: cell.attrs.rowspan - 1 },\n        cell.content\n      );\n      const newPos = map.positionAt(row + 1, col, table);\n      tr.insert(tr.mapping.slice(mapFrom).map(tableStart + newPos), copy);\n      col += attrs.colspan - 1;\n    }\n  }\n}\nfunction deleteRow(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state), tr = state.tr;\n    if (rect.top == 0 && rect.bottom == rect.map.height)\n      return false;\n    for (let i = rect.bottom - 1; ; i--) {\n      removeRow(tr, rect, i);\n      if (i == rect.top)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(rect.table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction isEmpty(cell) {\n  const c = cell.content;\n  return c.childCount == 1 && c.child(0).isTextblock && c.child(0).childCount == 0;\n}\nfunction cellsOverlapRectangle({ width, height, map }, rect) {\n  let indexTop = rect.top * width + rect.left, indexLeft = indexTop;\n  let indexBottom = (rect.bottom - 1) * width + rect.left, indexRight = indexTop + (rect.right - rect.left - 1);\n  for (let i = rect.top; i < rect.bottom; i++) {\n    if (rect.left > 0 && map[indexLeft] == map[indexLeft - 1] || rect.right < width && map[indexRight] == map[indexRight + 1])\n      return true;\n    indexLeft += width;\n    indexRight += width;\n  }\n  for (let i = rect.left; i < rect.right; i++) {\n    if (rect.top > 0 && map[indexTop] == map[indexTop - width] || rect.bottom < height && map[indexBottom] == map[indexBottom + width])\n      return true;\n    indexTop++;\n    indexBottom++;\n  }\n  return false;\n}\nfunction mergeCells(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection) || sel.$anchorCell.pos == sel.$headCell.pos)\n    return false;\n  const rect = selectedRect(state), { map } = rect;\n  if (cellsOverlapRectangle(map, rect))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const seen = {};\n    let content = Fragment4.empty;\n    let mergedPos;\n    let mergedCell;\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const cellPos = map.map[row * map.width + col];\n        const cell = rect.table.nodeAt(cellPos);\n        if (seen[cellPos] || !cell)\n          continue;\n        seen[cellPos] = true;\n        if (mergedPos == null) {\n          mergedPos = cellPos;\n          mergedCell = cell;\n        } else {\n          if (!isEmpty(cell))\n            content = content.append(cell.content);\n          const mapped = tr.mapping.map(cellPos + rect.tableStart);\n          tr.delete(mapped, mapped + cell.nodeSize);\n        }\n      }\n    }\n    if (mergedPos == null || mergedCell == null) {\n      return true;\n    }\n    tr.setNodeMarkup(mergedPos + rect.tableStart, null, {\n      ...addColSpan(\n        mergedCell.attrs,\n        mergedCell.attrs.colspan,\n        rect.right - rect.left - mergedCell.attrs.colspan\n      ),\n      rowspan: rect.bottom - rect.top\n    });\n    if (content.size) {\n      const end = mergedPos + 1 + mergedCell.content.size;\n      const start = isEmpty(mergedCell) ? mergedPos + 1 : end;\n      tr.replaceWith(start + rect.tableStart, end + rect.tableStart, content);\n    }\n    tr.setSelection(\n      new CellSelection(tr.doc.resolve(mergedPos + rect.tableStart))\n    );\n    dispatch(tr);\n  }\n  return true;\n}\nfunction splitCell(state, dispatch) {\n  const nodeTypes = tableNodeTypes(state.schema);\n  return splitCellWithType(({ node }) => {\n    return nodeTypes[node.type.spec.tableRole];\n  })(state, dispatch);\n}\nfunction splitCellWithType(getCellType) {\n  return (state, dispatch) => {\n    var _a;\n    const sel = state.selection;\n    let cellNode;\n    let cellPos;\n    if (!(sel instanceof CellSelection)) {\n      cellNode = cellWrapping(sel.$from);\n      if (!cellNode)\n        return false;\n      cellPos = (_a = cellAround(sel.$from)) == null ? void 0 : _a.pos;\n    } else {\n      if (sel.$anchorCell.pos != sel.$headCell.pos)\n        return false;\n      cellNode = sel.$anchorCell.nodeAfter;\n      cellPos = sel.$anchorCell.pos;\n    }\n    if (cellNode == null || cellPos == null) {\n      return false;\n    }\n    if (cellNode.attrs.colspan == 1 && cellNode.attrs.rowspan == 1) {\n      return false;\n    }\n    if (dispatch) {\n      let baseAttrs = cellNode.attrs;\n      const attrs = [];\n      const colwidth = baseAttrs.colwidth;\n      if (baseAttrs.rowspan > 1)\n        baseAttrs = { ...baseAttrs, rowspan: 1 };\n      if (baseAttrs.colspan > 1)\n        baseAttrs = { ...baseAttrs, colspan: 1 };\n      const rect = selectedRect(state), tr = state.tr;\n      for (let i = 0; i < rect.right - rect.left; i++)\n        attrs.push(\n          colwidth ? {\n            ...baseAttrs,\n            colwidth: colwidth && colwidth[i] ? [colwidth[i]] : null\n          } : baseAttrs\n        );\n      let lastCell;\n      for (let row = rect.top; row < rect.bottom; row++) {\n        let pos = rect.map.positionAt(row, rect.left, rect.table);\n        if (row == rect.top)\n          pos += cellNode.nodeSize;\n        for (let col = rect.left, i = 0; col < rect.right; col++, i++) {\n          if (col == rect.left && row == rect.top)\n            continue;\n          tr.insert(\n            lastCell = tr.mapping.map(pos + rect.tableStart, 1),\n            getCellType({ node: cellNode, row, col }).createAndFill(attrs[i])\n          );\n        }\n      }\n      tr.setNodeMarkup(\n        cellPos,\n        getCellType({ node: cellNode, row: rect.top, col: rect.left }),\n        attrs[0]\n      );\n      if (sel instanceof CellSelection)\n        tr.setSelection(\n          new CellSelection(\n            tr.doc.resolve(sel.$anchorCell.pos),\n            lastCell ? tr.doc.resolve(lastCell) : void 0\n          )\n        );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction setCellAttr(name, value) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const $cell = selectionCell(state);\n    if ($cell.nodeAfter.attrs[name] === value)\n      return false;\n    if (dispatch) {\n      const tr = state.tr;\n      if (state.selection instanceof CellSelection)\n        state.selection.forEachCell((node, pos) => {\n          if (node.attrs[name] !== value)\n            tr.setNodeMarkup(pos, null, {\n              ...node.attrs,\n              [name]: value\n            });\n        });\n      else\n        tr.setNodeMarkup($cell.pos, null, {\n          ...$cell.nodeAfter.attrs,\n          [name]: value\n        });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction deprecated_toggleHeader(type) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const cells = rect.map.cellsInRect(\n        type == \"column\" ? {\n          left: rect.left,\n          top: 0,\n          right: rect.right,\n          bottom: rect.map.height\n        } : type == \"row\" ? {\n          left: 0,\n          top: rect.top,\n          right: rect.map.width,\n          bottom: rect.bottom\n        } : rect\n      );\n      const nodes = cells.map((pos) => rect.table.nodeAt(pos));\n      for (let i = 0; i < cells.length; i++)\n        if (nodes[i].type == types.header_cell)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.cell,\n            nodes[i].attrs\n          );\n      if (tr.steps.length == 0)\n        for (let i = 0; i < cells.length; i++)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.header_cell,\n            nodes[i].attrs\n          );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction isHeaderEnabledByType(type, rect, types) {\n  const cellPositions = rect.map.cellsInRect({\n    left: 0,\n    top: 0,\n    right: type == \"row\" ? rect.map.width : 1,\n    bottom: type == \"column\" ? rect.map.height : 1\n  });\n  for (let i = 0; i < cellPositions.length; i++) {\n    const cell = rect.table.nodeAt(cellPositions[i]);\n    if (cell && cell.type !== types.header_cell) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toggleHeader(type, options) {\n  options = options || { useDeprecatedLogic: false };\n  if (options.useDeprecatedLogic)\n    return deprecated_toggleHeader(type);\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const isHeaderRowEnabled = isHeaderEnabledByType(\"row\", rect, types);\n      const isHeaderColumnEnabled = isHeaderEnabledByType(\n        \"column\",\n        rect,\n        types\n      );\n      const isHeaderEnabled = type === \"column\" ? isHeaderRowEnabled : type === \"row\" ? isHeaderColumnEnabled : false;\n      const selectionStartsAt = isHeaderEnabled ? 1 : 0;\n      const cellsRect = type == \"column\" ? {\n        left: 0,\n        top: selectionStartsAt,\n        right: 1,\n        bottom: rect.map.height\n      } : type == \"row\" ? {\n        left: selectionStartsAt,\n        top: 0,\n        right: rect.map.width,\n        bottom: 1\n      } : rect;\n      const newType = type == \"column\" ? isHeaderColumnEnabled ? types.cell : types.header_cell : type == \"row\" ? isHeaderRowEnabled ? types.cell : types.header_cell : types.cell;\n      rect.map.cellsInRect(cellsRect).forEach((relativeCellPos) => {\n        const cellPos = relativeCellPos + rect.tableStart;\n        const cell = tr.doc.nodeAt(cellPos);\n        if (cell) {\n          tr.setNodeMarkup(cellPos, newType, cell.attrs);\n        }\n      });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nvar toggleHeaderRow = toggleHeader(\"row\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderColumn = toggleHeader(\"column\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderCell = toggleHeader(\"cell\", {\n  useDeprecatedLogic: true\n});\nfunction findNextCell($cell, dir) {\n  if (dir < 0) {\n    const before = $cell.nodeBefore;\n    if (before)\n      return $cell.pos - before.nodeSize;\n    for (let row = $cell.index(-1) - 1, rowEnd = $cell.before(); row >= 0; row--) {\n      const rowNode = $cell.node(-1).child(row);\n      const lastChild = rowNode.lastChild;\n      if (lastChild) {\n        return rowEnd - 1 - lastChild.nodeSize;\n      }\n      rowEnd -= rowNode.nodeSize;\n    }\n  } else {\n    if ($cell.index() < $cell.parent.childCount - 1) {\n      return $cell.pos + $cell.nodeAfter.nodeSize;\n    }\n    const table = $cell.node(-1);\n    for (let row = $cell.indexAfter(-1), rowStart = $cell.after(); row < table.childCount; row++) {\n      const rowNode = table.child(row);\n      if (rowNode.childCount)\n        return rowStart + 1;\n      rowStart += rowNode.nodeSize;\n    }\n  }\n  return null;\n}\nfunction goToNextCell(direction) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const cell = findNextCell(selectionCell(state), direction);\n    if (cell == null)\n      return false;\n    if (dispatch) {\n      const $cell = state.doc.resolve(cell);\n      dispatch(\n        state.tr.setSelection(TextSelection3.between($cell, moveCellForward($cell))).scrollIntoView()\n      );\n    }\n    return true;\n  };\n}\nfunction deleteTable(state, dispatch) {\n  const $pos = state.selection.$anchor;\n  for (let d = $pos.depth; d > 0; d--) {\n    const node = $pos.node(d);\n    if (node.type.spec.tableRole == \"table\") {\n      if (dispatch)\n        dispatch(\n          state.tr.delete($pos.before(d), $pos.after(d)).scrollIntoView()\n        );\n      return true;\n    }\n  }\n  return false;\n}\n\n// src/index.ts\nfunction tableEditing({\n  allowTableNodeSelection = false\n} = {}) {\n  return new Plugin2({\n    key: tableEditingKey,\n    // This piece of state is used to remember when a mouse-drag\n    // cell-selection is happening, so that it can continue even as\n    // transactions (which might move its anchor cell) come in.\n    state: {\n      init() {\n        return null;\n      },\n      apply(tr, cur) {\n        const set = tr.getMeta(tableEditingKey);\n        if (set != null)\n          return set == -1 ? null : set;\n        if (cur == null || !tr.docChanged)\n          return cur;\n        const { deleted, pos } = tr.mapping.mapResult(cur);\n        return deleted ? null : pos;\n      }\n    },\n    props: {\n      decorations: drawCellSelection,\n      handleDOMEvents: {\n        mousedown: handleMouseDown\n      },\n      createSelectionBetween(view) {\n        return tableEditingKey.getState(view.state) != null ? view.state.selection : null;\n      },\n      handleTripleClick,\n      handleKeyDown,\n      handlePaste\n    },\n    appendTransaction(_, oldState, state) {\n      return normalizeSelection(\n        state,\n        fixTables(state, oldState),\n        allowTableNodeSelection\n      );\n    }\n  });\n}\nexport {\n  CellBookmark,\n  CellSelection,\n  ResizeState,\n  TableMap,\n  TableView,\n  clipCells as __clipCells,\n  insertCells as __insertCells,\n  pastedCells as __pastedCells,\n  addColSpan,\n  addColumn,\n  addColumnAfter,\n  addColumnBefore,\n  addRow,\n  addRowAfter,\n  addRowBefore,\n  cellAround,\n  colCount,\n  columnIsHeader,\n  columnResizing,\n  columnResizingPluginKey,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  findCell,\n  fixTables,\n  fixTablesKey,\n  goToNextCell,\n  handlePaste,\n  inSameTable,\n  isInTable,\n  mergeCells,\n  moveCellForward,\n  nextCell,\n  pointsAtCell,\n  removeColSpan,\n  removeColumn,\n  removeRow,\n  rowIsHeader,\n  selectedRect,\n  selectionCell,\n  setCellAttr,\n  splitCell,\n  splitCellWithType,\n  tableEditing,\n  tableEditingKey,\n  tableNodeTypes,\n  tableNodes,\n  toggleHeader,\n  toggleHeaderCell,\n  toggleHeaderColumn,\n  toggleHeaderRow,\n  updateColumnsOnResize\n};\n", "// @ts-nocheck\nimport { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { NodeView } from '@tiptap/pm/view'\n\nexport function updateColumns(\n  node: ProseMirrorNode,\n  colgroup: Element,\n  table: Element,\n  cellMinWidth: number,\n  overrideCol?: number,\n  overrideValue?: any,\n) {\n  let totalWidth = 0\n  let fixedWidth = true\n  let nextDOM = colgroup.firstChild\n  const row = node.firstChild\n\n  for (let i = 0, col = 0; i < row.childCount; i += 1) {\n    const { colspan, colwidth } = row.child(i).attrs\n\n    for (let j = 0; j < colspan; j += 1, col += 1) {\n      const hasWidth = overrideCol === col ? overrideValue : colwidth && colwidth[j]\n      const cssWidth = hasWidth ? `${hasWidth}px` : ''\n\n      totalWidth += hasWidth || cellMinWidth\n\n      if (!hasWidth) {\n        fixedWidth = false\n      }\n\n      if (!nextDOM) {\n        colgroup.appendChild(document.createElement('col')).style.width = cssWidth\n      } else {\n        if (nextDOM.style.width !== cssWidth) {\n          nextDOM.style.width = cssWidth\n        }\n\n        nextDOM = nextDOM.nextSibling\n      }\n    }\n  }\n\n  while (nextDOM) {\n    const after = nextDOM.nextSibling\n\n    nextDOM.parentNode.removeChild(nextDOM)\n    nextDOM = after\n  }\n\n  if (fixedWidth) {\n    table.style.width = `${totalWidth}px`\n    table.style.minWidth = ''\n  } else {\n    table.style.width = ''\n    table.style.minWidth = `${totalWidth}px`\n  }\n}\n\nexport class TableView implements NodeView {\n  node: ProseMirrorNode\n\n  cellMinWidth: number\n\n  dom: Element\n\n  table: Element\n\n  colgroup: Element\n\n  contentDOM: Element\n\n  constructor(node: ProseMirrorNode, cellMinWidth: number) {\n    this.node = node\n    this.cellMinWidth = cellMinWidth\n    this.dom = document.createElement('div')\n    this.dom.className = 'tableWrapper'\n    this.table = this.dom.appendChild(document.createElement('table'))\n    this.colgroup = this.table.appendChild(document.createElement('colgroup'))\n    updateColumns(node, this.colgroup, this.table, cellMinWidth)\n    this.contentDOM = this.table.appendChild(document.createElement('tbody'))\n  }\n\n  update(node: ProseMirrorNode) {\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    this.node = node\n    updateColumns(node, this.colgroup, this.table, this.cellMinWidth)\n\n    return true\n  }\n\n  ignoreMutation(mutation: MutationRecord | { type: 'selection'; target: Element }) {\n    return (\n      mutation.type === 'attributes'\n      && (mutation.target === this.table || this.colgroup.contains(mutation.target))\n    )\n  }\n}\n", "import { DOMOutputSpec, Node as ProseMirrorNode } from '@tiptap/pm/model'\n\n/**\n * Creates a colgroup element for a table node in ProseMirror.\n *\n * @param node - The ProseMirror node representing the table.\n * @param cellMinWidth - The minimum width of a cell in the table.\n * @param overrideCol - (Optional) The index of the column to override the width of.\n * @param overrideValue - (Optional) The width value to use for the overridden column.\n * @returns An object containing the colgroup element, the total width of the table, and the minimum width of the table.\n */\nexport function createColGroup(\n  node: ProseMirrorNode,\n  cellMinWidth: number,\n  overrideCol?: number,\n  overrideValue?: any,\n) {\n  let totalWidth = 0\n  let fixedWidth = true\n  const cols: DOMOutputSpec[] = []\n  const row = node.firstChild\n\n  if (!row) {\n    return {}\n  }\n\n  for (let i = 0, col = 0; i < row.childCount; i += 1) {\n    const { colspan, colwidth } = row.child(i).attrs\n\n    for (let j = 0; j < colspan; j += 1, col += 1) {\n      const hasWidth = overrideCol === col ? overrideValue : colwidth && colwidth[j]\n      const cssWidth = hasWidth ? `${hasWidth}px` : ''\n\n      totalWidth += hasWidth || cellMinWidth\n\n      if (!hasWidth) {\n        fixedWidth = false\n      }\n\n      cols.push(['col', cssWidth ? { style: `width: ${cssWidth}` } : {}])\n    }\n  }\n\n  const tableWidth = fixedWidth ? `${totalWidth}px` : ''\n  const tableMinWidth = fixedWidth ? '' : `${totalWidth}px`\n\n  const colgroup: DOMOutputSpec = ['colgroup', {}, ...cols]\n\n  return { colgroup, tableWidth, tableMinWidth }\n}\n", "import { Fragment, Node as ProsemirrorNode, NodeType } from '@tiptap/pm/model'\n\nexport function createCell(\n  cellType: NodeType,\n  cellContent?: Fragment | ProsemirrorNode | Array<ProsemirrorNode>,\n): ProsemirrorNode | null | undefined {\n  if (cellContent) {\n    return cellType.createChecked(null, cellContent)\n  }\n\n  return cellType.createAndFill()\n}\n", "import { NodeType, Schema } from '@tiptap/pm/model'\n\nexport function getTableNodeTypes(schema: Schema): { [key: string]: NodeType } {\n  if (schema.cached.tableNodeTypes) {\n    return schema.cached.tableNodeTypes\n  }\n\n  const roles: { [key: string]: NodeType } = {}\n\n  Object.keys(schema.nodes).forEach(type => {\n    const nodeType = schema.nodes[type]\n\n    if (nodeType.spec.tableRole) {\n      roles[nodeType.spec.tableRole] = nodeType\n    }\n  })\n\n  schema.cached.tableNodeTypes = roles\n\n  return roles\n}\n", "import { Fragment, Node as ProsemirrorNode, Schema } from '@tiptap/pm/model'\n\nimport { createCell } from './createCell.js'\nimport { getTableNodeTypes } from './getTableNodeTypes.js'\n\nexport function createTable(\n  schema: Schema,\n  rowsCount: number,\n  colsCount: number,\n  withHeaderRow: boolean,\n  cellContent?: Fragment | ProsemirrorNode | Array<ProsemirrorNode>,\n): ProsemirrorNode {\n  const types = getTableNodeTypes(schema)\n  const headerCells: ProsemirrorNode[] = []\n  const cells: ProsemirrorNode[] = []\n\n  for (let index = 0; index < colsCount; index += 1) {\n    const cell = createCell(types.cell, cellContent)\n\n    if (cell) {\n      cells.push(cell)\n    }\n\n    if (withHeaderRow) {\n      const headerCell = createCell(types.header_cell, cellContent)\n\n      if (headerCell) {\n        headerCells.push(headerCell)\n      }\n    }\n  }\n\n  const rows: ProsemirrorNode[] = []\n\n  for (let index = 0; index < rowsCount; index += 1) {\n    rows.push(types.row.createChecked(null, withHeaderRow && index === 0 ? headerCells : cells))\n  }\n\n  return types.table.createChecked(null, rows)\n}\n", "import { CellSelection } from '@tiptap/pm/tables'\n\nexport function isCellSelection(value: unknown): value is CellSelection {\n  return value instanceof CellSelection\n}\n", "import { findParentNodeClosestToPos, KeyboardShortcutCommand } from '@tiptap/core'\n\nimport { isCellSelection } from './isCellSelection.js'\n\nexport const deleteTableWhenAllCellsSelected: KeyboardShortcutCommand = ({ editor }) => {\n  const { selection } = editor.state\n\n  if (!isCellSelection(selection)) {\n    return false\n  }\n\n  let cellCount = 0\n  const table = findParentNodeClosestToPos(selection.ranges[0].$from, node => {\n    return node.type.name === 'table'\n  })\n\n  table?.node.descendants(node => {\n    if (node.type.name === 'table') {\n      return false\n    }\n\n    if (['tableCell', 'tableHeader'].includes(node.type.name)) {\n      cellCount += 1\n    }\n  })\n\n  const allCellsSelected = cellCount === selection.ranges.length\n\n  if (!allCellsSelected) {\n    return false\n  }\n\n  editor.commands.deleteTable()\n\n  return true\n}\n", "import {\n  callOrReturn, getExtensionField, mergeAttributes, Node, ParentConfig,\n} from '@tiptap/core'\nimport { DOMOutputSpec } from '@tiptap/pm/model'\nimport { TextSelection } from '@tiptap/pm/state'\nimport {\n  addColumnAfter,\n  addColumnBefore,\n  addRowAfter,\n  addRowBefore,\n  CellSelection,\n  columnResizing,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  fixTables,\n  goToNextCell,\n  mergeCells,\n  setCellAttr,\n  splitCell,\n  tableEditing,\n  toggleHeader,\n  toggleHeaderCell,\n} from '@tiptap/pm/tables'\nimport { NodeView } from '@tiptap/pm/view'\n\nimport { TableView } from './TableView.js'\nimport { createColGroup } from './utilities/createColGroup.js'\nimport { createTable } from './utilities/createTable.js'\nimport { deleteTableWhenAllCellsSelected } from './utilities/deleteTableWhenAllCellsSelected.js'\n\nexport interface TableOptions {\n  HTMLAttributes: Record<string, any>\n  resizable: boolean\n  handleWidth: number\n  cellMinWidth: number\n  View: NodeView\n  lastColumnResizable: boolean\n  allowTableNodeSelection: boolean\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    table: {\n      insertTable: (options?: {\n        rows?: number\n        cols?: number\n        withHeaderRow?: boolean\n      }) => ReturnType\n      addColumnBefore: () => ReturnType\n      addColumnAfter: () => ReturnType\n      deleteColumn: () => ReturnType\n      addRowBefore: () => ReturnType\n      addRowAfter: () => ReturnType\n      deleteRow: () => ReturnType\n      deleteTable: () => ReturnType\n      mergeCells: () => ReturnType\n      splitCell: () => ReturnType\n      toggleHeaderColumn: () => ReturnType\n      toggleHeaderRow: () => ReturnType\n      toggleHeaderCell: () => ReturnType\n      mergeOrSplit: () => ReturnType\n      setCellAttribute: (name: string, value: any) => ReturnType\n      goToNextCell: () => ReturnType\n      goToPreviousCell: () => ReturnType\n      fixTables: () => ReturnType\n      setCellSelection: (position: { anchorCell: number; headCell?: number }) => ReturnType\n    }\n  }\n\n  interface NodeConfig<Options, Storage> {\n    /**\n     * Table Role\n     */\n    tableRole?:\n      | string\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options>>['tableRole']\n        }) => string)\n  }\n}\n\nexport const Table = Node.create<TableOptions>({\n  name: 'table',\n\n  // @ts-ignore\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      resizable: false,\n      handleWidth: 5,\n      cellMinWidth: 25,\n      // TODO: fix\n      View: TableView,\n      lastColumnResizable: true,\n      allowTableNodeSelection: false,\n    }\n  },\n\n  content: 'tableRow+',\n\n  tableRole: 'table',\n\n  isolating: true,\n\n  group: 'block',\n\n  parseHTML() {\n    return [{ tag: 'table' }]\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    const { colgroup, tableWidth, tableMinWidth } = createColGroup(\n      node,\n      this.options.cellMinWidth,\n    )\n\n    const table: DOMOutputSpec = [\n      'table',\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes, {\n        style: tableWidth\n          ? `width: ${tableWidth}`\n          : `minWidth: ${tableMinWidth}`,\n      }),\n      colgroup,\n      ['tbody', 0],\n    ]\n\n    return table\n  },\n\n  addCommands() {\n    return {\n      insertTable:\n        ({ rows = 3, cols = 3, withHeaderRow = true } = {}) => ({ tr, dispatch, editor }) => {\n          const node = createTable(editor.schema, rows, cols, withHeaderRow)\n\n          if (dispatch) {\n            const offset = tr.selection.anchor + 1\n\n            tr.replaceSelectionWith(node)\n              .scrollIntoView()\n              .setSelection(TextSelection.near(tr.doc.resolve(offset)))\n          }\n\n          return true\n        },\n      addColumnBefore:\n        () => ({ state, dispatch }) => {\n          return addColumnBefore(state, dispatch)\n        },\n      addColumnAfter:\n        () => ({ state, dispatch }) => {\n          return addColumnAfter(state, dispatch)\n        },\n      deleteColumn:\n        () => ({ state, dispatch }) => {\n          return deleteColumn(state, dispatch)\n        },\n      addRowBefore:\n        () => ({ state, dispatch }) => {\n          return addRowBefore(state, dispatch)\n        },\n      addRowAfter:\n        () => ({ state, dispatch }) => {\n          return addRowAfter(state, dispatch)\n        },\n      deleteRow:\n        () => ({ state, dispatch }) => {\n          return deleteRow(state, dispatch)\n        },\n      deleteTable:\n        () => ({ state, dispatch }) => {\n          return deleteTable(state, dispatch)\n        },\n      mergeCells:\n        () => ({ state, dispatch }) => {\n          return mergeCells(state, dispatch)\n        },\n      splitCell:\n        () => ({ state, dispatch }) => {\n          return splitCell(state, dispatch)\n        },\n      toggleHeaderColumn:\n        () => ({ state, dispatch }) => {\n          return toggleHeader('column')(state, dispatch)\n        },\n      toggleHeaderRow:\n        () => ({ state, dispatch }) => {\n          return toggleHeader('row')(state, dispatch)\n        },\n      toggleHeaderCell:\n        () => ({ state, dispatch }) => {\n          return toggleHeaderCell(state, dispatch)\n        },\n      mergeOrSplit:\n        () => ({ state, dispatch }) => {\n          if (mergeCells(state, dispatch)) {\n            return true\n          }\n\n          return splitCell(state, dispatch)\n        },\n      setCellAttribute:\n        (name, value) => ({ state, dispatch }) => {\n          return setCellAttr(name, value)(state, dispatch)\n        },\n      goToNextCell:\n        () => ({ state, dispatch }) => {\n          return goToNextCell(1)(state, dispatch)\n        },\n      goToPreviousCell:\n        () => ({ state, dispatch }) => {\n          return goToNextCell(-1)(state, dispatch)\n        },\n      fixTables:\n        () => ({ state, dispatch }) => {\n          if (dispatch) {\n            fixTables(state)\n          }\n\n          return true\n        },\n      setCellSelection:\n        position => ({ tr, dispatch }) => {\n          if (dispatch) {\n            const selection = CellSelection.create(tr.doc, position.anchorCell, position.headCell)\n\n            // @ts-ignore\n            tr.setSelection(selection)\n          }\n\n          return true\n        },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Tab: () => {\n        if (this.editor.commands.goToNextCell()) {\n          return true\n        }\n\n        if (!this.editor.can().addRowAfter()) {\n          return false\n        }\n\n        return this.editor.chain().addRowAfter().goToNextCell().run()\n      },\n      'Shift-Tab': () => this.editor.commands.goToPreviousCell(),\n      Backspace: deleteTableWhenAllCellsSelected,\n      'Mod-Backspace': deleteTableWhenAllCellsSelected,\n      Delete: deleteTableWhenAllCellsSelected,\n      'Mod-Delete': deleteTableWhenAllCellsSelected,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    const isResizable = this.options.resizable && this.editor.isEditable\n\n    return [\n      ...(isResizable\n        ? [\n          columnResizing({\n            handleWidth: this.options.handleWidth,\n            cellMinWidth: this.options.cellMinWidth,\n            // @ts-ignore (incorrect type)\n            View: this.options.View,\n            // TODO: PR for @types/prosemirror-tables\n            // @ts-ignore (incorrect type)\n            lastColumnResizable: this.options.lastColumnResizable,\n          }),\n        ]\n        : []),\n      tableEditing({\n        allowTableNodeSelection: this.options.allowTableNodeSelection,\n      }),\n    ]\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    return {\n      tableRole: callOrReturn(getExtensionField(extension, 'tableRole', context)),\n    }\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TableCellOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\nexport const TableCell = Node.create<TableCellOptions>({\n  name: 'tableCell',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  addAttributes() {\n    return {\n      colspan: {\n        default: 1,\n      },\n      rowspan: {\n        default: 1,\n      },\n      colwidth: {\n        default: null,\n        parseHTML: element => {\n          const colwidth = element.getAttribute('colwidth')\n          const value = colwidth\n            ? [parseInt(colwidth, 10)]\n            : null\n\n          return value\n        },\n      },\n    }\n  },\n\n  tableRole: 'cell',\n\n  isolating: true,\n\n  parseHTML() {\n    return [\n      { tag: 'td' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['td', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TableHeaderOptions {\n  HTMLAttributes: Record<string, any>,\n}\nexport const TableHeader = Node.create<TableHeaderOptions>({\n  name: 'tableHeader',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  addAttributes() {\n    return {\n      colspan: {\n        default: 1,\n      },\n      rowspan: {\n        default: 1,\n      },\n      colwidth: {\n        default: null,\n        parseHTML: element => {\n          const colwidth = element.getAttribute('colwidth')\n          const value = colwidth\n            ? [parseInt(colwidth, 10)]\n            : null\n\n          return value\n        },\n      },\n    }\n  },\n\n  tableRole: 'header_cell',\n\n  isolating: true,\n\n  parseHTML() {\n    return [\n      { tag: 'th' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['th', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TableRowOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\nexport const TableRow = Node.create<TableRowOptions>({\n  name: 'tableRow',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: '(tableCell | tableHeader)*',\n\n  tableRole: 'row',\n\n  parseHTML() {\n    return [\n      { tag: 'tr' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['tr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n})\n", "import {\n  mergeAttributes,\n  Node,\n  nodeInputRule,\n} from '@tiptap/core'\n\nexport interface ImageOptions {\n  inline: boolean,\n  allowBase64: boolean,\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    image: {\n      /**\n       * Add an image\n       */\n      setImage: (options: { src: string, alt?: string, title?: string }) => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /(?:^|\\s)(!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\))$/\n\nexport const Image = Node.create<ImageOptions>({\n  name: 'image',\n\n  addOptions() {\n    return {\n      inline: false,\n      allowBase64: false,\n      HTMLAttributes: {},\n    }\n  },\n\n  inline() {\n    return this.options.inline\n  },\n\n  group() {\n    return this.options.inline ? 'inline' : 'block'\n  },\n\n  draggable: true,\n\n  addAttributes() {\n    return {\n      src: {\n        default: null,\n      },\n      alt: {\n        default: null,\n      },\n      title: {\n        default: null,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: this.options.allowBase64\n          ? 'img[src]'\n          : 'img[src]:not([src^=\"data:\"])',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['img', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setImage: options => ({ commands }) => {\n        return commands.insertContent({\n          type: this.name,\n          attrs: options,\n        })\n      },\n    }\n  },\n\n  addInputRules() {\n    return [\n      nodeInputRule({\n        find: inputRegex,\n        type: this.type,\n        getAttributes: match => {\n          const [,, alt, src, title] = match\n\n          return { src, alt, title }\n        },\n      }),\n    ]\n  },\n})\n", "// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5m\u00F6gensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = '\u03B5\u03BB1\u03C52\u0431\u04331\u0435\u043B3\u0434\u0435\u0442\u04384\u0435\u044E2\u043A\u0430\u0442\u043E\u043B\u0438\u043A6\u043E\u043C3\u043C\u043A\u04342\u043E\u043D1\u0441\u043A\u0432\u04306\u043E\u043D\u043B\u0430\u0439\u043D5\u0440\u04333\u0440\u0443\u04412\u04442\u0441\u0430\u0439\u04423\u0440\u04313\u0443\u043A\u04403\u049B\u0430\u04373\u0570\u0561\u05753\u05D9\u05E9\u05E8\u05D0\u05DC5\u05E7\u05D5\u05DD3\u0627\u0628\u0648\u0638\u0628\u064A5\u0631\u0627\u0645\u0643\u06485\u0644\u0627\u0631\u062F\u06464\u0628\u062D\u0631\u064A\u06465\u062C\u0632\u0627\u0626\u06315\u0633\u0639\u0648\u062F\u064A\u06296\u0639\u0644\u064A\u0627\u06465\u0645\u063A\u0631\u06285\u0645\u0627\u0631\u0627\u062A5\u06CC\u0631\u0627\u06465\u0628\u0627\u0631\u062A2\u0632\u0627\u06314\u064A\u062A\u06433\u06BE\u0627\u0631\u062A5\u062A\u0648\u0646\u06334\u0633\u0648\u062F\u0627\u06463\u0631\u064A\u06295\u0634\u0628\u0643\u06294\u0639\u0631\u0627\u06422\u06282\u0645\u0627\u06464\u0641\u0644\u0633\u0637\u064A\u06466\u0642\u0637\u06313\u0643\u0627\u062B\u0648\u0644\u064A\u06436\u0648\u06453\u0645\u0635\u06312\u0644\u064A\u0633\u064A\u06275\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u06277\u0642\u06394\u0647\u0645\u0631\u0627\u06475\u067E\u0627\u06A9\u0633\u062A\u0627\u06467\u0680\u0627\u0631\u062A4\u0915\u0949\u092E3\u0928\u0947\u091F3\u092D\u093E\u0930\u09240\u092E\u094D3\u094B\u09245\u0938\u0902\u0917\u0920\u09285\u09AC\u09BE\u0982\u09B2\u09BE5\u09AD\u09BE\u09B0\u09A42\u09F0\u09A44\u0A2D\u0A3E\u0A30\u0A244\u0AAD\u0ABE\u0AB0\u0AA44\u0B2D\u0B3E\u0B30\u0B244\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE6\u0BB2\u0B99\u0BCD\u0B95\u0BC86\u0B9A\u0BBF\u0B99\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0BC2\u0BB0\u0BCD11\u0C2D\u0C3E\u0C30\u0C24\u0C4D5\u0CAD\u0CBE\u0CB0\u0CA44\u0D2D\u0D3E\u0D30\u0D24\u0D025\u0DBD\u0D82\u0D9A\u0DCF4\u0E04\u0E2D\u0E213\u0E44\u0E17\u0E223\u0EA5\u0EB2\u0EA73\u10D2\u10D42\u307F\u3093\u306A3\u30A2\u30DE\u30BE\u30F34\u30AF\u30E9\u30A6\u30C94\u30B0\u30FC\u30B0\u30EB4\u30B3\u30E02\u30B9\u30C8\u30A23\u30BB\u30FC\u30EB3\u30D5\u30A1\u30C3\u30B7\u30E7\u30F36\u30DD\u30A4\u30F3\u30C84\u4E16\u754C2\u4E2D\u4FE11\u56FD1\u570B1\u6587\u7F513\u4E9A\u9A6C\u900A3\u4F01\u4E1A2\u4F5B\u5C712\u4FE1\u606F2\u5065\u5EB72\u516B\u53662\u516C\u53F81\u76CA2\u53F0\u6E7E1\u70632\u5546\u57CE1\u5E971\u68072\u5609\u91CC0\u5927\u9152\u5E975\u5728\u7EBF2\u5927\u62FF2\u5929\u4E3B\u65593\u5A31\u4E502\u5BB6\u96FB2\u5E7F\u4E1C2\u5FAE\u535A2\u6148\u55842\u6211\u7231\u4F603\u624B\u673A2\u62DB\u80582\u653F\u52A11\u5E9C2\u65B0\u52A0\u57612\u95FB2\u65F6\u5C1A2\u66F8\u7C4D2\u673A\u67842\u6DE1\u9A6C\u95213\u6E38\u620F2\u6FB3\u95802\u70B9\u770B2\u79FB\u52A82\u7EC4\u7EC7\u673A\u67844\u7F51\u57401\u5E971\u7AD91\u7EDC2\u8054\u901A2\u8C37\u6B4C2\u8D2D\u72692\u901A\u8CA92\u96C6\u56E22\u96FB\u8A0A\u76C8\u79D14\u98DE\u5229\u6D663\u98DF\u54C12\u9910\u53852\u9999\u683C\u91CC\u62C93\u6E2F2\uB2F7\uB1371\uCEF42\uC0BC\uC1312\uD55C\uAD6D2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\n// TODO: Rename OPEN -> LEFT and CLOSE -> RIGHT in v5 to fit with Unicode names\n// Also rename angle brackes to LESSTHAN and GREATER THAN\nconst OPENBRACE = 'OPENBRACE'; // {\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst FULLWIDTHLEFTPAREN = 'FULLWIDTHLEFTPAREN'; // \uFF08\nconst FULLWIDTHRIGHTPAREN = 'FULLWIDTHRIGHTPAREN'; // \uFF09\nconst LEFTCORNERBRACKET = 'LEFTCORNERBRACKET'; // \u300C\nconst RIGHTCORNERBRACKET = 'RIGHTCORNERBRACKET'; // \u300D\nconst LEFTWHITECORNERBRACKET = 'LEFTWHITECORNERBRACKET'; // \u300E\nconst RIGHTWHITECORNERBRACKET = 'RIGHTWHITECORNERBRACKET'; // \u300F\nconst FULLWIDTHLESSTHAN = 'FULLWIDTHLESSTHAN'; // \uFF1C\nconst FULLWIDTHGREATERTHAN = 'FULLWIDTHGREATERTHAN'; // \uFF1E\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tCLOSEBRACE: CLOSEBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEPAREN: CLOSEPAREN,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tFULLWIDTHLEFTPAREN: FULLWIDTHLEFTPAREN,\n\tFULLWIDTHRIGHTPAREN: FULLWIDTHRIGHTPAREN,\n\tLEFTCORNERBRACKET: LEFTCORNERBRACKET,\n\tRIGHTCORNERBRACKET: RIGHTCORNERBRACKET,\n\tLEFTWHITECORNERBRACKET: LEFTWHITECORNERBRACKET,\n\tRIGHTWHITECORNERBRACKET: RIGHTWHITECORNERBRACKET,\n\tFULLWIDTHLESSTHAN: FULLWIDTHLESSTHAN,\n\tFULLWIDTHGREATERTHAN: FULLWIDTHGREATERTHAN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '\u2764\uFE0F', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, '\uFF08', FULLWIDTHLEFTPAREN);\n  tt(Start, '\uFF09', FULLWIDTHRIGHTPAREN);\n  tt(Start, '\u300C', LEFTCORNERBRACKET);\n  tt(Start, '\u300D', RIGHTCORNERBRACKET);\n  tt(Start, '\u300E', LEFTWHITECORNERBRACKET);\n  tt(Start, '\u300F', RIGHTWHITECORNERBRACKET);\n  tt(Start, '\uFF1C', FULLWIDTHLESSTHAN);\n  tt(Start, '\uFF1E', FULLWIDTHGREATERTHAN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '\u2026' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, COLON, COMMA, DOT, EXCLAMATION, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port number\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n  const bracketPairs = [[OPENBRACE, CLOSEBRACE],\n  // {}\n  [OPENBRACKET, CLOSEBRACKET],\n  // []\n  [OPENPAREN, CLOSEPAREN],\n  // ()\n  [OPENANGLEBRACKET, CLOSEANGLEBRACKET],\n  // <>\n  [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],\n  // \uFF08\uFF09\n  [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],\n  // \u300C\u300D\n  [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],\n  // \u300E\u300F\n  [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN] // \uFF1C\uFF1E\n  ];\n\n  for (let i = 0; i < bracketPairs.length; i++) {\n    const [OPEN, CLOSE] = bracketPairs[i];\n    const UrlOpen = tt(Url$1, OPEN); // URL followed by open bracket\n\n    // Continue not accepting for open brackets\n    tt(UrlNonaccept, OPEN, UrlOpen);\n\n    // Closing bracket component. This character WILL be included in the URL\n    tt(UrlOpen, CLOSE, Url$1);\n\n    // URL that beings with an opening bracket, followed by a symbols.\n    // Note that the final state can still be `UrlOpen` (if the URL has a\n    // single opening bracket for some reason).\n    const UrlOpenQ = makeState(Url);\n    ta(UrlOpen, qsAccepting, UrlOpenQ);\n    const UrlOpenSyms = makeState(); // UrlOpen followed by some symbols it cannot end it\n    ta(UrlOpen, qsNonAccepting);\n\n    // URL that begins with an opening bracket, followed by some symbols\n    ta(UrlOpenQ, qsAccepting, UrlOpenQ);\n    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);\n    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);\n    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);\n\n    // Close brace/bracket to become regular URL\n    tt(UrlOpenQ, CLOSE, Url$1);\n    tt(UrlOpenSyms, CLOSE, Url$1);\n  }\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error(`linkifyjs: incorrect scheme format.\n1. Must only contain digits, lowercase ASCII letters or \"-\"\n2. Cannot start or end with \"-\"\n3. \"-\" cannot repeat`);\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n */\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type) && options.check(token)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n", "import {\n  combineTransactionSteps,\n  findChildrenInRange,\n  getChangedRanges,\n  getMarksBetween,\n  NodeWithPos,\n} from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { find } from 'linkifyjs'\n\ntype AutolinkOptions = {\n  type: MarkType\n  validate?: (url: string) => boolean\n}\n\nexport function autolink(options: AutolinkOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('autolink'),\n    appendTransaction: (transactions, oldState, newState) => {\n      const docChanges = transactions.some(transaction => transaction.docChanged) && !oldState.doc.eq(newState.doc)\n      const preventAutolink = transactions.some(transaction => transaction.getMeta('preventAutolink'))\n\n      if (!docChanges || preventAutolink) {\n        return\n      }\n\n      const { tr } = newState\n      const transform = combineTransactionSteps(oldState.doc, [...transactions])\n      const changes = getChangedRanges(transform)\n\n      changes.forEach(({ newRange }) => {\n        // Now let’s see if we can add new links.\n        const nodesInChangedRanges = findChildrenInRange(\n          newState.doc,\n          newRange,\n          node => node.isTextblock,\n        )\n\n        let textBlock: NodeWithPos | undefined\n        let textBeforeWhitespace: string | undefined\n\n        if (nodesInChangedRanges.length > 1) {\n          // Grab the first node within the changed ranges (ex. the first of two paragraphs when hitting enter).\n          textBlock = nodesInChangedRanges[0]\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            textBlock.pos + textBlock.node.nodeSize,\n            undefined,\n            ' ',\n          )\n        } else if (\n          nodesInChangedRanges.length\n          // We want to make sure to include the block seperator argument to treat hard breaks like spaces.\n          && newState.doc.textBetween(newRange.from, newRange.to, ' ', ' ').endsWith(' ')\n        ) {\n          textBlock = nodesInChangedRanges[0]\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            newRange.to,\n            undefined,\n            ' ',\n          )\n        }\n\n        if (textBlock && textBeforeWhitespace) {\n          const wordsBeforeWhitespace = textBeforeWhitespace.split(' ').filter(s => s !== '')\n\n          if (wordsBeforeWhitespace.length <= 0) {\n            return false\n          }\n\n          const lastWordBeforeSpace = wordsBeforeWhitespace[wordsBeforeWhitespace.length - 1]\n          const lastWordAndBlockOffset = textBlock.pos + textBeforeWhitespace.lastIndexOf(lastWordBeforeSpace)\n\n          if (!lastWordBeforeSpace) {\n            return false\n          }\n\n          find(lastWordBeforeSpace)\n            .filter(link => link.isLink)\n            // Calculate link position.\n            .map(link => ({\n              ...link,\n              from: lastWordAndBlockOffset + link.start + 1,\n              to: lastWordAndBlockOffset + link.end + 1,\n            }))\n            // ignore link inside code mark\n            .filter(link => {\n              if (!newState.schema.marks.code) {\n                return true\n              }\n\n              return !newState.doc.rangeHasMark(\n                link.from,\n                link.to,\n                newState.schema.marks.code,\n              )\n            })\n            // validate link\n            .filter(link => {\n              if (options.validate) {\n                return options.validate(link.value)\n              }\n              return true\n            })\n            // Add link mark.\n            .forEach(link => {\n              if (getMarksBetween(link.from, link.to, newState.doc).some(item => item.mark.type === options.type)) {\n                return\n              }\n\n              tr.addMark(\n                link.from,\n                link.to,\n                options.type.create({\n                  href: link.href,\n                }),\n              )\n            })\n        }\n      })\n\n      if (!tr.steps.length) {\n        return\n      }\n\n      return tr\n    },\n  })\n}\n", "import { getAttributes } from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\n\ntype ClickHandlerOptions = {\n  type: MarkType\n}\n\nexport function clickHandler(options: ClickHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('handleClickLink'),\n    props: {\n      handleClick: (view, pos, event) => {\n        if (event.button !== 0) {\n          return false\n        }\n\n        let a = event.target as HTMLElement\n        const els = []\n\n        while (a.nodeName !== 'DIV') {\n          els.push(a)\n          a = a.parentNode as HTMLElement\n        }\n\n        if (!els.find(value => value.nodeName === 'A')) {\n          return false\n        }\n\n        const attrs = getAttributes(view.state, options.type.name)\n        const link = (event.target as HTMLLinkElement)\n\n        const href = link?.href ?? attrs.href\n        const target = link?.target ?? attrs.target\n\n        if (link && href) {\n          window.open(href, target)\n\n          return true\n        }\n\n        return false\n      },\n    },\n  })\n}\n", "import { Editor } from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { find } from 'linkifyjs'\n\ntype PasteHandlerOptions = {\n  editor: Editor\n  type: MarkType\n}\n\nexport function pasteHandler(options: PasteHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('handlePasteLink'),\n    props: {\n      handlePaste: (view, event, slice) => {\n        const { state } = view\n        const { selection } = state\n        const { empty } = selection\n\n        if (empty) {\n          return false\n        }\n\n        let textContent = ''\n\n        slice.content.forEach(node => {\n          textContent += node.textContent\n        })\n\n        const link = find(textContent).find(item => item.isLink && item.value === textContent)\n\n        if (!textContent || !link) {\n          return false\n        }\n\n        options.editor.commands.setMark(options.type, {\n          href: link.href,\n        })\n\n        return true\n      },\n    },\n  })\n}\n", "import {\n  Mark, markPasteRule, mergeAttributes, PasteRuleMatch,\n} from '@tiptap/core'\nimport { Plugin } from '@tiptap/pm/state'\nimport { find, registerCustomProtocol, reset } from 'linkifyjs'\n\nimport { autolink } from './helpers/autolink.js'\nimport { clickHandler } from './helpers/clickHandler.js'\nimport { pasteHandler } from './helpers/pasteHandler.js'\n\nexport interface LinkProtocolOptions {\n  scheme: string;\n  optionalSlashes?: boolean;\n}\n\nexport const pasteRegex = /https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z]{2,}\\b(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)/gi\n\nexport interface LinkOptions {\n  /**\n   * If enabled, it adds links as you type.\n   */\n  autolink: boolean\n  /**\n   * An array of custom protocols to be registered with linkifyjs.\n   */\n  protocols: Array<LinkProtocolOptions | string>\n  /**\n   * If enabled, links will be opened on click.\n   */\n  openOnClick: boolean\n  /**\n   * Adds a link to the current selection if the pasted content only contains an url.\n   */\n  linkOnPaste: boolean\n  /**\n   * A list of HTML attributes to be rendered.\n   */\n  HTMLAttributes: Record<string, any>\n  /**\n   * A validation function that modifies link verification for the auto linker.\n   * @param url - The url to be validated.\n   * @returns - True if the url is valid, false otherwise.\n   */\n  validate?: (url: string) => boolean\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    link: {\n      /**\n       * Set a link mark\n       */\n      setLink: (attributes: { href: string; target?: string | null; rel?: string | null; class?: string | null }) => ReturnType\n      /**\n       * Toggle a link mark\n       */\n      toggleLink: (attributes: { href: string; target?: string | null; rel?: string | null; class?: string | null }) => ReturnType\n      /**\n       * Unset a link mark\n       */\n      unsetLink: () => ReturnType\n    }\n  }\n}\n\nexport const Link = Mark.create<LinkOptions>({\n  name: 'link',\n\n  priority: 1000,\n\n  keepOnSplit: false,\n\n  onCreate() {\n    this.options.protocols.forEach(protocol => {\n      if (typeof protocol === 'string') {\n        registerCustomProtocol(protocol)\n        return\n      }\n      registerCustomProtocol(protocol.scheme, protocol.optionalSlashes)\n    })\n  },\n\n  onDestroy() {\n    reset()\n  },\n\n  inclusive() {\n    return this.options.autolink\n  },\n\n  addOptions() {\n    return {\n      openOnClick: true,\n      linkOnPaste: true,\n      autolink: true,\n      protocols: [],\n      HTMLAttributes: {\n        target: '_blank',\n        rel: 'noopener noreferrer nofollow',\n        class: null,\n      },\n      validate: undefined,\n    }\n  },\n\n  addAttributes() {\n    return {\n      href: {\n        default: null,\n      },\n      target: {\n        default: this.options.HTMLAttributes.target,\n      },\n      rel: {\n        default: this.options.HTMLAttributes.rel,\n      },\n      class: {\n        default: this.options.HTMLAttributes.class,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [{ tag: 'a[href]:not([href *= \"javascript:\" i])' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    // False positive; we're explicitly checking for javascript: links to ignore them\n    // eslint-disable-next-line no-script-url\n    if (HTMLAttributes.href?.startsWith('javascript:')) {\n      // strip out the href\n      return ['a', mergeAttributes(this.options.HTMLAttributes, { ...HTMLAttributes, href: '' }), 0]\n    }\n    return ['a', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setLink:\n        attributes => ({ chain }) => {\n          return chain().setMark(this.name, attributes).setMeta('preventAutolink', true).run()\n        },\n\n      toggleLink:\n        attributes => ({ chain }) => {\n          return chain()\n            .toggleMark(this.name, attributes, { extendEmptyMarkRange: true })\n            .setMeta('preventAutolink', true)\n            .run()\n        },\n\n      unsetLink:\n        () => ({ chain }) => {\n          return chain()\n            .unsetMark(this.name, { extendEmptyMarkRange: true })\n            .setMeta('preventAutolink', true)\n            .run()\n        },\n    }\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: (text, event) => {\n          const html = event?.clipboardData?.getData('text/html')\n\n          const foundLinks: PasteRuleMatch[] = []\n\n          if (html) {\n            const dom = new DOMParser().parseFromString(html, 'text/html')\n            const anchors = dom.querySelectorAll('a')\n\n            if (anchors.length) {\n              [...anchors].forEach(anchor => (foundLinks.push({\n                text: anchor.innerText,\n                data: {\n                  href: anchor.getAttribute('href'),\n                },\n                // get the index of the anchor inside the text\n                // and add the length of the anchor text\n                index: dom.body.innerText.indexOf(anchor.innerText) + anchor.innerText.length,\n              })))\n            }\n          }\n\n          if (text) {\n            const links = find(text).filter(item => item.isLink)\n\n            if (links.length) {\n              links.forEach(link => (foundLinks.push({\n                text: link.value,\n                data: {\n                  href: link.href,\n                },\n                index: link.start,\n              })))\n            }\n          }\n\n          return foundLinks\n        },\n        type: this.type,\n        getAttributes: match => {\n          return {\n            href: match.data?.href,\n          }\n        },\n      }),\n    ]\n  },\n\n  addProseMirrorPlugins() {\n    const plugins: Plugin[] = []\n\n    if (this.options.autolink) {\n      plugins.push(\n        autolink({\n          type: this.type,\n          validate: this.options.validate,\n        }),\n      )\n    }\n\n    if (this.options.openOnClick) {\n      plugins.push(\n        clickHandler({\n          type: this.type,\n        }),\n      )\n    }\n\n    if (this.options.linkOnPaste) {\n      plugins.push(\n        pasteHandler({\n          editor: this.editor,\n          type: this.type,\n        }),\n      )\n    }\n\n    return plugins\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TaskListOptions {\n  itemTypeName: string,\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    taskList: {\n      /**\n       * Toggle a task list\n       */\n      toggleTaskList: () => ReturnType,\n    }\n  }\n}\n\nexport const TaskList = Node.create<TaskListOptions>({\n  name: 'taskList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'taskItem',\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: `ul[data-type=\"${this.name}\"]`,\n        priority: 51,\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes, { 'data-type': this.name }), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleTaskList: () => ({ commands }) => {\n        return commands.toggleList(this.name, this.options.itemTypeName)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-9': () => this.editor.commands.toggleTaskList(),\n    }\n  },\n})\n", "import {\n  KeyboardShortcutCommand, mergeAttributes, Node, wrappingInputRule,\n} from '@tiptap/core'\nimport { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nexport interface TaskItemOptions {\n  onReadOnlyChecked?: (node: ProseMirrorNode, checked: boolean) => boolean\n  nested: boolean\n  HTMLAttributes: Record<string, any>\n  taskListTypeName: string\n}\n\nexport const inputRegex = /^\\s*(\\[([( |x])?\\])\\s$/\n\nexport const TaskItem = Node.create<TaskItemOptions>({\n  name: 'taskItem',\n\n  addOptions() {\n    return {\n      nested: false,\n      HTMLAttributes: {},\n      taskListTypeName: 'taskList',\n    }\n  },\n\n  content() {\n    return this.options.nested ? 'paragraph block*' : 'paragraph+'\n  },\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      checked: {\n        default: false,\n        keepOnSplit: false,\n        parseHTML: element => element.getAttribute('data-checked') === 'true',\n        renderHTML: attributes => ({\n          'data-checked': attributes.checked,\n        }),\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: `li[data-type=\"${this.name}\"]`,\n        priority: 51,\n      },\n    ]\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    return [\n      'li',\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes, {\n        'data-type': this.name,\n      }),\n      [\n        'label',\n        [\n          'input',\n          {\n            type: 'checkbox',\n            checked: node.attrs.checked ? 'checked' : null,\n          },\n        ],\n        ['span'],\n      ],\n      ['div', 0],\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    const shortcuts: {\n      [key: string]: KeyboardShortcutCommand\n    } = {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n\n    if (!this.options.nested) {\n      return shortcuts\n    }\n\n    return {\n      ...shortcuts,\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n    }\n  },\n\n  addNodeView() {\n    return ({\n      node, HTMLAttributes, getPos, editor,\n    }) => {\n      const listItem = document.createElement('li')\n      const checkboxWrapper = document.createElement('label')\n      const checkboxStyler = document.createElement('span')\n      const checkbox = document.createElement('input')\n      const content = document.createElement('div')\n\n      checkboxWrapper.contentEditable = 'false'\n      checkbox.type = 'checkbox'\n      checkbox.addEventListener('change', event => {\n        // if the editor isn’t editable and we don't have a handler for\n        // readonly checks we have to undo the latest change\n        if (!editor.isEditable && !this.options.onReadOnlyChecked) {\n          checkbox.checked = !checkbox.checked\n\n          return\n        }\n\n        const { checked } = event.target as any\n\n        if (editor.isEditable && typeof getPos === 'function') {\n          editor\n            .chain()\n            .focus(undefined, { scrollIntoView: false })\n            .command(({ tr }) => {\n              const position = getPos()\n              const currentNode = tr.doc.nodeAt(position)\n\n              tr.setNodeMarkup(position, undefined, {\n                ...currentNode?.attrs,\n                checked,\n              })\n\n              return true\n            })\n            .run()\n        }\n        if (!editor.isEditable && this.options.onReadOnlyChecked) {\n          // Reset state if onReadOnlyChecked returns false\n          if (!this.options.onReadOnlyChecked(node, checked)) {\n            checkbox.checked = !checkbox.checked\n          }\n        }\n      })\n\n      Object.entries(this.options.HTMLAttributes).forEach(([key, value]) => {\n        listItem.setAttribute(key, value)\n      })\n\n      listItem.dataset.checked = node.attrs.checked\n      if (node.attrs.checked) {\n        checkbox.setAttribute('checked', 'checked')\n      }\n\n      checkboxWrapper.append(checkbox, checkboxStyler)\n      listItem.append(checkboxWrapper, content)\n\n      Object.entries(HTMLAttributes).forEach(([key, value]) => {\n        listItem.setAttribute(key, value)\n      })\n\n      return {\n        dom: listItem,\n        contentDOM: content,\n        update: updatedNode => {\n          if (updatedNode.type !== this.type) {\n            return false\n          }\n\n          listItem.dataset.checked = updatedNode.attrs.checked\n          if (updatedNode.attrs.checked) {\n            checkbox.setAttribute('checked', 'checked')\n          } else {\n            checkbox.removeAttribute('checked')\n          }\n\n          return true\n        },\n      }\n    }\n  },\n\n  addInputRules() {\n    return [\n      wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          checked: match[match.length - 1] === 'x',\n        }),\n      }),\n    ]\n  },\n})\n", "import { Editor, Extension } from '@tiptap/core'\nimport { Node as ProsemirrorNode } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { Decoration, DecorationSet } from '@tiptap/pm/view'\n\nexport interface PlaceholderOptions {\n  /**\n   * **The class name for the empty editor**\n   * @default 'is-editor-empty'\n   */\n  emptyEditorClass: string\n\n  /**\n   * **The class name for empty nodes**\n   * @default 'is-empty'\n   */\n  emptyNodeClass: string\n\n  /**\n   * **The placeholder content**\n   *\n   * You can use a function to return a dynamic placeholder or a string.\n   * @default 'Write something …'\n   */\n  placeholder:\n    | ((PlaceholderProps: {\n        editor: Editor\n        node: ProsemirrorNode\n        pos: number\n        hasAnchor: boolean\n      }) => string)\n    | string\n\n  /**\n   * **Used for empty check on the document.**\n   *\n   * If true, any node that is not a leaf or atom will be considered for empty check.\n   * If false, only default nodes (paragraphs) will be considered for empty check.\n   * @default false\n   */\n  considerAnyAsEmpty: boolean\n\n  /**\n   * **Checks if the placeholder should be only shown when the editor is editable.**\n   *\n   * If true, the placeholder will only be shown when the editor is editable.\n   * If false, the placeholder will always be shown.\n   * @default true\n   */\n  showOnlyWhenEditable: boolean\n\n  /**\n   * **Checks if the placeholder should be only shown when the current node is empty.**\n   *\n   * If true, the placeholder will only be shown when the current node is empty.\n   * If false, the placeholder will be shown when any node is empty.\n   * @default true\n   */\n  showOnlyCurrent: boolean\n\n  /**\n   * **Controls if the placeholder should be shown for all descendents.**\n   *\n   * If true, the placeholder will be shown for all descendents.\n   * If false, the placeholder will only be shown for the current node.\n   * @default false\n   */\n  includeChildren: boolean\n}\n\nexport const Placeholder = Extension.create<PlaceholderOptions>({\n  name: 'placeholder',\n\n  addOptions() {\n    return {\n      emptyEditorClass: 'is-editor-empty',\n      emptyNodeClass: 'is-empty',\n      placeholder: 'Write something …',\n      showOnlyWhenEditable: true,\n      considerAnyAsEmpty: false,\n      showOnlyCurrent: true,\n      includeChildren: false,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('placeholder'),\n        props: {\n          decorations: ({ doc, selection }) => {\n            const active = this.editor.isEditable || !this.options.showOnlyWhenEditable\n            const { anchor } = selection\n            const decorations: Decoration[] = []\n\n            if (!active) {\n              return null\n            }\n\n            // only calculate isEmpty once due to its performance impacts (see issue #3360)\n            const { firstChild } = doc.content\n            const isLeaf = firstChild && firstChild.type.isLeaf\n            const isAtom = firstChild && firstChild.isAtom\n            const isValidNode = this.options.considerAnyAsEmpty\n              ? true\n              : firstChild && firstChild.type.name === doc.type.contentMatch.defaultType?.name\n            const isEmptyDoc = doc.content.childCount <= 1\n              && firstChild\n              && isValidNode\n              && (firstChild.nodeSize <= 2 && (!isLeaf || !isAtom))\n\n            doc.descendants((node, pos) => {\n              const hasAnchor = anchor >= pos && anchor <= pos + node.nodeSize\n              const isEmpty = !node.isLeaf && !node.childCount\n\n              if ((hasAnchor || !this.options.showOnlyCurrent) && isEmpty) {\n                const classes = [this.options.emptyNodeClass]\n\n                if (isEmptyDoc) {\n                  classes.push(this.options.emptyEditorClass)\n                }\n\n                const decoration = Decoration.node(pos, pos + node.nodeSize, {\n                  class: classes.join(' '),\n                  'data-placeholder':\n                    typeof this.options.placeholder === 'function'\n                      ? this.options.placeholder({\n                        editor: this.editor,\n                        node,\n                        pos,\n                        hasAnchor,\n                      })\n                      : this.options.placeholder,\n                })\n\n                decorations.push(decoration)\n              }\n\n              return this.options.includeChildren\n            })\n\n            return DecorationSet.create(doc, decorations)\n          },\n        },\n      }),\n    ]\n  },\n})\n", "export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];", "export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}", "export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}", "import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };", "import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};", "import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}", "export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;", "export default function getUAString() {\n  var uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n  }\n\n  return navigator.userAgent;\n}", "import getUAString from \"../utils/userAgent.js\";\nexport default function isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}", "import { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nimport getWindow from \"./getWindow.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  var _ref = isElement(element) ? getWindow(element) : window,\n      visualViewport = _ref.visualViewport;\n\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n  var width = clientRect.width / scaleX;\n  var height = clientRect.height / scaleY;\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}", "import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}", "import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}", "import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}", "import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}", "import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}", "import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}", "import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getUAString from \"../utils/userAgent.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}", "export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}", "import { max as mathMax, min as mathMin } from \"./math.js\";\nexport function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}\nexport function withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}", "export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}", "import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}", "export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}", "import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport { within } from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};", "export default function getVariation(placement) {\n  return placement.split('-')[1];\n}", "import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref, win) {\n  var x = _ref.x,\n      y = _ref.y;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }, getWindow(popper)) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};", "import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};", "var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}", "var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}", "import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}", "import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}", "import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}", "import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}", "import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}", "import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}", "import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}", "export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}", "import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}", "import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}", "import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$strategy = _options.strategy,\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}", "import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}", "import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases \u2013 research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};", "import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};", "import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};", "import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};", "export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}", "import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport { within, withinMaxClamp } from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};", "export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}", "import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}", "import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}", "import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}", "export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}", "export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}", "import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        });\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update \u2013 it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update \u2013 it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref) {\n        var name = _ref.name,\n            _ref$options = _ref.options,\n            options = _ref$options === void 0 ? {} : _ref$options,\n            effect = _ref.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };", "import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";", "export const ROUND_ARROW =\n  '<svg width=\"16\" height=\"6\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 6s1.796-.013 4.67-3.615C5.851.9 6.93.006 8 0c1.07-.006 2.148.887 3.343 2.385C14.233 6.005 16 6 16 6H0z\"></svg>';\n\nexport const BOX_CLASS = `__NAMESPACE_PREFIX__-box`;\nexport const CONTENT_CLASS = `__NAMESPACE_PREFIX__-content`;\nexport const BACKDROP_CLASS = `__NAMESPACE_PREFIX__-backdrop`;\nexport const ARROW_CLASS = `__NAMESPACE_PREFIX__-arrow`;\nexport const SVG_ARROW_CLASS = `__NAMESPACE_PREFIX__-svg-arrow`;\n\nexport const TOUCH_OPTIONS = {passive: true, capture: true};\n\nexport const TIPPY_DEFAULT_APPEND_TO = () => document.body;\n", "import {BasePlacement, Placement} from './types';\n\nexport function hasOwnProperty(\n  obj: Record<string, unknown>,\n  key: string\n): boolean {\n  return {}.hasOwnProperty.call(obj, key);\n}\n\nexport function getValueAtIndexOrReturn<T>(\n  value: T | [T | null, T | null],\n  index: number,\n  defaultValue: T | [T, T]\n): T {\n  if (Array.isArray(value)) {\n    const v = value[index];\n    return v == null\n      ? Array.isArray(defaultValue)\n        ? defaultValue[index]\n        : defaultValue\n      : v;\n  }\n\n  return value;\n}\n\nexport function isType(value: any, type: string): boolean {\n  const str = {}.toString.call(value);\n  return str.indexOf('[object') === 0 && str.indexOf(`${type}]`) > -1;\n}\n\nexport function invokeWithArgsOrReturn(value: any, args: any[]): any {\n  return typeof value === 'function' ? value(...args) : value;\n}\n\nexport function debounce<T>(\n  fn: (arg: T) => void,\n  ms: number\n): (arg: T) => void {\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\n  if (ms === 0) {\n    return fn;\n  }\n\n  let timeout: any;\n\n  return (arg): void => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      fn(arg);\n    }, ms);\n  };\n}\n\nexport function removeProperties<T>(obj: T, keys: string[]): Partial<T> {\n  const clone = {...obj};\n  keys.forEach((key) => {\n    delete (clone as any)[key];\n  });\n  return clone;\n}\n\nexport function splitBySpaces(value: string): string[] {\n  return value.split(/\\s+/).filter(Boolean);\n}\n\nexport function normalizeToArray<T>(value: T | T[]): T[] {\n  return ([] as T[]).concat(value);\n}\n\nexport function pushIfUnique<T>(arr: T[], value: T): void {\n  if (arr.indexOf(value) === -1) {\n    arr.push(value);\n  }\n}\n\nexport function appendPxIfNumber(value: string | number): string {\n  return typeof value === 'number' ? `${value}px` : value;\n}\n\nexport function unique<T>(arr: T[]): T[] {\n  return arr.filter((item, index) => arr.indexOf(item) === index);\n}\n\nexport function getNumber(value: string | number): number {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n\nexport function getBasePlacement(placement: Placement): BasePlacement {\n  return placement.split('-')[0] as BasePlacement;\n}\n\nexport function arrayFrom(value: ArrayLike<any>): any[] {\n  return [].slice.call(value);\n}\n\nexport function removeUndefinedProps(\n  obj: Record<string, unknown>\n): Partial<Record<string, unknown>> {\n  return Object.keys(obj).reduce((acc, key) => {\n    if (obj[key] !== undefined) {\n      (acc as any)[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}\n", "import {ReferenceElement, Targets} from './types';\nimport {PopperTreeData} from './types-internal';\nimport {arrayFrom, isType, normalizeToArray, getBasePlacement} from './utils';\n\nexport function div(): HTMLDivElement {\n  return document.createElement('div');\n}\n\nexport function isElement(value: unknown): value is Element | DocumentFragment {\n  return ['Element', 'Fragment'].some((type) => isType(value, type));\n}\n\nexport function isNodeList(value: unknown): value is NodeList {\n  return isType(value, 'NodeList');\n}\n\nexport function isMouseEvent(value: unknown): value is MouseEvent {\n  return isType(value, 'MouseEvent');\n}\n\nexport function isReferenceElement(value: any): value is ReferenceElement {\n  return !!(value && value._tippy && value._tippy.reference === value);\n}\n\nexport function getArrayOfElements(value: Targets): Element[] {\n  if (isElement(value)) {\n    return [value];\n  }\n\n  if (isNodeList(value)) {\n    return arrayFrom(value);\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return arrayFrom(document.querySelectorAll(value));\n}\n\nexport function setTransitionDuration(\n  els: (HTMLDivElement | null)[],\n  value: number\n): void {\n  els.forEach((el) => {\n    if (el) {\n      el.style.transitionDuration = `${value}ms`;\n    }\n  });\n}\n\nexport function setVisibilityState(\n  els: (HTMLDivElement | null)[],\n  state: 'visible' | 'hidden'\n): void {\n  els.forEach((el) => {\n    if (el) {\n      el.setAttribute('data-state', state);\n    }\n  });\n}\n\nexport function getOwnerDocument(\n  elementOrElements: Element | Element[]\n): Document {\n  const [element] = normalizeToArray(elementOrElements);\n\n  // Elements created via a <template> have an ownerDocument with no reference to the body\n  return element?.ownerDocument?.body ? element.ownerDocument : document;\n}\n\nexport function isCursorOutsideInteractiveBorder(\n  popperTreeData: PopperTreeData[],\n  event: MouseEvent\n): boolean {\n  const {clientX, clientY} = event;\n\n  return popperTreeData.every(({popperRect, popperState, props}) => {\n    const {interactiveBorder} = props;\n    const basePlacement = getBasePlacement(popperState.placement);\n    const offsetData = popperState.modifiersData.offset;\n\n    if (!offsetData) {\n      return true;\n    }\n\n    const topDistance = basePlacement === 'bottom' ? offsetData.top!.y : 0;\n    const bottomDistance = basePlacement === 'top' ? offsetData.bottom!.y : 0;\n    const leftDistance = basePlacement === 'right' ? offsetData.left!.x : 0;\n    const rightDistance = basePlacement === 'left' ? offsetData.right!.x : 0;\n\n    const exceedsTop =\n      popperRect.top - clientY + topDistance > interactiveBorder;\n    const exceedsBottom =\n      clientY - popperRect.bottom - bottomDistance > interactiveBorder;\n    const exceedsLeft =\n      popperRect.left - clientX + leftDistance > interactiveBorder;\n    const exceedsRight =\n      clientX - popperRect.right - rightDistance > interactiveBorder;\n\n    return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;\n  });\n}\n\nexport function updateTransitionEndListener(\n  box: HTMLDivElement,\n  action: 'add' | 'remove',\n  listener: (event: TransitionEvent) => void\n): void {\n  const method = `${action}EventListener` as\n    | 'addEventListener'\n    | 'removeEventListener';\n\n  // some browsers apparently support `transition` (unprefixed) but only fire\n  // `webkitTransitionEnd`...\n  ['transitionend', 'webkitTransitionEnd'].forEach((event) => {\n    box[method](event, listener as EventListener);\n  });\n}\n\n/**\n * Compared to xxx.contains, this function works for dom structures with shadow\n * dom\n */\nexport function actualContains(parent: Element, child: Element): boolean {\n  let target = child;\n  while (target) {\n    if (parent.contains(target)) {\n      return true;\n    }\n    target = (target.getRootNode?.() as any)?.host;\n  }\n  return false;\n}\n", "import {TOUCH_OPTIONS} from './constants';\nimport {isReferenceElement} from './dom-utils';\n\nexport const currentInput = {isTouch: false};\nlet lastMouseMoveTime = 0;\n\n/**\n * When a `touchstart` event is fired, it's assumed the user is using touch\n * input. We'll bind a `mousemove` event listener to listen for mouse input in\n * the future. This way, the `isTouch` property is fully dynamic and will handle\n * hybrid devices that use a mix of touch + mouse input.\n */\nexport function onDocumentTouchStart(): void {\n  if (currentInput.isTouch) {\n    return;\n  }\n\n  currentInput.isTouch = true;\n\n  if (window.performance) {\n    document.addEventListener('mousemove', onDocumentMouseMove);\n  }\n}\n\n/**\n * When two `mousemove` event are fired consecutively within 20ms, it's assumed\n * the user is using mouse input again. `mousemove` can fire on touch devices as\n * well, but very rarely that quickly.\n */\nexport function onDocumentMouseMove(): void {\n  const now = performance.now();\n\n  if (now - lastMouseMoveTime < 20) {\n    currentInput.isTouch = false;\n\n    document.removeEventListener('mousemove', onDocumentMouseMove);\n  }\n\n  lastMouseMoveTime = now;\n}\n\n/**\n * When an element is in focus and has a tippy, leaving the tab/window and\n * returning causes it to show again. For mouse users this is unexpected, but\n * for keyboard use it makes sense.\n * TODO: find a better technique to solve this problem\n */\nexport function onWindowBlur(): void {\n  const activeElement = document.activeElement as HTMLElement | null;\n\n  if (isReferenceElement(activeElement)) {\n    const instance = activeElement._tippy!;\n\n    if (activeElement.blur && !instance.state.isVisible) {\n      activeElement.blur();\n    }\n  }\n}\n\nexport default function bindGlobalEventListeners(): void {\n  document.addEventListener('touchstart', onDocumentTouchStart, TOUCH_OPTIONS);\n  window.addEventListener('blur', onWindowBlur);\n}\n", "export const isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nexport const isIE11 = isBrowser\n  ? // @ts-ignore\n    !!window.msCrypto\n  : false;\n", "import {Targets} from './types';\n\nexport function createMemoryLeakWarning(method: string): string {\n  const txt = method === 'destroy' ? 'n already-' : ' ';\n\n  return [\n    `${method}() was called on a${txt}destroyed instance. This is a no-op but`,\n    'indicates a potential memory leak.',\n  ].join(' ');\n}\n\nexport function clean(value: string): string {\n  const spacesAndTabs = /[ \\t]{2,}/g;\n  const lineStartWithSpaces = /^[ \\t]*/gm;\n\n  return value\n    .replace(spacesAndTabs, ' ')\n    .replace(lineStartWithSpaces, '')\n    .trim();\n}\n\nfunction getDevMessage(message: string): string {\n  return clean(`\n  %ctippy.js\n\n  %c${clean(message)}\n\n  %c👷‍ This is a development-only message. It will be removed in production.\n  `);\n}\n\nexport function getFormattedMessage(message: string): string[] {\n  return [\n    getDevMessage(message),\n    // title\n    'color: #00C584; font-size: 1.3em; font-weight: bold;',\n    // message\n    'line-height: 1.5',\n    // footer\n    'color: #a6a095;',\n  ];\n}\n\n// Assume warnings and errors never have the same message\nlet visitedMessages: Set<string>;\nif (__DEV__) {\n  resetVisitedMessages();\n}\n\nexport function resetVisitedMessages(): void {\n  visitedMessages = new Set();\n}\n\nexport function warnWhen(condition: boolean, message: string): void {\n  if (condition && !visitedMessages.has(message)) {\n    visitedMessages.add(message);\n    console.warn(...getFormattedMessage(message));\n  }\n}\n\nexport function errorWhen(condition: boolean, message: string): void {\n  if (condition && !visitedMessages.has(message)) {\n    visitedMessages.add(message);\n    console.error(...getFormattedMessage(message));\n  }\n}\n\nexport function validateTargets(targets: Targets): void {\n  const didPassFalsyValue = !targets;\n  const didPassPlainObject =\n    Object.prototype.toString.call(targets) === '[object Object]' &&\n    !(targets as any).addEventListener;\n\n  errorWhen(\n    didPassFalsyValue,\n    [\n      'tippy() was passed',\n      '`' + String(targets) + '`',\n      'as its targets (first) argument. Valid types are: String, Element,',\n      'Element[], or NodeList.',\n    ].join(' ')\n  );\n\n  errorWhen(\n    didPassPlainObject,\n    [\n      'tippy() was passed a plain object which is not supported as an argument',\n      'for virtual positioning. Use props.getReferenceClientRect instead.',\n    ].join(' ')\n  );\n}\n", "import {DefaultProps, Plugin, Props, ReferenceElement, Tippy} from './types';\nimport {\n  hasOwnProperty,\n  removeProperties,\n  invokeWithArgsOrReturn,\n} from './utils';\nimport {warnWhen} from './validation';\nimport {TIPPY_DEFAULT_APPEND_TO} from './constants';\n\nconst pluginProps = {\n  animateFill: false,\n  followCursor: false,\n  inlinePositioning: false,\n  sticky: false,\n};\n\nconst renderProps = {\n  allowHTML: false,\n  animation: 'fade',\n  arrow: true,\n  content: '',\n  inertia: false,\n  maxWidth: 350,\n  role: 'tooltip',\n  theme: '',\n  zIndex: 9999,\n};\n\nexport const defaultProps: DefaultProps = {\n  appendTo: TIPPY_DEFAULT_APPEND_TO,\n  aria: {\n    content: 'auto',\n    expanded: 'auto',\n  },\n  delay: 0,\n  duration: [300, 250],\n  getReferenceClientRect: null,\n  hideOnClick: true,\n  ignoreAttributes: false,\n  interactive: false,\n  interactiveBorder: 2,\n  interactiveDebounce: 0,\n  moveTransition: '',\n  offset: [0, 10],\n  onAfterUpdate() {},\n  onBeforeUpdate() {},\n  onCreate() {},\n  onDestroy() {},\n  onHidden() {},\n  onHide() {},\n  onMount() {},\n  onShow() {},\n  onShown() {},\n  onTrigger() {},\n  onUntrigger() {},\n  onClickOutside() {},\n  placement: 'top',\n  plugins: [],\n  popperOptions: {},\n  render: null,\n  showOnCreate: false,\n  touch: true,\n  trigger: 'mouseenter focus',\n  triggerTarget: null,\n  ...pluginProps,\n  ...renderProps,\n};\n\nconst defaultKeys = Object.keys(defaultProps);\n\nexport const setDefaultProps: Tippy['setDefaultProps'] = (partialProps) => {\n  /* istanbul ignore else */\n  if (__DEV__) {\n    validateProps(partialProps, []);\n  }\n\n  const keys = Object.keys(partialProps) as Array<keyof DefaultProps>;\n  keys.forEach((key) => {\n    (defaultProps as any)[key] = partialProps[key];\n  });\n};\n\nexport function getExtendedPassedProps(\n  passedProps: Partial<Props> & Record<string, unknown>\n): Partial<Props> {\n  const plugins = passedProps.plugins || [];\n  const pluginProps = plugins.reduce<Record<string, unknown>>((acc, plugin) => {\n    const {name, defaultValue} = plugin;\n\n    if (name) {\n      acc[name] =\n        passedProps[name] !== undefined\n          ? passedProps[name]\n          : (defaultProps as any)[name] ?? defaultValue;\n    }\n\n    return acc;\n  }, {});\n\n  return {\n    ...passedProps,\n    ...pluginProps,\n  };\n}\n\nexport function getDataAttributeProps(\n  reference: ReferenceElement,\n  plugins: Plugin[]\n): Record<string, unknown> {\n  const propKeys = plugins\n    ? Object.keys(getExtendedPassedProps({...defaultProps, plugins}))\n    : defaultKeys;\n\n  const props = propKeys.reduce(\n    (acc: Partial<Props> & Record<string, unknown>, key) => {\n      const valueAsString = (\n        reference.getAttribute(`data-tippy-${key}`) || ''\n      ).trim();\n\n      if (!valueAsString) {\n        return acc;\n      }\n\n      if (key === 'content') {\n        acc[key] = valueAsString;\n      } else {\n        try {\n          acc[key] = JSON.parse(valueAsString);\n        } catch (e) {\n          acc[key] = valueAsString;\n        }\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  return props;\n}\n\nexport function evaluateProps(\n  reference: ReferenceElement,\n  props: Props\n): Props {\n  const out = {\n    ...props,\n    content: invokeWithArgsOrReturn(props.content, [reference]),\n    ...(props.ignoreAttributes\n      ? {}\n      : getDataAttributeProps(reference, props.plugins)),\n  };\n\n  out.aria = {\n    ...defaultProps.aria,\n    ...out.aria,\n  };\n\n  out.aria = {\n    expanded:\n      out.aria.expanded === 'auto' ? props.interactive : out.aria.expanded,\n    content:\n      out.aria.content === 'auto'\n        ? props.interactive\n          ? null\n          : 'describedby'\n        : out.aria.content,\n  };\n\n  return out;\n}\n\nexport function validateProps(\n  partialProps: Partial<Props> = {},\n  plugins: Plugin[] = []\n): void {\n  const keys = Object.keys(partialProps) as Array<keyof Props>;\n  keys.forEach((prop) => {\n    const nonPluginProps = removeProperties(\n      defaultProps,\n      Object.keys(pluginProps)\n    );\n\n    let didPassUnknownProp = !hasOwnProperty(nonPluginProps, prop);\n\n    // Check if the prop exists in `plugins`\n    if (didPassUnknownProp) {\n      didPassUnknownProp =\n        plugins.filter((plugin) => plugin.name === prop).length === 0;\n    }\n\n    warnWhen(\n      didPassUnknownProp,\n      [\n        `\\`${prop}\\``,\n        \"is not a valid prop. You may have spelled it incorrectly, or if it's\",\n        'a plugin, forgot to pass it in an array as props.plugins.',\n        '\\n\\n',\n        'All props: https://atomiks.github.io/tippyjs/v6/all-props/\\n',\n        'Plugins: https://atomiks.github.io/tippyjs/v6/plugins/',\n      ].join(' ')\n    );\n  });\n}\n", "import {\n  ARROW_CLASS,\n  BACKDROP_CLASS,\n  BOX_CLASS,\n  CONTENT_CLASS,\n  SVG_ARROW_CLASS,\n} from './constants';\nimport {div, isElement} from './dom-utils';\nimport {Instance, PopperElement, Props} from './types';\nimport {PopperChildren} from './types-internal';\nimport {arrayFrom} from './utils';\n\n// Firefox extensions don't allow .innerHTML = \"...\" property. This tricks it.\nconst innerHTML = (): 'innerHTML' => 'innerHTML';\n\nfunction dangerouslySetInnerHTML(element: Element, html: string): void {\n  element[innerHTML()] = html;\n}\n\nfunction createArrowElement(value: Props['arrow']): HTMLDivElement {\n  const arrow = div();\n\n  if (value === true) {\n    arrow.className = ARROW_CLASS;\n  } else {\n    arrow.className = SVG_ARROW_CLASS;\n\n    if (isElement(value)) {\n      arrow.appendChild(value);\n    } else {\n      dangerouslySetInnerHTML(arrow, value as string);\n    }\n  }\n\n  return arrow;\n}\n\nexport function setContent(content: HTMLDivElement, props: Props): void {\n  if (isElement(props.content)) {\n    dangerouslySetInnerHTML(content, '');\n    content.appendChild(props.content);\n  } else if (typeof props.content !== 'function') {\n    if (props.allowHTML) {\n      dangerouslySetInnerHTML(content, props.content);\n    } else {\n      content.textContent = props.content;\n    }\n  }\n}\n\nexport function getChildren(popper: PopperElement): PopperChildren {\n  const box = popper.firstElementChild as HTMLDivElement;\n  const boxChildren = arrayFrom(box.children);\n\n  return {\n    box,\n    content: boxChildren.find((node) => node.classList.contains(CONTENT_CLASS)),\n    arrow: boxChildren.find(\n      (node) =>\n        node.classList.contains(ARROW_CLASS) ||\n        node.classList.contains(SVG_ARROW_CLASS)\n    ),\n    backdrop: boxChildren.find((node) =>\n      node.classList.contains(BACKDROP_CLASS)\n    ),\n  };\n}\n\nexport function render(\n  instance: Instance\n): {\n  popper: PopperElement;\n  onUpdate?: (prevProps: Props, nextProps: Props) => void;\n} {\n  const popper = div();\n\n  const box = div();\n  box.className = BOX_CLASS;\n  box.setAttribute('data-state', 'hidden');\n  box.setAttribute('tabindex', '-1');\n\n  const content = div();\n  content.className = CONTENT_CLASS;\n  content.setAttribute('data-state', 'hidden');\n\n  setContent(content, instance.props);\n\n  popper.appendChild(box);\n  box.appendChild(content);\n\n  onUpdate(instance.props, instance.props);\n\n  function onUpdate(prevProps: Props, nextProps: Props): void {\n    const {box, content, arrow} = getChildren(popper);\n\n    if (nextProps.theme) {\n      box.setAttribute('data-theme', nextProps.theme);\n    } else {\n      box.removeAttribute('data-theme');\n    }\n\n    if (typeof nextProps.animation === 'string') {\n      box.setAttribute('data-animation', nextProps.animation);\n    } else {\n      box.removeAttribute('data-animation');\n    }\n\n    if (nextProps.inertia) {\n      box.setAttribute('data-inertia', '');\n    } else {\n      box.removeAttribute('data-inertia');\n    }\n\n    box.style.maxWidth =\n      typeof nextProps.maxWidth === 'number'\n        ? `${nextProps.maxWidth}px`\n        : nextProps.maxWidth;\n\n    if (nextProps.role) {\n      box.setAttribute('role', nextProps.role);\n    } else {\n      box.removeAttribute('role');\n    }\n\n    if (\n      prevProps.content !== nextProps.content ||\n      prevProps.allowHTML !== nextProps.allowHTML\n    ) {\n      setContent(content, instance.props);\n    }\n\n    if (nextProps.arrow) {\n      if (!arrow) {\n        box.appendChild(createArrowElement(nextProps.arrow));\n      } else if (prevProps.arrow !== nextProps.arrow) {\n        box.removeChild(arrow);\n        box.appendChild(createArrowElement(nextProps.arrow));\n      }\n    } else if (arrow) {\n      box.removeChild(arrow!);\n    }\n  }\n\n  return {\n    popper,\n    onUpdate,\n  };\n}\n\n// Runtime check to identify if the render function is the default one; this\n// way we can apply default CSS transitions logic and it can be tree-shaken away\nrender.$$tippy = true;\n", "import {createPopper, StrictModifiers, Modifier} from '@popperjs/core';\nimport {currentInput} from './bindGlobalEventListeners';\nimport {isIE11} from './browser';\nimport {TIPPY_DEFAULT_APPEND_TO, TOUCH_OPTIONS} from './constants';\nimport {\n  actualContains,\n  div,\n  getOwnerDocument,\n  isCursorOutsideInteractiveBorder,\n  isMouseEvent,\n  setTransitionDuration,\n  setVisibilityState,\n  updateTransitionEndListener,\n} from './dom-utils';\nimport {defaultProps, evaluateProps, getExtendedPassedProps} from './props';\nimport {getChildren} from './template';\nimport {\n  Content,\n  Instance,\n  LifecycleHooks,\n  PopperElement,\n  Props,\n  ReferenceElement,\n} from './types';\nimport {ListenerObject, PopperTreeData, PopperChildren} from './types-internal';\nimport {\n  arrayFrom,\n  debounce,\n  getValueAtIndexOrReturn,\n  invokeWithArgsOrReturn,\n  normalizeToArray,\n  pushIfUnique,\n  splitBySpaces,\n  unique,\n  removeUndefinedProps,\n} from './utils';\nimport {createMemoryLeakWarning, errorWhen, warnWhen} from './validation';\n\nlet idCounter = 1;\nlet mouseMoveListeners: ((event: MouseEvent) => void)[] = [];\n\n// Used by `hideAll()`\nexport let mountedInstances: Instance[] = [];\n\nexport default function createTippy(\n  reference: ReferenceElement,\n  passedProps: Partial<Props>\n): Instance {\n  const props = evaluateProps(reference, {\n    ...defaultProps,\n    ...getExtendedPassedProps(removeUndefinedProps(passedProps)),\n  });\n\n  // ===========================================================================\n  // 🔒 Private members\n  // ===========================================================================\n  let showTimeout: any;\n  let hideTimeout: any;\n  let scheduleHideAnimationFrame: number;\n  let isVisibleFromClick = false;\n  let didHideDueToDocumentMouseDown = false;\n  let didTouchMove = false;\n  let ignoreOnFirstUpdate = false;\n  let lastTriggerEvent: Event | undefined;\n  let currentTransitionEndListener: (event: TransitionEvent) => void;\n  let onFirstUpdate: () => void;\n  let listeners: ListenerObject[] = [];\n  let debouncedOnMouseMove = debounce(onMouseMove, props.interactiveDebounce);\n  let currentTarget: Element;\n\n  // ===========================================================================\n  // 🔑 Public members\n  // ===========================================================================\n  const id = idCounter++;\n  const popperInstance = null;\n  const plugins = unique(props.plugins);\n\n  const state = {\n    // Is the instance currently enabled?\n    isEnabled: true,\n    // Is the tippy currently showing and not transitioning out?\n    isVisible: false,\n    // Has the instance been destroyed?\n    isDestroyed: false,\n    // Is the tippy currently mounted to the DOM?\n    isMounted: false,\n    // Has the tippy finished transitioning in?\n    isShown: false,\n  };\n\n  const instance: Instance = {\n    // properties\n    id,\n    reference,\n    popper: div(),\n    popperInstance,\n    props,\n    state,\n    plugins,\n    // methods\n    clearDelayTimeouts,\n    setProps,\n    setContent,\n    show,\n    hide,\n    hideWithInteractivity,\n    enable,\n    disable,\n    unmount,\n    destroy,\n  };\n\n  // TODO: Investigate why this early return causes a TDZ error in the tests —\n  // it doesn't seem to happen in the browser\n  /* istanbul ignore if */\n  if (!props.render) {\n    if (__DEV__) {\n      errorWhen(true, 'render() function has not been supplied.');\n    }\n\n    return instance;\n  }\n\n  // ===========================================================================\n  // Initial mutations\n  // ===========================================================================\n  const {popper, onUpdate} = props.render(instance);\n\n  popper.setAttribute('data-__NAMESPACE_PREFIX__-root', '');\n  popper.id = `__NAMESPACE_PREFIX__-${instance.id}`;\n\n  instance.popper = popper;\n  reference._tippy = instance;\n  popper._tippy = instance;\n\n  const pluginsHooks = plugins.map((plugin) => plugin.fn(instance));\n  const hasAriaExpanded = reference.hasAttribute('aria-expanded');\n\n  addListeners();\n  handleAriaExpandedAttribute();\n  handleStyles();\n\n  invokeHook('onCreate', [instance]);\n\n  if (props.showOnCreate) {\n    scheduleShow();\n  }\n\n  // Prevent a tippy with a delay from hiding if the cursor left then returned\n  // before it started hiding\n  popper.addEventListener('mouseenter', () => {\n    if (instance.props.interactive && instance.state.isVisible) {\n      instance.clearDelayTimeouts();\n    }\n  });\n\n  popper.addEventListener('mouseleave', () => {\n    if (\n      instance.props.interactive &&\n      instance.props.trigger.indexOf('mouseenter') >= 0\n    ) {\n      getDocument().addEventListener('mousemove', debouncedOnMouseMove);\n    }\n  });\n\n  return instance;\n\n  // ===========================================================================\n  // 🔒 Private methods\n  // ===========================================================================\n  function getNormalizedTouchSettings(): [string | boolean, number] {\n    const {touch} = instance.props;\n    return Array.isArray(touch) ? touch : [touch, 0];\n  }\n\n  function getIsCustomTouchBehavior(): boolean {\n    return getNormalizedTouchSettings()[0] === 'hold';\n  }\n\n  function getIsDefaultRenderFn(): boolean {\n    // @ts-ignore\n    return !!instance.props.render?.$$tippy;\n  }\n\n  function getCurrentTarget(): Element {\n    return currentTarget || reference;\n  }\n\n  function getDocument(): Document {\n    const parent = getCurrentTarget().parentNode as Element;\n    return parent ? getOwnerDocument(parent) : document;\n  }\n\n  function getDefaultTemplateChildren(): PopperChildren {\n    return getChildren(popper);\n  }\n\n  function getDelay(isShow: boolean): number {\n    // For touch or keyboard input, force `0` delay for UX reasons\n    // Also if the instance is mounted but not visible (transitioning out),\n    // ignore delay\n    if (\n      (instance.state.isMounted && !instance.state.isVisible) ||\n      currentInput.isTouch ||\n      (lastTriggerEvent && lastTriggerEvent.type === 'focus')\n    ) {\n      return 0;\n    }\n\n    return getValueAtIndexOrReturn(\n      instance.props.delay,\n      isShow ? 0 : 1,\n      defaultProps.delay\n    );\n  }\n\n  function handleStyles(fromHide = false): void {\n    popper.style.pointerEvents =\n      instance.props.interactive && !fromHide ? '' : 'none';\n    popper.style.zIndex = `${instance.props.zIndex}`;\n  }\n\n  function invokeHook(\n    hook: keyof LifecycleHooks,\n    args: [Instance, any?],\n    shouldInvokePropsHook = true\n  ): void {\n    pluginsHooks.forEach((pluginHooks) => {\n      if (pluginHooks[hook]) {\n        pluginHooks[hook]!(...args);\n      }\n    });\n\n    if (shouldInvokePropsHook) {\n      instance.props[hook](...args);\n    }\n  }\n\n  function handleAriaContentAttribute(): void {\n    const {aria} = instance.props;\n\n    if (!aria.content) {\n      return;\n    }\n\n    const attr = `aria-${aria.content}`;\n    const id = popper.id;\n    const nodes = normalizeToArray(instance.props.triggerTarget || reference);\n\n    nodes.forEach((node) => {\n      const currentValue = node.getAttribute(attr);\n\n      if (instance.state.isVisible) {\n        node.setAttribute(attr, currentValue ? `${currentValue} ${id}` : id);\n      } else {\n        const nextValue = currentValue && currentValue.replace(id, '').trim();\n\n        if (nextValue) {\n          node.setAttribute(attr, nextValue);\n        } else {\n          node.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  function handleAriaExpandedAttribute(): void {\n    if (hasAriaExpanded || !instance.props.aria.expanded) {\n      return;\n    }\n\n    const nodes = normalizeToArray(instance.props.triggerTarget || reference);\n\n    nodes.forEach((node) => {\n      if (instance.props.interactive) {\n        node.setAttribute(\n          'aria-expanded',\n          instance.state.isVisible && node === getCurrentTarget()\n            ? 'true'\n            : 'false'\n        );\n      } else {\n        node.removeAttribute('aria-expanded');\n      }\n    });\n  }\n\n  function cleanupInteractiveMouseListeners(): void {\n    getDocument().removeEventListener('mousemove', debouncedOnMouseMove);\n    mouseMoveListeners = mouseMoveListeners.filter(\n      (listener) => listener !== debouncedOnMouseMove\n    );\n  }\n\n  function onDocumentPress(event: MouseEvent | TouchEvent): void {\n    // Moved finger to scroll instead of an intentional tap outside\n    if (currentInput.isTouch) {\n      if (didTouchMove || event.type === 'mousedown') {\n        return;\n      }\n    }\n\n    const actualTarget =\n      (event.composedPath && event.composedPath()[0]) || event.target;\n\n    // Clicked on interactive popper\n    if (\n      instance.props.interactive &&\n      actualContains(popper, actualTarget as Element)\n    ) {\n      return;\n    }\n\n    // Clicked on the event listeners target\n    if (\n      normalizeToArray(instance.props.triggerTarget || reference).some((el) =>\n        actualContains(el, actualTarget as Element)\n      )\n    ) {\n      if (currentInput.isTouch) {\n        return;\n      }\n\n      if (\n        instance.state.isVisible &&\n        instance.props.trigger.indexOf('click') >= 0\n      ) {\n        return;\n      }\n    } else {\n      invokeHook('onClickOutside', [instance, event]);\n    }\n\n    if (instance.props.hideOnClick === true) {\n      instance.clearDelayTimeouts();\n      instance.hide();\n\n      // `mousedown` event is fired right before `focus` if pressing the\n      // currentTarget. This lets a tippy with `focus` trigger know that it\n      // should not show\n      didHideDueToDocumentMouseDown = true;\n      setTimeout(() => {\n        didHideDueToDocumentMouseDown = false;\n      });\n\n      // The listener gets added in `scheduleShow()`, but this may be hiding it\n      // before it shows, and hide()'s early bail-out behavior can prevent it\n      // from being cleaned up\n      if (!instance.state.isMounted) {\n        removeDocumentPress();\n      }\n    }\n  }\n\n  function onTouchMove(): void {\n    didTouchMove = true;\n  }\n\n  function onTouchStart(): void {\n    didTouchMove = false;\n  }\n\n  function addDocumentPress(): void {\n    const doc = getDocument();\n    doc.addEventListener('mousedown', onDocumentPress, true);\n    doc.addEventListener('touchend', onDocumentPress, TOUCH_OPTIONS);\n    doc.addEventListener('touchstart', onTouchStart, TOUCH_OPTIONS);\n    doc.addEventListener('touchmove', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function removeDocumentPress(): void {\n    const doc = getDocument();\n    doc.removeEventListener('mousedown', onDocumentPress, true);\n    doc.removeEventListener('touchend', onDocumentPress, TOUCH_OPTIONS);\n    doc.removeEventListener('touchstart', onTouchStart, TOUCH_OPTIONS);\n    doc.removeEventListener('touchmove', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function onTransitionedOut(duration: number, callback: () => void): void {\n    onTransitionEnd(duration, () => {\n      if (\n        !instance.state.isVisible &&\n        popper.parentNode &&\n        popper.parentNode.contains(popper)\n      ) {\n        callback();\n      }\n    });\n  }\n\n  function onTransitionedIn(duration: number, callback: () => void): void {\n    onTransitionEnd(duration, callback);\n  }\n\n  function onTransitionEnd(duration: number, callback: () => void): void {\n    const box = getDefaultTemplateChildren().box;\n\n    function listener(event: TransitionEvent): void {\n      if (event.target === box) {\n        updateTransitionEndListener(box, 'remove', listener);\n        callback();\n      }\n    }\n\n    // Make callback synchronous if duration is 0\n    // `transitionend` won't fire otherwise\n    if (duration === 0) {\n      return callback();\n    }\n\n    updateTransitionEndListener(box, 'remove', currentTransitionEndListener);\n    updateTransitionEndListener(box, 'add', listener);\n\n    currentTransitionEndListener = listener;\n  }\n\n  function on(\n    eventType: string,\n    handler: EventListener,\n    options: boolean | Record<string, unknown> = false\n  ): void {\n    const nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach((node) => {\n      node.addEventListener(eventType, handler, options);\n      listeners.push({node, eventType, handler, options});\n    });\n  }\n\n  function addListeners(): void {\n    if (getIsCustomTouchBehavior()) {\n      on('touchstart', onTrigger, {passive: true});\n      on('touchend', onMouseLeave as EventListener, {passive: true});\n    }\n\n    splitBySpaces(instance.props.trigger).forEach((eventType) => {\n      if (eventType === 'manual') {\n        return;\n      }\n\n      on(eventType, onTrigger);\n\n      switch (eventType) {\n        case 'mouseenter':\n          on('mouseleave', onMouseLeave as EventListener);\n          break;\n        case 'focus':\n          on(isIE11 ? 'focusout' : 'blur', onBlurOrFocusOut as EventListener);\n          break;\n        case 'focusin':\n          on('focusout', onBlurOrFocusOut as EventListener);\n          break;\n      }\n    });\n  }\n\n  function removeListeners(): void {\n    listeners.forEach(({node, eventType, handler, options}: ListenerObject) => {\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function onTrigger(event: Event): void {\n    let shouldScheduleClickHide = false;\n\n    if (\n      !instance.state.isEnabled ||\n      isEventListenerStopped(event) ||\n      didHideDueToDocumentMouseDown\n    ) {\n      return;\n    }\n\n    const wasFocused = lastTriggerEvent?.type === 'focus';\n\n    lastTriggerEvent = event;\n    currentTarget = event.currentTarget as Element;\n\n    handleAriaExpandedAttribute();\n\n    if (!instance.state.isVisible && isMouseEvent(event)) {\n      // If scrolling, `mouseenter` events can be fired if the cursor lands\n      // over a new target, but `mousemove` events don't get fired. This\n      // causes interactive tooltips to get stuck open until the cursor is\n      // moved\n      mouseMoveListeners.forEach((listener) => listener(event));\n    }\n\n    // Toggle show/hide when clicking click-triggered tooltips\n    if (\n      event.type === 'click' &&\n      (instance.props.trigger.indexOf('mouseenter') < 0 ||\n        isVisibleFromClick) &&\n      instance.props.hideOnClick !== false &&\n      instance.state.isVisible\n    ) {\n      shouldScheduleClickHide = true;\n    } else {\n      scheduleShow(event);\n    }\n\n    if (event.type === 'click') {\n      isVisibleFromClick = !shouldScheduleClickHide;\n    }\n\n    if (shouldScheduleClickHide && !wasFocused) {\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseMove(event: MouseEvent): void {\n    const target = event.target as Node;\n    const isCursorOverReferenceOrPopper =\n      getCurrentTarget().contains(target) || popper.contains(target);\n\n    if (event.type === 'mousemove' && isCursorOverReferenceOrPopper) {\n      return;\n    }\n\n    const popperTreeData = getNestedPopperTree()\n      .concat(popper)\n      .map((popper) => {\n        const instance = popper._tippy!;\n        const state = instance.popperInstance?.state;\n\n        if (state) {\n          return {\n            popperRect: popper.getBoundingClientRect(),\n            popperState: state,\n            props,\n          };\n        }\n\n        return null;\n      })\n      .filter(Boolean) as PopperTreeData[];\n\n    if (isCursorOutsideInteractiveBorder(popperTreeData, event)) {\n      cleanupInteractiveMouseListeners();\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseLeave(event: MouseEvent): void {\n    const shouldBail =\n      isEventListenerStopped(event) ||\n      (instance.props.trigger.indexOf('click') >= 0 && isVisibleFromClick);\n\n    if (shouldBail) {\n      return;\n    }\n\n    if (instance.props.interactive) {\n      instance.hideWithInteractivity(event);\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function onBlurOrFocusOut(event: FocusEvent): void {\n    if (\n      instance.props.trigger.indexOf('focusin') < 0 &&\n      event.target !== getCurrentTarget()\n    ) {\n      return;\n    }\n\n    // If focus was moved to within the popper\n    if (\n      instance.props.interactive &&\n      event.relatedTarget &&\n      popper.contains(event.relatedTarget as Element)\n    ) {\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function isEventListenerStopped(event: Event): boolean {\n    return currentInput.isTouch\n      ? getIsCustomTouchBehavior() !== event.type.indexOf('touch') >= 0\n      : false;\n  }\n\n  function createPopperInstance(): void {\n    destroyPopperInstance();\n\n    const {\n      popperOptions,\n      placement,\n      offset,\n      getReferenceClientRect,\n      moveTransition,\n    } = instance.props;\n\n    const arrow = getIsDefaultRenderFn() ? getChildren(popper).arrow : null;\n\n    const computedReference = getReferenceClientRect\n      ? {\n          getBoundingClientRect: getReferenceClientRect,\n          contextElement:\n            getReferenceClientRect.contextElement || getCurrentTarget(),\n        }\n      : reference;\n\n    const tippyModifier: Modifier<'$$tippy', Record<string, unknown>> = {\n      name: '$$tippy',\n      enabled: true,\n      phase: 'beforeWrite',\n      requires: ['computeStyles'],\n      fn({state}) {\n        if (getIsDefaultRenderFn()) {\n          const {box} = getDefaultTemplateChildren();\n\n          ['placement', 'reference-hidden', 'escaped'].forEach((attr) => {\n            if (attr === 'placement') {\n              box.setAttribute('data-placement', state.placement);\n            } else {\n              if (state.attributes.popper[`data-popper-${attr}`]) {\n                box.setAttribute(`data-${attr}`, '');\n              } else {\n                box.removeAttribute(`data-${attr}`);\n              }\n            }\n          });\n\n          state.attributes.popper = {};\n        }\n      },\n    };\n\n    type TippyModifier = Modifier<'$$tippy', Record<string, unknown>>;\n    type ExtendedModifiers = StrictModifiers | Partial<TippyModifier>;\n\n    const modifiers: Array<ExtendedModifiers> = [\n      {\n        name: 'offset',\n        options: {\n          offset,\n        },\n      },\n      {\n        name: 'preventOverflow',\n        options: {\n          padding: {\n            top: 2,\n            bottom: 2,\n            left: 5,\n            right: 5,\n          },\n        },\n      },\n      {\n        name: 'flip',\n        options: {\n          padding: 5,\n        },\n      },\n      {\n        name: 'computeStyles',\n        options: {\n          adaptive: !moveTransition,\n        },\n      },\n      tippyModifier,\n    ];\n\n    if (getIsDefaultRenderFn() && arrow) {\n      modifiers.push({\n        name: 'arrow',\n        options: {\n          element: arrow,\n          padding: 3,\n        },\n      });\n    }\n\n    modifiers.push(...(popperOptions?.modifiers || []));\n\n    instance.popperInstance = createPopper<ExtendedModifiers>(\n      computedReference,\n      popper,\n      {\n        ...popperOptions,\n        placement,\n        onFirstUpdate,\n        modifiers,\n      }\n    );\n  }\n\n  function destroyPopperInstance(): void {\n    if (instance.popperInstance) {\n      instance.popperInstance.destroy();\n      instance.popperInstance = null;\n    }\n  }\n\n  function mount(): void {\n    const {appendTo} = instance.props;\n\n    let parentNode: any;\n\n    // By default, we'll append the popper to the triggerTargets's parentNode so\n    // it's directly after the reference element so the elements inside the\n    // tippy can be tabbed to\n    // If there are clipping issues, the user can specify a different appendTo\n    // and ensure focus management is handled correctly manually\n    const node = getCurrentTarget();\n\n    if (\n      (instance.props.interactive && appendTo === TIPPY_DEFAULT_APPEND_TO) ||\n      appendTo === 'parent'\n    ) {\n      parentNode = node.parentNode;\n    } else {\n      parentNode = invokeWithArgsOrReturn(appendTo, [node]);\n    }\n\n    // The popper element needs to exist on the DOM before its position can be\n    // updated as Popper needs to read its dimensions\n    if (!parentNode.contains(popper)) {\n      parentNode.appendChild(popper);\n    }\n\n    instance.state.isMounted = true;\n\n    createPopperInstance();\n\n    /* istanbul ignore else */\n    if (__DEV__) {\n      // Accessibility check\n      warnWhen(\n        instance.props.interactive &&\n          appendTo === defaultProps.appendTo &&\n          node.nextElementSibling !== popper,\n        [\n          'Interactive tippy element may not be accessible via keyboard',\n          'navigation because it is not directly after the reference element',\n          'in the DOM source order.',\n          '\\n\\n',\n          'Using a wrapper <div> or <span> tag around the reference element',\n          'solves this by creating a new parentNode context.',\n          '\\n\\n',\n          'Specifying `appendTo: document.body` silences this warning, but it',\n          'assumes you are using a focus management solution to handle',\n          'keyboard navigation.',\n          '\\n\\n',\n          'See: https://atomiks.github.io/tippyjs/v6/accessibility/#interactivity',\n        ].join(' ')\n      );\n    }\n  }\n\n  function getNestedPopperTree(): PopperElement[] {\n    return arrayFrom(\n      popper.querySelectorAll('[data-__NAMESPACE_PREFIX__-root]')\n    );\n  }\n\n  function scheduleShow(event?: Event): void {\n    instance.clearDelayTimeouts();\n\n    if (event) {\n      invokeHook('onTrigger', [instance, event]);\n    }\n\n    addDocumentPress();\n\n    let delay = getDelay(true);\n    const [touchValue, touchDelay] = getNormalizedTouchSettings();\n\n    if (currentInput.isTouch && touchValue === 'hold' && touchDelay) {\n      delay = touchDelay;\n    }\n\n    if (delay) {\n      showTimeout = setTimeout(() => {\n        instance.show();\n      }, delay);\n    } else {\n      instance.show();\n    }\n  }\n\n  function scheduleHide(event: Event): void {\n    instance.clearDelayTimeouts();\n\n    invokeHook('onUntrigger', [instance, event]);\n\n    if (!instance.state.isVisible) {\n      removeDocumentPress();\n\n      return;\n    }\n\n    // For interactive tippies, scheduleHide is added to a document.body handler\n    // from onMouseLeave so must intercept scheduled hides from mousemove/leave\n    // events when trigger contains mouseenter and click, and the tip is\n    // currently shown as a result of a click.\n    if (\n      instance.props.trigger.indexOf('mouseenter') >= 0 &&\n      instance.props.trigger.indexOf('click') >= 0 &&\n      ['mouseleave', 'mousemove'].indexOf(event.type) >= 0 &&\n      isVisibleFromClick\n    ) {\n      return;\n    }\n\n    const delay = getDelay(false);\n\n    if (delay) {\n      hideTimeout = setTimeout(() => {\n        if (instance.state.isVisible) {\n          instance.hide();\n        }\n      }, delay);\n    } else {\n      // Fixes a `transitionend` problem when it fires 1 frame too\n      // late sometimes, we don't want hide() to be called.\n      scheduleHideAnimationFrame = requestAnimationFrame(() => {\n        instance.hide();\n      });\n    }\n  }\n\n  // ===========================================================================\n  // 🔑 Public methods\n  // ===========================================================================\n  function enable(): void {\n    instance.state.isEnabled = true;\n  }\n\n  function disable(): void {\n    // Disabling the instance should also hide it\n    // https://github.com/atomiks/tippy.js-react/issues/106\n    instance.hide();\n    instance.state.isEnabled = false;\n  }\n\n  function clearDelayTimeouts(): void {\n    clearTimeout(showTimeout);\n    clearTimeout(hideTimeout);\n    cancelAnimationFrame(scheduleHideAnimationFrame);\n  }\n\n  function setProps(partialProps: Partial<Props>): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('setProps'));\n    }\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    invokeHook('onBeforeUpdate', [instance, partialProps]);\n\n    removeListeners();\n\n    const prevProps = instance.props;\n    const nextProps = evaluateProps(reference, {\n      ...prevProps,\n      ...removeUndefinedProps(partialProps),\n      ignoreAttributes: true,\n    });\n\n    instance.props = nextProps;\n\n    addListeners();\n\n    if (prevProps.interactiveDebounce !== nextProps.interactiveDebounce) {\n      cleanupInteractiveMouseListeners();\n      debouncedOnMouseMove = debounce(\n        onMouseMove,\n        nextProps.interactiveDebounce\n      );\n    }\n\n    // Ensure stale aria-expanded attributes are removed\n    if (prevProps.triggerTarget && !nextProps.triggerTarget) {\n      normalizeToArray(prevProps.triggerTarget).forEach((node) => {\n        node.removeAttribute('aria-expanded');\n      });\n    } else if (nextProps.triggerTarget) {\n      reference.removeAttribute('aria-expanded');\n    }\n\n    handleAriaExpandedAttribute();\n    handleStyles();\n\n    if (onUpdate) {\n      onUpdate(prevProps, nextProps);\n    }\n\n    if (instance.popperInstance) {\n      createPopperInstance();\n\n      // Fixes an issue with nested tippies if they are all getting re-rendered,\n      // and the nested ones get re-rendered first.\n      // https://github.com/atomiks/tippyjs-react/issues/177\n      // TODO: find a cleaner / more efficient solution(!)\n      getNestedPopperTree().forEach((nestedPopper) => {\n        // React (and other UI libs likely) requires a rAF wrapper as it flushes\n        // its work in one\n        requestAnimationFrame(nestedPopper._tippy!.popperInstance!.forceUpdate);\n      });\n    }\n\n    invokeHook('onAfterUpdate', [instance, partialProps]);\n  }\n\n  function setContent(content: Content): void {\n    instance.setProps({content});\n  }\n\n  function show(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('show'));\n    }\n\n    // Early bail-out\n    const isAlreadyVisible = instance.state.isVisible;\n    const isDestroyed = instance.state.isDestroyed;\n    const isDisabled = !instance.state.isEnabled;\n    const isTouchAndTouchDisabled =\n      currentInput.isTouch && !instance.props.touch;\n    const duration = getValueAtIndexOrReturn(\n      instance.props.duration,\n      0,\n      defaultProps.duration\n    );\n\n    if (\n      isAlreadyVisible ||\n      isDestroyed ||\n      isDisabled ||\n      isTouchAndTouchDisabled\n    ) {\n      return;\n    }\n\n    // Normalize `disabled` behavior across browsers.\n    // Firefox allows events on disabled elements, but Chrome doesn't.\n    // Using a wrapper element (i.e. <span>) is recommended.\n    if (getCurrentTarget().hasAttribute('disabled')) {\n      return;\n    }\n\n    invokeHook('onShow', [instance], false);\n    if (instance.props.onShow(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = true;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = 'visible';\n    }\n\n    handleStyles();\n    addDocumentPress();\n\n    if (!instance.state.isMounted) {\n      popper.style.transition = 'none';\n    }\n\n    // If flipping to the opposite side after hiding at least once, the\n    // animation will use the wrong placement without resetting the duration\n    if (getIsDefaultRenderFn()) {\n      const {box, content} = getDefaultTemplateChildren();\n      setTransitionDuration([box, content], 0);\n    }\n\n    onFirstUpdate = (): void => {\n      if (!instance.state.isVisible || ignoreOnFirstUpdate) {\n        return;\n      }\n\n      ignoreOnFirstUpdate = true;\n\n      // reflow\n      void popper.offsetHeight;\n\n      popper.style.transition = instance.props.moveTransition;\n\n      if (getIsDefaultRenderFn() && instance.props.animation) {\n        const {box, content} = getDefaultTemplateChildren();\n        setTransitionDuration([box, content], duration);\n        setVisibilityState([box, content], 'visible');\n      }\n\n      handleAriaContentAttribute();\n      handleAriaExpandedAttribute();\n\n      pushIfUnique(mountedInstances, instance);\n\n      // certain modifiers (e.g. `maxSize`) require a second update after the\n      // popper has been positioned for the first time\n      instance.popperInstance?.forceUpdate();\n\n      invokeHook('onMount', [instance]);\n\n      if (instance.props.animation && getIsDefaultRenderFn()) {\n        onTransitionedIn(duration, () => {\n          instance.state.isShown = true;\n          invokeHook('onShown', [instance]);\n        });\n      }\n    };\n\n    mount();\n  }\n\n  function hide(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('hide'));\n    }\n\n    // Early bail-out\n    const isAlreadyHidden = !instance.state.isVisible;\n    const isDestroyed = instance.state.isDestroyed;\n    const isDisabled = !instance.state.isEnabled;\n    const duration = getValueAtIndexOrReturn(\n      instance.props.duration,\n      1,\n      defaultProps.duration\n    );\n\n    if (isAlreadyHidden || isDestroyed || isDisabled) {\n      return;\n    }\n\n    invokeHook('onHide', [instance], false);\n    if (instance.props.onHide(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = false;\n    instance.state.isShown = false;\n    ignoreOnFirstUpdate = false;\n    isVisibleFromClick = false;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = 'hidden';\n    }\n\n    cleanupInteractiveMouseListeners();\n    removeDocumentPress();\n    handleStyles(true);\n\n    if (getIsDefaultRenderFn()) {\n      const {box, content} = getDefaultTemplateChildren();\n\n      if (instance.props.animation) {\n        setTransitionDuration([box, content], duration);\n        setVisibilityState([box, content], 'hidden');\n      }\n    }\n\n    handleAriaContentAttribute();\n    handleAriaExpandedAttribute();\n\n    if (instance.props.animation) {\n      if (getIsDefaultRenderFn()) {\n        onTransitionedOut(duration, instance.unmount);\n      }\n    } else {\n      instance.unmount();\n    }\n  }\n\n  function hideWithInteractivity(event: MouseEvent): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(\n        instance.state.isDestroyed,\n        createMemoryLeakWarning('hideWithInteractivity')\n      );\n    }\n\n    getDocument().addEventListener('mousemove', debouncedOnMouseMove);\n    pushIfUnique(mouseMoveListeners, debouncedOnMouseMove);\n    debouncedOnMouseMove(event);\n  }\n\n  function unmount(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('unmount'));\n    }\n\n    if (instance.state.isVisible) {\n      instance.hide();\n    }\n\n    if (!instance.state.isMounted) {\n      return;\n    }\n\n    destroyPopperInstance();\n\n    // If a popper is not interactive, it will be appended outside the popper\n    // tree by default. This seems mainly for interactive tippies, but we should\n    // find a workaround if possible\n    getNestedPopperTree().forEach((nestedPopper) => {\n      nestedPopper._tippy!.unmount();\n    });\n\n    if (popper.parentNode) {\n      popper.parentNode.removeChild(popper);\n    }\n\n    mountedInstances = mountedInstances.filter((i) => i !== instance);\n\n    instance.state.isMounted = false;\n    invokeHook('onHidden', [instance]);\n  }\n\n  function destroy(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('destroy'));\n    }\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    instance.clearDelayTimeouts();\n    instance.unmount();\n\n    removeListeners();\n\n    delete reference._tippy;\n\n    instance.state.isDestroyed = true;\n\n    invokeHook('onDestroy', [instance]);\n  }\n}\n", "import bindGlobalEventListeners, {\n  currentInput,\n} from './bindGlobalEventListeners';\nimport createTippy, {mountedInstances} from './createTippy';\nimport {getArrayOfElements, isElement, isReferenceElement} from './dom-utils';\nimport {defaultProps, setDefaultProps, validateProps} from './props';\nimport {HideAll, HideAllOptions, Instance, Props, Targets} from './types';\nimport {validateTargets, warnWhen} from './validation';\n\nfunction tippy(\n  targets: Targets,\n  optionalProps: Partial<Props> = {}\n): Instance | Instance[] {\n  const plugins = defaultProps.plugins.concat(optionalProps.plugins || []);\n\n  /* istanbul ignore else */\n  if (__DEV__) {\n    validateTargets(targets);\n    validateProps(optionalProps, plugins);\n  }\n\n  bindGlobalEventListeners();\n\n  const passedProps: Partial<Props> = {...optionalProps, plugins};\n\n  const elements = getArrayOfElements(targets);\n\n  /* istanbul ignore else */\n  if (__DEV__) {\n    const isSingleContentElement = isElement(passedProps.content);\n    const isMoreThanOneReferenceElement = elements.length > 1;\n    warnWhen(\n      isSingleContentElement && isMoreThanOneReferenceElement,\n      [\n        'tippy() was passed an Element as the `content` prop, but more than',\n        'one tippy instance was created by this invocation. This means the',\n        'content element will only be appended to the last tippy instance.',\n        '\\n\\n',\n        'Instead, pass the .innerHTML of the element, or use a function that',\n        'returns a cloned version of the element instead.',\n        '\\n\\n',\n        '1) content: element.innerHTML\\n',\n        '2) content: () => element.cloneNode(true)',\n      ].join(' ')\n    );\n  }\n\n  const instances = elements.reduce<Instance[]>(\n    (acc, reference): Instance[] => {\n      const instance = reference && createTippy(reference, passedProps);\n\n      if (instance) {\n        acc.push(instance);\n      }\n\n      return acc;\n    },\n    []\n  );\n\n  return isElement(targets) ? instances[0] : instances;\n}\n\ntippy.defaultProps = defaultProps;\ntippy.setDefaultProps = setDefaultProps;\ntippy.currentInput = currentInput;\n\nexport default tippy;\n\nexport const hideAll: HideAll = ({\n  exclude: excludedReferenceOrInstance,\n  duration,\n}: HideAllOptions = {}) => {\n  mountedInstances.forEach((instance) => {\n    let isExcluded = false;\n\n    if (excludedReferenceOrInstance) {\n      isExcluded = isReferenceElement(excludedReferenceOrInstance)\n        ? instance.reference === excludedReferenceOrInstance\n        : instance.popper === (excludedReferenceOrInstance as Instance).popper;\n    }\n\n    if (!isExcluded) {\n      const originalDuration = instance.props.duration;\n\n      instance.setProps({duration});\n      instance.hide();\n\n      if (!instance.state.isDestroyed) {\n        instance.setProps({duration: originalDuration});\n      }\n    }\n  });\n};\n", "import tippy from '..';\nimport {div} from '../dom-utils';\nimport {\n  CreateSingleton,\n  Plugin,\n  CreateSingletonProps,\n  ReferenceElement,\n  CreateSingletonInstance,\n  Instance,\n  Props,\n} from '../types';\nimport {normalizeToArray, removeProperties} from '../utils';\nimport {errorWhen} from '../validation';\nimport {applyStyles, Modifier} from '@popperjs/core';\n\n// The default `applyStyles` modifier has a cleanup function that gets called\n// every time the popper is destroyed (i.e. a new target), removing the styles\n// and causing transitions to break for singletons when the console is open, but\n// most notably for non-transform styles being used, `gpuAcceleration: false`.\nconst applyStylesModifier: Modifier<'applyStyles', Record<string, unknown>> = {\n  ...applyStyles,\n  effect({state}) {\n    const initialStyles = {\n      popper: {\n        position: state.options.strategy,\n        left: '0',\n        top: '0',\n        margin: '0',\n      },\n      arrow: {\n        position: 'absolute',\n      },\n      reference: {},\n    };\n\n    Object.assign(state.elements.popper.style, initialStyles.popper);\n    state.styles = initialStyles;\n\n    if (state.elements.arrow) {\n      Object.assign(state.elements.arrow.style, initialStyles.arrow);\n    }\n\n    // intentionally return no cleanup function\n    // return () => { ... }\n  },\n};\n\nconst createSingleton: CreateSingleton = (\n  tippyInstances,\n  optionalProps = {}\n) => {\n  /* istanbul ignore else */\n  if (__DEV__) {\n    errorWhen(\n      !Array.isArray(tippyInstances),\n      [\n        'The first argument passed to createSingleton() must be an array of',\n        'tippy instances. The passed value was',\n        String(tippyInstances),\n      ].join(' ')\n    );\n  }\n\n  let individualInstances = tippyInstances;\n  let references: Array<ReferenceElement> = [];\n  let triggerTargets: Array<Element> = [];\n  let currentTarget: Element | null;\n  let overrides = optionalProps.overrides;\n  let interceptSetPropsCleanups: Array<() => void> = [];\n  let shownOnCreate = false;\n\n  function setTriggerTargets(): void {\n    triggerTargets = individualInstances\n      .map((instance) =>\n        normalizeToArray(instance.props.triggerTarget || instance.reference)\n      )\n      .reduce((acc, item) => acc.concat(item), []);\n  }\n\n  function setReferences(): void {\n    references = individualInstances.map((instance) => instance.reference);\n  }\n\n  function enableInstances(isEnabled: boolean): void {\n    individualInstances.forEach((instance) => {\n      if (isEnabled) {\n        instance.enable();\n      } else {\n        instance.disable();\n      }\n    });\n  }\n\n  function interceptSetProps(singleton: Instance): Array<() => void> {\n    return individualInstances.map((instance) => {\n      const originalSetProps = instance.setProps;\n\n      instance.setProps = (props): void => {\n        originalSetProps(props);\n\n        if (instance.reference === currentTarget) {\n          singleton.setProps(props);\n        }\n      };\n\n      return (): void => {\n        instance.setProps = originalSetProps;\n      };\n    });\n  }\n\n  // have to pass singleton, as it maybe undefined on first call\n  function prepareInstance(\n    singleton: Instance,\n    target: ReferenceElement\n  ): void {\n    const index = triggerTargets.indexOf(target);\n\n    // bail-out\n    if (target === currentTarget) {\n      return;\n    }\n\n    currentTarget = target;\n\n    const overrideProps: Partial<Props> = (overrides || [])\n      .concat('content')\n      .reduce((acc, prop) => {\n        (acc as any)[prop] = individualInstances[index].props[prop];\n        return acc;\n      }, {});\n\n    singleton.setProps({\n      ...overrideProps,\n      getReferenceClientRect:\n        typeof overrideProps.getReferenceClientRect === 'function'\n          ? overrideProps.getReferenceClientRect\n          : (): ClientRect => references[index]?.getBoundingClientRect(),\n    });\n  }\n\n  enableInstances(false);\n  setReferences();\n  setTriggerTargets();\n\n  const plugin: Plugin = {\n    fn() {\n      return {\n        onDestroy(): void {\n          enableInstances(true);\n        },\n        onHidden(): void {\n          currentTarget = null;\n        },\n        onClickOutside(instance): void {\n          if (instance.props.showOnCreate && !shownOnCreate) {\n            shownOnCreate = true;\n            currentTarget = null;\n          }\n        },\n        onShow(instance): void {\n          if (instance.props.showOnCreate && !shownOnCreate) {\n            shownOnCreate = true;\n            prepareInstance(instance, references[0]);\n          }\n        },\n        onTrigger(instance, event): void {\n          prepareInstance(instance, event.currentTarget as Element);\n        },\n      };\n    },\n  };\n\n  const singleton = tippy(div(), {\n    ...removeProperties(optionalProps, ['overrides']),\n    plugins: [plugin, ...(optionalProps.plugins || [])],\n    triggerTarget: triggerTargets,\n    popperOptions: {\n      ...optionalProps.popperOptions,\n      modifiers: [\n        ...(optionalProps.popperOptions?.modifiers || []),\n        applyStylesModifier,\n      ],\n    },\n  }) as CreateSingletonInstance<CreateSingletonProps>;\n\n  const originalShow = singleton.show;\n\n  singleton.show = (target?: ReferenceElement | Instance | number): void => {\n    originalShow();\n\n    // first time, showOnCreate or programmatic call with no params\n    // default to showing first instance\n    if (!currentTarget && target == null) {\n      return prepareInstance(singleton, references[0]);\n    }\n\n    // triggered from event (do nothing as prepareInstance already called by onTrigger)\n    // programmatic call with no params when already visible (do nothing again)\n    if (currentTarget && target == null) {\n      return;\n    }\n\n    // target is index of instance\n    if (typeof target === 'number') {\n      return (\n        references[target] && prepareInstance(singleton, references[target])\n      );\n    }\n\n    // target is a child tippy instance\n    if (individualInstances.indexOf(target as Instance) >= 0) {\n      const ref = (target as Instance).reference;\n      return prepareInstance(singleton, ref);\n    }\n\n    // target is a ReferenceElement\n    if (references.indexOf(target as ReferenceElement) >= 0) {\n      return prepareInstance(singleton, target as ReferenceElement);\n    }\n  };\n\n  singleton.showNext = (): void => {\n    const first = references[0];\n    if (!currentTarget) {\n      return singleton.show(0);\n    }\n    const index = references.indexOf(currentTarget);\n    singleton.show(references[index + 1] || first);\n  };\n\n  singleton.showPrevious = (): void => {\n    const last = references[references.length - 1];\n    if (!currentTarget) {\n      return singleton.show(last);\n    }\n    const index = references.indexOf(currentTarget);\n    const target = references[index - 1] || last;\n    singleton.show(target);\n  };\n\n  const originalSetProps = singleton.setProps;\n\n  singleton.setProps = (props): void => {\n    overrides = props.overrides || overrides;\n    originalSetProps(props);\n  };\n\n  singleton.setInstances = (nextInstances): void => {\n    enableInstances(true);\n    interceptSetPropsCleanups.forEach((fn) => fn());\n\n    individualInstances = nextInstances;\n\n    enableInstances(false);\n    setReferences();\n    setTriggerTargets();\n    interceptSetPropsCleanups = interceptSetProps(singleton);\n\n    singleton.setProps({triggerTarget: triggerTargets});\n  };\n\n  interceptSetPropsCleanups = interceptSetProps(singleton);\n\n  return singleton;\n};\n\nexport default createSingleton;\n", "import tippy from '..';\nimport {TOUCH_OPTIONS} from '../constants';\nimport {defaultProps} from '../props';\nimport {Instance, Props, Targets} from '../types';\nimport {ListenerObject} from '../types-internal';\nimport {normalizeToArray, removeProperties} from '../utils';\nimport {errorWhen} from '../validation';\n\nconst BUBBLING_EVENTS_MAP = {\n  mouseover: 'mouseenter',\n  focusin: 'focus',\n  click: 'click',\n};\n\n/**\n * Creates a delegate instance that controls the creation of tippy instances\n * for child elements (`target` CSS selector).\n */\nfunction delegate(\n  targets: Targets,\n  props: Partial<Props> & {target: string}\n): Instance | Instance[] {\n  /* istanbul ignore else */\n  if (__DEV__) {\n    errorWhen(\n      !(props && props.target),\n      [\n        'You must specity a `target` prop indicating a CSS selector string matching',\n        'the target elements that should receive a tippy.',\n      ].join(' ')\n    );\n  }\n\n  let listeners: ListenerObject[] = [];\n  let childTippyInstances: Instance[] = [];\n  let disabled = false;\n\n  const {target} = props;\n\n  const nativeProps = removeProperties(props, ['target']);\n  const parentProps = {...nativeProps, trigger: 'manual', touch: false};\n  const childProps = {\n    touch: defaultProps.touch,\n    ...nativeProps,\n    showOnCreate: true,\n  };\n\n  const returnValue = tippy(targets, parentProps);\n  const normalizedReturnValue = normalizeToArray(returnValue);\n\n  function onTrigger(event: Event): void {\n    if (!event.target || disabled) {\n      return;\n    }\n\n    const targetNode = (event.target as Element).closest(target);\n\n    if (!targetNode) {\n      return;\n    }\n\n    // Get relevant trigger with fallbacks:\n    // 1. Check `data-tippy-trigger` attribute on target node\n    // 2. Fallback to `trigger` passed to `delegate()`\n    // 3. Fallback to `defaultProps.trigger`\n    const trigger =\n      targetNode.getAttribute('data-tippy-trigger') ||\n      props.trigger ||\n      defaultProps.trigger;\n\n    // @ts-ignore\n    if (targetNode._tippy) {\n      return;\n    }\n\n    if (event.type === 'touchstart' && typeof childProps.touch === 'boolean') {\n      return;\n    }\n\n    if (\n      event.type !== 'touchstart' &&\n      trigger.indexOf((BUBBLING_EVENTS_MAP as any)[event.type]) < 0\n    ) {\n      return;\n    }\n\n    const instance = tippy(targetNode, childProps);\n\n    if (instance) {\n      childTippyInstances = childTippyInstances.concat(instance);\n    }\n  }\n\n  function on(\n    node: Element,\n    eventType: string,\n    handler: EventListener,\n    options: boolean | Record<string, unknown> = false\n  ): void {\n    node.addEventListener(eventType, handler, options);\n    listeners.push({node, eventType, handler, options});\n  }\n\n  function addEventListeners(instance: Instance): void {\n    const {reference} = instance;\n\n    on(reference, 'touchstart', onTrigger, TOUCH_OPTIONS);\n    on(reference, 'mouseover', onTrigger);\n    on(reference, 'focusin', onTrigger);\n    on(reference, 'click', onTrigger);\n  }\n\n  function removeEventListeners(): void {\n    listeners.forEach(({node, eventType, handler, options}: ListenerObject) => {\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function applyMutations(instance: Instance): void {\n    const originalDestroy = instance.destroy;\n    const originalEnable = instance.enable;\n    const originalDisable = instance.disable;\n\n    instance.destroy = (shouldDestroyChildInstances = true): void => {\n      if (shouldDestroyChildInstances) {\n        childTippyInstances.forEach((instance) => {\n          instance.destroy();\n        });\n      }\n\n      childTippyInstances = [];\n\n      removeEventListeners();\n      originalDestroy();\n    };\n\n    instance.enable = (): void => {\n      originalEnable();\n      childTippyInstances.forEach((instance) => instance.enable());\n      disabled = false;\n    };\n\n    instance.disable = (): void => {\n      originalDisable();\n      childTippyInstances.forEach((instance) => instance.disable());\n      disabled = true;\n    };\n\n    addEventListeners(instance);\n  }\n\n  normalizedReturnValue.forEach(applyMutations);\n\n  return returnValue;\n}\n\nexport default delegate;\n", "import {BACKDROP_CLASS} from '../constants';\nimport {div, setVisibilityState} from '../dom-utils';\nimport {getChildren} from '../template';\nimport {AnimateFill} from '../types';\nimport {errorWhen} from '../validation';\n\nconst animateFill: AnimateFill = {\n  name: 'animateFill',\n  defaultValue: false,\n  fn(instance) {\n    // @ts-ignore\n    if (!instance.props.render?.$$tippy) {\n      if (__DEV__) {\n        errorWhen(\n          instance.props.animateFill,\n          'The `animateFill` plugin requires the default render function.'\n        );\n      }\n\n      return {};\n    }\n\n    const {box, content} = getChildren(instance.popper);\n\n    const backdrop = instance.props.animateFill\n      ? createBackdropElement()\n      : null;\n\n    return {\n      onCreate(): void {\n        if (backdrop) {\n          box.insertBefore(backdrop, box.firstElementChild!);\n          box.setAttribute('data-animatefill', '');\n          box.style.overflow = 'hidden';\n\n          instance.setProps({arrow: false, animation: 'shift-away'});\n        }\n      },\n      onMount(): void {\n        if (backdrop) {\n          const {transitionDuration} = box.style;\n          const duration = Number(transitionDuration.replace('ms', ''));\n\n          // The content should fade in after the backdrop has mostly filled the\n          // tooltip element. `clip-path` is the other alternative but is not\n          // well-supported and is buggy on some devices.\n          content.style.transitionDelay = `${Math.round(duration / 10)}ms`;\n\n          backdrop.style.transitionDuration = transitionDuration;\n          setVisibilityState([backdrop], 'visible');\n        }\n      },\n      onShow(): void {\n        if (backdrop) {\n          backdrop.style.transitionDuration = '0ms';\n        }\n      },\n      onHide(): void {\n        if (backdrop) {\n          setVisibilityState([backdrop], 'hidden');\n        }\n      },\n    };\n  },\n};\n\nexport default animateFill;\n\nfunction createBackdropElement(): HTMLDivElement {\n  const backdrop = div();\n  backdrop.className = BACKDROP_CLASS;\n  setVisibilityState([backdrop], 'hidden');\n  return backdrop;\n}\n", "import {getOwnerDocument, isMouseEvent} from '../dom-utils';\nimport {FollowCursor, Instance} from '../types';\n\nlet mouseCoords = {clientX: 0, clientY: 0};\nlet activeInstances: Array<{instance: Instance; doc: Document}> = [];\n\nfunction storeMouseCoords({clientX, clientY}: MouseEvent): void {\n  mouseCoords = {clientX, clientY};\n}\n\nfunction addMouseCoordsListener(doc: Document): void {\n  doc.addEventListener('mousemove', storeMouseCoords);\n}\n\nfunction removeMouseCoordsListener(doc: Document): void {\n  doc.removeEventListener('mousemove', storeMouseCoords);\n}\n\nconst followCursor: FollowCursor = {\n  name: 'followCursor',\n  defaultValue: false,\n  fn(instance) {\n    const reference = instance.reference;\n    const doc = getOwnerDocument(instance.props.triggerTarget || reference);\n\n    let isInternalUpdate = false;\n    let wasFocusEvent = false;\n    let isUnmounted = true;\n    let prevProps = instance.props;\n\n    function getIsInitialBehavior(): boolean {\n      return (\n        instance.props.followCursor === 'initial' && instance.state.isVisible\n      );\n    }\n\n    function addListener(): void {\n      doc.addEventListener('mousemove', onMouseMove);\n    }\n\n    function removeListener(): void {\n      doc.removeEventListener('mousemove', onMouseMove);\n    }\n\n    function unsetGetReferenceClientRect(): void {\n      isInternalUpdate = true;\n      instance.setProps({getReferenceClientRect: null});\n      isInternalUpdate = false;\n    }\n\n    function onMouseMove(event: MouseEvent): void {\n      // If the instance is interactive, avoid updating the position unless it's\n      // over the reference element\n      const isCursorOverReference = event.target\n        ? reference.contains(event.target as Node)\n        : true;\n      const {followCursor} = instance.props;\n      const {clientX, clientY} = event;\n\n      const rect = reference.getBoundingClientRect();\n      const relativeX = clientX - rect.left;\n      const relativeY = clientY - rect.top;\n\n      if (isCursorOverReference || !instance.props.interactive) {\n        instance.setProps({\n          // @ts-ignore - unneeded DOMRect properties\n          getReferenceClientRect() {\n            const rect = reference.getBoundingClientRect();\n\n            let x = clientX;\n            let y = clientY;\n\n            if (followCursor === 'initial') {\n              x = rect.left + relativeX;\n              y = rect.top + relativeY;\n            }\n\n            const top = followCursor === 'horizontal' ? rect.top : y;\n            const right = followCursor === 'vertical' ? rect.right : x;\n            const bottom = followCursor === 'horizontal' ? rect.bottom : y;\n            const left = followCursor === 'vertical' ? rect.left : x;\n\n            return {\n              width: right - left,\n              height: bottom - top,\n              top,\n              right,\n              bottom,\n              left,\n            };\n          },\n        });\n      }\n    }\n\n    function create(): void {\n      if (instance.props.followCursor) {\n        activeInstances.push({instance, doc});\n        addMouseCoordsListener(doc);\n      }\n    }\n\n    function destroy(): void {\n      activeInstances = activeInstances.filter(\n        (data) => data.instance !== instance\n      );\n\n      if (activeInstances.filter((data) => data.doc === doc).length === 0) {\n        removeMouseCoordsListener(doc);\n      }\n    }\n\n    return {\n      onCreate: create,\n      onDestroy: destroy,\n      onBeforeUpdate(): void {\n        prevProps = instance.props;\n      },\n      onAfterUpdate(_, {followCursor}): void {\n        if (isInternalUpdate) {\n          return;\n        }\n\n        if (\n          followCursor !== undefined &&\n          prevProps.followCursor !== followCursor\n        ) {\n          destroy();\n\n          if (followCursor) {\n            create();\n\n            if (\n              instance.state.isMounted &&\n              !wasFocusEvent &&\n              !getIsInitialBehavior()\n            ) {\n              addListener();\n            }\n          } else {\n            removeListener();\n            unsetGetReferenceClientRect();\n          }\n        }\n      },\n      onMount(): void {\n        if (instance.props.followCursor && !wasFocusEvent) {\n          if (isUnmounted) {\n            onMouseMove(mouseCoords as MouseEvent);\n            isUnmounted = false;\n          }\n\n          if (!getIsInitialBehavior()) {\n            addListener();\n          }\n        }\n      },\n      onTrigger(_, event): void {\n        if (isMouseEvent(event)) {\n          mouseCoords = {clientX: event.clientX, clientY: event.clientY};\n        }\n        wasFocusEvent = event.type === 'focus';\n      },\n      onHidden(): void {\n        if (instance.props.followCursor) {\n          unsetGetReferenceClientRect();\n          removeListener();\n          isUnmounted = true;\n        }\n      },\n    };\n  },\n};\n\nexport default followCursor;\n", "import {Modifier, Placement} from '@popperjs/core';\nimport {isMouseEvent} from '../dom-utils';\nimport {BasePlacement, InlinePositioning, Props} from '../types';\nimport {arrayFrom, getBasePlacement} from '../utils';\n\nfunction getProps(props: Props, modifier: Modifier<any, any>): Partial<Props> {\n  return {\n    popperOptions: {\n      ...props.popperOptions,\n      modifiers: [\n        ...(props.popperOptions?.modifiers || []).filter(\n          ({name}) => name !== modifier.name\n        ),\n        modifier,\n      ],\n    },\n  };\n}\n\nconst inlinePositioning: InlinePositioning = {\n  name: 'inlinePositioning',\n  defaultValue: false,\n  fn(instance) {\n    const {reference} = instance;\n\n    function isEnabled(): boolean {\n      return !!instance.props.inlinePositioning;\n    }\n\n    let placement: Placement;\n    let cursorRectIndex = -1;\n    let isInternalUpdate = false;\n    let triedPlacements: Array<string> = [];\n\n    const modifier: Modifier<\n      'tippyInlinePositioning',\n      Record<string, unknown>\n    > = {\n      name: 'tippyInlinePositioning',\n      enabled: true,\n      phase: 'afterWrite',\n      fn({state}) {\n        if (isEnabled()) {\n          if (triedPlacements.indexOf(state.placement) !== -1) {\n            triedPlacements = [];\n          }\n\n          if (\n            placement !== state.placement &&\n            triedPlacements.indexOf(state.placement) === -1\n          ) {\n            triedPlacements.push(state.placement);\n            instance.setProps({\n              // @ts-ignore - unneeded DOMRect properties\n              getReferenceClientRect: () =>\n                getReferenceClientRect(state.placement),\n            });\n          }\n\n          placement = state.placement;\n        }\n      },\n    };\n\n    function getReferenceClientRect(placement: Placement): Partial<DOMRect> {\n      return getInlineBoundingClientRect(\n        getBasePlacement(placement),\n        reference.getBoundingClientRect(),\n        arrayFrom(reference.getClientRects()),\n        cursorRectIndex\n      );\n    }\n\n    function setInternalProps(partialProps: Partial<Props>): void {\n      isInternalUpdate = true;\n      instance.setProps(partialProps);\n      isInternalUpdate = false;\n    }\n\n    function addModifier(): void {\n      if (!isInternalUpdate) {\n        setInternalProps(getProps(instance.props, modifier));\n      }\n    }\n\n    return {\n      onCreate: addModifier,\n      onAfterUpdate: addModifier,\n      onTrigger(_, event): void {\n        if (isMouseEvent(event)) {\n          const rects = arrayFrom(instance.reference.getClientRects());\n          const cursorRect = rects.find(\n            (rect) =>\n              rect.left - 2 <= event.clientX &&\n              rect.right + 2 >= event.clientX &&\n              rect.top - 2 <= event.clientY &&\n              rect.bottom + 2 >= event.clientY\n          );\n          const index = rects.indexOf(cursorRect);\n          cursorRectIndex = index > -1 ? index : cursorRectIndex;\n        }\n      },\n      onHidden(): void {\n        cursorRectIndex = -1;\n      },\n    };\n  },\n};\n\nexport default inlinePositioning;\n\nexport function getInlineBoundingClientRect(\n  currentBasePlacement: BasePlacement | null,\n  boundingRect: DOMRect,\n  clientRects: DOMRect[],\n  cursorRectIndex: number\n): {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n  width: number;\n  height: number;\n} {\n  // Not an inline element, or placement is not yet known\n  if (clientRects.length < 2 || currentBasePlacement === null) {\n    return boundingRect;\n  }\n\n  // There are two rects and they are disjoined\n  if (\n    clientRects.length === 2 &&\n    cursorRectIndex >= 0 &&\n    clientRects[0].left > clientRects[1].right\n  ) {\n    return clientRects[cursorRectIndex] || boundingRect;\n  }\n\n  switch (currentBasePlacement) {\n    case 'top':\n    case 'bottom': {\n      const firstRect = clientRects[0];\n      const lastRect = clientRects[clientRects.length - 1];\n      const isTop = currentBasePlacement === 'top';\n\n      const top = firstRect.top;\n      const bottom = lastRect.bottom;\n      const left = isTop ? firstRect.left : lastRect.left;\n      const right = isTop ? firstRect.right : lastRect.right;\n      const width = right - left;\n      const height = bottom - top;\n\n      return {top, bottom, left, right, width, height};\n    }\n    case 'left':\n    case 'right': {\n      const minLeft = Math.min(...clientRects.map((rects) => rects.left));\n      const maxRight = Math.max(...clientRects.map((rects) => rects.right));\n      const measureRects = clientRects.filter((rect) =>\n        currentBasePlacement === 'left'\n          ? rect.left === minLeft\n          : rect.right === maxRight\n      );\n\n      const top = measureRects[0].top;\n      const bottom = measureRects[measureRects.length - 1].bottom;\n      const left = minLeft;\n      const right = maxRight;\n      const width = right - left;\n      const height = bottom - top;\n\n      return {top, bottom, left, right, width, height};\n    }\n    default: {\n      return boundingRect;\n    }\n  }\n}\n", "import {VirtualElement} from '@popperjs/core';\nimport {ReferenceElement, Sticky} from '../types';\n\nconst sticky: Sticky = {\n  name: 'sticky',\n  defaultValue: false,\n  fn(instance) {\n    const {reference, popper} = instance;\n\n    function getReference(): ReferenceElement | VirtualElement {\n      return instance.popperInstance\n        ? instance.popperInstance.state.elements.reference\n        : reference;\n    }\n\n    function shouldCheck(value: 'reference' | 'popper'): boolean {\n      return instance.props.sticky === true || instance.props.sticky === value;\n    }\n\n    let prevRefRect: ClientRect | null = null;\n    let prevPopRect: ClientRect | null = null;\n\n    function updatePosition(): void {\n      const currentRefRect = shouldCheck('reference')\n        ? getReference().getBoundingClientRect()\n        : null;\n      const currentPopRect = shouldCheck('popper')\n        ? popper.getBoundingClientRect()\n        : null;\n\n      if (\n        (currentRefRect && areRectsDifferent(prevRefRect, currentRefRect)) ||\n        (currentPopRect && areRectsDifferent(prevPopRect, currentPopRect))\n      ) {\n        if (instance.popperInstance) {\n          instance.popperInstance.update();\n        }\n      }\n\n      prevRefRect = currentRefRect;\n      prevPopRect = currentPopRect;\n\n      if (instance.state.isMounted) {\n        requestAnimationFrame(updatePosition);\n      }\n    }\n\n    return {\n      onMount(): void {\n        if (instance.props.sticky) {\n          updatePosition();\n        }\n      },\n    };\n  },\n};\n\nexport default sticky;\n\nfunction areRectsDifferent(\n  rectA: ClientRect | null,\n  rectB: ClientRect | null\n): boolean {\n  if (rectA && rectB) {\n    return (\n      rectA.top !== rectB.top ||\n      rectA.right !== rectB.right ||\n      rectA.bottom !== rectB.bottom ||\n      rectA.left !== rectB.left\n    );\n  }\n\n  return true;\n}\n", "import tippy from '../src';\nimport {render} from '../src/template';\n\ntippy.setDefaultProps({render});\n\nexport {default, hideAll} from '../src';\nexport {default as createSingleton} from '../src/addons/createSingleton';\nexport {default as delegate} from '../src/addons/delegate';\nexport {default as animateFill} from '../src/plugins/animateFill';\nexport {default as followCursor} from '../src/plugins/followCursor';\nexport {default as inlinePositioning} from '../src/plugins/inlinePositioning';\nexport {default as sticky} from '../src/plugins/sticky';\nexport {ROUND_ARROW as roundArrow} from '../src/constants';\n", "import {\n  Editor, isNodeSelection, isTextSelection, posToDOMRect,\n} from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface BubbleMenuPluginProps {\n  pluginKey: PluginKey | string\n  editor: Editor\n  element: HTMLElement\n  tippyOptions?: Partial<Props>\n  updateDelay?: number\n  shouldShow?:\n    | ((props: {\n        editor: Editor\n        view: EditorView\n        state: EditorState\n        oldState?: EditorState\n        from: number\n        to: number\n      }) => boolean)\n    | null\n}\n\nexport type BubbleMenuViewProps = BubbleMenuPluginProps & {\n  view: EditorView\n}\n\nexport class BubbleMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  public updateDelay: number\n\n  private updateDebounceTimer: number | undefined\n\n  public shouldShow: Exclude<BubbleMenuPluginProps['shouldShow'], null> = ({\n    view,\n    state,\n    from,\n    to,\n  }) => {\n    const { doc, selection } = state\n    const { empty } = selection\n\n    // Sometime check for `empty` is not enough.\n    // Doubleclick an empty paragraph returns a node size of 2.\n    // So we check also for an empty text size.\n    const isEmptyTextBlock = !doc.textBetween(from, to).length && isTextSelection(state.selection)\n\n    // When clicking on a element inside the bubble menu the editor \"blur\" event\n    // is called and the bubble menu item is focussed. In this case we should\n    // consider the menu as part of the editor and keep showing the menu\n    const isChildOfMenu = this.element.contains(document.activeElement)\n\n    const hasEditorFocus = view.hasFocus() || isChildOfMenu\n\n    if (!hasEditorFocus || empty || isEmptyTextBlock || !this.editor.isEditable) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor,\n    element,\n    view,\n    tippyOptions = {},\n    updateDelay = 250,\n    shouldShow,\n  }: BubbleMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n    this.updateDelay = updateDelay\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.view.dom.addEventListener('dragstart', this.dragstartHandler)\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  dragstartHandler = () => {\n    this.hide()\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (event?.relatedTarget && this.element.parentNode?.contains(event.relatedTarget as Node)) {\n      return\n    }\n\n    this.hide()\n  }\n\n  tippyBlurHandler = (event: FocusEvent) => {\n    this.blurHandler({ event })\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'top',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', this.tippyBlurHandler)\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state } = view\n    const hasValidSelection = state.selection.$from.pos !== state.selection.$to.pos\n\n    if (this.updateDelay > 0 && hasValidSelection) {\n      this.handleDebouncedUpdate(view, oldState)\n      return\n    }\n\n    const selectionChanged = !oldState?.selection.eq(view.state.selection)\n    const docChanged = !oldState?.doc.eq(view.state.doc)\n\n    this.updateHandler(view, selectionChanged, docChanged, oldState)\n  }\n\n  handleDebouncedUpdate = (view: EditorView, oldState?: EditorState) => {\n    const selectionChanged = !oldState?.selection.eq(view.state.selection)\n    const docChanged = !oldState?.doc.eq(view.state.doc)\n\n    if (!selectionChanged && !docChanged) {\n      return\n    }\n\n    if (this.updateDebounceTimer) {\n      clearTimeout(this.updateDebounceTimer)\n    }\n\n    this.updateDebounceTimer = window.setTimeout(() => {\n      this.updateHandler(view, selectionChanged, docChanged, oldState)\n    }, this.updateDelay)\n  }\n\n  updateHandler = (view: EditorView, selectionChanged: boolean, docChanged: boolean, oldState?: EditorState) => {\n    const { state, composing } = view\n    const { selection } = state\n\n    const isSame = !selectionChanged && !docChanged\n\n    if (composing || isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    // support for CellSelections\n    const { ranges } = selection\n    const from = Math.min(...ranges.map(range => range.$from.pos))\n    const to = Math.max(...ranges.map(range => range.$to.pos))\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      view,\n      state,\n      oldState,\n      from,\n      to,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect:\n        this.tippyOptions?.getReferenceClientRect\n        || (() => {\n          if (isNodeSelection(state.selection)) {\n            let node = view.nodeDOM(from) as HTMLElement\n\n            const nodeViewWrapper = node.dataset.nodeViewWrapper ? node : node.querySelector('[data-node-view-wrapper]')\n\n            if (nodeViewWrapper) {\n              node = nodeViewWrapper.firstChild as HTMLElement\n            }\n\n            if (node) {\n              return node.getBoundingClientRect()\n            }\n          }\n\n          return posToDOMRect(view, from, to)\n        }),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    if (this.tippy?.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).removeEventListener(\n        'blur',\n        this.tippyBlurHandler,\n      )\n    }\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.view.dom.removeEventListener('dragstart', this.dragstartHandler)\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const BubbleMenuPlugin = (options: BubbleMenuPluginProps) => {\n  return new Plugin({\n    key:\n      typeof options.pluginKey === 'string' ? new PluginKey(options.pluginKey) : options.pluginKey,\n    view: view => new BubbleMenuView({ view, ...options }),\n  })\n}\n", "import { Extension } from '@tiptap/core'\n\nimport { BubbleMenuPlugin, BubbleMenuPluginProps } from './bubble-menu-plugin.js'\n\nexport type BubbleMenuOptions = Omit<BubbleMenuPluginProps, 'editor' | 'element'> & {\n  element: HTMLElement | null,\n}\n\nexport const BubbleMenu = Extension.create<BubbleMenuOptions>({\n  name: 'bubbleMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'bubbleMenu',\n      updateDelay: undefined,\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      BubbleMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        updateDelay: this.options.updateDelay,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n", "import { Editor, posToDOMRect } from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface FloatingMenuPluginProps {\n  pluginKey: PluginKey | string\n  editor: Editor\n  element: HTMLElement\n  tippyOptions?: Partial<Props>\n  shouldShow?:\n    | ((props: {\n        editor: Editor\n        view: EditorView\n        state: EditorState\n        oldState?: EditorState\n      }) => boolean)\n    | null\n}\n\nexport type FloatingMenuViewProps = FloatingMenuPluginProps & {\n  view: EditorView\n}\n\nexport class FloatingMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  public shouldShow: Exclude<FloatingMenuPluginProps['shouldShow'], null> = ({ view, state }) => {\n    const { selection } = state\n    const { $anchor, empty } = selection\n    const isRootDepth = $anchor.depth === 1\n    const isEmptyTextBlock = $anchor.parent.isTextblock && !$anchor.parent.type.spec.code && !$anchor.parent.textContent\n\n    if (\n      !view.hasFocus()\n      || !empty\n      || !isRootDepth\n      || !isEmptyTextBlock\n      || !this.editor.isEditable\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor, element, view, tippyOptions = {}, shouldShow,\n  }: FloatingMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (event?.relatedTarget && this.element.parentNode?.contains(event.relatedTarget as Node)) {\n      return\n    }\n\n    this.hide()\n  }\n\n  tippyBlurHandler = (event: FocusEvent) => {\n    this.blurHandler({ event })\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'right',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', this.tippyBlurHandler)\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state } = view\n    const { doc, selection } = state\n    const { from, to } = selection\n    const isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection)\n\n    if (isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      view,\n      state,\n      oldState,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect:\n        this.tippyOptions?.getReferenceClientRect || (() => posToDOMRect(view, from, to)),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    if (this.tippy?.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).removeEventListener(\n        'blur',\n        this.tippyBlurHandler,\n      )\n    }\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const FloatingMenuPlugin = (options: FloatingMenuPluginProps) => {\n  return new Plugin({\n    key:\n      typeof options.pluginKey === 'string' ? new PluginKey(options.pluginKey) : options.pluginKey,\n    view: view => new FloatingMenuView({ view, ...options }),\n  })\n}\n", "import { Extension } from '@tiptap/core'\n\nimport { FloatingMenuPlugin, FloatingMenuPluginProps } from './floating-menu-plugin.js'\n\nexport type FloatingMenuOptions = Omit<FloatingMenuPluginProps, 'editor' | 'element'> & {\n  element: HTMLElement | null,\n}\n\nexport const FloatingMenu = Extension.create<FloatingMenuOptions>({\n  name: 'floatingMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'floatingMenu',\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      FloatingMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n", "import { Extension } from '@tiptap/core'\n\nexport interface TextAlignOptions {\n  types: string[],\n  alignments: string[],\n  defaultAlignment: string,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    textAlign: {\n      /**\n       * Set the text align attribute\n       */\n      setTextAlign: (alignment: string) => ReturnType,\n      /**\n       * Unset the text align attribute\n       */\n      unsetTextAlign: () => ReturnType,\n    }\n  }\n}\n\nexport const TextAlign = Extension.create<TextAlignOptions>({\n  name: 'textAlign',\n\n  addOptions() {\n    return {\n      types: [],\n      alignments: ['left', 'center', 'right', 'justify'],\n      defaultAlignment: 'left',\n    }\n  },\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          textAlign: {\n            default: this.options.defaultAlignment,\n            parseHTML: element => element.style.textAlign || this.options.defaultAlignment,\n            renderHTML: attributes => {\n              if (attributes.textAlign === this.options.defaultAlignment) {\n                return {}\n              }\n\n              return { style: `text-align: ${attributes.textAlign}` }\n            },\n          },\n        },\n      },\n    ]\n  },\n\n  addCommands() {\n    return {\n      setTextAlign: (alignment: string) => ({ commands }) => {\n        if (!this.options.alignments.includes(alignment)) {\n          return false\n        }\n\n        return this.options.types.every(type => commands.updateAttributes(type, { textAlign: alignment }))\n      },\n\n      unsetTextAlign: () => ({ commands }) => {\n        return this.options.types.every(type => commands.resetAttributes(type, 'textAlign'))\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-l': () => this.editor.commands.setTextAlign('left'),\n      'Mod-Shift-e': () => this.editor.commands.setTextAlign('center'),\n      'Mod-Shift-r': () => this.editor.commands.setTextAlign('right'),\n      'Mod-Shift-j': () => this.editor.commands.setTextAlign('justify'),\n    }\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface HighlightOptions {\n  multicolor: boolean,\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    highlight: {\n      /**\n       * Set a highlight mark\n       */\n      setHighlight: (attributes?: { color: string }) => ReturnType,\n      /**\n       * Toggle a highlight mark\n       */\n      toggleHighlight: (attributes?: { color: string }) => ReturnType,\n      /**\n       * Unset a highlight mark\n       */\n      unsetHighlight: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /(?:^|\\s)((?:==)((?:[^~=]+))(?:==))$/\nexport const pasteRegex = /(?:^|\\s)((?:==)((?:[^~=]+))(?:==))/g\n\nexport const Highlight = Mark.create<HighlightOptions>({\n  name: 'highlight',\n\n  addOptions() {\n    return {\n      multicolor: false,\n      HTMLAttributes: {},\n    }\n  },\n\n  addAttributes() {\n    if (!this.options.multicolor) {\n      return {}\n    }\n\n    return {\n      color: {\n        default: null,\n        parseHTML: element => element.getAttribute('data-color') || element.style.backgroundColor,\n        renderHTML: attributes => {\n          if (!attributes.color) {\n            return {}\n          }\n\n          return {\n            'data-color': attributes.color,\n            style: `background-color: ${attributes.color}; color: inherit`,\n          }\n        },\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'mark',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['mark', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setHighlight: attributes => ({ commands }) => {\n        return commands.setMark(this.name, attributes)\n      },\n      toggleHighlight: attributes => ({ commands }) => {\n        return commands.toggleMark(this.name, attributes)\n      },\n      unsetHighlight: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-h': () => this.editor.commands.toggleHighlight(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexport const IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nexport var AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n", "import { SelectorType, AttributeAction, } from \"./types\";\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = new Map([\n    [126 /* Tilde */, AttributeAction.Element],\n    [94 /* Circumflex */, AttributeAction.Start],\n    [36 /* Dollar */, AttributeAction.End],\n    [42 /* Asterisk */, AttributeAction.Any],\n    [33 /* ExclamationMark */, AttributeAction.Not],\n    [124 /* Pipe */, AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nexport function isTraversal(selector) {\n    switch (selector.type) {\n        case SelectorType.Adjacent:\n        case SelectorType.Child:\n        case SelectorType.Descendant:\n        case SelectorType.Parent:\n        case SelectorType.Sibling:\n        case SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    const high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nexport function parse(selector) {\n    const subselects = [];\n    const endIndex = parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) {\n        throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        }\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        let counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        let slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                let name;\n                let namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name = getName(2);\n                }\n                else {\n                    name = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name;\n                        name = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                let action = AttributeAction.Exists;\n                const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                let value = \"\";\n                let ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        const quote = selector.charCodeAt(selectorIndex);\n                        let sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        const valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                const attributeSelector = {\n                    type: SelectorType.Attribute,\n                    name,\n                    action,\n                    value,\n                    namespace,\n                    ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                const name = getName(1).toLowerCase();\n                let data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name)) {\n                            const quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: SelectorType.Pseudo, name, data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                let namespace = null;\n                let name;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name = getName(1);\n                    }\n                }\n                tokens.push(name === \"*\"\n                    ? { type: SelectorType.Universal, namespace }\n                    : { type: SelectorType.Tag, name, namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n", "// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\nimport { hasOwn } from './utils'\n\n/* eslint-disable no-misleading-character-class */\n/* eslint-disable no-control-regex */\n/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n// Modifications by Dirk Holtwick, 2022\n\n// All astral symbols.\nconst regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\n// All ASCII symbols (not just printable ASCII) except those listed in the\n// first column of the overrides table.\n// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\nconst regexAsciiWhitelist = /[\\x01-\\x7F]/g\n// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n// code points listed in the first column of the overrides table on\n// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\nconst regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\n\nconst regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g\nconst encodeMap = {\n  '\\xAD': 'shy',\n  '\\u200C': 'zwnj',\n  '\\u200D': 'zwj',\n  '\\u200E': 'lrm',\n  '\\u2063': 'ic',\n  '\\u2062': 'it',\n  '\\u2061': 'af',\n  '\\u200F': 'rlm',\n  '\\u200B': 'ZeroWidthSpace',\n  '\\u2060': 'NoBreak',\n  '\\u0311': 'DownBreve',\n  '\\u20DB': 'tdot',\n  '\\u20DC': 'DotDot',\n  '\\t': 'Tab',\n  '\\n': 'NewLine',\n  '\\u2008': 'puncsp',\n  '\\u205F': 'MediumSpace',\n  '\\u2009': 'thinsp',\n  '\\u200A': 'hairsp',\n  '\\u2004': 'emsp13',\n  '\\u2002': 'ensp',\n  '\\u2005': 'emsp14',\n  '\\u2003': 'emsp',\n  '\\u2007': 'numsp',\n  '\\xA0': 'nbsp',\n  '\\u205F\\u200A': 'ThickSpace',\n  '\\u203E': 'oline',\n  '_': 'lowbar',\n  '\\u2010': 'dash',\n  '\\u2013': 'ndash',\n  '\\u2014': 'mdash',\n  '\\u2015': 'horbar',\n  ',': 'comma',\n  ';': 'semi',\n  '\\u204F': 'bsemi',\n  ':': 'colon',\n  '\\u2A74': 'Colone',\n  '!': 'excl',\n  '\\xA1': 'iexcl',\n  '?': 'quest',\n  '\\xBF': 'iquest',\n  '.': 'period',\n  '\\u2025': 'nldr',\n  '\\u2026': 'mldr',\n  '\\xB7': 'middot',\n  '\\'': 'apos',\n  '\\u2018': 'lsquo',\n  '\\u2019': 'rsquo',\n  '\\u201A': 'sbquo',\n  '\\u2039': 'lsaquo',\n  '\\u203A': 'rsaquo',\n  '\"': 'quot',\n  '\\u201C': 'ldquo',\n  '\\u201D': 'rdquo',\n  '\\u201E': 'bdquo',\n  '\\xAB': 'laquo',\n  '\\xBB': 'raquo',\n  '(': 'lpar',\n  ')': 'rpar',\n  '[': 'lsqb',\n  ']': 'rsqb',\n  '{': 'lcub',\n  '}': 'rcub',\n  '\\u2308': 'lceil',\n  '\\u2309': 'rceil',\n  '\\u230A': 'lfloor',\n  '\\u230B': 'rfloor',\n  '\\u2985': 'lopar',\n  '\\u2986': 'ropar',\n  '\\u298B': 'lbrke',\n  '\\u298C': 'rbrke',\n  '\\u298D': 'lbrkslu',\n  '\\u298E': 'rbrksld',\n  '\\u298F': 'lbrksld',\n  '\\u2990': 'rbrkslu',\n  '\\u2991': 'langd',\n  '\\u2992': 'rangd',\n  '\\u2993': 'lparlt',\n  '\\u2994': 'rpargt',\n  '\\u2995': 'gtlPar',\n  '\\u2996': 'ltrPar',\n  '\\u27E6': 'lobrk',\n  '\\u27E7': 'robrk',\n  '\\u27E8': 'lang',\n  '\\u27E9': 'rang',\n  '\\u27EA': 'Lang',\n  '\\u27EB': 'Rang',\n  '\\u27EC': 'loang',\n  '\\u27ED': 'roang',\n  '\\u2772': 'lbbrk',\n  '\\u2773': 'rbbrk',\n  '\\u2016': 'Vert',\n  '\\xA7': 'sect',\n  '\\xB6': 'para',\n  '@': 'commat',\n  '*': 'ast',\n  '/': 'sol',\n  'undefined': null,\n  '&': 'amp',\n  '#': 'num',\n  '%': 'percnt',\n  '\\u2030': 'permil',\n  '\\u2031': 'pertenk',\n  '\\u2020': 'dagger',\n  '\\u2021': 'Dagger',\n  '\\u2022': 'bull',\n  '\\u2043': 'hybull',\n  '\\u2032': 'prime',\n  '\\u2033': 'Prime',\n  '\\u2034': 'tprime',\n  '\\u2057': 'qprime',\n  '\\u2035': 'bprime',\n  '\\u2041': 'caret',\n  '`': 'grave',\n  '\\xB4': 'acute',\n  '\\u02DC': 'tilde',\n  '^': 'Hat',\n  '\\xAF': 'macr',\n  '\\u02D8': 'breve',\n  '\\u02D9': 'dot',\n  '\\xA8': 'die',\n  '\\u02DA': 'ring',\n  '\\u02DD': 'dblac',\n  '\\xB8': 'cedil',\n  '\\u02DB': 'ogon',\n  '\\u02C6': 'circ',\n  '\\u02C7': 'caron',\n  '\\xB0': 'deg',\n  '\\xA9': 'copy',\n  '\\xAE': 'reg',\n  '\\u2117': 'copysr',\n  '\\u2118': 'wp',\n  '\\u211E': 'rx',\n  '\\u2127': 'mho',\n  '\\u2129': 'iiota',\n  '\\u2190': 'larr',\n  '\\u219A': 'nlarr',\n  '\\u2192': 'rarr',\n  '\\u219B': 'nrarr',\n  '\\u2191': 'uarr',\n  '\\u2193': 'darr',\n  '\\u2194': 'harr',\n  '\\u21AE': 'nharr',\n  '\\u2195': 'varr',\n  '\\u2196': 'nwarr',\n  '\\u2197': 'nearr',\n  '\\u2198': 'searr',\n  '\\u2199': 'swarr',\n  '\\u219D': 'rarrw',\n  '\\u219D\\u0338': 'nrarrw',\n  '\\u219E': 'Larr',\n  '\\u219F': 'Uarr',\n  '\\u21A0': 'Rarr',\n  '\\u21A1': 'Darr',\n  '\\u21A2': 'larrtl',\n  '\\u21A3': 'rarrtl',\n  '\\u21A4': 'mapstoleft',\n  '\\u21A5': 'mapstoup',\n  '\\u21A6': 'map',\n  '\\u21A7': 'mapstodown',\n  '\\u21A9': 'larrhk',\n  '\\u21AA': 'rarrhk',\n  '\\u21AB': 'larrlp',\n  '\\u21AC': 'rarrlp',\n  '\\u21AD': 'harrw',\n  '\\u21B0': 'lsh',\n  '\\u21B1': 'rsh',\n  '\\u21B2': 'ldsh',\n  '\\u21B3': 'rdsh',\n  '\\u21B5': 'crarr',\n  '\\u21B6': 'cularr',\n  '\\u21B7': 'curarr',\n  '\\u21BA': 'olarr',\n  '\\u21BB': 'orarr',\n  '\\u21BC': 'lharu',\n  '\\u21BD': 'lhard',\n  '\\u21BE': 'uharr',\n  '\\u21BF': 'uharl',\n  '\\u21C0': 'rharu',\n  '\\u21C1': 'rhard',\n  '\\u21C2': 'dharr',\n  '\\u21C3': 'dharl',\n  '\\u21C4': 'rlarr',\n  '\\u21C5': 'udarr',\n  '\\u21C6': 'lrarr',\n  '\\u21C7': 'llarr',\n  '\\u21C8': 'uuarr',\n  '\\u21C9': 'rrarr',\n  '\\u21CA': 'ddarr',\n  '\\u21CB': 'lrhar',\n  '\\u21CC': 'rlhar',\n  '\\u21D0': 'lArr',\n  '\\u21CD': 'nlArr',\n  '\\u21D1': 'uArr',\n  '\\u21D2': 'rArr',\n  '\\u21CF': 'nrArr',\n  '\\u21D3': 'dArr',\n  '\\u21D4': 'iff',\n  '\\u21CE': 'nhArr',\n  '\\u21D5': 'vArr',\n  '\\u21D6': 'nwArr',\n  '\\u21D7': 'neArr',\n  '\\u21D8': 'seArr',\n  '\\u21D9': 'swArr',\n  '\\u21DA': 'lAarr',\n  '\\u21DB': 'rAarr',\n  '\\u21DD': 'zigrarr',\n  '\\u21E4': 'larrb',\n  '\\u21E5': 'rarrb',\n  '\\u21F5': 'duarr',\n  '\\u21FD': 'loarr',\n  '\\u21FE': 'roarr',\n  '\\u21FF': 'hoarr',\n  '\\u2200': 'forall',\n  '\\u2201': 'comp',\n  '\\u2202': 'part',\n  '\\u2202\\u0338': 'npart',\n  '\\u2203': 'exist',\n  '\\u2204': 'nexist',\n  '\\u2205': 'empty',\n  '\\u2207': 'Del',\n  '\\u2208': 'in',\n  '\\u2209': 'notin',\n  '\\u220B': 'ni',\n  '\\u220C': 'notni',\n  '\\u03F6': 'bepsi',\n  '\\u220F': 'prod',\n  '\\u2210': 'coprod',\n  '\\u2211': 'sum',\n  '+': 'plus',\n  '\\xB1': 'pm',\n  '\\xF7': 'div',\n  '\\xD7': 'times',\n  '<': 'lt',\n  '\\u226E': 'nlt',\n  '<\\u20D2': 'nvlt',\n  '=': 'equals',\n  '\\u2260': 'ne',\n  '=\\u20E5': 'bne',\n  '\\u2A75': 'Equal',\n  '>': 'gt',\n  '\\u226F': 'ngt',\n  '>\\u20D2': 'nvgt',\n  '\\xAC': 'not',\n  '|': 'vert',\n  '\\xA6': 'brvbar',\n  '\\u2212': 'minus',\n  '\\u2213': 'mp',\n  '\\u2214': 'plusdo',\n  '\\u2044': 'frasl',\n  '\\u2216': 'setmn',\n  '\\u2217': 'lowast',\n  '\\u2218': 'compfn',\n  '\\u221A': 'Sqrt',\n  '\\u221D': 'prop',\n  '\\u221E': 'infin',\n  '\\u221F': 'angrt',\n  '\\u2220': 'ang',\n  '\\u2220\\u20D2': 'nang',\n  '\\u2221': 'angmsd',\n  '\\u2222': 'angsph',\n  '\\u2223': 'mid',\n  '\\u2224': 'nmid',\n  '\\u2225': 'par',\n  '\\u2226': 'npar',\n  '\\u2227': 'and',\n  '\\u2228': 'or',\n  '\\u2229': 'cap',\n  '\\u2229\\uFE00': 'caps',\n  '\\u222A': 'cup',\n  '\\u222A\\uFE00': 'cups',\n  '\\u222B': 'int',\n  '\\u222C': 'Int',\n  '\\u222D': 'tint',\n  '\\u2A0C': 'qint',\n  '\\u222E': 'oint',\n  '\\u222F': 'Conint',\n  '\\u2230': 'Cconint',\n  '\\u2231': 'cwint',\n  '\\u2232': 'cwconint',\n  '\\u2233': 'awconint',\n  '\\u2234': 'there4',\n  '\\u2235': 'becaus',\n  '\\u2236': 'ratio',\n  '\\u2237': 'Colon',\n  '\\u2238': 'minusd',\n  '\\u223A': 'mDDot',\n  '\\u223B': 'homtht',\n  '\\u223C': 'sim',\n  '\\u2241': 'nsim',\n  '\\u223C\\u20D2': 'nvsim',\n  '\\u223D': 'bsim',\n  '\\u223D\\u0331': 'race',\n  '\\u223E': 'ac',\n  '\\u223E\\u0333': 'acE',\n  '\\u223F': 'acd',\n  '\\u2240': 'wr',\n  '\\u2242': 'esim',\n  '\\u2242\\u0338': 'nesim',\n  '\\u2243': 'sime',\n  '\\u2244': 'nsime',\n  '\\u2245': 'cong',\n  '\\u2247': 'ncong',\n  '\\u2246': 'simne',\n  '\\u2248': 'ap',\n  '\\u2249': 'nap',\n  '\\u224A': 'ape',\n  '\\u224B': 'apid',\n  '\\u224B\\u0338': 'napid',\n  '\\u224C': 'bcong',\n  '\\u224D': 'CupCap',\n  '\\u226D': 'NotCupCap',\n  '\\u224D\\u20D2': 'nvap',\n  '\\u224E': 'bump',\n  '\\u224E\\u0338': 'nbump',\n  '\\u224F': 'bumpe',\n  '\\u224F\\u0338': 'nbumpe',\n  '\\u2250': 'doteq',\n  '\\u2250\\u0338': 'nedot',\n  '\\u2251': 'eDot',\n  '\\u2252': 'efDot',\n  '\\u2253': 'erDot',\n  '\\u2254': 'colone',\n  '\\u2255': 'ecolon',\n  '\\u2256': 'ecir',\n  '\\u2257': 'cire',\n  '\\u2259': 'wedgeq',\n  '\\u225A': 'veeeq',\n  '\\u225C': 'trie',\n  '\\u225F': 'equest',\n  '\\u2261': 'equiv',\n  '\\u2262': 'nequiv',\n  '\\u2261\\u20E5': 'bnequiv',\n  '\\u2264': 'le',\n  '\\u2270': 'nle',\n  '\\u2264\\u20D2': 'nvle',\n  '\\u2265': 'ge',\n  '\\u2271': 'nge',\n  '\\u2265\\u20D2': 'nvge',\n  '\\u2266': 'lE',\n  '\\u2266\\u0338': 'nlE',\n  '\\u2267': 'gE',\n  '\\u2267\\u0338': 'ngE',\n  '\\u2268\\uFE00': 'lvnE',\n  '\\u2268': 'lnE',\n  '\\u2269': 'gnE',\n  '\\u2269\\uFE00': 'gvnE',\n  '\\u226A': 'll',\n  '\\u226A\\u0338': 'nLtv',\n  '\\u226A\\u20D2': 'nLt',\n  '\\u226B': 'gg',\n  '\\u226B\\u0338': 'nGtv',\n  '\\u226B\\u20D2': 'nGt',\n  '\\u226C': 'twixt',\n  '\\u2272': 'lsim',\n  '\\u2274': 'nlsim',\n  '\\u2273': 'gsim',\n  '\\u2275': 'ngsim',\n  '\\u2276': 'lg',\n  '\\u2278': 'ntlg',\n  '\\u2277': 'gl',\n  '\\u2279': 'ntgl',\n  '\\u227A': 'pr',\n  '\\u2280': 'npr',\n  '\\u227B': 'sc',\n  '\\u2281': 'nsc',\n  '\\u227C': 'prcue',\n  '\\u22E0': 'nprcue',\n  '\\u227D': 'sccue',\n  '\\u22E1': 'nsccue',\n  '\\u227E': 'prsim',\n  '\\u227F': 'scsim',\n  '\\u227F\\u0338': 'NotSucceedsTilde',\n  '\\u2282': 'sub',\n  '\\u2284': 'nsub',\n  '\\u2282\\u20D2': 'vnsub',\n  '\\u2283': 'sup',\n  '\\u2285': 'nsup',\n  '\\u2283\\u20D2': 'vnsup',\n  '\\u2286': 'sube',\n  '\\u2288': 'nsube',\n  '\\u2287': 'supe',\n  '\\u2289': 'nsupe',\n  '\\u228A\\uFE00': 'vsubne',\n  '\\u228A': 'subne',\n  '\\u228B\\uFE00': 'vsupne',\n  '\\u228B': 'supne',\n  '\\u228D': 'cupdot',\n  '\\u228E': 'uplus',\n  '\\u228F': 'sqsub',\n  '\\u228F\\u0338': 'NotSquareSubset',\n  '\\u2290': 'sqsup',\n  '\\u2290\\u0338': 'NotSquareSuperset',\n  '\\u2291': 'sqsube',\n  '\\u22E2': 'nsqsube',\n  '\\u2292': 'sqsupe',\n  '\\u22E3': 'nsqsupe',\n  '\\u2293': 'sqcap',\n  '\\u2293\\uFE00': 'sqcaps',\n  '\\u2294': 'sqcup',\n  '\\u2294\\uFE00': 'sqcups',\n  '\\u2295': 'oplus',\n  '\\u2296': 'ominus',\n  '\\u2297': 'otimes',\n  '\\u2298': 'osol',\n  '\\u2299': 'odot',\n  '\\u229A': 'ocir',\n  '\\u229B': 'oast',\n  '\\u229D': 'odash',\n  '\\u229E': 'plusb',\n  '\\u229F': 'minusb',\n  '\\u22A0': 'timesb',\n  '\\u22A1': 'sdotb',\n  '\\u22A2': 'vdash',\n  '\\u22AC': 'nvdash',\n  '\\u22A3': 'dashv',\n  '\\u22A4': 'top',\n  '\\u22A5': 'bot',\n  '\\u22A7': 'models',\n  '\\u22A8': 'vDash',\n  '\\u22AD': 'nvDash',\n  '\\u22A9': 'Vdash',\n  '\\u22AE': 'nVdash',\n  '\\u22AA': 'Vvdash',\n  '\\u22AB': 'VDash',\n  '\\u22AF': 'nVDash',\n  '\\u22B0': 'prurel',\n  '\\u22B2': 'vltri',\n  '\\u22EA': 'nltri',\n  '\\u22B3': 'vrtri',\n  '\\u22EB': 'nrtri',\n  '\\u22B4': 'ltrie',\n  '\\u22EC': 'nltrie',\n  '\\u22B4\\u20D2': 'nvltrie',\n  '\\u22B5': 'rtrie',\n  '\\u22ED': 'nrtrie',\n  '\\u22B5\\u20D2': 'nvrtrie',\n  '\\u22B6': 'origof',\n  '\\u22B7': 'imof',\n  '\\u22B8': 'mumap',\n  '\\u22B9': 'hercon',\n  '\\u22BA': 'intcal',\n  '\\u22BB': 'veebar',\n  '\\u22BD': 'barvee',\n  '\\u22BE': 'angrtvb',\n  '\\u22BF': 'lrtri',\n  '\\u22C0': 'Wedge',\n  '\\u22C1': 'Vee',\n  '\\u22C2': 'xcap',\n  '\\u22C3': 'xcup',\n  '\\u22C4': 'diam',\n  '\\u22C5': 'sdot',\n  '\\u22C6': 'Star',\n  '\\u22C7': 'divonx',\n  '\\u22C8': 'bowtie',\n  '\\u22C9': 'ltimes',\n  '\\u22CA': 'rtimes',\n  '\\u22CB': 'lthree',\n  '\\u22CC': 'rthree',\n  '\\u22CD': 'bsime',\n  '\\u22CE': 'cuvee',\n  '\\u22CF': 'cuwed',\n  '\\u22D0': 'Sub',\n  '\\u22D1': 'Sup',\n  '\\u22D2': 'Cap',\n  '\\u22D3': 'Cup',\n  '\\u22D4': 'fork',\n  '\\u22D5': 'epar',\n  '\\u22D6': 'ltdot',\n  '\\u22D7': 'gtdot',\n  '\\u22D8': 'Ll',\n  '\\u22D8\\u0338': 'nLl',\n  '\\u22D9': 'Gg',\n  '\\u22D9\\u0338': 'nGg',\n  '\\u22DA\\uFE00': 'lesg',\n  '\\u22DA': 'leg',\n  '\\u22DB': 'gel',\n  '\\u22DB\\uFE00': 'gesl',\n  '\\u22DE': 'cuepr',\n  '\\u22DF': 'cuesc',\n  '\\u22E6': 'lnsim',\n  '\\u22E7': 'gnsim',\n  '\\u22E8': 'prnsim',\n  '\\u22E9': 'scnsim',\n  '\\u22EE': 'vellip',\n  '\\u22EF': 'ctdot',\n  '\\u22F0': 'utdot',\n  '\\u22F1': 'dtdot',\n  '\\u22F2': 'disin',\n  '\\u22F3': 'isinsv',\n  '\\u22F4': 'isins',\n  '\\u22F5': 'isindot',\n  '\\u22F5\\u0338': 'notindot',\n  '\\u22F6': 'notinvc',\n  '\\u22F7': 'notinvb',\n  '\\u22F9': 'isinE',\n  '\\u22F9\\u0338': 'notinE',\n  '\\u22FA': 'nisd',\n  '\\u22FB': 'xnis',\n  '\\u22FC': 'nis',\n  '\\u22FD': 'notnivc',\n  '\\u22FE': 'notnivb',\n  '\\u2305': 'barwed',\n  '\\u2306': 'Barwed',\n  '\\u230C': 'drcrop',\n  '\\u230D': 'dlcrop',\n  '\\u230E': 'urcrop',\n  '\\u230F': 'ulcrop',\n  '\\u2310': 'bnot',\n  '\\u2312': 'profline',\n  '\\u2313': 'profsurf',\n  '\\u2315': 'telrec',\n  '\\u2316': 'target',\n  '\\u231C': 'ulcorn',\n  '\\u231D': 'urcorn',\n  '\\u231E': 'dlcorn',\n  '\\u231F': 'drcorn',\n  '\\u2322': 'frown',\n  '\\u2323': 'smile',\n  '\\u232D': 'cylcty',\n  '\\u232E': 'profalar',\n  '\\u2336': 'topbot',\n  '\\u233D': 'ovbar',\n  '\\u233F': 'solbar',\n  '\\u237C': 'angzarr',\n  '\\u23B0': 'lmoust',\n  '\\u23B1': 'rmoust',\n  '\\u23B4': 'tbrk',\n  '\\u23B5': 'bbrk',\n  '\\u23B6': 'bbrktbrk',\n  '\\u23DC': 'OverParenthesis',\n  '\\u23DD': 'UnderParenthesis',\n  '\\u23DE': 'OverBrace',\n  '\\u23DF': 'UnderBrace',\n  '\\u23E2': 'trpezium',\n  '\\u23E7': 'elinters',\n  '\\u2423': 'blank',\n  '\\u2500': 'boxh',\n  '\\u2502': 'boxv',\n  '\\u250C': 'boxdr',\n  '\\u2510': 'boxdl',\n  '\\u2514': 'boxur',\n  '\\u2518': 'boxul',\n  '\\u251C': 'boxvr',\n  '\\u2524': 'boxvl',\n  '\\u252C': 'boxhd',\n  '\\u2534': 'boxhu',\n  '\\u253C': 'boxvh',\n  '\\u2550': 'boxH',\n  '\\u2551': 'boxV',\n  '\\u2552': 'boxdR',\n  '\\u2553': 'boxDr',\n  '\\u2554': 'boxDR',\n  '\\u2555': 'boxdL',\n  '\\u2556': 'boxDl',\n  '\\u2557': 'boxDL',\n  '\\u2558': 'boxuR',\n  '\\u2559': 'boxUr',\n  '\\u255A': 'boxUR',\n  '\\u255B': 'boxuL',\n  '\\u255C': 'boxUl',\n  '\\u255D': 'boxUL',\n  '\\u255E': 'boxvR',\n  '\\u255F': 'boxVr',\n  '\\u2560': 'boxVR',\n  '\\u2561': 'boxvL',\n  '\\u2562': 'boxVl',\n  '\\u2563': 'boxVL',\n  '\\u2564': 'boxHd',\n  '\\u2565': 'boxhD',\n  '\\u2566': 'boxHD',\n  '\\u2567': 'boxHu',\n  '\\u2568': 'boxhU',\n  '\\u2569': 'boxHU',\n  '\\u256A': 'boxvH',\n  '\\u256B': 'boxVh',\n  '\\u256C': 'boxVH',\n  '\\u2580': 'uhblk',\n  '\\u2584': 'lhblk',\n  '\\u2588': 'block',\n  '\\u2591': 'blk14',\n  '\\u2592': 'blk12',\n  '\\u2593': 'blk34',\n  '\\u25A1': 'squ',\n  '\\u25AA': 'squf',\n  '\\u25AB': 'EmptyVerySmallSquare',\n  '\\u25AD': 'rect',\n  '\\u25AE': 'marker',\n  '\\u25B1': 'fltns',\n  '\\u25B3': 'xutri',\n  '\\u25B4': 'utrif',\n  '\\u25B5': 'utri',\n  '\\u25B8': 'rtrif',\n  '\\u25B9': 'rtri',\n  '\\u25BD': 'xdtri',\n  '\\u25BE': 'dtrif',\n  '\\u25BF': 'dtri',\n  '\\u25C2': 'ltrif',\n  '\\u25C3': 'ltri',\n  '\\u25CA': 'loz',\n  '\\u25CB': 'cir',\n  '\\u25EC': 'tridot',\n  '\\u25EF': 'xcirc',\n  '\\u25F8': 'ultri',\n  '\\u25F9': 'urtri',\n  '\\u25FA': 'lltri',\n  '\\u25FB': 'EmptySmallSquare',\n  '\\u25FC': 'FilledSmallSquare',\n  '\\u2605': 'starf',\n  '\\u2606': 'star',\n  '\\u260E': 'phone',\n  '\\u2640': 'female',\n  '\\u2642': 'male',\n  '\\u2660': 'spades',\n  '\\u2663': 'clubs',\n  '\\u2665': 'hearts',\n  '\\u2666': 'diams',\n  '\\u266A': 'sung',\n  '\\u2713': 'check',\n  '\\u2717': 'cross',\n  '\\u2720': 'malt',\n  '\\u2736': 'sext',\n  '\\u2758': 'VerticalSeparator',\n  '\\u27C8': 'bsolhsub',\n  '\\u27C9': 'suphsol',\n  '\\u27F5': 'xlarr',\n  '\\u27F6': 'xrarr',\n  '\\u27F7': 'xharr',\n  '\\u27F8': 'xlArr',\n  '\\u27F9': 'xrArr',\n  '\\u27FA': 'xhArr',\n  '\\u27FC': 'xmap',\n  '\\u27FF': 'dzigrarr',\n  '\\u2902': 'nvlArr',\n  '\\u2903': 'nvrArr',\n  '\\u2904': 'nvHarr',\n  '\\u2905': 'Map',\n  '\\u290C': 'lbarr',\n  '\\u290D': 'rbarr',\n  '\\u290E': 'lBarr',\n  '\\u290F': 'rBarr',\n  '\\u2910': 'RBarr',\n  '\\u2911': 'DDotrahd',\n  '\\u2912': 'UpArrowBar',\n  '\\u2913': 'DownArrowBar',\n  '\\u2916': 'Rarrtl',\n  '\\u2919': 'latail',\n  '\\u291A': 'ratail',\n  '\\u291B': 'lAtail',\n  '\\u291C': 'rAtail',\n  '\\u291D': 'larrfs',\n  '\\u291E': 'rarrfs',\n  '\\u291F': 'larrbfs',\n  '\\u2920': 'rarrbfs',\n  '\\u2923': 'nwarhk',\n  '\\u2924': 'nearhk',\n  '\\u2925': 'searhk',\n  '\\u2926': 'swarhk',\n  '\\u2927': 'nwnear',\n  '\\u2928': 'toea',\n  '\\u2929': 'tosa',\n  '\\u292A': 'swnwar',\n  '\\u2933': 'rarrc',\n  '\\u2933\\u0338': 'nrarrc',\n  '\\u2935': 'cudarrr',\n  '\\u2936': 'ldca',\n  '\\u2937': 'rdca',\n  '\\u2938': 'cudarrl',\n  '\\u2939': 'larrpl',\n  '\\u293C': 'curarrm',\n  '\\u293D': 'cularrp',\n  '\\u2945': 'rarrpl',\n  '\\u2948': 'harrcir',\n  '\\u2949': 'Uarrocir',\n  '\\u294A': 'lurdshar',\n  '\\u294B': 'ldrushar',\n  '\\u294E': 'LeftRightVector',\n  '\\u294F': 'RightUpDownVector',\n  '\\u2950': 'DownLeftRightVector',\n  '\\u2951': 'LeftUpDownVector',\n  '\\u2952': 'LeftVectorBar',\n  '\\u2953': 'RightVectorBar',\n  '\\u2954': 'RightUpVectorBar',\n  '\\u2955': 'RightDownVectorBar',\n  '\\u2956': 'DownLeftVectorBar',\n  '\\u2957': 'DownRightVectorBar',\n  '\\u2958': 'LeftUpVectorBar',\n  '\\u2959': 'LeftDownVectorBar',\n  '\\u295A': 'LeftTeeVector',\n  '\\u295B': 'RightTeeVector',\n  '\\u295C': 'RightUpTeeVector',\n  '\\u295D': 'RightDownTeeVector',\n  '\\u295E': 'DownLeftTeeVector',\n  '\\u295F': 'DownRightTeeVector',\n  '\\u2960': 'LeftUpTeeVector',\n  '\\u2961': 'LeftDownTeeVector',\n  '\\u2962': 'lHar',\n  '\\u2963': 'uHar',\n  '\\u2964': 'rHar',\n  '\\u2965': 'dHar',\n  '\\u2966': 'luruhar',\n  '\\u2967': 'ldrdhar',\n  '\\u2968': 'ruluhar',\n  '\\u2969': 'rdldhar',\n  '\\u296A': 'lharul',\n  '\\u296B': 'llhard',\n  '\\u296C': 'rharul',\n  '\\u296D': 'lrhard',\n  '\\u296E': 'udhar',\n  '\\u296F': 'duhar',\n  '\\u2970': 'RoundImplies',\n  '\\u2971': 'erarr',\n  '\\u2972': 'simrarr',\n  '\\u2973': 'larrsim',\n  '\\u2974': 'rarrsim',\n  '\\u2975': 'rarrap',\n  '\\u2976': 'ltlarr',\n  '\\u2978': 'gtrarr',\n  '\\u2979': 'subrarr',\n  '\\u297B': 'suplarr',\n  '\\u297C': 'lfisht',\n  '\\u297D': 'rfisht',\n  '\\u297E': 'ufisht',\n  '\\u297F': 'dfisht',\n  '\\u299A': 'vzigzag',\n  '\\u299C': 'vangrt',\n  '\\u299D': 'angrtvbd',\n  '\\u29A4': 'ange',\n  '\\u29A5': 'range',\n  '\\u29A6': 'dwangle',\n  '\\u29A7': 'uwangle',\n  '\\u29A8': 'angmsdaa',\n  '\\u29A9': 'angmsdab',\n  '\\u29AA': 'angmsdac',\n  '\\u29AB': 'angmsdad',\n  '\\u29AC': 'angmsdae',\n  '\\u29AD': 'angmsdaf',\n  '\\u29AE': 'angmsdag',\n  '\\u29AF': 'angmsdah',\n  '\\u29B0': 'bemptyv',\n  '\\u29B1': 'demptyv',\n  '\\u29B2': 'cemptyv',\n  '\\u29B3': 'raemptyv',\n  '\\u29B4': 'laemptyv',\n  '\\u29B5': 'ohbar',\n  '\\u29B6': 'omid',\n  '\\u29B7': 'opar',\n  '\\u29B9': 'operp',\n  '\\u29BB': 'olcross',\n  '\\u29BC': 'odsold',\n  '\\u29BE': 'olcir',\n  '\\u29BF': 'ofcir',\n  '\\u29C0': 'olt',\n  '\\u29C1': 'ogt',\n  '\\u29C2': 'cirscir',\n  '\\u29C3': 'cirE',\n  '\\u29C4': 'solb',\n  '\\u29C5': 'bsolb',\n  '\\u29C9': 'boxbox',\n  '\\u29CD': 'trisb',\n  '\\u29CE': 'rtriltri',\n  '\\u29CF': 'LeftTriangleBar',\n  '\\u29CF\\u0338': 'NotLeftTriangleBar',\n  '\\u29D0': 'RightTriangleBar',\n  '\\u29D0\\u0338': 'NotRightTriangleBar',\n  '\\u29DC': 'iinfin',\n  '\\u29DD': 'infintie',\n  '\\u29DE': 'nvinfin',\n  '\\u29E3': 'eparsl',\n  '\\u29E4': 'smeparsl',\n  '\\u29E5': 'eqvparsl',\n  '\\u29EB': 'lozf',\n  '\\u29F4': 'RuleDelayed',\n  '\\u29F6': 'dsol',\n  '\\u2A00': 'xodot',\n  '\\u2A01': 'xoplus',\n  '\\u2A02': 'xotime',\n  '\\u2A04': 'xuplus',\n  '\\u2A06': 'xsqcup',\n  '\\u2A0D': 'fpartint',\n  '\\u2A10': 'cirfnint',\n  '\\u2A11': 'awint',\n  '\\u2A12': 'rppolint',\n  '\\u2A13': 'scpolint',\n  '\\u2A14': 'npolint',\n  '\\u2A15': 'pointint',\n  '\\u2A16': 'quatint',\n  '\\u2A17': 'intlarhk',\n  '\\u2A22': 'pluscir',\n  '\\u2A23': 'plusacir',\n  '\\u2A24': 'simplus',\n  '\\u2A25': 'plusdu',\n  '\\u2A26': 'plussim',\n  '\\u2A27': 'plustwo',\n  '\\u2A29': 'mcomma',\n  '\\u2A2A': 'minusdu',\n  '\\u2A2D': 'loplus',\n  '\\u2A2E': 'roplus',\n  '\\u2A2F': 'Cross',\n  '\\u2A30': 'timesd',\n  '\\u2A31': 'timesbar',\n  '\\u2A33': 'smashp',\n  '\\u2A34': 'lotimes',\n  '\\u2A35': 'rotimes',\n  '\\u2A36': 'otimesas',\n  '\\u2A37': 'Otimes',\n  '\\u2A38': 'odiv',\n  '\\u2A39': 'triplus',\n  '\\u2A3A': 'triminus',\n  '\\u2A3B': 'tritime',\n  '\\u2A3C': 'iprod',\n  '\\u2A3F': 'amalg',\n  '\\u2A40': 'capdot',\n  '\\u2A42': 'ncup',\n  '\\u2A43': 'ncap',\n  '\\u2A44': 'capand',\n  '\\u2A45': 'cupor',\n  '\\u2A46': 'cupcap',\n  '\\u2A47': 'capcup',\n  '\\u2A48': 'cupbrcap',\n  '\\u2A49': 'capbrcup',\n  '\\u2A4A': 'cupcup',\n  '\\u2A4B': 'capcap',\n  '\\u2A4C': 'ccups',\n  '\\u2A4D': 'ccaps',\n  '\\u2A50': 'ccupssm',\n  '\\u2A53': 'And',\n  '\\u2A54': 'Or',\n  '\\u2A55': 'andand',\n  '\\u2A56': 'oror',\n  '\\u2A57': 'orslope',\n  '\\u2A58': 'andslope',\n  '\\u2A5A': 'andv',\n  '\\u2A5B': 'orv',\n  '\\u2A5C': 'andd',\n  '\\u2A5D': 'ord',\n  '\\u2A5F': 'wedbar',\n  '\\u2A66': 'sdote',\n  '\\u2A6A': 'simdot',\n  '\\u2A6D': 'congdot',\n  '\\u2A6D\\u0338': 'ncongdot',\n  '\\u2A6E': 'easter',\n  '\\u2A6F': 'apacir',\n  '\\u2A70': 'apE',\n  '\\u2A70\\u0338': 'napE',\n  '\\u2A71': 'eplus',\n  '\\u2A72': 'pluse',\n  '\\u2A73': 'Esim',\n  '\\u2A77': 'eDDot',\n  '\\u2A78': 'equivDD',\n  '\\u2A79': 'ltcir',\n  '\\u2A7A': 'gtcir',\n  '\\u2A7B': 'ltquest',\n  '\\u2A7C': 'gtquest',\n  '\\u2A7D': 'les',\n  '\\u2A7D\\u0338': 'nles',\n  '\\u2A7E': 'ges',\n  '\\u2A7E\\u0338': 'nges',\n  '\\u2A7F': 'lesdot',\n  '\\u2A80': 'gesdot',\n  '\\u2A81': 'lesdoto',\n  '\\u2A82': 'gesdoto',\n  '\\u2A83': 'lesdotor',\n  '\\u2A84': 'gesdotol',\n  '\\u2A85': 'lap',\n  '\\u2A86': 'gap',\n  '\\u2A87': 'lne',\n  '\\u2A88': 'gne',\n  '\\u2A89': 'lnap',\n  '\\u2A8A': 'gnap',\n  '\\u2A8B': 'lEg',\n  '\\u2A8C': 'gEl',\n  '\\u2A8D': 'lsime',\n  '\\u2A8E': 'gsime',\n  '\\u2A8F': 'lsimg',\n  '\\u2A90': 'gsiml',\n  '\\u2A91': 'lgE',\n  '\\u2A92': 'glE',\n  '\\u2A93': 'lesges',\n  '\\u2A94': 'gesles',\n  '\\u2A95': 'els',\n  '\\u2A96': 'egs',\n  '\\u2A97': 'elsdot',\n  '\\u2A98': 'egsdot',\n  '\\u2A99': 'el',\n  '\\u2A9A': 'eg',\n  '\\u2A9D': 'siml',\n  '\\u2A9E': 'simg',\n  '\\u2A9F': 'simlE',\n  '\\u2AA0': 'simgE',\n  '\\u2AA1': 'LessLess',\n  '\\u2AA1\\u0338': 'NotNestedLessLess',\n  '\\u2AA2': 'GreaterGreater',\n  '\\u2AA2\\u0338': 'NotNestedGreaterGreater',\n  '\\u2AA4': 'glj',\n  '\\u2AA5': 'gla',\n  '\\u2AA6': 'ltcc',\n  '\\u2AA7': 'gtcc',\n  '\\u2AA8': 'lescc',\n  '\\u2AA9': 'gescc',\n  '\\u2AAA': 'smt',\n  '\\u2AAB': 'lat',\n  '\\u2AAC': 'smte',\n  '\\u2AAC\\uFE00': 'smtes',\n  '\\u2AAD': 'late',\n  '\\u2AAD\\uFE00': 'lates',\n  '\\u2AAE': 'bumpE',\n  '\\u2AAF': 'pre',\n  '\\u2AAF\\u0338': 'npre',\n  '\\u2AB0': 'sce',\n  '\\u2AB0\\u0338': 'nsce',\n  '\\u2AB3': 'prE',\n  '\\u2AB4': 'scE',\n  '\\u2AB5': 'prnE',\n  '\\u2AB6': 'scnE',\n  '\\u2AB7': 'prap',\n  '\\u2AB8': 'scap',\n  '\\u2AB9': 'prnap',\n  '\\u2ABA': 'scnap',\n  '\\u2ABB': 'Pr',\n  '\\u2ABC': 'Sc',\n  '\\u2ABD': 'subdot',\n  '\\u2ABE': 'supdot',\n  '\\u2ABF': 'subplus',\n  '\\u2AC0': 'supplus',\n  '\\u2AC1': 'submult',\n  '\\u2AC2': 'supmult',\n  '\\u2AC3': 'subedot',\n  '\\u2AC4': 'supedot',\n  '\\u2AC5': 'subE',\n  '\\u2AC5\\u0338': 'nsubE',\n  '\\u2AC6': 'supE',\n  '\\u2AC6\\u0338': 'nsupE',\n  '\\u2AC7': 'subsim',\n  '\\u2AC8': 'supsim',\n  '\\u2ACB\\uFE00': 'vsubnE',\n  '\\u2ACB': 'subnE',\n  '\\u2ACC\\uFE00': 'vsupnE',\n  '\\u2ACC': 'supnE',\n  '\\u2ACF': 'csub',\n  '\\u2AD0': 'csup',\n  '\\u2AD1': 'csube',\n  '\\u2AD2': 'csupe',\n  '\\u2AD3': 'subsup',\n  '\\u2AD4': 'supsub',\n  '\\u2AD5': 'subsub',\n  '\\u2AD6': 'supsup',\n  '\\u2AD7': 'suphsub',\n  '\\u2AD8': 'supdsub',\n  '\\u2AD9': 'forkv',\n  '\\u2ADA': 'topfork',\n  '\\u2ADB': 'mlcp',\n  '\\u2AE4': 'Dashv',\n  '\\u2AE6': 'Vdashl',\n  '\\u2AE7': 'Barv',\n  '\\u2AE8': 'vBar',\n  '\\u2AE9': 'vBarv',\n  '\\u2AEB': 'Vbar',\n  '\\u2AEC': 'Not',\n  '\\u2AED': 'bNot',\n  '\\u2AEE': 'rnmid',\n  '\\u2AEF': 'cirmid',\n  '\\u2AF0': 'midcir',\n  '\\u2AF1': 'topcir',\n  '\\u2AF2': 'nhpar',\n  '\\u2AF3': 'parsim',\n  '\\u2AFD': 'parsl',\n  '\\u2AFD\\u20E5': 'nparsl',\n  '\\u266D': 'flat',\n  '\\u266E': 'natur',\n  '\\u266F': 'sharp',\n  '\\xA4': 'curren',\n  '\\xA2': 'cent',\n  '$': 'dollar',\n  '\\xA3': 'pound',\n  '\\xA5': 'yen',\n  '\\u20AC': 'euro',\n  '\\xB9': 'sup1',\n  '\\xBD': 'half',\n  '\\u2153': 'frac13',\n  '\\xBC': 'frac14',\n  '\\u2155': 'frac15',\n  '\\u2159': 'frac16',\n  '\\u215B': 'frac18',\n  '\\xB2': 'sup2',\n  '\\u2154': 'frac23',\n  '\\u2156': 'frac25',\n  '\\xB3': 'sup3',\n  '\\xBE': 'frac34',\n  '\\u2157': 'frac35',\n  '\\u215C': 'frac38',\n  '\\u2158': 'frac45',\n  '\\u215A': 'frac56',\n  '\\u215D': 'frac58',\n  '\\u215E': 'frac78',\n  '\\uD835\\uDCB6': 'ascr',\n  '\\uD835\\uDD52': 'aopf',\n  '\\uD835\\uDD1E': 'afr',\n  '\\uD835\\uDD38': 'Aopf',\n  '\\uD835\\uDD04': 'Afr',\n  '\\uD835\\uDC9C': 'Ascr',\n  '\\xAA': 'ordf',\n  '\\xE1': 'aacute',\n  '\\xC1': 'Aacute',\n  '\\xE0': 'agrave',\n  '\\xC0': 'Agrave',\n  '\\u0103': 'abreve',\n  '\\u0102': 'Abreve',\n  '\\xE2': 'acirc',\n  '\\xC2': 'Acirc',\n  '\\xE5': 'aring',\n  '\\xC5': 'angst',\n  '\\xE4': 'auml',\n  '\\xC4': 'Auml',\n  '\\xE3': 'atilde',\n  '\\xC3': 'Atilde',\n  '\\u0105': 'aogon',\n  '\\u0104': 'Aogon',\n  '\\u0101': 'amacr',\n  '\\u0100': 'Amacr',\n  '\\xE6': 'aelig',\n  '\\xC6': 'AElig',\n  '\\uD835\\uDCB7': 'bscr',\n  '\\uD835\\uDD53': 'bopf',\n  '\\uD835\\uDD1F': 'bfr',\n  '\\uD835\\uDD39': 'Bopf',\n  '\\u212C': 'Bscr',\n  '\\uD835\\uDD05': 'Bfr',\n  '\\uD835\\uDD20': 'cfr',\n  '\\uD835\\uDCB8': 'cscr',\n  '\\uD835\\uDD54': 'copf',\n  '\\u212D': 'Cfr',\n  '\\uD835\\uDC9E': 'Cscr',\n  '\\u2102': 'Copf',\n  '\\u0107': 'cacute',\n  '\\u0106': 'Cacute',\n  '\\u0109': 'ccirc',\n  '\\u0108': 'Ccirc',\n  '\\u010D': 'ccaron',\n  '\\u010C': 'Ccaron',\n  '\\u010B': 'cdot',\n  '\\u010A': 'Cdot',\n  '\\xE7': 'ccedil',\n  '\\xC7': 'Ccedil',\n  '\\u2105': 'incare',\n  '\\uD835\\uDD21': 'dfr',\n  '\\u2146': 'dd',\n  '\\uD835\\uDD55': 'dopf',\n  '\\uD835\\uDCB9': 'dscr',\n  '\\uD835\\uDC9F': 'Dscr',\n  '\\uD835\\uDD07': 'Dfr',\n  '\\u2145': 'DD',\n  '\\uD835\\uDD3B': 'Dopf',\n  '\\u010F': 'dcaron',\n  '\\u010E': 'Dcaron',\n  '\\u0111': 'dstrok',\n  '\\u0110': 'Dstrok',\n  '\\xF0': 'eth',\n  '\\xD0': 'ETH',\n  '\\u2147': 'ee',\n  '\\u212F': 'escr',\n  '\\uD835\\uDD22': 'efr',\n  '\\uD835\\uDD56': 'eopf',\n  '\\u2130': 'Escr',\n  '\\uD835\\uDD08': 'Efr',\n  '\\uD835\\uDD3C': 'Eopf',\n  '\\xE9': 'eacute',\n  '\\xC9': 'Eacute',\n  '\\xE8': 'egrave',\n  '\\xC8': 'Egrave',\n  '\\xEA': 'ecirc',\n  '\\xCA': 'Ecirc',\n  '\\u011B': 'ecaron',\n  '\\u011A': 'Ecaron',\n  '\\xEB': 'euml',\n  '\\xCB': 'Euml',\n  '\\u0117': 'edot',\n  '\\u0116': 'Edot',\n  '\\u0119': 'eogon',\n  '\\u0118': 'Eogon',\n  '\\u0113': 'emacr',\n  '\\u0112': 'Emacr',\n  '\\uD835\\uDD23': 'ffr',\n  '\\uD835\\uDD57': 'fopf',\n  '\\uD835\\uDCBB': 'fscr',\n  '\\uD835\\uDD09': 'Ffr',\n  '\\uD835\\uDD3D': 'Fopf',\n  '\\u2131': 'Fscr',\n  '\\uFB00': 'fflig',\n  '\\uFB03': 'ffilig',\n  '\\uFB04': 'ffllig',\n  '\\uFB01': 'filig',\n  'fj': 'fjlig',\n  '\\uFB02': 'fllig',\n  '\\u0192': 'fnof',\n  '\\u210A': 'gscr',\n  '\\uD835\\uDD58': 'gopf',\n  '\\uD835\\uDD24': 'gfr',\n  '\\uD835\\uDCA2': 'Gscr',\n  '\\uD835\\uDD3E': 'Gopf',\n  '\\uD835\\uDD0A': 'Gfr',\n  '\\u01F5': 'gacute',\n  '\\u011F': 'gbreve',\n  '\\u011E': 'Gbreve',\n  '\\u011D': 'gcirc',\n  '\\u011C': 'Gcirc',\n  '\\u0121': 'gdot',\n  '\\u0120': 'Gdot',\n  '\\u0122': 'Gcedil',\n  '\\uD835\\uDD25': 'hfr',\n  '\\u210E': 'planckh',\n  '\\uD835\\uDCBD': 'hscr',\n  '\\uD835\\uDD59': 'hopf',\n  '\\u210B': 'Hscr',\n  '\\u210C': 'Hfr',\n  '\\u210D': 'Hopf',\n  '\\u0125': 'hcirc',\n  '\\u0124': 'Hcirc',\n  '\\u210F': 'hbar',\n  '\\u0127': 'hstrok',\n  '\\u0126': 'Hstrok',\n  '\\uD835\\uDD5A': 'iopf',\n  '\\uD835\\uDD26': 'ifr',\n  '\\uD835\\uDCBE': 'iscr',\n  '\\u2148': 'ii',\n  '\\uD835\\uDD40': 'Iopf',\n  '\\u2110': 'Iscr',\n  '\\u2111': 'Im',\n  '\\xED': 'iacute',\n  '\\xCD': 'Iacute',\n  '\\xEC': 'igrave',\n  '\\xCC': 'Igrave',\n  '\\xEE': 'icirc',\n  '\\xCE': 'Icirc',\n  '\\xEF': 'iuml',\n  '\\xCF': 'Iuml',\n  '\\u0129': 'itilde',\n  '\\u0128': 'Itilde',\n  '\\u0130': 'Idot',\n  '\\u012F': 'iogon',\n  '\\u012E': 'Iogon',\n  '\\u012B': 'imacr',\n  '\\u012A': 'Imacr',\n  '\\u0133': 'ijlig',\n  '\\u0132': 'IJlig',\n  '\\u0131': 'imath',\n  '\\uD835\\uDCBF': 'jscr',\n  '\\uD835\\uDD5B': 'jopf',\n  '\\uD835\\uDD27': 'jfr',\n  '\\uD835\\uDCA5': 'Jscr',\n  '\\uD835\\uDD0D': 'Jfr',\n  '\\uD835\\uDD41': 'Jopf',\n  '\\u0135': 'jcirc',\n  '\\u0134': 'Jcirc',\n  '\\u0237': 'jmath',\n  '\\uD835\\uDD5C': 'kopf',\n  '\\uD835\\uDCC0': 'kscr',\n  '\\uD835\\uDD28': 'kfr',\n  '\\uD835\\uDCA6': 'Kscr',\n  '\\uD835\\uDD42': 'Kopf',\n  '\\uD835\\uDD0E': 'Kfr',\n  '\\u0137': 'kcedil',\n  '\\u0136': 'Kcedil',\n  '\\uD835\\uDD29': 'lfr',\n  '\\uD835\\uDCC1': 'lscr',\n  '\\u2113': 'ell',\n  '\\uD835\\uDD5D': 'lopf',\n  '\\u2112': 'Lscr',\n  '\\uD835\\uDD0F': 'Lfr',\n  '\\uD835\\uDD43': 'Lopf',\n  '\\u013A': 'lacute',\n  '\\u0139': 'Lacute',\n  '\\u013E': 'lcaron',\n  '\\u013D': 'Lcaron',\n  '\\u013C': 'lcedil',\n  '\\u013B': 'Lcedil',\n  '\\u0142': 'lstrok',\n  '\\u0141': 'Lstrok',\n  '\\u0140': 'lmidot',\n  '\\u013F': 'Lmidot',\n  '\\uD835\\uDD2A': 'mfr',\n  '\\uD835\\uDD5E': 'mopf',\n  '\\uD835\\uDCC2': 'mscr',\n  '\\uD835\\uDD10': 'Mfr',\n  '\\uD835\\uDD44': 'Mopf',\n  '\\u2133': 'Mscr',\n  '\\uD835\\uDD2B': 'nfr',\n  '\\uD835\\uDD5F': 'nopf',\n  '\\uD835\\uDCC3': 'nscr',\n  '\\u2115': 'Nopf',\n  '\\uD835\\uDCA9': 'Nscr',\n  '\\uD835\\uDD11': 'Nfr',\n  '\\u0144': 'nacute',\n  '\\u0143': 'Nacute',\n  '\\u0148': 'ncaron',\n  '\\u0147': 'Ncaron',\n  '\\xF1': 'ntilde',\n  '\\xD1': 'Ntilde',\n  '\\u0146': 'ncedil',\n  '\\u0145': 'Ncedil',\n  '\\u2116': 'numero',\n  '\\u014B': 'eng',\n  '\\u014A': 'ENG',\n  '\\uD835\\uDD60': 'oopf',\n  '\\uD835\\uDD2C': 'ofr',\n  '\\u2134': 'oscr',\n  '\\uD835\\uDCAA': 'Oscr',\n  '\\uD835\\uDD12': 'Ofr',\n  '\\uD835\\uDD46': 'Oopf',\n  '\\xBA': 'ordm',\n  '\\xF3': 'oacute',\n  '\\xD3': 'Oacute',\n  '\\xF2': 'ograve',\n  '\\xD2': 'Ograve',\n  '\\xF4': 'ocirc',\n  '\\xD4': 'Ocirc',\n  '\\xF6': 'ouml',\n  '\\xD6': 'Ouml',\n  '\\u0151': 'odblac',\n  '\\u0150': 'Odblac',\n  '\\xF5': 'otilde',\n  '\\xD5': 'Otilde',\n  '\\xF8': 'oslash',\n  '\\xD8': 'Oslash',\n  '\\u014D': 'omacr',\n  '\\u014C': 'Omacr',\n  '\\u0153': 'oelig',\n  '\\u0152': 'OElig',\n  '\\uD835\\uDD2D': 'pfr',\n  '\\uD835\\uDCC5': 'pscr',\n  '\\uD835\\uDD61': 'popf',\n  '\\u2119': 'Popf',\n  '\\uD835\\uDD13': 'Pfr',\n  '\\uD835\\uDCAB': 'Pscr',\n  '\\uD835\\uDD62': 'qopf',\n  '\\uD835\\uDD2E': 'qfr',\n  '\\uD835\\uDCC6': 'qscr',\n  '\\uD835\\uDCAC': 'Qscr',\n  '\\uD835\\uDD14': 'Qfr',\n  '\\u211A': 'Qopf',\n  '\\u0138': 'kgreen',\n  '\\uD835\\uDD2F': 'rfr',\n  '\\uD835\\uDD63': 'ropf',\n  '\\uD835\\uDCC7': 'rscr',\n  '\\u211B': 'Rscr',\n  '\\u211C': 'Re',\n  '\\u211D': 'Ropf',\n  '\\u0155': 'racute',\n  '\\u0154': 'Racute',\n  '\\u0159': 'rcaron',\n  '\\u0158': 'Rcaron',\n  '\\u0157': 'rcedil',\n  '\\u0156': 'Rcedil',\n  '\\uD835\\uDD64': 'sopf',\n  '\\uD835\\uDCC8': 'sscr',\n  '\\uD835\\uDD30': 'sfr',\n  '\\uD835\\uDD4A': 'Sopf',\n  '\\uD835\\uDD16': 'Sfr',\n  '\\uD835\\uDCAE': 'Sscr',\n  '\\u24C8': 'oS',\n  '\\u015B': 'sacute',\n  '\\u015A': 'Sacute',\n  '\\u015D': 'scirc',\n  '\\u015C': 'Scirc',\n  '\\u0161': 'scaron',\n  '\\u0160': 'Scaron',\n  '\\u015F': 'scedil',\n  '\\u015E': 'Scedil',\n  '\\xDF': 'szlig',\n  '\\uD835\\uDD31': 'tfr',\n  '\\uD835\\uDCC9': 'tscr',\n  '\\uD835\\uDD65': 'topf',\n  '\\uD835\\uDCAF': 'Tscr',\n  '\\uD835\\uDD17': 'Tfr',\n  '\\uD835\\uDD4B': 'Topf',\n  '\\u0165': 'tcaron',\n  '\\u0164': 'Tcaron',\n  '\\u0163': 'tcedil',\n  '\\u0162': 'Tcedil',\n  '\\u2122': 'trade',\n  '\\u0167': 'tstrok',\n  '\\u0166': 'Tstrok',\n  '\\uD835\\uDCCA': 'uscr',\n  '\\uD835\\uDD66': 'uopf',\n  '\\uD835\\uDD32': 'ufr',\n  '\\uD835\\uDD4C': 'Uopf',\n  '\\uD835\\uDD18': 'Ufr',\n  '\\uD835\\uDCB0': 'Uscr',\n  '\\xFA': 'uacute',\n  '\\xDA': 'Uacute',\n  '\\xF9': 'ugrave',\n  '\\xD9': 'Ugrave',\n  '\\u016D': 'ubreve',\n  '\\u016C': 'Ubreve',\n  '\\xFB': 'ucirc',\n  '\\xDB': 'Ucirc',\n  '\\u016F': 'uring',\n  '\\u016E': 'Uring',\n  '\\xFC': 'uuml',\n  '\\xDC': 'Uuml',\n  '\\u0171': 'udblac',\n  '\\u0170': 'Udblac',\n  '\\u0169': 'utilde',\n  '\\u0168': 'Utilde',\n  '\\u0173': 'uogon',\n  '\\u0172': 'Uogon',\n  '\\u016B': 'umacr',\n  '\\u016A': 'Umacr',\n  '\\uD835\\uDD33': 'vfr',\n  '\\uD835\\uDD67': 'vopf',\n  '\\uD835\\uDCCB': 'vscr',\n  '\\uD835\\uDD19': 'Vfr',\n  '\\uD835\\uDD4D': 'Vopf',\n  '\\uD835\\uDCB1': 'Vscr',\n  '\\uD835\\uDD68': 'wopf',\n  '\\uD835\\uDCCC': 'wscr',\n  '\\uD835\\uDD34': 'wfr',\n  '\\uD835\\uDCB2': 'Wscr',\n  '\\uD835\\uDD4E': 'Wopf',\n  '\\uD835\\uDD1A': 'Wfr',\n  '\\u0175': 'wcirc',\n  '\\u0174': 'Wcirc',\n  '\\uD835\\uDD35': 'xfr',\n  '\\uD835\\uDCCD': 'xscr',\n  '\\uD835\\uDD69': 'xopf',\n  '\\uD835\\uDD4F': 'Xopf',\n  '\\uD835\\uDD1B': 'Xfr',\n  '\\uD835\\uDCB3': 'Xscr',\n  '\\uD835\\uDD36': 'yfr',\n  '\\uD835\\uDCCE': 'yscr',\n  '\\uD835\\uDD6A': 'yopf',\n  '\\uD835\\uDCB4': 'Yscr',\n  '\\uD835\\uDD1C': 'Yfr',\n  '\\uD835\\uDD50': 'Yopf',\n  '\\xFD': 'yacute',\n  '\\xDD': 'Yacute',\n  '\\u0177': 'ycirc',\n  '\\u0176': 'Ycirc',\n  '\\xFF': 'yuml',\n  '\\u0178': 'Yuml',\n  '\\uD835\\uDCCF': 'zscr',\n  '\\uD835\\uDD37': 'zfr',\n  '\\uD835\\uDD6B': 'zopf',\n  '\\u2128': 'Zfr',\n  '\\u2124': 'Zopf',\n  '\\uD835\\uDCB5': 'Zscr',\n  '\\u017A': 'zacute',\n  '\\u0179': 'Zacute',\n  '\\u017E': 'zcaron',\n  '\\u017D': 'Zcaron',\n  '\\u017C': 'zdot',\n  '\\u017B': 'Zdot',\n  '\\u01B5': 'imped',\n  '\\xFE': 'thorn',\n  '\\xDE': 'THORN',\n  '\\u0149': 'napos',\n  '\\u03B1': 'alpha',\n  '\\u0391': 'Alpha',\n  '\\u03B2': 'beta',\n  '\\u0392': 'Beta',\n  '\\u03B3': 'gamma',\n  '\\u0393': 'Gamma',\n  '\\u03B4': 'delta',\n  '\\u0394': 'Delta',\n  '\\u03B5': 'epsi',\n  '\\u03F5': 'epsiv',\n  '\\u0395': 'Epsilon',\n  '\\u03DD': 'gammad',\n  '\\u03DC': 'Gammad',\n  '\\u03B6': 'zeta',\n  '\\u0396': 'Zeta',\n  '\\u03B7': 'eta',\n  '\\u0397': 'Eta',\n  '\\u03B8': 'theta',\n  '\\u03D1': 'thetav',\n  '\\u0398': 'Theta',\n  '\\u03B9': 'iota',\n  '\\u0399': 'Iota',\n  '\\u03BA': 'kappa',\n  '\\u03F0': 'kappav',\n  '\\u039A': 'Kappa',\n  '\\u03BB': 'lambda',\n  '\\u039B': 'Lambda',\n  '\\u03BC': 'mu',\n  '\\xB5': 'micro',\n  '\\u039C': 'Mu',\n  '\\u03BD': 'nu',\n  '\\u039D': 'Nu',\n  '\\u03BE': 'xi',\n  '\\u039E': 'Xi',\n  '\\u03BF': 'omicron',\n  '\\u039F': 'Omicron',\n  '\\u03C0': 'pi',\n  '\\u03D6': 'piv',\n  '\\u03A0': 'Pi',\n  '\\u03C1': 'rho',\n  '\\u03F1': 'rhov',\n  '\\u03A1': 'Rho',\n  '\\u03C3': 'sigma',\n  '\\u03A3': 'Sigma',\n  '\\u03C2': 'sigmaf',\n  '\\u03C4': 'tau',\n  '\\u03A4': 'Tau',\n  '\\u03C5': 'upsi',\n  '\\u03A5': 'Upsilon',\n  '\\u03D2': 'Upsi',\n  '\\u03C6': 'phi',\n  '\\u03D5': 'phiv',\n  '\\u03A6': 'Phi',\n  '\\u03C7': 'chi',\n  '\\u03A7': 'Chi',\n  '\\u03C8': 'psi',\n  '\\u03A8': 'Psi',\n  '\\u03C9': 'omega',\n  '\\u03A9': 'ohm',\n  '\\u0430': 'acy',\n  '\\u0410': 'Acy',\n  '\\u0431': 'bcy',\n  '\\u0411': 'Bcy',\n  '\\u0432': 'vcy',\n  '\\u0412': 'Vcy',\n  '\\u0433': 'gcy',\n  '\\u0413': 'Gcy',\n  '\\u0453': 'gjcy',\n  '\\u0403': 'GJcy',\n  '\\u0434': 'dcy',\n  '\\u0414': 'Dcy',\n  '\\u0452': 'djcy',\n  '\\u0402': 'DJcy',\n  '\\u0435': 'iecy',\n  '\\u0415': 'IEcy',\n  '\\u0451': 'iocy',\n  '\\u0401': 'IOcy',\n  '\\u0454': 'jukcy',\n  '\\u0404': 'Jukcy',\n  '\\u0436': 'zhcy',\n  '\\u0416': 'ZHcy',\n  '\\u0437': 'zcy',\n  '\\u0417': 'Zcy',\n  '\\u0455': 'dscy',\n  '\\u0405': 'DScy',\n  '\\u0438': 'icy',\n  '\\u0418': 'Icy',\n  '\\u0456': 'iukcy',\n  '\\u0406': 'Iukcy',\n  '\\u0457': 'yicy',\n  '\\u0407': 'YIcy',\n  '\\u0439': 'jcy',\n  '\\u0419': 'Jcy',\n  '\\u0458': 'jsercy',\n  '\\u0408': 'Jsercy',\n  '\\u043A': 'kcy',\n  '\\u041A': 'Kcy',\n  '\\u045C': 'kjcy',\n  '\\u040C': 'KJcy',\n  '\\u043B': 'lcy',\n  '\\u041B': 'Lcy',\n  '\\u0459': 'ljcy',\n  '\\u0409': 'LJcy',\n  '\\u043C': 'mcy',\n  '\\u041C': 'Mcy',\n  '\\u043D': 'ncy',\n  '\\u041D': 'Ncy',\n  '\\u045A': 'njcy',\n  '\\u040A': 'NJcy',\n  '\\u043E': 'ocy',\n  '\\u041E': 'Ocy',\n  '\\u043F': 'pcy',\n  '\\u041F': 'Pcy',\n  '\\u0440': 'rcy',\n  '\\u0420': 'Rcy',\n  '\\u0441': 'scy',\n  '\\u0421': 'Scy',\n  '\\u0442': 'tcy',\n  '\\u0422': 'Tcy',\n  '\\u045B': 'tshcy',\n  '\\u040B': 'TSHcy',\n  '\\u0443': 'ucy',\n  '\\u0423': 'Ucy',\n  '\\u045E': 'ubrcy',\n  '\\u040E': 'Ubrcy',\n  '\\u0444': 'fcy',\n  '\\u0424': 'Fcy',\n  '\\u0445': 'khcy',\n  '\\u0425': 'KHcy',\n  '\\u0446': 'tscy',\n  '\\u0426': 'TScy',\n  '\\u0447': 'chcy',\n  '\\u0427': 'CHcy',\n  '\\u045F': 'dzcy',\n  '\\u040F': 'DZcy',\n  '\\u0448': 'shcy',\n  '\\u0428': 'SHcy',\n  '\\u0449': 'shchcy',\n  '\\u0429': 'SHCHcy',\n  '\\u044A': 'hardcy',\n  '\\u042A': 'HARDcy',\n  '\\u044B': 'ycy',\n  '\\u042B': 'Ycy',\n  '\\u044C': 'softcy',\n  '\\u042C': 'SOFTcy',\n  '\\u044D': 'ecy',\n  '\\u042D': 'Ecy',\n  '\\u044E': 'yucy',\n  '\\u042E': 'YUcy',\n  '\\u044F': 'yacy',\n  '\\u042F': 'YAcy',\n  '\\u2135': 'aleph',\n  '\\u2136': 'beth',\n  '\\u2137': 'gimel',\n  '\\u2138': 'daleth',\n}\n\nconst regexEscape = /[\"&'<>`]/g\nconst escapeMap = {\n  '\"': '&quot;',\n  '&': '&amp;',\n  '\\'': '&#x27;',\n  '<': '&lt;',\n  // See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n  // following is not strictly necessary unless it’s part of a tag or an\n  // unquoted attribute value. We’re only escaping it to support those\n  // situations, and for XML support.\n  '>': '&gt;',\n  // In Internet Explorer ≤ 8, the backtick character can be used\n  // to break out of (un)quoted attribute values or HTML comments.\n  // See http://html5sec.org/#102, http://html5sec.org/#108, and\n  // http://html5sec.org/#133.\n  '`': '&#x60;',\n}\n\nconst regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/\n\nconst regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/\nconst regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g\nconst decodeMap = {\n  aacute: '\\xE1',\n  Aacute: '\\xC1',\n  abreve: '\\u0103',\n  Abreve: '\\u0102',\n  ac: '\\u223E',\n  acd: '\\u223F',\n  acE: '\\u223E\\u0333',\n  acirc: '\\xE2',\n  Acirc: '\\xC2',\n  acute: '\\xB4',\n  acy: '\\u0430',\n  Acy: '\\u0410',\n  aelig: '\\xE6',\n  AElig: '\\xC6',\n  af: '\\u2061',\n  afr: '\\uD835\\uDD1E',\n  Afr: '\\uD835\\uDD04',\n  agrave: '\\xE0',\n  Agrave: '\\xC0',\n  alefsym: '\\u2135',\n  aleph: '\\u2135',\n  alpha: '\\u03B1',\n  Alpha: '\\u0391',\n  amacr: '\\u0101',\n  Amacr: '\\u0100',\n  amalg: '\\u2A3F',\n  amp: '&',\n  AMP: '&',\n  and: '\\u2227',\n  And: '\\u2A53',\n  andand: '\\u2A55',\n  andd: '\\u2A5C',\n  andslope: '\\u2A58',\n  andv: '\\u2A5A',\n  ang: '\\u2220',\n  ange: '\\u29A4',\n  angle: '\\u2220',\n  angmsd: '\\u2221',\n  angmsdaa: '\\u29A8',\n  angmsdab: '\\u29A9',\n  angmsdac: '\\u29AA',\n  angmsdad: '\\u29AB',\n  angmsdae: '\\u29AC',\n  angmsdaf: '\\u29AD',\n  angmsdag: '\\u29AE',\n  angmsdah: '\\u29AF',\n  angrt: '\\u221F',\n  angrtvb: '\\u22BE',\n  angrtvbd: '\\u299D',\n  angsph: '\\u2222',\n  angst: '\\xC5',\n  angzarr: '\\u237C',\n  aogon: '\\u0105',\n  Aogon: '\\u0104',\n  aopf: '\\uD835\\uDD52',\n  Aopf: '\\uD835\\uDD38',\n  ap: '\\u2248',\n  apacir: '\\u2A6F',\n  ape: '\\u224A',\n  apE: '\\u2A70',\n  apid: '\\u224B',\n  apos: '\\'',\n  ApplyFunction: '\\u2061',\n  approx: '\\u2248',\n  approxeq: '\\u224A',\n  aring: '\\xE5',\n  Aring: '\\xC5',\n  ascr: '\\uD835\\uDCB6',\n  Ascr: '\\uD835\\uDC9C',\n  Assign: '\\u2254',\n  ast: '*',\n  asymp: '\\u2248',\n  asympeq: '\\u224D',\n  atilde: '\\xE3',\n  Atilde: '\\xC3',\n  auml: '\\xE4',\n  Auml: '\\xC4',\n  awconint: '\\u2233',\n  awint: '\\u2A11',\n  backcong: '\\u224C',\n  backepsilon: '\\u03F6',\n  backprime: '\\u2035',\n  backsim: '\\u223D',\n  backsimeq: '\\u22CD',\n  Backslash: '\\u2216',\n  Barv: '\\u2AE7',\n  barvee: '\\u22BD',\n  barwed: '\\u2305',\n  Barwed: '\\u2306',\n  barwedge: '\\u2305',\n  bbrk: '\\u23B5',\n  bbrktbrk: '\\u23B6',\n  bcong: '\\u224C',\n  bcy: '\\u0431',\n  Bcy: '\\u0411',\n  bdquo: '\\u201E',\n  becaus: '\\u2235',\n  because: '\\u2235',\n  Because: '\\u2235',\n  bemptyv: '\\u29B0',\n  bepsi: '\\u03F6',\n  bernou: '\\u212C',\n  Bernoullis: '\\u212C',\n  beta: '\\u03B2',\n  Beta: '\\u0392',\n  beth: '\\u2136',\n  between: '\\u226C',\n  bfr: '\\uD835\\uDD1F',\n  Bfr: '\\uD835\\uDD05',\n  bigcap: '\\u22C2',\n  bigcirc: '\\u25EF',\n  bigcup: '\\u22C3',\n  bigodot: '\\u2A00',\n  bigoplus: '\\u2A01',\n  bigotimes: '\\u2A02',\n  bigsqcup: '\\u2A06',\n  bigstar: '\\u2605',\n  bigtriangledown: '\\u25BD',\n  bigtriangleup: '\\u25B3',\n  biguplus: '\\u2A04',\n  bigvee: '\\u22C1',\n  bigwedge: '\\u22C0',\n  bkarow: '\\u290D',\n  blacklozenge: '\\u29EB',\n  blacksquare: '\\u25AA',\n  blacktriangle: '\\u25B4',\n  blacktriangledown: '\\u25BE',\n  blacktriangleleft: '\\u25C2',\n  blacktriangleright: '\\u25B8',\n  blank: '\\u2423',\n  blk12: '\\u2592',\n  blk14: '\\u2591',\n  blk34: '\\u2593',\n  block: '\\u2588',\n  bne: '=\\u20E5',\n  bnequiv: '\\u2261\\u20E5',\n  bnot: '\\u2310',\n  bNot: '\\u2AED',\n  bopf: '\\uD835\\uDD53',\n  Bopf: '\\uD835\\uDD39',\n  bot: '\\u22A5',\n  bottom: '\\u22A5',\n  bowtie: '\\u22C8',\n  boxbox: '\\u29C9',\n  boxdl: '\\u2510',\n  boxdL: '\\u2555',\n  boxDl: '\\u2556',\n  boxDL: '\\u2557',\n  boxdr: '\\u250C',\n  boxdR: '\\u2552',\n  boxDr: '\\u2553',\n  boxDR: '\\u2554',\n  boxh: '\\u2500',\n  boxH: '\\u2550',\n  boxhd: '\\u252C',\n  boxhD: '\\u2565',\n  boxHd: '\\u2564',\n  boxHD: '\\u2566',\n  boxhu: '\\u2534',\n  boxhU: '\\u2568',\n  boxHu: '\\u2567',\n  boxHU: '\\u2569',\n  boxminus: '\\u229F',\n  boxplus: '\\u229E',\n  boxtimes: '\\u22A0',\n  boxul: '\\u2518',\n  boxuL: '\\u255B',\n  boxUl: '\\u255C',\n  boxUL: '\\u255D',\n  boxur: '\\u2514',\n  boxuR: '\\u2558',\n  boxUr: '\\u2559',\n  boxUR: '\\u255A',\n  boxv: '\\u2502',\n  boxV: '\\u2551',\n  boxvh: '\\u253C',\n  boxvH: '\\u256A',\n  boxVh: '\\u256B',\n  boxVH: '\\u256C',\n  boxvl: '\\u2524',\n  boxvL: '\\u2561',\n  boxVl: '\\u2562',\n  boxVL: '\\u2563',\n  boxvr: '\\u251C',\n  boxvR: '\\u255E',\n  boxVr: '\\u255F',\n  boxVR: '\\u2560',\n  bprime: '\\u2035',\n  breve: '\\u02D8',\n  Breve: '\\u02D8',\n  brvbar: '\\xA6',\n  bscr: '\\uD835\\uDCB7',\n  Bscr: '\\u212C',\n  bsemi: '\\u204F',\n  bsim: '\\u223D',\n  bsime: '\\u22CD',\n  bsol: '\\\\',\n  bsolb: '\\u29C5',\n  bsolhsub: '\\u27C8',\n  bull: '\\u2022',\n  bullet: '\\u2022',\n  bump: '\\u224E',\n  bumpe: '\\u224F',\n  bumpE: '\\u2AAE',\n  bumpeq: '\\u224F',\n  Bumpeq: '\\u224E',\n  cacute: '\\u0107',\n  Cacute: '\\u0106',\n  cap: '\\u2229',\n  Cap: '\\u22D2',\n  capand: '\\u2A44',\n  capbrcup: '\\u2A49',\n  capcap: '\\u2A4B',\n  capcup: '\\u2A47',\n  capdot: '\\u2A40',\n  CapitalDifferentialD: '\\u2145',\n  caps: '\\u2229\\uFE00',\n  caret: '\\u2041',\n  caron: '\\u02C7',\n  Cayleys: '\\u212D',\n  ccaps: '\\u2A4D',\n  ccaron: '\\u010D',\n  Ccaron: '\\u010C',\n  ccedil: '\\xE7',\n  Ccedil: '\\xC7',\n  ccirc: '\\u0109',\n  Ccirc: '\\u0108',\n  Cconint: '\\u2230',\n  ccups: '\\u2A4C',\n  ccupssm: '\\u2A50',\n  cdot: '\\u010B',\n  Cdot: '\\u010A',\n  cedil: '\\xB8',\n  Cedilla: '\\xB8',\n  cemptyv: '\\u29B2',\n  cent: '\\xA2',\n  centerdot: '\\xB7',\n  CenterDot: '\\xB7',\n  cfr: '\\uD835\\uDD20',\n  Cfr: '\\u212D',\n  chcy: '\\u0447',\n  CHcy: '\\u0427',\n  check: '\\u2713',\n  checkmark: '\\u2713',\n  chi: '\\u03C7',\n  Chi: '\\u03A7',\n  cir: '\\u25CB',\n  circ: '\\u02C6',\n  circeq: '\\u2257',\n  circlearrowleft: '\\u21BA',\n  circlearrowright: '\\u21BB',\n  circledast: '\\u229B',\n  circledcirc: '\\u229A',\n  circleddash: '\\u229D',\n  CircleDot: '\\u2299',\n  circledR: '\\xAE',\n  circledS: '\\u24C8',\n  CircleMinus: '\\u2296',\n  CirclePlus: '\\u2295',\n  CircleTimes: '\\u2297',\n  cire: '\\u2257',\n  cirE: '\\u29C3',\n  cirfnint: '\\u2A10',\n  cirmid: '\\u2AEF',\n  cirscir: '\\u29C2',\n  ClockwiseContourIntegral: '\\u2232',\n  CloseCurlyDoubleQuote: '\\u201D',\n  CloseCurlyQuote: '\\u2019',\n  clubs: '\\u2663',\n  clubsuit: '\\u2663',\n  colon: ':',\n  Colon: '\\u2237',\n  colone: '\\u2254',\n  Colone: '\\u2A74',\n  coloneq: '\\u2254',\n  comma: ',',\n  commat: '@',\n  comp: '\\u2201',\n  compfn: '\\u2218',\n  complement: '\\u2201',\n  complexes: '\\u2102',\n  cong: '\\u2245',\n  congdot: '\\u2A6D',\n  Congruent: '\\u2261',\n  conint: '\\u222E',\n  Conint: '\\u222F',\n  ContourIntegral: '\\u222E',\n  copf: '\\uD835\\uDD54',\n  Copf: '\\u2102',\n  coprod: '\\u2210',\n  Coproduct: '\\u2210',\n  copy: '\\xA9',\n  COPY: '\\xA9',\n  copysr: '\\u2117',\n  CounterClockwiseContourIntegral: '\\u2233',\n  crarr: '\\u21B5',\n  cross: '\\u2717',\n  Cross: '\\u2A2F',\n  cscr: '\\uD835\\uDCB8',\n  Cscr: '\\uD835\\uDC9E',\n  csub: '\\u2ACF',\n  csube: '\\u2AD1',\n  csup: '\\u2AD0',\n  csupe: '\\u2AD2',\n  ctdot: '\\u22EF',\n  cudarrl: '\\u2938',\n  cudarrr: '\\u2935',\n  cuepr: '\\u22DE',\n  cuesc: '\\u22DF',\n  cularr: '\\u21B6',\n  cularrp: '\\u293D',\n  cup: '\\u222A',\n  Cup: '\\u22D3',\n  cupbrcap: '\\u2A48',\n  cupcap: '\\u2A46',\n  CupCap: '\\u224D',\n  cupcup: '\\u2A4A',\n  cupdot: '\\u228D',\n  cupor: '\\u2A45',\n  cups: '\\u222A\\uFE00',\n  curarr: '\\u21B7',\n  curarrm: '\\u293C',\n  curlyeqprec: '\\u22DE',\n  curlyeqsucc: '\\u22DF',\n  curlyvee: '\\u22CE',\n  curlywedge: '\\u22CF',\n  curren: '\\xA4',\n  curvearrowleft: '\\u21B6',\n  curvearrowright: '\\u21B7',\n  cuvee: '\\u22CE',\n  cuwed: '\\u22CF',\n  cwconint: '\\u2232',\n  cwint: '\\u2231',\n  cylcty: '\\u232D',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  daleth: '\\u2138',\n  darr: '\\u2193',\n  dArr: '\\u21D3',\n  Darr: '\\u21A1',\n  dash: '\\u2010',\n  dashv: '\\u22A3',\n  Dashv: '\\u2AE4',\n  dbkarow: '\\u290F',\n  dblac: '\\u02DD',\n  dcaron: '\\u010F',\n  Dcaron: '\\u010E',\n  dcy: '\\u0434',\n  Dcy: '\\u0414',\n  dd: '\\u2146',\n  DD: '\\u2145',\n  ddagger: '\\u2021',\n  ddarr: '\\u21CA',\n  DDotrahd: '\\u2911',\n  ddotseq: '\\u2A77',\n  deg: '\\xB0',\n  Del: '\\u2207',\n  delta: '\\u03B4',\n  Delta: '\\u0394',\n  demptyv: '\\u29B1',\n  dfisht: '\\u297F',\n  dfr: '\\uD835\\uDD21',\n  Dfr: '\\uD835\\uDD07',\n  dHar: '\\u2965',\n  dharl: '\\u21C3',\n  dharr: '\\u21C2',\n  DiacriticalAcute: '\\xB4',\n  DiacriticalDot: '\\u02D9',\n  DiacriticalDoubleAcute: '\\u02DD',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '\\u02DC',\n  diam: '\\u22C4',\n  diamond: '\\u22C4',\n  Diamond: '\\u22C4',\n  diamondsuit: '\\u2666',\n  diams: '\\u2666',\n  die: '\\xA8',\n  DifferentialD: '\\u2146',\n  digamma: '\\u03DD',\n  disin: '\\u22F2',\n  div: '\\xF7',\n  divide: '\\xF7',\n  divideontimes: '\\u22C7',\n  divonx: '\\u22C7',\n  djcy: '\\u0452',\n  DJcy: '\\u0402',\n  dlcorn: '\\u231E',\n  dlcrop: '\\u230D',\n  dollar: '$',\n  dopf: '\\uD835\\uDD55',\n  Dopf: '\\uD835\\uDD3B',\n  dot: '\\u02D9',\n  Dot: '\\xA8',\n  DotDot: '\\u20DC',\n  doteq: '\\u2250',\n  doteqdot: '\\u2251',\n  DotEqual: '\\u2250',\n  dotminus: '\\u2238',\n  dotplus: '\\u2214',\n  dotsquare: '\\u22A1',\n  doublebarwedge: '\\u2306',\n  DoubleContourIntegral: '\\u222F',\n  DoubleDot: '\\xA8',\n  DoubleDownArrow: '\\u21D3',\n  DoubleLeftArrow: '\\u21D0',\n  DoubleLeftRightArrow: '\\u21D4',\n  DoubleLeftTee: '\\u2AE4',\n  DoubleLongLeftArrow: '\\u27F8',\n  DoubleLongLeftRightArrow: '\\u27FA',\n  DoubleLongRightArrow: '\\u27F9',\n  DoubleRightArrow: '\\u21D2',\n  DoubleRightTee: '\\u22A8',\n  DoubleUpArrow: '\\u21D1',\n  DoubleUpDownArrow: '\\u21D5',\n  DoubleVerticalBar: '\\u2225',\n  downarrow: '\\u2193',\n  Downarrow: '\\u21D3',\n  DownArrow: '\\u2193',\n  DownArrowBar: '\\u2913',\n  DownArrowUpArrow: '\\u21F5',\n  DownBreve: '\\u0311',\n  downdownarrows: '\\u21CA',\n  downharpoonleft: '\\u21C3',\n  downharpoonright: '\\u21C2',\n  DownLeftRightVector: '\\u2950',\n  DownLeftTeeVector: '\\u295E',\n  DownLeftVector: '\\u21BD',\n  DownLeftVectorBar: '\\u2956',\n  DownRightTeeVector: '\\u295F',\n  DownRightVector: '\\u21C1',\n  DownRightVectorBar: '\\u2957',\n  DownTee: '\\u22A4',\n  DownTeeArrow: '\\u21A7',\n  drbkarow: '\\u2910',\n  drcorn: '\\u231F',\n  drcrop: '\\u230C',\n  dscr: '\\uD835\\uDCB9',\n  Dscr: '\\uD835\\uDC9F',\n  dscy: '\\u0455',\n  DScy: '\\u0405',\n  dsol: '\\u29F6',\n  dstrok: '\\u0111',\n  Dstrok: '\\u0110',\n  dtdot: '\\u22F1',\n  dtri: '\\u25BF',\n  dtrif: '\\u25BE',\n  duarr: '\\u21F5',\n  duhar: '\\u296F',\n  dwangle: '\\u29A6',\n  dzcy: '\\u045F',\n  DZcy: '\\u040F',\n  dzigrarr: '\\u27FF',\n  eacute: '\\xE9',\n  Eacute: '\\xC9',\n  easter: '\\u2A6E',\n  ecaron: '\\u011B',\n  Ecaron: '\\u011A',\n  ecir: '\\u2256',\n  ecirc: '\\xEA',\n  Ecirc: '\\xCA',\n  ecolon: '\\u2255',\n  ecy: '\\u044D',\n  Ecy: '\\u042D',\n  eDDot: '\\u2A77',\n  edot: '\\u0117',\n  eDot: '\\u2251',\n  Edot: '\\u0116',\n  ee: '\\u2147',\n  efDot: '\\u2252',\n  efr: '\\uD835\\uDD22',\n  Efr: '\\uD835\\uDD08',\n  eg: '\\u2A9A',\n  egrave: '\\xE8',\n  Egrave: '\\xC8',\n  egs: '\\u2A96',\n  egsdot: '\\u2A98',\n  el: '\\u2A99',\n  Element: '\\u2208',\n  elinters: '\\u23E7',\n  ell: '\\u2113',\n  els: '\\u2A95',\n  elsdot: '\\u2A97',\n  emacr: '\\u0113',\n  Emacr: '\\u0112',\n  empty: '\\u2205',\n  emptyset: '\\u2205',\n  EmptySmallSquare: '\\u25FB',\n  emptyv: '\\u2205',\n  EmptyVerySmallSquare: '\\u25AB',\n  emsp: '\\u2003',\n  emsp13: '\\u2004',\n  emsp14: '\\u2005',\n  eng: '\\u014B',\n  ENG: '\\u014A',\n  ensp: '\\u2002',\n  eogon: '\\u0119',\n  Eogon: '\\u0118',\n  eopf: '\\uD835\\uDD56',\n  Eopf: '\\uD835\\uDD3C',\n  epar: '\\u22D5',\n  eparsl: '\\u29E3',\n  eplus: '\\u2A71',\n  epsi: '\\u03B5',\n  epsilon: '\\u03B5',\n  Epsilon: '\\u0395',\n  epsiv: '\\u03F5',\n  eqcirc: '\\u2256',\n  eqcolon: '\\u2255',\n  eqsim: '\\u2242',\n  eqslantgtr: '\\u2A96',\n  eqslantless: '\\u2A95',\n  Equal: '\\u2A75',\n  equals: '=',\n  EqualTilde: '\\u2242',\n  equest: '\\u225F',\n  Equilibrium: '\\u21CC',\n  equiv: '\\u2261',\n  equivDD: '\\u2A78',\n  eqvparsl: '\\u29E5',\n  erarr: '\\u2971',\n  erDot: '\\u2253',\n  escr: '\\u212F',\n  Escr: '\\u2130',\n  esdot: '\\u2250',\n  esim: '\\u2242',\n  Esim: '\\u2A73',\n  eta: '\\u03B7',\n  Eta: '\\u0397',\n  eth: '\\xF0',\n  ETH: '\\xD0',\n  euml: '\\xEB',\n  Euml: '\\xCB',\n  euro: '\\u20AC',\n  excl: '!',\n  exist: '\\u2203',\n  Exists: '\\u2203',\n  expectation: '\\u2130',\n  exponentiale: '\\u2147',\n  ExponentialE: '\\u2147',\n  fallingdotseq: '\\u2252',\n  fcy: '\\u0444',\n  Fcy: '\\u0424',\n  female: '\\u2640',\n  ffilig: '\\uFB03',\n  fflig: '\\uFB00',\n  ffllig: '\\uFB04',\n  ffr: '\\uD835\\uDD23',\n  Ffr: '\\uD835\\uDD09',\n  filig: '\\uFB01',\n  FilledSmallSquare: '\\u25FC',\n  FilledVerySmallSquare: '\\u25AA',\n  fjlig: 'fj',\n  flat: '\\u266D',\n  fllig: '\\uFB02',\n  fltns: '\\u25B1',\n  fnof: '\\u0192',\n  fopf: '\\uD835\\uDD57',\n  Fopf: '\\uD835\\uDD3D',\n  forall: '\\u2200',\n  ForAll: '\\u2200',\n  fork: '\\u22D4',\n  forkv: '\\u2AD9',\n  Fouriertrf: '\\u2131',\n  fpartint: '\\u2A0D',\n  frac12: '\\xBD',\n  frac13: '\\u2153',\n  frac14: '\\xBC',\n  frac15: '\\u2155',\n  frac16: '\\u2159',\n  frac18: '\\u215B',\n  frac23: '\\u2154',\n  frac25: '\\u2156',\n  frac34: '\\xBE',\n  frac35: '\\u2157',\n  frac38: '\\u215C',\n  frac45: '\\u2158',\n  frac56: '\\u215A',\n  frac58: '\\u215D',\n  frac78: '\\u215E',\n  frasl: '\\u2044',\n  frown: '\\u2322',\n  fscr: '\\uD835\\uDCBB',\n  Fscr: '\\u2131',\n  gacute: '\\u01F5',\n  gamma: '\\u03B3',\n  Gamma: '\\u0393',\n  gammad: '\\u03DD',\n  Gammad: '\\u03DC',\n  gap: '\\u2A86',\n  gbreve: '\\u011F',\n  Gbreve: '\\u011E',\n  Gcedil: '\\u0122',\n  gcirc: '\\u011D',\n  Gcirc: '\\u011C',\n  gcy: '\\u0433',\n  Gcy: '\\u0413',\n  gdot: '\\u0121',\n  Gdot: '\\u0120',\n  ge: '\\u2265',\n  gE: '\\u2267',\n  gel: '\\u22DB',\n  gEl: '\\u2A8C',\n  geq: '\\u2265',\n  geqq: '\\u2267',\n  geqslant: '\\u2A7E',\n  ges: '\\u2A7E',\n  gescc: '\\u2AA9',\n  gesdot: '\\u2A80',\n  gesdoto: '\\u2A82',\n  gesdotol: '\\u2A84',\n  gesl: '\\u22DB\\uFE00',\n  gesles: '\\u2A94',\n  gfr: '\\uD835\\uDD24',\n  Gfr: '\\uD835\\uDD0A',\n  gg: '\\u226B',\n  Gg: '\\u22D9',\n  ggg: '\\u22D9',\n  gimel: '\\u2137',\n  gjcy: '\\u0453',\n  GJcy: '\\u0403',\n  gl: '\\u2277',\n  gla: '\\u2AA5',\n  glE: '\\u2A92',\n  glj: '\\u2AA4',\n  gnap: '\\u2A8A',\n  gnapprox: '\\u2A8A',\n  gne: '\\u2A88',\n  gnE: '\\u2269',\n  gneq: '\\u2A88',\n  gneqq: '\\u2269',\n  gnsim: '\\u22E7',\n  gopf: '\\uD835\\uDD58',\n  Gopf: '\\uD835\\uDD3E',\n  grave: '`',\n  GreaterEqual: '\\u2265',\n  GreaterEqualLess: '\\u22DB',\n  GreaterFullEqual: '\\u2267',\n  GreaterGreater: '\\u2AA2',\n  GreaterLess: '\\u2277',\n  GreaterSlantEqual: '\\u2A7E',\n  GreaterTilde: '\\u2273',\n  gscr: '\\u210A',\n  Gscr: '\\uD835\\uDCA2',\n  gsim: '\\u2273',\n  gsime: '\\u2A8E',\n  gsiml: '\\u2A90',\n  gt: '>',\n  Gt: '\\u226B',\n  GT: '>',\n  gtcc: '\\u2AA7',\n  gtcir: '\\u2A7A',\n  gtdot: '\\u22D7',\n  gtlPar: '\\u2995',\n  gtquest: '\\u2A7C',\n  gtrapprox: '\\u2A86',\n  gtrarr: '\\u2978',\n  gtrdot: '\\u22D7',\n  gtreqless: '\\u22DB',\n  gtreqqless: '\\u2A8C',\n  gtrless: '\\u2277',\n  gtrsim: '\\u2273',\n  gvertneqq: '\\u2269\\uFE00',\n  gvnE: '\\u2269\\uFE00',\n  Hacek: '\\u02C7',\n  hairsp: '\\u200A',\n  half: '\\xBD',\n  hamilt: '\\u210B',\n  hardcy: '\\u044A',\n  HARDcy: '\\u042A',\n  harr: '\\u2194',\n  hArr: '\\u21D4',\n  harrcir: '\\u2948',\n  harrw: '\\u21AD',\n  Hat: '^',\n  hbar: '\\u210F',\n  hcirc: '\\u0125',\n  Hcirc: '\\u0124',\n  hearts: '\\u2665',\n  heartsuit: '\\u2665',\n  hellip: '\\u2026',\n  hercon: '\\u22B9',\n  hfr: '\\uD835\\uDD25',\n  Hfr: '\\u210C',\n  HilbertSpace: '\\u210B',\n  hksearow: '\\u2925',\n  hkswarow: '\\u2926',\n  hoarr: '\\u21FF',\n  homtht: '\\u223B',\n  hookleftarrow: '\\u21A9',\n  hookrightarrow: '\\u21AA',\n  hopf: '\\uD835\\uDD59',\n  Hopf: '\\u210D',\n  horbar: '\\u2015',\n  HorizontalLine: '\\u2500',\n  hscr: '\\uD835\\uDCBD',\n  Hscr: '\\u210B',\n  hslash: '\\u210F',\n  hstrok: '\\u0127',\n  Hstrok: '\\u0126',\n  HumpDownHump: '\\u224E',\n  HumpEqual: '\\u224F',\n  hybull: '\\u2043',\n  hyphen: '\\u2010',\n  iacute: '\\xED',\n  Iacute: '\\xCD',\n  ic: '\\u2063',\n  icirc: '\\xEE',\n  Icirc: '\\xCE',\n  icy: '\\u0438',\n  Icy: '\\u0418',\n  Idot: '\\u0130',\n  iecy: '\\u0435',\n  IEcy: '\\u0415',\n  iexcl: '\\xA1',\n  iff: '\\u21D4',\n  ifr: '\\uD835\\uDD26',\n  Ifr: '\\u2111',\n  igrave: '\\xEC',\n  Igrave: '\\xCC',\n  ii: '\\u2148',\n  iiiint: '\\u2A0C',\n  iiint: '\\u222D',\n  iinfin: '\\u29DC',\n  iiota: '\\u2129',\n  ijlig: '\\u0133',\n  IJlig: '\\u0132',\n  Im: '\\u2111',\n  imacr: '\\u012B',\n  Imacr: '\\u012A',\n  image: '\\u2111',\n  ImaginaryI: '\\u2148',\n  imagline: '\\u2110',\n  imagpart: '\\u2111',\n  imath: '\\u0131',\n  imof: '\\u22B7',\n  imped: '\\u01B5',\n  Implies: '\\u21D2',\n  in: '\\u2208',\n  incare: '\\u2105',\n  infin: '\\u221E',\n  infintie: '\\u29DD',\n  inodot: '\\u0131',\n  int: '\\u222B',\n  Int: '\\u222C',\n  intcal: '\\u22BA',\n  integers: '\\u2124',\n  Integral: '\\u222B',\n  intercal: '\\u22BA',\n  Intersection: '\\u22C2',\n  intlarhk: '\\u2A17',\n  intprod: '\\u2A3C',\n  InvisibleComma: '\\u2063',\n  InvisibleTimes: '\\u2062',\n  iocy: '\\u0451',\n  IOcy: '\\u0401',\n  iogon: '\\u012F',\n  Iogon: '\\u012E',\n  iopf: '\\uD835\\uDD5A',\n  Iopf: '\\uD835\\uDD40',\n  iota: '\\u03B9',\n  Iota: '\\u0399',\n  iprod: '\\u2A3C',\n  iquest: '\\xBF',\n  iscr: '\\uD835\\uDCBE',\n  Iscr: '\\u2110',\n  isin: '\\u2208',\n  isindot: '\\u22F5',\n  isinE: '\\u22F9',\n  isins: '\\u22F4',\n  isinsv: '\\u22F3',\n  isinv: '\\u2208',\n  it: '\\u2062',\n  itilde: '\\u0129',\n  Itilde: '\\u0128',\n  iukcy: '\\u0456',\n  Iukcy: '\\u0406',\n  iuml: '\\xEF',\n  Iuml: '\\xCF',\n  jcirc: '\\u0135',\n  Jcirc: '\\u0134',\n  jcy: '\\u0439',\n  Jcy: '\\u0419',\n  jfr: '\\uD835\\uDD27',\n  Jfr: '\\uD835\\uDD0D',\n  jmath: '\\u0237',\n  jopf: '\\uD835\\uDD5B',\n  Jopf: '\\uD835\\uDD41',\n  jscr: '\\uD835\\uDCBF',\n  Jscr: '\\uD835\\uDCA5',\n  jsercy: '\\u0458',\n  Jsercy: '\\u0408',\n  jukcy: '\\u0454',\n  Jukcy: '\\u0404',\n  kappa: '\\u03BA',\n  Kappa: '\\u039A',\n  kappav: '\\u03F0',\n  kcedil: '\\u0137',\n  Kcedil: '\\u0136',\n  kcy: '\\u043A',\n  Kcy: '\\u041A',\n  kfr: '\\uD835\\uDD28',\n  Kfr: '\\uD835\\uDD0E',\n  kgreen: '\\u0138',\n  khcy: '\\u0445',\n  KHcy: '\\u0425',\n  kjcy: '\\u045C',\n  KJcy: '\\u040C',\n  kopf: '\\uD835\\uDD5C',\n  Kopf: '\\uD835\\uDD42',\n  kscr: '\\uD835\\uDCC0',\n  Kscr: '\\uD835\\uDCA6',\n  lAarr: '\\u21DA',\n  lacute: '\\u013A',\n  Lacute: '\\u0139',\n  laemptyv: '\\u29B4',\n  lagran: '\\u2112',\n  lambda: '\\u03BB',\n  Lambda: '\\u039B',\n  lang: '\\u27E8',\n  Lang: '\\u27EA',\n  langd: '\\u2991',\n  langle: '\\u27E8',\n  lap: '\\u2A85',\n  Laplacetrf: '\\u2112',\n  laquo: '\\xAB',\n  larr: '\\u2190',\n  lArr: '\\u21D0',\n  Larr: '\\u219E',\n  larrb: '\\u21E4',\n  larrbfs: '\\u291F',\n  larrfs: '\\u291D',\n  larrhk: '\\u21A9',\n  larrlp: '\\u21AB',\n  larrpl: '\\u2939',\n  larrsim: '\\u2973',\n  larrtl: '\\u21A2',\n  lat: '\\u2AAB',\n  latail: '\\u2919',\n  lAtail: '\\u291B',\n  late: '\\u2AAD',\n  lates: '\\u2AAD\\uFE00',\n  lbarr: '\\u290C',\n  lBarr: '\\u290E',\n  lbbrk: '\\u2772',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '\\u298B',\n  lbrksld: '\\u298F',\n  lbrkslu: '\\u298D',\n  lcaron: '\\u013E',\n  Lcaron: '\\u013D',\n  lcedil: '\\u013C',\n  Lcedil: '\\u013B',\n  lceil: '\\u2308',\n  lcub: '{',\n  lcy: '\\u043B',\n  Lcy: '\\u041B',\n  ldca: '\\u2936',\n  ldquo: '\\u201C',\n  ldquor: '\\u201E',\n  ldrdhar: '\\u2967',\n  ldrushar: '\\u294B',\n  ldsh: '\\u21B2',\n  le: '\\u2264',\n  lE: '\\u2266',\n  LeftAngleBracket: '\\u27E8',\n  leftarrow: '\\u2190',\n  Leftarrow: '\\u21D0',\n  LeftArrow: '\\u2190',\n  LeftArrowBar: '\\u21E4',\n  LeftArrowRightArrow: '\\u21C6',\n  leftarrowtail: '\\u21A2',\n  LeftCeiling: '\\u2308',\n  LeftDoubleBracket: '\\u27E6',\n  LeftDownTeeVector: '\\u2961',\n  LeftDownVector: '\\u21C3',\n  LeftDownVectorBar: '\\u2959',\n  LeftFloor: '\\u230A',\n  leftharpoondown: '\\u21BD',\n  leftharpoonup: '\\u21BC',\n  leftleftarrows: '\\u21C7',\n  leftrightarrow: '\\u2194',\n  Leftrightarrow: '\\u21D4',\n  LeftRightArrow: '\\u2194',\n  leftrightarrows: '\\u21C6',\n  leftrightharpoons: '\\u21CB',\n  leftrightsquigarrow: '\\u21AD',\n  LeftRightVector: '\\u294E',\n  LeftTee: '\\u22A3',\n  LeftTeeArrow: '\\u21A4',\n  LeftTeeVector: '\\u295A',\n  leftthreetimes: '\\u22CB',\n  LeftTriangle: '\\u22B2',\n  LeftTriangleBar: '\\u29CF',\n  LeftTriangleEqual: '\\u22B4',\n  LeftUpDownVector: '\\u2951',\n  LeftUpTeeVector: '\\u2960',\n  LeftUpVector: '\\u21BF',\n  LeftUpVectorBar: '\\u2958',\n  LeftVector: '\\u21BC',\n  LeftVectorBar: '\\u2952',\n  leg: '\\u22DA',\n  lEg: '\\u2A8B',\n  leq: '\\u2264',\n  leqq: '\\u2266',\n  leqslant: '\\u2A7D',\n  les: '\\u2A7D',\n  lescc: '\\u2AA8',\n  lesdot: '\\u2A7F',\n  lesdoto: '\\u2A81',\n  lesdotor: '\\u2A83',\n  lesg: '\\u22DA\\uFE00',\n  lesges: '\\u2A93',\n  lessapprox: '\\u2A85',\n  lessdot: '\\u22D6',\n  lesseqgtr: '\\u22DA',\n  lesseqqgtr: '\\u2A8B',\n  LessEqualGreater: '\\u22DA',\n  LessFullEqual: '\\u2266',\n  LessGreater: '\\u2276',\n  lessgtr: '\\u2276',\n  LessLess: '\\u2AA1',\n  lesssim: '\\u2272',\n  LessSlantEqual: '\\u2A7D',\n  LessTilde: '\\u2272',\n  lfisht: '\\u297C',\n  lfloor: '\\u230A',\n  lfr: '\\uD835\\uDD29',\n  Lfr: '\\uD835\\uDD0F',\n  lg: '\\u2276',\n  lgE: '\\u2A91',\n  lHar: '\\u2962',\n  lhard: '\\u21BD',\n  lharu: '\\u21BC',\n  lharul: '\\u296A',\n  lhblk: '\\u2584',\n  ljcy: '\\u0459',\n  LJcy: '\\u0409',\n  ll: '\\u226A',\n  Ll: '\\u22D8',\n  llarr: '\\u21C7',\n  llcorner: '\\u231E',\n  Lleftarrow: '\\u21DA',\n  llhard: '\\u296B',\n  lltri: '\\u25FA',\n  lmidot: '\\u0140',\n  Lmidot: '\\u013F',\n  lmoust: '\\u23B0',\n  lmoustache: '\\u23B0',\n  lnap: '\\u2A89',\n  lnapprox: '\\u2A89',\n  lne: '\\u2A87',\n  lnE: '\\u2268',\n  lneq: '\\u2A87',\n  lneqq: '\\u2268',\n  lnsim: '\\u22E6',\n  loang: '\\u27EC',\n  loarr: '\\u21FD',\n  lobrk: '\\u27E6',\n  longleftarrow: '\\u27F5',\n  Longleftarrow: '\\u27F8',\n  LongLeftArrow: '\\u27F5',\n  longleftrightarrow: '\\u27F7',\n  Longleftrightarrow: '\\u27FA',\n  LongLeftRightArrow: '\\u27F7',\n  longmapsto: '\\u27FC',\n  longrightarrow: '\\u27F6',\n  Longrightarrow: '\\u27F9',\n  LongRightArrow: '\\u27F6',\n  looparrowleft: '\\u21AB',\n  looparrowright: '\\u21AC',\n  lopar: '\\u2985',\n  lopf: '\\uD835\\uDD5D',\n  Lopf: '\\uD835\\uDD43',\n  loplus: '\\u2A2D',\n  lotimes: '\\u2A34',\n  lowast: '\\u2217',\n  lowbar: '_',\n  LowerLeftArrow: '\\u2199',\n  LowerRightArrow: '\\u2198',\n  loz: '\\u25CA',\n  lozenge: '\\u25CA',\n  lozf: '\\u29EB',\n  lpar: '(',\n  lparlt: '\\u2993',\n  lrarr: '\\u21C6',\n  lrcorner: '\\u231F',\n  lrhar: '\\u21CB',\n  lrhard: '\\u296D',\n  lrm: '\\u200E',\n  lrtri: '\\u22BF',\n  lsaquo: '\\u2039',\n  lscr: '\\uD835\\uDCC1',\n  Lscr: '\\u2112',\n  lsh: '\\u21B0',\n  Lsh: '\\u21B0',\n  lsim: '\\u2272',\n  lsime: '\\u2A8D',\n  lsimg: '\\u2A8F',\n  lsqb: '[',\n  lsquo: '\\u2018',\n  lsquor: '\\u201A',\n  lstrok: '\\u0142',\n  Lstrok: '\\u0141',\n  lt: '<',\n  Lt: '\\u226A',\n  LT: '<',\n  ltcc: '\\u2AA6',\n  ltcir: '\\u2A79',\n  ltdot: '\\u22D6',\n  lthree: '\\u22CB',\n  ltimes: '\\u22C9',\n  ltlarr: '\\u2976',\n  ltquest: '\\u2A7B',\n  ltri: '\\u25C3',\n  ltrie: '\\u22B4',\n  ltrif: '\\u25C2',\n  ltrPar: '\\u2996',\n  lurdshar: '\\u294A',\n  luruhar: '\\u2966',\n  lvertneqq: '\\u2268\\uFE00',\n  lvnE: '\\u2268\\uFE00',\n  macr: '\\xAF',\n  male: '\\u2642',\n  malt: '\\u2720',\n  maltese: '\\u2720',\n  map: '\\u21A6',\n  Map: '\\u2905',\n  mapsto: '\\u21A6',\n  mapstodown: '\\u21A7',\n  mapstoleft: '\\u21A4',\n  mapstoup: '\\u21A5',\n  marker: '\\u25AE',\n  mcomma: '\\u2A29',\n  mcy: '\\u043C',\n  Mcy: '\\u041C',\n  mdash: '\\u2014',\n  mDDot: '\\u223A',\n  measuredangle: '\\u2221',\n  MediumSpace: '\\u205F',\n  Mellintrf: '\\u2133',\n  mfr: '\\uD835\\uDD2A',\n  Mfr: '\\uD835\\uDD10',\n  mho: '\\u2127',\n  micro: '\\xB5',\n  mid: '\\u2223',\n  midast: '*',\n  midcir: '\\u2AF0',\n  middot: '\\xB7',\n  minus: '\\u2212',\n  minusb: '\\u229F',\n  minusd: '\\u2238',\n  minusdu: '\\u2A2A',\n  MinusPlus: '\\u2213',\n  mlcp: '\\u2ADB',\n  mldr: '\\u2026',\n  mnplus: '\\u2213',\n  models: '\\u22A7',\n  mopf: '\\uD835\\uDD5E',\n  Mopf: '\\uD835\\uDD44',\n  mp: '\\u2213',\n  mscr: '\\uD835\\uDCC2',\n  Mscr: '\\u2133',\n  mstpos: '\\u223E',\n  mu: '\\u03BC',\n  Mu: '\\u039C',\n  multimap: '\\u22B8',\n  mumap: '\\u22B8',\n  nabla: '\\u2207',\n  nacute: '\\u0144',\n  Nacute: '\\u0143',\n  nang: '\\u2220\\u20D2',\n  nap: '\\u2249',\n  napE: '\\u2A70\\u0338',\n  napid: '\\u224B\\u0338',\n  napos: '\\u0149',\n  napprox: '\\u2249',\n  natur: '\\u266E',\n  natural: '\\u266E',\n  naturals: '\\u2115',\n  nbsp: '\\xA0',\n  nbump: '\\u224E\\u0338',\n  nbumpe: '\\u224F\\u0338',\n  ncap: '\\u2A43',\n  ncaron: '\\u0148',\n  Ncaron: '\\u0147',\n  ncedil: '\\u0146',\n  Ncedil: '\\u0145',\n  ncong: '\\u2247',\n  ncongdot: '\\u2A6D\\u0338',\n  ncup: '\\u2A42',\n  ncy: '\\u043D',\n  Ncy: '\\u041D',\n  ndash: '\\u2013',\n  ne: '\\u2260',\n  nearhk: '\\u2924',\n  nearr: '\\u2197',\n  neArr: '\\u21D7',\n  nearrow: '\\u2197',\n  nedot: '\\u2250\\u0338',\n  NegativeMediumSpace: '\\u200B',\n  NegativeThickSpace: '\\u200B',\n  NegativeThinSpace: '\\u200B',\n  NegativeVeryThinSpace: '\\u200B',\n  nequiv: '\\u2262',\n  nesear: '\\u2928',\n  nesim: '\\u2242\\u0338',\n  NestedGreaterGreater: '\\u226B',\n  NestedLessLess: '\\u226A',\n  NewLine: '\\n',\n  nexist: '\\u2204',\n  nexists: '\\u2204',\n  nfr: '\\uD835\\uDD2B',\n  Nfr: '\\uD835\\uDD11',\n  nge: '\\u2271',\n  ngE: '\\u2267\\u0338',\n  ngeq: '\\u2271',\n  ngeqq: '\\u2267\\u0338',\n  ngeqslant: '\\u2A7E\\u0338',\n  nges: '\\u2A7E\\u0338',\n  nGg: '\\u22D9\\u0338',\n  ngsim: '\\u2275',\n  ngt: '\\u226F',\n  nGt: '\\u226B\\u20D2',\n  ngtr: '\\u226F',\n  nGtv: '\\u226B\\u0338',\n  nharr: '\\u21AE',\n  nhArr: '\\u21CE',\n  nhpar: '\\u2AF2',\n  ni: '\\u220B',\n  nis: '\\u22FC',\n  nisd: '\\u22FA',\n  niv: '\\u220B',\n  njcy: '\\u045A',\n  NJcy: '\\u040A',\n  nlarr: '\\u219A',\n  nlArr: '\\u21CD',\n  nldr: '\\u2025',\n  nle: '\\u2270',\n  nlE: '\\u2266\\u0338',\n  nleftarrow: '\\u219A',\n  nLeftarrow: '\\u21CD',\n  nleftrightarrow: '\\u21AE',\n  nLeftrightarrow: '\\u21CE',\n  nleq: '\\u2270',\n  nleqq: '\\u2266\\u0338',\n  nleqslant: '\\u2A7D\\u0338',\n  nles: '\\u2A7D\\u0338',\n  nless: '\\u226E',\n  nLl: '\\u22D8\\u0338',\n  nlsim: '\\u2274',\n  nlt: '\\u226E',\n  nLt: '\\u226A\\u20D2',\n  nltri: '\\u22EA',\n  nltrie: '\\u22EC',\n  nLtv: '\\u226A\\u0338',\n  nmid: '\\u2224',\n  NoBreak: '\\u2060',\n  NonBreakingSpace: '\\xA0',\n  nopf: '\\uD835\\uDD5F',\n  Nopf: '\\u2115',\n  not: '\\xAC',\n  Not: '\\u2AEC',\n  NotCongruent: '\\u2262',\n  NotCupCap: '\\u226D',\n  NotDoubleVerticalBar: '\\u2226',\n  NotElement: '\\u2209',\n  NotEqual: '\\u2260',\n  NotEqualTilde: '\\u2242\\u0338',\n  NotExists: '\\u2204',\n  NotGreater: '\\u226F',\n  NotGreaterEqual: '\\u2271',\n  NotGreaterFullEqual: '\\u2267\\u0338',\n  NotGreaterGreater: '\\u226B\\u0338',\n  NotGreaterLess: '\\u2279',\n  NotGreaterSlantEqual: '\\u2A7E\\u0338',\n  NotGreaterTilde: '\\u2275',\n  NotHumpDownHump: '\\u224E\\u0338',\n  NotHumpEqual: '\\u224F\\u0338',\n  notin: '\\u2209',\n  notindot: '\\u22F5\\u0338',\n  notinE: '\\u22F9\\u0338',\n  notinva: '\\u2209',\n  notinvb: '\\u22F7',\n  notinvc: '\\u22F6',\n  NotLeftTriangle: '\\u22EA',\n  NotLeftTriangleBar: '\\u29CF\\u0338',\n  NotLeftTriangleEqual: '\\u22EC',\n  NotLess: '\\u226E',\n  NotLessEqual: '\\u2270',\n  NotLessGreater: '\\u2278',\n  NotLessLess: '\\u226A\\u0338',\n  NotLessSlantEqual: '\\u2A7D\\u0338',\n  NotLessTilde: '\\u2274',\n  NotNestedGreaterGreater: '\\u2AA2\\u0338',\n  NotNestedLessLess: '\\u2AA1\\u0338',\n  notni: '\\u220C',\n  notniva: '\\u220C',\n  notnivb: '\\u22FE',\n  notnivc: '\\u22FD',\n  NotPrecedes: '\\u2280',\n  NotPrecedesEqual: '\\u2AAF\\u0338',\n  NotPrecedesSlantEqual: '\\u22E0',\n  NotReverseElement: '\\u220C',\n  NotRightTriangle: '\\u22EB',\n  NotRightTriangleBar: '\\u29D0\\u0338',\n  NotRightTriangleEqual: '\\u22ED',\n  NotSquareSubset: '\\u228F\\u0338',\n  NotSquareSubsetEqual: '\\u22E2',\n  NotSquareSuperset: '\\u2290\\u0338',\n  NotSquareSupersetEqual: '\\u22E3',\n  NotSubset: '\\u2282\\u20D2',\n  NotSubsetEqual: '\\u2288',\n  NotSucceeds: '\\u2281',\n  NotSucceedsEqual: '\\u2AB0\\u0338',\n  NotSucceedsSlantEqual: '\\u22E1',\n  NotSucceedsTilde: '\\u227F\\u0338',\n  NotSuperset: '\\u2283\\u20D2',\n  NotSupersetEqual: '\\u2289',\n  NotTilde: '\\u2241',\n  NotTildeEqual: '\\u2244',\n  NotTildeFullEqual: '\\u2247',\n  NotTildeTilde: '\\u2249',\n  NotVerticalBar: '\\u2224',\n  npar: '\\u2226',\n  nparallel: '\\u2226',\n  nparsl: '\\u2AFD\\u20E5',\n  npart: '\\u2202\\u0338',\n  npolint: '\\u2A14',\n  npr: '\\u2280',\n  nprcue: '\\u22E0',\n  npre: '\\u2AAF\\u0338',\n  nprec: '\\u2280',\n  npreceq: '\\u2AAF\\u0338',\n  nrarr: '\\u219B',\n  nrArr: '\\u21CF',\n  nrarrc: '\\u2933\\u0338',\n  nrarrw: '\\u219D\\u0338',\n  nrightarrow: '\\u219B',\n  nRightarrow: '\\u21CF',\n  nrtri: '\\u22EB',\n  nrtrie: '\\u22ED',\n  nsc: '\\u2281',\n  nsccue: '\\u22E1',\n  nsce: '\\u2AB0\\u0338',\n  nscr: '\\uD835\\uDCC3',\n  Nscr: '\\uD835\\uDCA9',\n  nshortmid: '\\u2224',\n  nshortparallel: '\\u2226',\n  nsim: '\\u2241',\n  nsime: '\\u2244',\n  nsimeq: '\\u2244',\n  nsmid: '\\u2224',\n  nspar: '\\u2226',\n  nsqsube: '\\u22E2',\n  nsqsupe: '\\u22E3',\n  nsub: '\\u2284',\n  nsube: '\\u2288',\n  nsubE: '\\u2AC5\\u0338',\n  nsubset: '\\u2282\\u20D2',\n  nsubseteq: '\\u2288',\n  nsubseteqq: '\\u2AC5\\u0338',\n  nsucc: '\\u2281',\n  nsucceq: '\\u2AB0\\u0338',\n  nsup: '\\u2285',\n  nsupe: '\\u2289',\n  nsupE: '\\u2AC6\\u0338',\n  nsupset: '\\u2283\\u20D2',\n  nsupseteq: '\\u2289',\n  nsupseteqq: '\\u2AC6\\u0338',\n  ntgl: '\\u2279',\n  ntilde: '\\xF1',\n  Ntilde: '\\xD1',\n  ntlg: '\\u2278',\n  ntriangleleft: '\\u22EA',\n  ntrianglelefteq: '\\u22EC',\n  ntriangleright: '\\u22EB',\n  ntrianglerighteq: '\\u22ED',\n  nu: '\\u03BD',\n  Nu: '\\u039D',\n  num: '#',\n  numero: '\\u2116',\n  numsp: '\\u2007',\n  nvap: '\\u224D\\u20D2',\n  nvdash: '\\u22AC',\n  nvDash: '\\u22AD',\n  nVdash: '\\u22AE',\n  nVDash: '\\u22AF',\n  nvge: '\\u2265\\u20D2',\n  nvgt: '>\\u20D2',\n  nvHarr: '\\u2904',\n  nvinfin: '\\u29DE',\n  nvlArr: '\\u2902',\n  nvle: '\\u2264\\u20D2',\n  nvlt: '<\\u20D2',\n  nvltrie: '\\u22B4\\u20D2',\n  nvrArr: '\\u2903',\n  nvrtrie: '\\u22B5\\u20D2',\n  nvsim: '\\u223C\\u20D2',\n  nwarhk: '\\u2923',\n  nwarr: '\\u2196',\n  nwArr: '\\u21D6',\n  nwarrow: '\\u2196',\n  nwnear: '\\u2927',\n  oacute: '\\xF3',\n  Oacute: '\\xD3',\n  oast: '\\u229B',\n  ocir: '\\u229A',\n  ocirc: '\\xF4',\n  Ocirc: '\\xD4',\n  ocy: '\\u043E',\n  Ocy: '\\u041E',\n  odash: '\\u229D',\n  odblac: '\\u0151',\n  Odblac: '\\u0150',\n  odiv: '\\u2A38',\n  odot: '\\u2299',\n  odsold: '\\u29BC',\n  oelig: '\\u0153',\n  OElig: '\\u0152',\n  ofcir: '\\u29BF',\n  ofr: '\\uD835\\uDD2C',\n  Ofr: '\\uD835\\uDD12',\n  ogon: '\\u02DB',\n  ograve: '\\xF2',\n  Ograve: '\\xD2',\n  ogt: '\\u29C1',\n  ohbar: '\\u29B5',\n  ohm: '\\u03A9',\n  oint: '\\u222E',\n  olarr: '\\u21BA',\n  olcir: '\\u29BE',\n  olcross: '\\u29BB',\n  oline: '\\u203E',\n  olt: '\\u29C0',\n  omacr: '\\u014D',\n  Omacr: '\\u014C',\n  omega: '\\u03C9',\n  Omega: '\\u03A9',\n  omicron: '\\u03BF',\n  Omicron: '\\u039F',\n  omid: '\\u29B6',\n  ominus: '\\u2296',\n  oopf: '\\uD835\\uDD60',\n  Oopf: '\\uD835\\uDD46',\n  opar: '\\u29B7',\n  OpenCurlyDoubleQuote: '\\u201C',\n  OpenCurlyQuote: '\\u2018',\n  operp: '\\u29B9',\n  oplus: '\\u2295',\n  or: '\\u2228',\n  Or: '\\u2A54',\n  orarr: '\\u21BB',\n  ord: '\\u2A5D',\n  order: '\\u2134',\n  orderof: '\\u2134',\n  ordf: '\\xAA',\n  ordm: '\\xBA',\n  origof: '\\u22B6',\n  oror: '\\u2A56',\n  orslope: '\\u2A57',\n  orv: '\\u2A5B',\n  oS: '\\u24C8',\n  oscr: '\\u2134',\n  Oscr: '\\uD835\\uDCAA',\n  oslash: '\\xF8',\n  Oslash: '\\xD8',\n  osol: '\\u2298',\n  otilde: '\\xF5',\n  Otilde: '\\xD5',\n  otimes: '\\u2297',\n  Otimes: '\\u2A37',\n  otimesas: '\\u2A36',\n  ouml: '\\xF6',\n  Ouml: '\\xD6',\n  ovbar: '\\u233D',\n  OverBar: '\\u203E',\n  OverBrace: '\\u23DE',\n  OverBracket: '\\u23B4',\n  OverParenthesis: '\\u23DC',\n  par: '\\u2225',\n  para: '\\xB6',\n  parallel: '\\u2225',\n  parsim: '\\u2AF3',\n  parsl: '\\u2AFD',\n  part: '\\u2202',\n  PartialD: '\\u2202',\n  pcy: '\\u043F',\n  Pcy: '\\u041F',\n  percnt: '%',\n  period: '.',\n  permil: '\\u2030',\n  perp: '\\u22A5',\n  pertenk: '\\u2031',\n  pfr: '\\uD835\\uDD2D',\n  Pfr: '\\uD835\\uDD13',\n  phi: '\\u03C6',\n  Phi: '\\u03A6',\n  phiv: '\\u03D5',\n  phmmat: '\\u2133',\n  phone: '\\u260E',\n  pi: '\\u03C0',\n  Pi: '\\u03A0',\n  pitchfork: '\\u22D4',\n  piv: '\\u03D6',\n  planck: '\\u210F',\n  planckh: '\\u210E',\n  plankv: '\\u210F',\n  plus: '+',\n  plusacir: '\\u2A23',\n  plusb: '\\u229E',\n  pluscir: '\\u2A22',\n  plusdo: '\\u2214',\n  plusdu: '\\u2A25',\n  pluse: '\\u2A72',\n  PlusMinus: '\\xB1',\n  plusmn: '\\xB1',\n  plussim: '\\u2A26',\n  plustwo: '\\u2A27',\n  pm: '\\xB1',\n  Poincareplane: '\\u210C',\n  pointint: '\\u2A15',\n  popf: '\\uD835\\uDD61',\n  Popf: '\\u2119',\n  pound: '\\xA3',\n  pr: '\\u227A',\n  Pr: '\\u2ABB',\n  prap: '\\u2AB7',\n  prcue: '\\u227C',\n  pre: '\\u2AAF',\n  prE: '\\u2AB3',\n  prec: '\\u227A',\n  precapprox: '\\u2AB7',\n  preccurlyeq: '\\u227C',\n  Precedes: '\\u227A',\n  PrecedesEqual: '\\u2AAF',\n  PrecedesSlantEqual: '\\u227C',\n  PrecedesTilde: '\\u227E',\n  preceq: '\\u2AAF',\n  precnapprox: '\\u2AB9',\n  precneqq: '\\u2AB5',\n  precnsim: '\\u22E8',\n  precsim: '\\u227E',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  primes: '\\u2119',\n  prnap: '\\u2AB9',\n  prnE: '\\u2AB5',\n  prnsim: '\\u22E8',\n  prod: '\\u220F',\n  Product: '\\u220F',\n  profalar: '\\u232E',\n  profline: '\\u2312',\n  profsurf: '\\u2313',\n  prop: '\\u221D',\n  Proportion: '\\u2237',\n  Proportional: '\\u221D',\n  propto: '\\u221D',\n  prsim: '\\u227E',\n  prurel: '\\u22B0',\n  pscr: '\\uD835\\uDCC5',\n  Pscr: '\\uD835\\uDCAB',\n  psi: '\\u03C8',\n  Psi: '\\u03A8',\n  puncsp: '\\u2008',\n  qfr: '\\uD835\\uDD2E',\n  Qfr: '\\uD835\\uDD14',\n  qint: '\\u2A0C',\n  qopf: '\\uD835\\uDD62',\n  Qopf: '\\u211A',\n  qprime: '\\u2057',\n  qscr: '\\uD835\\uDCC6',\n  Qscr: '\\uD835\\uDCAC',\n  quaternions: '\\u210D',\n  quatint: '\\u2A16',\n  quest: '?',\n  questeq: '\\u225F',\n  quot: '\"',\n  QUOT: '\"',\n  rAarr: '\\u21DB',\n  race: '\\u223D\\u0331',\n  racute: '\\u0155',\n  Racute: '\\u0154',\n  radic: '\\u221A',\n  raemptyv: '\\u29B3',\n  rang: '\\u27E9',\n  Rang: '\\u27EB',\n  rangd: '\\u2992',\n  range: '\\u29A5',\n  rangle: '\\u27E9',\n  raquo: '\\xBB',\n  rarr: '\\u2192',\n  rArr: '\\u21D2',\n  Rarr: '\\u21A0',\n  rarrap: '\\u2975',\n  rarrb: '\\u21E5',\n  rarrbfs: '\\u2920',\n  rarrc: '\\u2933',\n  rarrfs: '\\u291E',\n  rarrhk: '\\u21AA',\n  rarrlp: '\\u21AC',\n  rarrpl: '\\u2945',\n  rarrsim: '\\u2974',\n  rarrtl: '\\u21A3',\n  Rarrtl: '\\u2916',\n  rarrw: '\\u219D',\n  ratail: '\\u291A',\n  rAtail: '\\u291C',\n  ratio: '\\u2236',\n  rationals: '\\u211A',\n  rbarr: '\\u290D',\n  rBarr: '\\u290F',\n  RBarr: '\\u2910',\n  rbbrk: '\\u2773',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '\\u298C',\n  rbrksld: '\\u298E',\n  rbrkslu: '\\u2990',\n  rcaron: '\\u0159',\n  Rcaron: '\\u0158',\n  rcedil: '\\u0157',\n  Rcedil: '\\u0156',\n  rceil: '\\u2309',\n  rcub: '}',\n  rcy: '\\u0440',\n  Rcy: '\\u0420',\n  rdca: '\\u2937',\n  rdldhar: '\\u2969',\n  rdquo: '\\u201D',\n  rdquor: '\\u201D',\n  rdsh: '\\u21B3',\n  Re: '\\u211C',\n  real: '\\u211C',\n  realine: '\\u211B',\n  realpart: '\\u211C',\n  reals: '\\u211D',\n  rect: '\\u25AD',\n  reg: '\\xAE',\n  REG: '\\xAE',\n  ReverseElement: '\\u220B',\n  ReverseEquilibrium: '\\u21CB',\n  ReverseUpEquilibrium: '\\u296F',\n  rfisht: '\\u297D',\n  rfloor: '\\u230B',\n  rfr: '\\uD835\\uDD2F',\n  Rfr: '\\u211C',\n  rHar: '\\u2964',\n  rhard: '\\u21C1',\n  rharu: '\\u21C0',\n  rharul: '\\u296C',\n  rho: '\\u03C1',\n  Rho: '\\u03A1',\n  rhov: '\\u03F1',\n  RightAngleBracket: '\\u27E9',\n  rightarrow: '\\u2192',\n  Rightarrow: '\\u21D2',\n  RightArrow: '\\u2192',\n  RightArrowBar: '\\u21E5',\n  RightArrowLeftArrow: '\\u21C4',\n  rightarrowtail: '\\u21A3',\n  RightCeiling: '\\u2309',\n  RightDoubleBracket: '\\u27E7',\n  RightDownTeeVector: '\\u295D',\n  RightDownVector: '\\u21C2',\n  RightDownVectorBar: '\\u2955',\n  RightFloor: '\\u230B',\n  rightharpoondown: '\\u21C1',\n  rightharpoonup: '\\u21C0',\n  rightleftarrows: '\\u21C4',\n  rightleftharpoons: '\\u21CC',\n  rightrightarrows: '\\u21C9',\n  rightsquigarrow: '\\u219D',\n  RightTee: '\\u22A2',\n  RightTeeArrow: '\\u21A6',\n  RightTeeVector: '\\u295B',\n  rightthreetimes: '\\u22CC',\n  RightTriangle: '\\u22B3',\n  RightTriangleBar: '\\u29D0',\n  RightTriangleEqual: '\\u22B5',\n  RightUpDownVector: '\\u294F',\n  RightUpTeeVector: '\\u295C',\n  RightUpVector: '\\u21BE',\n  RightUpVectorBar: '\\u2954',\n  RightVector: '\\u21C0',\n  RightVectorBar: '\\u2953',\n  ring: '\\u02DA',\n  risingdotseq: '\\u2253',\n  rlarr: '\\u21C4',\n  rlhar: '\\u21CC',\n  rlm: '\\u200F',\n  rmoust: '\\u23B1',\n  rmoustache: '\\u23B1',\n  rnmid: '\\u2AEE',\n  roang: '\\u27ED',\n  roarr: '\\u21FE',\n  robrk: '\\u27E7',\n  ropar: '\\u2986',\n  ropf: '\\uD835\\uDD63',\n  Ropf: '\\u211D',\n  roplus: '\\u2A2E',\n  rotimes: '\\u2A35',\n  RoundImplies: '\\u2970',\n  rpar: ')',\n  rpargt: '\\u2994',\n  rppolint: '\\u2A12',\n  rrarr: '\\u21C9',\n  Rrightarrow: '\\u21DB',\n  rsaquo: '\\u203A',\n  rscr: '\\uD835\\uDCC7',\n  Rscr: '\\u211B',\n  rsh: '\\u21B1',\n  Rsh: '\\u21B1',\n  rsqb: ']',\n  rsquo: '\\u2019',\n  rsquor: '\\u2019',\n  rthree: '\\u22CC',\n  rtimes: '\\u22CA',\n  rtri: '\\u25B9',\n  rtrie: '\\u22B5',\n  rtrif: '\\u25B8',\n  rtriltri: '\\u29CE',\n  RuleDelayed: '\\u29F4',\n  ruluhar: '\\u2968',\n  rx: '\\u211E',\n  sacute: '\\u015B',\n  Sacute: '\\u015A',\n  sbquo: '\\u201A',\n  sc: '\\u227B',\n  Sc: '\\u2ABC',\n  scap: '\\u2AB8',\n  scaron: '\\u0161',\n  Scaron: '\\u0160',\n  sccue: '\\u227D',\n  sce: '\\u2AB0',\n  scE: '\\u2AB4',\n  scedil: '\\u015F',\n  Scedil: '\\u015E',\n  scirc: '\\u015D',\n  Scirc: '\\u015C',\n  scnap: '\\u2ABA',\n  scnE: '\\u2AB6',\n  scnsim: '\\u22E9',\n  scpolint: '\\u2A13',\n  scsim: '\\u227F',\n  scy: '\\u0441',\n  Scy: '\\u0421',\n  sdot: '\\u22C5',\n  sdotb: '\\u22A1',\n  sdote: '\\u2A66',\n  searhk: '\\u2925',\n  searr: '\\u2198',\n  seArr: '\\u21D8',\n  searrow: '\\u2198',\n  sect: '\\xA7',\n  semi: ';',\n  seswar: '\\u2929',\n  setminus: '\\u2216',\n  setmn: '\\u2216',\n  sext: '\\u2736',\n  sfr: '\\uD835\\uDD30',\n  Sfr: '\\uD835\\uDD16',\n  sfrown: '\\u2322',\n  sharp: '\\u266F',\n  shchcy: '\\u0449',\n  SHCHcy: '\\u0429',\n  shcy: '\\u0448',\n  SHcy: '\\u0428',\n  ShortDownArrow: '\\u2193',\n  ShortLeftArrow: '\\u2190',\n  shortmid: '\\u2223',\n  shortparallel: '\\u2225',\n  ShortRightArrow: '\\u2192',\n  ShortUpArrow: '\\u2191',\n  shy: '\\xAD',\n  sigma: '\\u03C3',\n  Sigma: '\\u03A3',\n  sigmaf: '\\u03C2',\n  sigmav: '\\u03C2',\n  sim: '\\u223C',\n  simdot: '\\u2A6A',\n  sime: '\\u2243',\n  simeq: '\\u2243',\n  simg: '\\u2A9E',\n  simgE: '\\u2AA0',\n  siml: '\\u2A9D',\n  simlE: '\\u2A9F',\n  simne: '\\u2246',\n  simplus: '\\u2A24',\n  simrarr: '\\u2972',\n  slarr: '\\u2190',\n  SmallCircle: '\\u2218',\n  smallsetminus: '\\u2216',\n  smashp: '\\u2A33',\n  smeparsl: '\\u29E4',\n  smid: '\\u2223',\n  smile: '\\u2323',\n  smt: '\\u2AAA',\n  smte: '\\u2AAC',\n  smtes: '\\u2AAC\\uFE00',\n  softcy: '\\u044C',\n  SOFTcy: '\\u042C',\n  sol: '/',\n  solb: '\\u29C4',\n  solbar: '\\u233F',\n  sopf: '\\uD835\\uDD64',\n  Sopf: '\\uD835\\uDD4A',\n  spades: '\\u2660',\n  spadesuit: '\\u2660',\n  spar: '\\u2225',\n  sqcap: '\\u2293',\n  sqcaps: '\\u2293\\uFE00',\n  sqcup: '\\u2294',\n  sqcups: '\\u2294\\uFE00',\n  Sqrt: '\\u221A',\n  sqsub: '\\u228F',\n  sqsube: '\\u2291',\n  sqsubset: '\\u228F',\n  sqsubseteq: '\\u2291',\n  sqsup: '\\u2290',\n  sqsupe: '\\u2292',\n  sqsupset: '\\u2290',\n  sqsupseteq: '\\u2292',\n  squ: '\\u25A1',\n  square: '\\u25A1',\n  Square: '\\u25A1',\n  SquareIntersection: '\\u2293',\n  SquareSubset: '\\u228F',\n  SquareSubsetEqual: '\\u2291',\n  SquareSuperset: '\\u2290',\n  SquareSupersetEqual: '\\u2292',\n  SquareUnion: '\\u2294',\n  squarf: '\\u25AA',\n  squf: '\\u25AA',\n  srarr: '\\u2192',\n  sscr: '\\uD835\\uDCC8',\n  Sscr: '\\uD835\\uDCAE',\n  ssetmn: '\\u2216',\n  ssmile: '\\u2323',\n  sstarf: '\\u22C6',\n  star: '\\u2606',\n  Star: '\\u22C6',\n  starf: '\\u2605',\n  straightepsilon: '\\u03F5',\n  straightphi: '\\u03D5',\n  strns: '\\xAF',\n  sub: '\\u2282',\n  Sub: '\\u22D0',\n  subdot: '\\u2ABD',\n  sube: '\\u2286',\n  subE: '\\u2AC5',\n  subedot: '\\u2AC3',\n  submult: '\\u2AC1',\n  subne: '\\u228A',\n  subnE: '\\u2ACB',\n  subplus: '\\u2ABF',\n  subrarr: '\\u2979',\n  subset: '\\u2282',\n  Subset: '\\u22D0',\n  subseteq: '\\u2286',\n  subseteqq: '\\u2AC5',\n  SubsetEqual: '\\u2286',\n  subsetneq: '\\u228A',\n  subsetneqq: '\\u2ACB',\n  subsim: '\\u2AC7',\n  subsub: '\\u2AD5',\n  subsup: '\\u2AD3',\n  succ: '\\u227B',\n  succapprox: '\\u2AB8',\n  succcurlyeq: '\\u227D',\n  Succeeds: '\\u227B',\n  SucceedsEqual: '\\u2AB0',\n  SucceedsSlantEqual: '\\u227D',\n  SucceedsTilde: '\\u227F',\n  succeq: '\\u2AB0',\n  succnapprox: '\\u2ABA',\n  succneqq: '\\u2AB6',\n  succnsim: '\\u22E9',\n  succsim: '\\u227F',\n  SuchThat: '\\u220B',\n  sum: '\\u2211',\n  Sum: '\\u2211',\n  sung: '\\u266A',\n  sup: '\\u2283',\n  Sup: '\\u22D1',\n  sup1: '\\xB9',\n  sup2: '\\xB2',\n  sup3: '\\xB3',\n  supdot: '\\u2ABE',\n  supdsub: '\\u2AD8',\n  supe: '\\u2287',\n  supE: '\\u2AC6',\n  supedot: '\\u2AC4',\n  Superset: '\\u2283',\n  SupersetEqual: '\\u2287',\n  suphsol: '\\u27C9',\n  suphsub: '\\u2AD7',\n  suplarr: '\\u297B',\n  supmult: '\\u2AC2',\n  supne: '\\u228B',\n  supnE: '\\u2ACC',\n  supplus: '\\u2AC0',\n  supset: '\\u2283',\n  Supset: '\\u22D1',\n  supseteq: '\\u2287',\n  supseteqq: '\\u2AC6',\n  supsetneq: '\\u228B',\n  supsetneqq: '\\u2ACC',\n  supsim: '\\u2AC8',\n  supsub: '\\u2AD4',\n  supsup: '\\u2AD6',\n  swarhk: '\\u2926',\n  swarr: '\\u2199',\n  swArr: '\\u21D9',\n  swarrow: '\\u2199',\n  swnwar: '\\u292A',\n  szlig: '\\xDF',\n  Tab: '\\t',\n  target: '\\u2316',\n  tau: '\\u03C4',\n  Tau: '\\u03A4',\n  tbrk: '\\u23B4',\n  tcaron: '\\u0165',\n  Tcaron: '\\u0164',\n  tcedil: '\\u0163',\n  Tcedil: '\\u0162',\n  tcy: '\\u0442',\n  Tcy: '\\u0422',\n  tdot: '\\u20DB',\n  telrec: '\\u2315',\n  tfr: '\\uD835\\uDD31',\n  Tfr: '\\uD835\\uDD17',\n  there4: '\\u2234',\n  therefore: '\\u2234',\n  Therefore: '\\u2234',\n  theta: '\\u03B8',\n  Theta: '\\u0398',\n  thetasym: '\\u03D1',\n  thetav: '\\u03D1',\n  thickapprox: '\\u2248',\n  thicksim: '\\u223C',\n  ThickSpace: '\\u205F\\u200A',\n  thinsp: '\\u2009',\n  ThinSpace: '\\u2009',\n  thkap: '\\u2248',\n  thksim: '\\u223C',\n  thorn: '\\xFE',\n  THORN: '\\xDE',\n  tilde: '\\u02DC',\n  Tilde: '\\u223C',\n  TildeEqual: '\\u2243',\n  TildeFullEqual: '\\u2245',\n  TildeTilde: '\\u2248',\n  times: '\\xD7',\n  timesb: '\\u22A0',\n  timesbar: '\\u2A31',\n  timesd: '\\u2A30',\n  tint: '\\u222D',\n  toea: '\\u2928',\n  top: '\\u22A4',\n  topbot: '\\u2336',\n  topcir: '\\u2AF1',\n  topf: '\\uD835\\uDD65',\n  Topf: '\\uD835\\uDD4B',\n  topfork: '\\u2ADA',\n  tosa: '\\u2929',\n  tprime: '\\u2034',\n  trade: '\\u2122',\n  TRADE: '\\u2122',\n  triangle: '\\u25B5',\n  triangledown: '\\u25BF',\n  triangleleft: '\\u25C3',\n  trianglelefteq: '\\u22B4',\n  triangleq: '\\u225C',\n  triangleright: '\\u25B9',\n  trianglerighteq: '\\u22B5',\n  tridot: '\\u25EC',\n  trie: '\\u225C',\n  triminus: '\\u2A3A',\n  TripleDot: '\\u20DB',\n  triplus: '\\u2A39',\n  trisb: '\\u29CD',\n  tritime: '\\u2A3B',\n  trpezium: '\\u23E2',\n  tscr: '\\uD835\\uDCC9',\n  Tscr: '\\uD835\\uDCAF',\n  tscy: '\\u0446',\n  TScy: '\\u0426',\n  tshcy: '\\u045B',\n  TSHcy: '\\u040B',\n  tstrok: '\\u0167',\n  Tstrok: '\\u0166',\n  twixt: '\\u226C',\n  twoheadleftarrow: '\\u219E',\n  twoheadrightarrow: '\\u21A0',\n  uacute: '\\xFA',\n  Uacute: '\\xDA',\n  uarr: '\\u2191',\n  uArr: '\\u21D1',\n  Uarr: '\\u219F',\n  Uarrocir: '\\u2949',\n  ubrcy: '\\u045E',\n  Ubrcy: '\\u040E',\n  ubreve: '\\u016D',\n  Ubreve: '\\u016C',\n  ucirc: '\\xFB',\n  Ucirc: '\\xDB',\n  ucy: '\\u0443',\n  Ucy: '\\u0423',\n  udarr: '\\u21C5',\n  udblac: '\\u0171',\n  Udblac: '\\u0170',\n  udhar: '\\u296E',\n  ufisht: '\\u297E',\n  ufr: '\\uD835\\uDD32',\n  Ufr: '\\uD835\\uDD18',\n  ugrave: '\\xF9',\n  Ugrave: '\\xD9',\n  uHar: '\\u2963',\n  uharl: '\\u21BF',\n  uharr: '\\u21BE',\n  uhblk: '\\u2580',\n  ulcorn: '\\u231C',\n  ulcorner: '\\u231C',\n  ulcrop: '\\u230F',\n  ultri: '\\u25F8',\n  umacr: '\\u016B',\n  Umacr: '\\u016A',\n  uml: '\\xA8',\n  UnderBar: '_',\n  UnderBrace: '\\u23DF',\n  UnderBracket: '\\u23B5',\n  UnderParenthesis: '\\u23DD',\n  Union: '\\u22C3',\n  UnionPlus: '\\u228E',\n  uogon: '\\u0173',\n  Uogon: '\\u0172',\n  uopf: '\\uD835\\uDD66',\n  Uopf: '\\uD835\\uDD4C',\n  uparrow: '\\u2191',\n  Uparrow: '\\u21D1',\n  UpArrow: '\\u2191',\n  UpArrowBar: '\\u2912',\n  UpArrowDownArrow: '\\u21C5',\n  updownarrow: '\\u2195',\n  Updownarrow: '\\u21D5',\n  UpDownArrow: '\\u2195',\n  UpEquilibrium: '\\u296E',\n  upharpoonleft: '\\u21BF',\n  upharpoonright: '\\u21BE',\n  uplus: '\\u228E',\n  UpperLeftArrow: '\\u2196',\n  UpperRightArrow: '\\u2197',\n  upsi: '\\u03C5',\n  Upsi: '\\u03D2',\n  upsih: '\\u03D2',\n  upsilon: '\\u03C5',\n  Upsilon: '\\u03A5',\n  UpTee: '\\u22A5',\n  UpTeeArrow: '\\u21A5',\n  upuparrows: '\\u21C8',\n  urcorn: '\\u231D',\n  urcorner: '\\u231D',\n  urcrop: '\\u230E',\n  uring: '\\u016F',\n  Uring: '\\u016E',\n  urtri: '\\u25F9',\n  uscr: '\\uD835\\uDCCA',\n  Uscr: '\\uD835\\uDCB0',\n  utdot: '\\u22F0',\n  utilde: '\\u0169',\n  Utilde: '\\u0168',\n  utri: '\\u25B5',\n  utrif: '\\u25B4',\n  uuarr: '\\u21C8',\n  uuml: '\\xFC',\n  Uuml: '\\xDC',\n  uwangle: '\\u29A7',\n  vangrt: '\\u299C',\n  varepsilon: '\\u03F5',\n  varkappa: '\\u03F0',\n  varnothing: '\\u2205',\n  varphi: '\\u03D5',\n  varpi: '\\u03D6',\n  varpropto: '\\u221D',\n  varr: '\\u2195',\n  vArr: '\\u21D5',\n  varrho: '\\u03F1',\n  varsigma: '\\u03C2',\n  varsubsetneq: '\\u228A\\uFE00',\n  varsubsetneqq: '\\u2ACB\\uFE00',\n  varsupsetneq: '\\u228B\\uFE00',\n  varsupsetneqq: '\\u2ACC\\uFE00',\n  vartheta: '\\u03D1',\n  vartriangleleft: '\\u22B2',\n  vartriangleright: '\\u22B3',\n  vBar: '\\u2AE8',\n  Vbar: '\\u2AEB',\n  vBarv: '\\u2AE9',\n  vcy: '\\u0432',\n  Vcy: '\\u0412',\n  vdash: '\\u22A2',\n  vDash: '\\u22A8',\n  Vdash: '\\u22A9',\n  VDash: '\\u22AB',\n  Vdashl: '\\u2AE6',\n  vee: '\\u2228',\n  Vee: '\\u22C1',\n  veebar: '\\u22BB',\n  veeeq: '\\u225A',\n  vellip: '\\u22EE',\n  verbar: '|',\n  Verbar: '\\u2016',\n  vert: '|',\n  Vert: '\\u2016',\n  VerticalBar: '\\u2223',\n  VerticalLine: '|',\n  VerticalSeparator: '\\u2758',\n  VerticalTilde: '\\u2240',\n  VeryThinSpace: '\\u200A',\n  vfr: '\\uD835\\uDD33',\n  Vfr: '\\uD835\\uDD19',\n  vltri: '\\u22B2',\n  vnsub: '\\u2282\\u20D2',\n  vnsup: '\\u2283\\u20D2',\n  vopf: '\\uD835\\uDD67',\n  Vopf: '\\uD835\\uDD4D',\n  vprop: '\\u221D',\n  vrtri: '\\u22B3',\n  vscr: '\\uD835\\uDCCB',\n  Vscr: '\\uD835\\uDCB1',\n  vsubne: '\\u228A\\uFE00',\n  vsubnE: '\\u2ACB\\uFE00',\n  vsupne: '\\u228B\\uFE00',\n  vsupnE: '\\u2ACC\\uFE00',\n  Vvdash: '\\u22AA',\n  vzigzag: '\\u299A',\n  wcirc: '\\u0175',\n  Wcirc: '\\u0174',\n  wedbar: '\\u2A5F',\n  wedge: '\\u2227',\n  Wedge: '\\u22C0',\n  wedgeq: '\\u2259',\n  weierp: '\\u2118',\n  wfr: '\\uD835\\uDD34',\n  Wfr: '\\uD835\\uDD1A',\n  wopf: '\\uD835\\uDD68',\n  Wopf: '\\uD835\\uDD4E',\n  wp: '\\u2118',\n  wr: '\\u2240',\n  wreath: '\\u2240',\n  wscr: '\\uD835\\uDCCC',\n  Wscr: '\\uD835\\uDCB2',\n  xcap: '\\u22C2',\n  xcirc: '\\u25EF',\n  xcup: '\\u22C3',\n  xdtri: '\\u25BD',\n  xfr: '\\uD835\\uDD35',\n  Xfr: '\\uD835\\uDD1B',\n  xharr: '\\u27F7',\n  xhArr: '\\u27FA',\n  xi: '\\u03BE',\n  Xi: '\\u039E',\n  xlarr: '\\u27F5',\n  xlArr: '\\u27F8',\n  xmap: '\\u27FC',\n  xnis: '\\u22FB',\n  xodot: '\\u2A00',\n  xopf: '\\uD835\\uDD69',\n  Xopf: '\\uD835\\uDD4F',\n  xoplus: '\\u2A01',\n  xotime: '\\u2A02',\n  xrarr: '\\u27F6',\n  xrArr: '\\u27F9',\n  xscr: '\\uD835\\uDCCD',\n  Xscr: '\\uD835\\uDCB3',\n  xsqcup: '\\u2A06',\n  xuplus: '\\u2A04',\n  xutri: '\\u25B3',\n  xvee: '\\u22C1',\n  xwedge: '\\u22C0',\n  yacute: '\\xFD',\n  Yacute: '\\xDD',\n  yacy: '\\u044F',\n  YAcy: '\\u042F',\n  ycirc: '\\u0177',\n  Ycirc: '\\u0176',\n  ycy: '\\u044B',\n  Ycy: '\\u042B',\n  yen: '\\xA5',\n  yfr: '\\uD835\\uDD36',\n  Yfr: '\\uD835\\uDD1C',\n  yicy: '\\u0457',\n  YIcy: '\\u0407',\n  yopf: '\\uD835\\uDD6A',\n  Yopf: '\\uD835\\uDD50',\n  yscr: '\\uD835\\uDCCE',\n  Yscr: '\\uD835\\uDCB4',\n  yucy: '\\u044E',\n  YUcy: '\\u042E',\n  yuml: '\\xFF',\n  Yuml: '\\u0178',\n  zacute: '\\u017A',\n  Zacute: '\\u0179',\n  zcaron: '\\u017E',\n  Zcaron: '\\u017D',\n  zcy: '\\u0437',\n  Zcy: '\\u0417',\n  zdot: '\\u017C',\n  Zdot: '\\u017B',\n  zeetrf: '\\u2128',\n  ZeroWidthSpace: '\\u200B',\n  zeta: '\\u03B6',\n  Zeta: '\\u0396',\n  zfr: '\\uD835\\uDD37',\n  Zfr: '\\u2128',\n  zhcy: '\\u0436',\n  ZHcy: '\\u0416',\n  zigrarr: '\\u21DD',\n  zopf: '\\uD835\\uDD6B',\n  Zopf: '\\u2124',\n  zscr: '\\uD835\\uDCCF',\n  Zscr: '\\uD835\\uDCB5',\n  zwj: '\\u200D',\n  zwnj: '\\u200C',\n}\nconst decodeMapLegacy = {\n  aacute: '\\xE1',\n  Aacute: '\\xC1',\n  acirc: '\\xE2',\n  Acirc: '\\xC2',\n  acute: '\\xB4',\n  aelig: '\\xE6',\n  AElig: '\\xC6',\n  agrave: '\\xE0',\n  Agrave: '\\xC0',\n  amp: '&',\n  AMP: '&',\n  aring: '\\xE5',\n  Aring: '\\xC5',\n  atilde: '\\xE3',\n  Atilde: '\\xC3',\n  auml: '\\xE4',\n  Auml: '\\xC4',\n  brvbar: '\\xA6',\n  ccedil: '\\xE7',\n  Ccedil: '\\xC7',\n  cedil: '\\xB8',\n  cent: '\\xA2',\n  copy: '\\xA9',\n  COPY: '\\xA9',\n  curren: '\\xA4',\n  deg: '\\xB0',\n  divide: '\\xF7',\n  eacute: '\\xE9',\n  Eacute: '\\xC9',\n  ecirc: '\\xEA',\n  Ecirc: '\\xCA',\n  egrave: '\\xE8',\n  Egrave: '\\xC8',\n  eth: '\\xF0',\n  ETH: '\\xD0',\n  euml: '\\xEB',\n  Euml: '\\xCB',\n  frac12: '\\xBD',\n  frac14: '\\xBC',\n  frac34: '\\xBE',\n  gt: '>',\n  GT: '>',\n  iacute: '\\xED',\n  Iacute: '\\xCD',\n  icirc: '\\xEE',\n  Icirc: '\\xCE',\n  iexcl: '\\xA1',\n  igrave: '\\xEC',\n  Igrave: '\\xCC',\n  iquest: '\\xBF',\n  iuml: '\\xEF',\n  Iuml: '\\xCF',\n  laquo: '\\xAB',\n  lt: '<',\n  LT: '<',\n  macr: '\\xAF',\n  micro: '\\xB5',\n  middot: '\\xB7',\n  nbsp: '\\xA0',\n  not: '\\xAC',\n  ntilde: '\\xF1',\n  Ntilde: '\\xD1',\n  oacute: '\\xF3',\n  Oacute: '\\xD3',\n  ocirc: '\\xF4',\n  Ocirc: '\\xD4',\n  ograve: '\\xF2',\n  Ograve: '\\xD2',\n  ordf: '\\xAA',\n  ordm: '\\xBA',\n  oslash: '\\xF8',\n  Oslash: '\\xD8',\n  otilde: '\\xF5',\n  Otilde: '\\xD5',\n  ouml: '\\xF6',\n  Ouml: '\\xD6',\n  para: '\\xB6',\n  plusmn: '\\xB1',\n  pound: '\\xA3',\n  quot: '\"',\n  QUOT: '\"',\n  raquo: '\\xBB',\n  reg: '\\xAE',\n  REG: '\\xAE',\n  sect: '\\xA7',\n  shy: '\\xAD',\n  sup1: '\\xB9',\n  sup2: '\\xB2',\n  sup3: '\\xB3',\n  szlig: '\\xDF',\n  thorn: '\\xFE',\n  THORN: '\\xDE',\n  times: '\\xD7',\n  uacute: '\\xFA',\n  Uacute: '\\xDA',\n  ucirc: '\\xFB',\n  Ucirc: '\\xDB',\n  ugrave: '\\xF9',\n  Ugrave: '\\xD9',\n  uml: '\\xA8',\n  uuml: '\\xFC',\n  Uuml: '\\xDC',\n  yacute: '\\xFD',\n  Yacute: '\\xDD',\n  yen: '\\xA5',\n  yuml: '\\xFF',\n}\nconst decodeMapNumeric = {\n  0: '\\uFFFD',\n  128: '\\u20AC',\n  130: '\\u201A',\n  131: '\\u0192',\n  132: '\\u201E',\n  133: '\\u2026',\n  134: '\\u2020',\n  135: '\\u2021',\n  136: '\\u02C6',\n  137: '\\u2030',\n  138: '\\u0160',\n  139: '\\u2039',\n  140: '\\u0152',\n  142: '\\u017D',\n  145: '\\u2018',\n  146: '\\u2019',\n  147: '\\u201C',\n  148: '\\u201D',\n  149: '\\u2022',\n  150: '\\u2013',\n  151: '\\u2014',\n  152: '\\u02DC',\n  153: '\\u2122',\n  154: '\\u0161',\n  155: '\\u203A',\n  156: '\\u0153',\n  158: '\\u017E',\n  159: '\\u0178',\n}\nconst invalidReferenceCodePoints = [\n  1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n  25, 26, 27, 28, 29, 30, 31, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136,\n  137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,\n  152, 153, 154, 155, 156, 157, 158, 159, 64976, 64977, 64978, 64979, 64980,\n  64981, 64982, 64983, 64984, 64985, 64986, 64987, 64988, 64989, 64990, 64991,\n  64992, 64993, 64994, 64995, 64996, 64997, 64998, 64999, 65000, 65001, 65002,\n  65003, 65004, 65005, 65006, 65007, 65534, 65535, 131070, 131071, 196606,\n  196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751,\n  524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430,\n  786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575,\n  1114110, 1114111,\n]\n\n/* -------------------------------------------------------------------------- */\n\nconst stringFromCharCode = String.fromCharCode\n\nconst contains = function (array, value) {\n  let index = -1\n  const length = array.length\n  while (++index < length) {\n    if (array[index] === value)\n      return true\n  }\n  return false\n}\n\nfunction merge(options, defaults) {\n  if (!options)\n    return defaults\n\n  const result = {}\n  let key\n  for (key in defaults) {\n    // A `hasOwnProperty` check is not needed here, since only recognized\n    // option names are used anyway. Any others are ignored.\n    result[key] = hasOwn(options, key) ? options[key] : defaults[key]\n  }\n  return result\n}\n\n// Modified version of `ucs2encode`; see https://mths.be/punycode.\nconst codePointToSymbol = function (codePoint, strict) {\n  let output = ''\n  if ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n    // See issue #4:\n    // “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n    // greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n    // REPLACEMENT CHARACTER.”\n    if (strict)\n      parseError('character reference outside the permissible Unicode range')\n\n    return '\\uFFFD'\n  }\n  if (hasOwn(decodeMapNumeric, codePoint)) {\n    if (strict)\n      parseError('disallowed character reference')\n\n    return decodeMapNumeric[codePoint]\n  }\n  if (strict && contains(invalidReferenceCodePoints, codePoint))\n    parseError('disallowed character reference')\n\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000\n    output += stringFromCharCode(((codePoint >>> 10) & 0x3FF) | 0xD800)\n    codePoint = 0xDC00 | (codePoint & 0x3FF)\n  }\n  output += stringFromCharCode(codePoint)\n  return output\n}\n\nconst hexEscape = function (codePoint) {\n  return `&#x${codePoint.toString(16).toUpperCase()};`\n}\n\nconst decEscape = function (codePoint) {\n  return `&#${codePoint};`\n}\n\nfunction parseError(message) {\n  throw new Error(`Parse error: ${message}`)\n}\n\n/* -------------------------------------------------------------------------- */\n\nconst encode = function (string, options) {\n  options = merge(options, encode.options)\n  const strict = options.strict\n  if (strict && regexInvalidRawCodePoint.test(string))\n    parseError('forbidden code point')\n\n  const encodeEverything = options.encodeEverything\n  const useNamedReferences = options.useNamedReferences\n  const allowUnsafeSymbols = options.allowUnsafeSymbols\n  const escapeCodePoint = options.decimal ? decEscape : hexEscape\n\n  const escapeBmpSymbol = function (symbol) {\n    return escapeCodePoint(symbol.charCodeAt(0))\n  }\n\n  if (encodeEverything) {\n    // Encode ASCII symbols.\n    string = string.replace(regexAsciiWhitelist, (symbol) => {\n      // Use named references if requested & possible.\n      if (useNamedReferences && hasOwn(encodeMap, symbol))\n        return `&${encodeMap[symbol]};`\n\n      return escapeBmpSymbol(symbol)\n    })\n    // Shorten a few escapes that represent two symbols, of which at least one\n    // is within the ASCII range.\n    if (useNamedReferences) {\n      string = string\n        .replace(/&gt;\\u20D2/g, '&nvgt;')\n        .replace(/&lt;\\u20D2/g, '&nvlt;')\n        .replace(/&#x66;&#x6A;/g, '&fjlig;')\n    }\n    // Encode non-ASCII symbols.\n    if (useNamedReferences) {\n      // Encode non-ASCII symbols that can be replaced with a named reference.\n      string = string.replace(regexEncodeNonAscii, (string) => {\n        // Note: there is no need to check `hasOwn(encodeMap, string)` here.\n        return `&${encodeMap[string]};`\n      })\n    }\n    // Note: any remaining non-ASCII symbols are handled outside of the `if`.\n  }\n  else if (useNamedReferences) {\n    // Apply named character references.\n    // Encode `<>\"'&` using named character references.\n    if (!allowUnsafeSymbols) {\n      string = string.replace(regexEscape, (string) => {\n        return `&${encodeMap[string]};` // no need to check `hasOwn()` here\n      })\n    }\n    // Shorten escapes that represent two symbols, of which at least one is\n    // `<>\"'&`.\n    string = string\n      .replace(/&gt;\\u20D2/g, '&nvgt;')\n      .replace(/&lt;\\u20D2/g, '&nvlt;')\n    // Encode non-ASCII symbols that can be replaced with a named reference.\n    string = string.replace(regexEncodeNonAscii, (string) => {\n      // Note: there is no need to check `hasOwn(encodeMap, string)` here.\n      return `&${encodeMap[string]};`\n    })\n  }\n  else if (!allowUnsafeSymbols) {\n    // Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n    // using named character references.\n    string = string.replace(regexEscape, escapeBmpSymbol)\n  }\n  return (\n    string\n      // Encode astral symbols.\n      .replace(regexAstralSymbols, ($0) => {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        const high = $0.charCodeAt(0)\n        const low = $0.charCodeAt(1)\n        const codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000\n        return escapeCodePoint(codePoint)\n      })\n      // Encode any remaining BMP symbols that are not printable ASCII symbols\n      // using a hexadecimal escape.\n      .replace(regexBmpWhitelist, escapeBmpSymbol)\n  )\n}\n// Expose default options (so they can be overridden globally).\nencode.options = {\n  allowUnsafeSymbols: false,\n  encodeEverything: false,\n  strict: false,\n  useNamedReferences: false,\n  decimal: false,\n}\n\nexport function decode(html: string, options?: any) {\n  options = merge(options, decode.options)\n  const strict = options.strict\n  if (strict && regexInvalidEntity.test(html))\n    parseError('malformed character reference')\n\n  return html.replace(\n    regexDecode,\n    ($0, $1, $2, $3, $4, $5, $6, $7, _$8) => {\n      let codePoint\n      let semicolon\n      let decDigits\n      let hexDigits\n      let reference\n      let next\n\n      if ($1) {\n        reference = $1\n        // Note: there is no need to check `hasOwn(decodeMap, reference)`.\n        return decodeMap[reference]\n      }\n\n      if ($2) {\n        // Decode named character references without trailing `;`, e.g. `&amp`.\n        // This is only a parse error if it gets converted to `&`, or if it is\n        // followed by `=` in an attribute context.\n        reference = $2\n        next = $3\n        if (next && options.isAttributeValue) {\n          if (strict && next === '=')\n            parseError('`&` did not start a character reference')\n\n          return $0\n        }\n        else {\n          if (strict) {\n            parseError(\n              'named character reference was not terminated by a semicolon',\n            )\n          }\n          // Note: there is no need to check `hasOwn(decodeMapLegacy, reference)`.\n          return decodeMapLegacy[reference] + (next || '')\n        }\n      }\n\n      if ($4) {\n        // Decode decimal escapes, e.g. `&#119558;`.\n        decDigits = $4\n        semicolon = $5\n        if (strict && !semicolon)\n          parseError('character reference was not terminated by a semicolon')\n\n        codePoint = Number.parseInt(decDigits, 10)\n        return codePointToSymbol(codePoint, strict)\n      }\n\n      if ($6) {\n        // Decode hexadecimal escapes, e.g. `&#x1D306;`.\n        hexDigits = $6\n        semicolon = $7\n        if (strict && !semicolon)\n          parseError('character reference was not terminated by a semicolon')\n\n        codePoint = Number.parseInt(hexDigits, 16)\n        return codePointToSymbol(codePoint, strict)\n      }\n\n      // If we’re still here, `if ($7)` is implied; it’s an ambiguous\n      // ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n      if (strict) {\n        parseError(\n          'named character reference was not terminated by a semicolon',\n        )\n      }\n      return $0\n    },\n  )\n}\n// Expose default options (so they can be overridden globally).\ndecode.options = {\n  isAttributeValue: false,\n  strict: false,\n}\n\nexport function escape(string) {\n  return string.replace(regexEscape, ($0) => {\n    // Note: there is no need to check `hasOwn(escapeMap, $0)` here.\n    return escapeMap[$0]\n  })\n}\n", "import { decode } from './encoding-he'\n\nexport function escapeHTML(text: string) {\n  return text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/'/g, '&apos;')\n    .replace(/\"/g, '&quot;')\n}\n\n// encode(text, {\n//   useNamedReferences: true,\n// })\n\nexport const unescapeHTML = (html: string) => decode(html)\n", "// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nimport type { VDocument, VDocumentFragment, VElement } from './vdom'\n\n/*\n * Abstraction for h/jsx like DOM descriptions.\n * It is used in DOM, VDOM\n *\n */\n\ninterface Context {\n  h?: any\n  document: VDocument | VDocumentFragment\n}\n\nfunction _h(\n  context: Context,\n  tag: string | ((a0: any) => VDocumentFragment | VElement),\n  attrs: object,\n  children: any[],\n): VDocumentFragment | VElement {\n  if (typeof tag === 'function') {\n    return tag({\n      props: { ...attrs, children },\n      attrs,\n      children,\n      h: context.h,\n      context,\n    })\n  }\n  else {\n    let isElement = true\n    let el: VDocumentFragment | VElement\n    if (tag) {\n      if (tag.toLowerCase() === 'fragment') {\n        el = context.document.createDocumentFragment()\n        isElement = false\n      }\n      else { el = context.document.createElement(tag) }\n    }\n    else {\n      el = context.document.createElement('div')\n    }\n    if (attrs && isElement) {\n      const element = el as VElement\n      for (let [key, value] of Object.entries(attrs)) {\n        key = key.toString()\n        const compareKey = key.toLowerCase()\n        if (compareKey === 'classname') {\n          element.className = value\n        }\n        else if (compareKey === 'on') {\n          Object.entries(value).forEach(([name, value]) => {\n            element.setAttribute(`on${name}`, String(value))\n          })\n          // else if (key.indexOf('on') === 0) {\n          //   if (el.addEventListener) {\n          //     el.addEventListener(key.substring(2), value)\n          //     continue\n          //   }\n        }\n        else if (value !== false && value != null) {\n          if (value === true)\n            element.setAttribute(key, key)\n          else\n            element.setAttribute(key, value.toString())\n        }\n      }\n    }\n    if (children) {\n      for (const childOuter of children) {\n        const cc = Array.isArray(childOuter) ? [...childOuter] : [childOuter]\n        for (const child of cc) {\n          if (child) {\n            if (child !== false && child != null) {\n              if (typeof child !== 'object') {\n                el.appendChild(\n                  context.document.createTextNode(child.toString()),\n                )\n              }\n              else {\n                el.appendChild(child)\n              }\n            }\n          }\n        }\n      }\n    }\n    return el\n  }\n}\n\nexport function hArgumentParser(tag: any, attrs: any, ...children: any[]) {\n  if (typeof tag === 'object') {\n    tag = 'fragment'\n    children = tag.children\n    attrs = tag.attrs\n  }\n  if (Array.isArray(attrs)) {\n    children = [attrs]\n    attrs = {}\n  }\n  else if (attrs) {\n    if (attrs.attrs) {\n      attrs = { ...attrs.attrs, ...attrs }\n      delete attrs.attrs\n    }\n  }\n  else {\n    attrs = {}\n  }\n  return {\n    tag,\n    attrs,\n    children:\n      typeof children[0] === 'string' ? children : children.flat(Number.POSITIVE_INFINITY),\n  }\n}\n\nexport function hFactory(context: Context) {\n  // let context = { document }\n  context.h = function h(itag: any, iattrs: any, ...ichildren: any[]) {\n    const { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n    return _h(context, tag, attrs, children)\n  }\n  return context.h\n}\n", "// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\n// Special cases:\n// 1. <noop> is an element that is not printed out, can be used to create a list of elements\n// 2. Attribute name '__' gets transformed to ':' for namespace emulation\n// 3. Emulate CDATA by <cdata> element\n\nimport { hArgumentParser } from './h'\nimport { escapeHTML } from './encoding'\nimport { hasOwn } from './utils'\n\nexport const SELF_CLOSING_TAGS = [\n  'area',\n  'base',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n  'command',\n]\n\nexport const CDATA = (s: string) => `<![CDATA[${s}]]>`\nexport const HTML = (s: string) => s\n\n// export function prependXMLIdentifier(s) {\n//   return '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' + s\n// }\n\n// https://reactjs.org/docs/jsx-in-depth.html\nexport function markup(\n  xmlMode: boolean,\n  tag: string,\n  attrs: any = {},\n  children?: any[] | string,\n) {\n  const hasChildren = !(\n    (typeof children === 'string' && children === '')\n    || (Array.isArray(children)\n      && (children.length === 0\n        || (children.length === 1 && children[0] === '')))\n    || children == null\n  )\n\n  const parts: string[] = []\n  tag = tag.replace(/__/g, ':')\n\n  // React fragment <>...</> and ours: <noop>...</noop>\n  if (tag !== 'noop' && tag !== '') {\n    if (tag !== 'cdata')\n      parts.push(`<${tag}`)\n    else\n      parts.push('<![CDATA[')\n\n    // Add attributes\n    for (let name in attrs) {\n      if (name && hasOwn(attrs, name)) {\n        const v = attrs[name]\n        if (name === 'html')\n          continue\n\n        if (name.toLowerCase() === 'classname')\n          name = 'class'\n\n        name = name.replace(/__/g, ':')\n        if (v === true) {\n          // s.push( ` ${name}=\"${name}\"`)\n          parts.push(` ${name}`)\n        }\n        else if (name === 'style' && typeof v === 'object') {\n          parts.push(\n            ` ${name}=\"${Object.keys(v)\n              .filter(k => v[k] != null)\n              .map((k) => {\n                let vv = v[k]\n                vv = typeof vv === 'number' ? `${vv}px` : vv\n                return `${k\n                  .replace(/([a-z])([A-Z])/g, '$1-$2')\n                  .toLowerCase()}:${vv}`\n              })\n              .join(';')}\"`,\n          )\n        }\n        else if (v !== false && v != null) {\n          parts.push(` ${name}=\"${escapeHTML(v.toString())}\"`)\n        }\n      }\n    }\n\n    if (tag !== 'cdata') {\n      if (xmlMode && !hasChildren) {\n        parts.push(' />')\n        return parts.join('')\n      }\n      else {\n        parts.push('>')\n      }\n    }\n\n    if (!xmlMode && SELF_CLOSING_TAGS.includes(tag))\n      return parts.join('')\n  }\n\n  // Append children\n  if (hasChildren) {\n    if (typeof children === 'string') {\n      parts.push(children)\n    }\n    else if (children && children.length > 0) {\n      for (let child of children) {\n        if (child != null && child !== false) {\n          if (!Array.isArray(child))\n            child = [child]\n\n          for (const c of child) {\n            // todo: this fails if textContent starts with `<` and ends with `>`\n            if (\n              (c.startsWith('<') && c.endsWith('>'))\n              || tag === 'script'\n              || tag === 'style'\n            )\n              parts.push(c)\n            else\n              parts.push(escapeHTML(c.toString()))\n          }\n        }\n      }\n    }\n  }\n\n  if (attrs.html)\n    parts.push(attrs.html)\n\n  if (tag !== 'noop' && tag !== '') {\n    if (tag !== 'cdata')\n      parts.push(`</${tag}>`)\n    else\n      parts.push(']]>')\n  }\n  return parts.join('')\n}\n\nexport function html(itag: string, iattrs?: object, ...ichildren: any[]) {\n  const { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n  return markup(false, tag, attrs, children)\n}\n\nexport const htmlVDOM = markup.bind(null, false)\n\nhtml.firstLine = '<!DOCTYPE html>'\nhtml.html = true\n\nexport const h = html\n", "// (C)opyright 2021-07-20 Dirk Holtwick, holtwick.it. All rights reserved.\n\nimport { parse } from 'css-what'\nimport type { VElement } from './vdom'\n\nfunction log(..._args: any) {}\n\n// Alternative could be https://github.com/leaverou/parsel\n\nconst cache: Record<string, any> = {}\n\nexport function parseSelector(selector: string) {\n  let ast = cache[selector]\n  if (ast == null) {\n    ast = parse(selector)\n    cache[selector] = ast\n  }\n  return ast\n}\n\n// Just a very small subset for now: https://github.com/fb55/css-what#api\n\nexport function matchSelector(\n  selector: string,\n  element: VElement,\n  { debug = false } = {},\n) {\n  for (const rules of parseSelector(selector)) {\n    if (debug) {\n      log('Selector:', selector)\n      log('Rules:', rules)\n      log('Element:', element)\n    }\n\n    const handleRules = (element: VElement, rules: any[]) => {\n      // let pos = 0\n      let success = false\n      for (const part of rules) {\n        const { type, name, action, value, _ignoreCase = true, data } = part\n        if (type === 'attribute') {\n          if (action === 'equals') {\n            success = element.getAttribute(name) === value\n            if (debug)\n              log('Attribute equals', success)\n          }\n          else if (action === 'start') {\n            success = !!element.getAttribute(name)?.startsWith(value)\n            if (debug)\n              log('Attribute start', success)\n          }\n          else if (action === 'end') {\n            success = !!element.getAttribute(name)?.endsWith(value)\n            if (debug)\n              log('Attribute start', success)\n          }\n          else if (action === 'element') {\n            if (name === 'class') {\n              success = element.classList.contains(value)\n              if (debug)\n                log('Attribute class', success)\n            }\n            else {\n              success = !!element.getAttribute(name)?.includes(value)\n              if (debug)\n                log('Attribute element', success)\n            }\n          }\n          else if (action === 'exists') {\n            success = element.hasAttribute(name)\n            if (debug)\n              log('Attribute exists', success)\n          }\n          else if (action === 'any') {\n            success = !!element.getAttribute(name)?.includes(value)\n            if (debug)\n              log('Attribute any', success)\n          }\n          else {\n            console.warn('Unknown CSS selector action', action)\n          }\n        }\n        else if (type === 'tag') {\n          success = element.tagName === name.toUpperCase()\n          if (debug)\n            log('Is tag', success)\n        }\n        else if (type === 'universal') {\n          success = true\n          if (debug)\n            log('Is universal', success)\n        }\n        else if (type === 'pseudo') {\n          if (name === 'not') {\n            let ok = true\n            data.forEach((rules: any) => {\n              if (!handleRules(element, rules))\n                ok = false\n            })\n            success = !ok\n          }\n          if (debug)\n            log('Is :not', success)\n          // } else if (type === 'descendant') {\n          //   element = element.\n        }\n        // else if (type === 'descendant') {\n        //   for (const child of element.childNodes)\n        //     handleRules(child, rules.slice(pos))\n        // }\n        else {\n          console.warn('Unknown CSS selector type', type, selector, rules)\n        }\n        // log(success, selector, part, element)\n        if (!success)\n          break\n\n        // pos += 1\n      }\n      return success\n    }\n\n    if (handleRules(element, rules))\n      return true\n  }\n  return false\n}\n", "// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nimport { escapeHTML } from './encoding'\nimport { hFactory } from './h'\nimport { html, htmlVDOM } from './html'\nimport { matchSelector } from './vcss'\n\n// For node debugging\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\nconst B = { fontWeight: 'bold' }\nconst I = { fontStyle: 'italic' }\nconst M = { backgroundColor: 'rgb(255, 250, 165)' }\nconst U = { textDecorations: 'underline' }\nconst S = { textDecorations: 'line-through' }\n// let C = {}\n\nconst DEFAULTS = {\n  b: B,\n  strong: B,\n  em: I,\n  i: I,\n  mark: M,\n  u: U,\n  a: U,\n  s: S,\n  del: S,\n  ins: M,\n  strike: S,\n  // 'code': C,\n  // 'tt': C\n} as any\n\nfunction toCamelCase(s: string): string {\n  return s.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (_m, chr) => chr.toUpperCase())\n}\n\nexport class VNode {\n  static ELEMENT_NODE = 1\n  static TEXT_NODE = 3\n  static CDATA_SECTION_NODE = 4\n  static PROCESSING_INSTRUCTION_NODE = 7\n  static COMMENT_NODE = 8\n  static DOCUMENT_NODE = 9\n  static DOCUMENT_TYPE_NODE = 10\n  static DOCUMENT_FRAGMENT_NODE = 11\n\n  _parentNode: any\n  _childNodes: any[]\n\n  get nodeType(): number {\n    console.error('Subclasses should define nodeType!')\n    return 0\n  }\n\n  get nodeName() {\n    console.error('Subclasses should define nodeName!')\n    return ''\n  }\n\n  get nodeValue(): string | null {\n    return null\n  }\n\n  constructor() {\n    this._parentNode = null\n    this._childNodes = []\n  }\n\n  cloneNode(deep = false) {\n    // @ts-expect-error xxx\n    const node = new this.constructor()\n    if (deep) {\n      node._childNodes = this._childNodes.map(c => c.cloneNode(true))\n      node._fixChildNodesParent()\n    }\n    return node\n  }\n\n  _fixChildNodesParent() {\n    this._childNodes.forEach(node => (node._parentNode = this))\n  }\n\n  insertBefore(newNode: VNode, node?: VNode) {\n    if (newNode !== node) {\n      let index = node ? this._childNodes.indexOf(node) : 0\n      if (index < 0)\n        index = 0\n      this._childNodes.splice(index, 0, newNode)\n      this._fixChildNodesParent()\n    }\n  }\n\n  appendChild(node: VNode | VNode[] | string | string[] | null | undefined) {\n    if (node == null)\n      return\n    if (node === this) {\n      console.warn('Cannot appendChild to self')\n      return\n    }\n    // log('appendChild', node, this)\n\n    if (node instanceof VDocument)\n      console.warn('No defined how to append a document to a node!', node)\n\n    if (node instanceof VDocumentFragment) {\n      for (const c of [...node._childNodes]) {\n        // Don't iterate over the original! Do [...el]\n        this.appendChild(c)\n      }\n    }\n    else if (Array.isArray(node)) {\n      for (const c of [...node]) {\n        // Don't iterate over the original! Do [...el]\n        this.appendChild(c)\n      }\n    }\n    else if (node instanceof VNode) {\n      node.remove()\n      this._childNodes.push(node)\n    }\n    else {\n      // Fallback for unknown data\n      try {\n        const text\n          = typeof node === 'string' ? node : JSON.stringify(node, null, 2)\n        this._childNodes.push(new VTextNode(text))\n      }\n      catch (err) {\n        console.error(\n          `The data ${node} to be added to ${this.render()} is problematic: ${err}`,\n        )\n      }\n    }\n    this._fixChildNodesParent()\n  }\n\n  append = this.appendChild\n\n  removeChild(node: { _parentNode: null }) {\n    const i = this._childNodes.indexOf(node)\n    if (i >= 0) {\n      node._parentNode = null\n      this._childNodes.splice(i, 1)\n      this._fixChildNodesParent()\n    }\n  }\n\n  /** Remove node */\n  remove() {\n    this?.parentNode?.removeChild(this)\n    return this\n  }\n\n  /** Replace content of node with text or nodes */\n  replaceChildren(...nodes: any[]) {\n    this._childNodes = nodes.map(n =>\n      typeof n === 'string' ? new VTextNode(n) : n.remove(),\n    )\n    this._fixChildNodesParent()\n  }\n\n  /** Replace node itself with nodes */\n  replaceWith(...nodes: any[]) {\n    const p = this._parentNode\n    if (p) {\n      const index = this._indexInParent()\n      if (index >= 0) {\n        nodes = nodes.map(n =>\n          typeof n === 'string' ? new VTextNode(n) : n.remove(),\n        )\n        p._childNodes.splice(index, 1, ...nodes)\n        this._parentNode = null\n        p._fixChildNodesParent()\n      }\n    }\n  }\n\n  _indexInParent() {\n    if (this._parentNode)\n      return this._parentNode.childNodes.indexOf(this)\n    return -1\n  }\n\n  get parentNode() {\n    return this._parentNode\n  }\n\n  get childNodes() {\n    return this._childNodes || []\n  }\n\n  get children() {\n    return this._childNodes || []\n  }\n\n  get firstChild() {\n    return this._childNodes[0]\n  }\n\n  get lastChild() {\n    return this._childNodes[this._childNodes.length - 1]\n  }\n\n  get nextSibling() {\n    const i = this._indexInParent()\n    if (i != null)\n      return this.parentNode.childNodes[i + 1] || null\n    return null\n  }\n\n  get previousSibling() {\n    const i = this._indexInParent()\n    if (i > 0)\n      return this.parentNode.childNodes[i - 1] || null\n    return null\n  }\n\n  flatten(): VElement[] {\n    const elements: VElement[] = []\n    if (this instanceof VElement)\n      elements.push(this)\n    for (const child of this._childNodes)\n      elements.push(...child.flatten())\n    return elements\n  }\n\n  flattenNodes(): VNode[] {\n    const nodes: VNode[] = []\n    nodes.push(this)\n    for (const child of this._childNodes)\n      nodes.push(...child.flattenNodes())\n    return nodes\n  }\n\n  render() {\n    return ''\n  }\n\n  get textContent(): string | null {\n    return this._childNodes.map(c => c.textContent).join('')\n  }\n\n  set textContent(text) {\n    this._childNodes = []\n    if (text)\n      this.appendChild(new VTextNode(text.toString()))\n  }\n\n  contains(otherNode: this) {\n    if (otherNode === this)\n      return true\n    // if (this._childNodes.includes(otherNode)) return true\n    return this._childNodes.some(n => n.contains(otherNode))\n  }\n\n  get ownerDocument() {\n    if (\n      this.nodeType === VNode.DOCUMENT_NODE\n      || this.nodeType === VNode.DOCUMENT_FRAGMENT_NODE\n    )\n      return this\n\n    return this?._parentNode?.ownerDocument\n  }\n\n  toString(): string {\n    return `${this.nodeName}`\n    // return `${this.nodeName}: ${JSON.stringify(this.nodeValue)}`\n  }\n\n  [inspect]() {\n    return `${this.constructor.name} \"${this.render()}\"`\n  }\n}\n\nexport class VTextNode extends VNode {\n  _text: string\n\n  get nodeType(): number {\n    return VNode.TEXT_NODE\n  }\n\n  get nodeName() {\n    return '#text'\n  }\n\n  get nodeValue(): string | null {\n    return this._text || ''\n  }\n\n  get textContent(): string | null {\n    return this.nodeValue\n  }\n\n  constructor(text = '') {\n    super()\n    this._text = text\n  }\n\n  render() {\n    const parentTagName = this.parentNode?.tagName\n    if (parentTagName === 'SCRIPT' || parentTagName === 'STYLE')\n      return this._text\n\n    return escapeHTML(this._text)\n  }\n\n  cloneNode(deep = false) {\n    const node = super.cloneNode(deep)\n    node._text = this._text\n    return node\n  }\n}\n\nexport class VNodeQuery extends VNode {\n  getElementById(name: string) {\n    return this.flatten().find(e => e._attributes.id === name)\n  }\n\n  getElementsByClassName(name: any) {\n    return this.flatten().filter(e => e.classList.contains(name))\n  }\n\n  matches(selector: string) {\n    return matchSelector(selector, this as any)\n  }\n\n  querySelectorAll(selector: any) {\n    return this.flatten().filter(e => e.matches(selector))\n  }\n\n  querySelector(selector: string) {\n    return this.flatten().find(e => e.matches(selector))\n  }\n\n  //\n\n  parent(selector: string) {\n    if (this.matches(selector))\n      return this\n\n    if (this.parentNode == null)\n      return null\n\n    return this.parentNode?.parent(selector)\n  }\n\n  handle(selector: any, handler: (arg0: VElement, arg1: number) => void) {\n    let i = 0\n    for (const el of this.querySelectorAll(selector))\n      handler(el, i++)\n  }\n}\n\ninterface Attr {\n  name: string\n  value: string\n}\n\nexport class VElement extends VNodeQuery {\n  _originalTagName: string\n  _nodeName: any\n  _attributes: Record<string, string>\n  _styles: any\n\n  get nodeType() {\n    return VNode.ELEMENT_NODE\n  }\n\n  get nodeName() {\n    return this._nodeName\n  }\n\n  constructor(name = 'div', attrs = {}) {\n    super()\n    this._originalTagName = name\n    this._nodeName = (name || '').toUpperCase()\n    this._attributes = attrs || {}\n    this._styles = null\n  }\n\n  cloneNode(deep = false) {\n    const node = super.cloneNode(deep)\n    node._originalTagName = this._originalTagName\n    node._nodeName = this._nodeName\n    node._attributes = Object.assign({}, this._attributes)\n    return node\n  }\n\n  get attributes(): Attr[] {\n    return Object.entries(this._attributes).map(([name, value]): Attr => ({ name, value }))\n    // return this._attributes\n  }\n\n  get attributesObject() {\n    return { ...this._attributes }\n  }\n\n  _findAttributeName(name: string) {\n    const search = name.toLowerCase()\n    return (\n      Object.keys(this._attributes).find(\n        name => search === name.toLowerCase(),\n      ) || null\n    )\n  }\n\n  setAttribute(name: string, value: string) {\n    this.removeAttribute(name)\n    this._attributes[name] = value\n    this._styles = null\n  }\n\n  getAttribute(name: string): string | null {\n    const originalName = this._findAttributeName(name)\n    const value = originalName ? this._attributes[originalName] : null\n    if (value == null)\n      return null\n    else if (typeof value === 'string')\n      return value\n    else\n      return ''\n  }\n\n  removeAttribute(name: string | number) {\n    const originalName = this._findAttributeName(String(name))\n    if (originalName)\n      delete this._attributes[name]\n  }\n\n  hasAttribute(name: any) {\n    const originalName = this._findAttributeName(name)\n    return originalName ? this._attributes[originalName] != null : false\n  }\n\n  get style() {\n    if (this._styles == null) {\n      const styles = Object.assign({}, DEFAULTS[this.tagName.toLowerCase()] || {})\n      const styleString = this.getAttribute('style')\n      if (styleString) {\n        let m: string[] | null\n        const re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g\n        // eslint-disable-next-line no-cond-assign\n        while ((m = re.exec(styleString))) {\n          const name = m[1]\n          const value = m[2].trim()\n          styles[name] = value\n          styles[toCamelCase(name)] = value\n        }\n      }\n      this._styles = styles\n    }\n    return this._styles\n  }\n\n  get tagName() {\n    return this._nodeName\n  }\n\n  /** Private function to easily change the tagName */\n  setTagName(name: string) {\n    this._nodeName = name.toUpperCase()\n  }\n\n  get id(): string | null {\n    return this._attributes.id || null\n  }\n\n  set id(value: string | null) {\n    if (value == null)\n      delete this._attributes.id\n    else this._attributes.id = value\n  }\n\n  get src(): string | null {\n    return this._attributes.src\n  }\n\n  set src(value: string | null) {\n    if (value == null)\n      delete this._attributes.src\n    else this._attributes.src = value\n  }\n\n  //\n\n  getElementsByTagName(name: string) {\n    name = name.toUpperCase()\n    const elements = this.flatten()\n    if (name !== '*')\n      return elements.filter(e => e.tagName === name)\n\n    return elements\n  }\n\n  // html\n\n  setInnerHTML(_html: string) {\n    // throw new Error('setInnerHTML is not implemented; see vdomparser for an example')\n  }\n\n  get innerHTML() {\n    return this._childNodes.map(c => c.render(html)).join('')\n  }\n\n  set innerHTML(html) {\n    this.setInnerHTML(html)\n  }\n\n  get outerHTML() {\n    return this.render(htmlVDOM)\n  }\n\n  // class\n\n  get className(): string {\n    return this._attributes.class || ''\n  }\n\n  set className(name: string | string[]) {\n    if (Array.isArray(name)) {\n      name = name.filter(n => !!n).join(' ')\n    }\n    else if (typeof name === 'object') {\n      name = Object.entries(name)\n        .filter(([_k, v]) => !!v)\n        .map(([k, _v]) => k)\n        .join(' ')\n    }\n    this._attributes.class = name\n  }\n\n  get classList() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    const classNames = String(this.className ?? '').trim().split(/\\s+/g) || []\n    // log('classList', classNames)\n    return {\n      contains(s: any) {\n        return classNames.includes(s)\n      },\n      add(s: any) {\n        if (!classNames.includes(s)) {\n          classNames.push(s)\n          self.className = classNames\n        }\n      },\n      remove(s: any) {\n        const index = classNames.indexOf(s)\n        if (index >= 0) {\n          classNames.splice(index, 1)\n          self.className = classNames\n        }\n      },\n    }\n  }\n\n  //\n\n  render(h = htmlVDOM) {\n    return h(\n      this._originalTagName || this.tagName,\n      this._attributes,\n      this._childNodes.map(c => c.render(h)).join(''), // children:string is not escaped again\n    )\n  }\n}\n\nexport class VDocType extends VNode {\n  // todo\n\n  name: any\n  publicId: any\n  systemId: any\n\n  get nodeName(): string {\n    return super.nodeName\n  }\n\n  get nodeValue(): string | null {\n    return super.nodeValue\n  }\n\n  get nodeType(): number {\n    return VDocType.DOCUMENT_TYPE_NODE\n  }\n\n  render() {\n    return '<!DOCTYPE html>' // hack!\n  }\n}\n\nexport class VDocumentFragment extends VNodeQuery {\n  docType?: VDocType\n\n  get nodeType() {\n    return VNode.DOCUMENT_FRAGMENT_NODE\n  }\n\n  get nodeName() {\n    return '#document-fragment'\n  }\n\n  render(h = htmlVDOM) {\n    return this._childNodes.map(c => c.render(h) || []).join('')\n  }\n\n  get innerHTML() {\n    // for debug\n    return this._childNodes.map(c => c.render(html)).join('')\n  }\n\n  createElement(name: string, attrs = {}) {\n    return new VElement(name, attrs)\n  }\n\n  createDocumentFragment() {\n    return new VDocumentFragment()\n  }\n\n  createTextNode(text?: string) {\n    return new VTextNode(text)\n  }\n}\n\nexport class VDocument extends VDocumentFragment {\n  get nodeType() {\n    return VNode.DOCUMENT_NODE\n  }\n\n  get nodeName() {\n    return '#document'\n  }\n\n  get documentElement() {\n    return this.firstChild\n  }\n\n  render(h = htmlVDOM) {\n    let content = super.render(h)\n    if (this.docType)\n      content = this.docType.render() + content\n\n    return content\n  }\n}\n\nexport class VHTMLDocument extends VDocument {\n  constructor(empty = false) {\n    super()\n    this.docType = new VDocType()\n    if (!empty) {\n      const html = new VElement('html')\n      const body = new VElement('body')\n      const head = new VElement('head')\n      const title = new VElement('title')\n      html.appendChild(head)\n      head.appendChild(title)\n      html.appendChild(body)\n      this.appendChild(html)\n    }\n  }\n\n  get body(): VElement {\n    let body = this.querySelector('body')\n    if (!body) {\n      let html = this.querySelector('html')\n      if (!html) {\n        html = new VElement('html')\n        this.appendChild(html)\n      }\n      body = new VElement('body')\n      html.appendChild(html)\n    }\n    return body\n  }\n\n  get title(): string {\n    return this.querySelector('title')?.textContent || ''\n  }\n\n  set title(title: string) {\n    const titleElement = this.querySelector('title')\n    if (titleElement)\n      titleElement.textContent = title\n  }\n\n  get head(): VElement {\n    let head = this.querySelector('head')\n    if (!head) {\n      let html = this.querySelector('html')\n      if (!html) {\n        html = new VElement('html')\n        this.appendChild(html)\n      }\n      head = new VElement('head')\n      html.insertBefore(html)\n    }\n    return head\n  }\n}\n\nexport function createDocument(): VDocument {\n  return new VDocument()\n}\n\nexport function createHTMLDocument(): VHTMLDocument {\n  return new VHTMLDocument()\n}\n\nexport const document = createDocument()\nexport const h = hFactory({ document })\n", "// (C)opyright 2021-07-20 Dirk Holtwick, holtwick.it. All rights reserved.\n\nimport type { VNodeQuery } from './vdom'\nimport { VDocumentFragment } from './vdom'\n\nexport function removeBodyContainer(body: VNodeQuery): VNodeQuery {\n  const ehead = body.querySelector('head')\n  const ebody = body.querySelector('body')\n  if (ebody || ehead) {\n    const body = new VDocumentFragment()\n    ehead && body.appendChild(ehead.childNodes)\n    ebody && body.appendChild(ebody.children)\n    return body\n  }\n  return body\n}\n\nconst object = {}\nconst hasOwnProperty = object.hasOwnProperty\n\n/** Fallback for Object.hasOwn */\nexport function hasOwn(object: any, propertyName: string) {\n  return hasOwnProperty.call(object, propertyName)\n}\n", "// Taken from https://github.com/creeperyang/html-parser-lite\n// and slightly modified. Original also under MIT license. Thanks.\n\n// attribute, like href=\"javascript:void(0)\"\n// 1. start with name (not empty and not =)\n// 2. and then \\s*=\\s*\n// 3. and value can be \"value\" | 'value' | value\n// 4. 2 and 3 are optional\nconst attrRe = /([^=\\s]+)(\\s*=\\s*((\"([^\"]*)\")|('([^']*)')|[^>\\s]+))?/gm\nconst endTagRe = /^<\\/([^>\\s]+)[^>]*>/m\n// start tag, like <a href=\"link\"> <img/>\n// 1. must start with <tagName\n// 2. optional attrbutes\n// 3. /> or >\nconst startTagRe = /^<([^>\\s\\/]+)((\\s+[^=>\\s]+(\\s*=\\s*((\"[^\"]*\")|('[^']*')|[^>\\s]+))?)*)\\s*\\/?\\s*>/m\nconst selfCloseTagRe = /\\s*\\/\\s*>\\s*$/m\n\n/**\n * This is a simple html parser. Will read and parse html string.\n *\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\nexport class HtmlParser {\n  scanner: any\n  options: any\n  attrRe = attrRe\n  endTagRe = endTagRe\n  startTagRe = startTagRe\n  defaults = { ignoreWhitespaceText: false }\n\n  constructor(options: {\n    scanner?: any\n    ignoreWhitespaceText?: boolean\n  } = {}) {\n    if (options.scanner)\n      this.scanner = options.scanner\n    this.options = Object.assign({}, this.defaults, options)\n  }\n\n  parse(html: string) {\n    let treatAsChars = false\n    let index, match, characters\n    while (html.length) {\n      // comment\n      if (html.substring(0, 4) === '<!--') {\n        index = html.indexOf('-->')\n        if (index !== -1) {\n          this.scanner.comment(html.substring(4, index))\n          html = html.substring(index + 3)\n          treatAsChars = false\n        }\n        else {\n          treatAsChars = true\n        }\n      }\n      // end tag\n      else if (html.substring(0, 2) === '</') {\n        match = this.endTagRe.exec(html)\n        if (match) {\n          html = RegExp.rightContext\n          treatAsChars = false\n          this.parseEndTag(RegExp.lastMatch, match[1])\n        }\n        else {\n          treatAsChars = true\n        }\n      }\n      // start tag\n      else if (html.charAt(0) === '<') {\n        match = this.startTagRe.exec(html)\n        if (match) {\n          html = RegExp.rightContext\n          treatAsChars = false\n          this.parseStartTag(RegExp.lastMatch, match[1], match)\n        }\n        else {\n          treatAsChars = true\n        }\n      }\n\n      if (treatAsChars) {\n        index = html.indexOf('<')\n        let offset = index\n\n        if (index === 0) {\n          // First char is a < so find the next one\n          index = html.substring(1).indexOf('<')\n          // We're at substring(1) so add 1 to the index\n          offset = offset + 1\n        }\n\n        if (index === -1) {\n          characters = html\n          html = ''\n        }\n        else {\n          characters = html.substring(0, offset)\n          html = html.substring(offset)\n        }\n\n        if (!this.options.ignoreWhitespaceText || !/^\\s*$/.test(characters))\n          this.scanner.characters(characters)\n      }\n\n      treatAsChars = true\n      match = null\n    }\n  }\n\n  parseStartTag(input: string, tagName: string, match: any) {\n    const isSelfColse = selfCloseTagRe.test(input)\n    let attrInput = match[2]\n    if (isSelfColse)\n      attrInput = attrInput.replace(/\\s*\\/\\s*$/, '')\n\n    const attrs = this.parseAttributes(tagName, attrInput)\n    this.scanner.startElement(tagName, attrs, isSelfColse, match[0])\n  }\n\n  parseEndTag(input: string, tagName: string) {\n    this.scanner.endElement(tagName)\n  }\n\n  parseAttributes(tagName: string, input: string) {\n    const attrs: Record<string, any> = {}\n    input.replace(this.attrRe, (...m: any[]) => {\n      const [_attr, name, _c2, value, _c4, valueInQuote, _c6, valueInSingleQuote] = m\n      attrs[name] = valueInSingleQuote ?? valueInQuote ?? value ?? true\n      return undefined as any // hack\n    })\n    return attrs\n  }\n}\n", "// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\n/* eslint-disable n/prefer-global/buffer */\n\nimport { unescapeHTML } from './encoding'\nimport { SELF_CLOSING_TAGS } from './html'\nimport { HtmlParser } from './htmlparser'\nimport { hasOwn } from './utils'\nimport {\n  VDocType,\n  VDocumentFragment,\n  VElement,\n  VHTMLDocument,\n  VNode,\n  VTextNode,\n  document,\n} from './vdom'\n\n// Makes sure we operate on VNodes\nexport function vdom(obj: VNode | Buffer | string | null = null): VNode {\n  if (obj instanceof VNode)\n    return obj\n\n  if (obj instanceof Buffer)\n    obj = obj.toString('utf-8')\n\n  if (typeof obj === 'string')\n    return parseHTML(obj)\n\n  // console.warn('Cannot convert to VDOM:', obj)\n  return new VDocumentFragment()\n}\n\nexport function parseHTML(html: string): VDocumentFragment | VHTMLDocument {\n  if (typeof html !== 'string') {\n    console.error('parseHTML requires string, found', html)\n    throw new Error('parseHTML requires string')\n  }\n\n  const frag\n    = html.indexOf('<!') === 0 ? new VHTMLDocument(true) : new VDocumentFragment() // !hack\n\n  const stack: VNode[] = [frag]\n\n  const parser = new HtmlParser({\n    // the for methods must be implemented yourself\n    scanner: {\n      startElement(\n        tagName: string,\n        attrs: Record<string, string>,\n        isSelfClosing: boolean,\n      ) {\n        const lowerTagName = tagName.toLowerCase()\n\n        if (lowerTagName === '!doctype') {\n          frag.docType = new VDocType()\n          return\n        }\n\n        for (const name in attrs) {\n          if (hasOwn(attrs, name)) {\n            const value = attrs[name]\n            // console.log(name, value)\n            if (typeof value === 'string')\n              attrs[name] = unescapeHTML(value)\n          }\n        }\n        const parentNode = stack[stack.length - 1]\n        if (parentNode) {\n          const element = document.createElement(tagName, attrs)\n          parentNode.appendChild(element)\n          if (\n            !(\n              SELF_CLOSING_TAGS.includes(tagName.toLowerCase()) || isSelfClosing\n            )\n          )\n            stack.push(element)\n        }\n      },\n      endElement(_tagName: string) {\n        stack.pop()\n      },\n      characters(text: string) {\n        text = unescapeHTML(text)\n        const parentNode = stack[stack.length - 1]\n        if (parentNode?.lastChild?.nodeType === VNode.TEXT_NODE) {\n          parentNode.lastChild._text += text\n        }\n        else {\n          if (parentNode)\n            parentNode.appendChild(new VTextNode(text))\n            // } else {\n            //   console.trace(parentNode, stack)\n        }\n      },\n      comment(_text: string) {},\n    },\n  })\n  parser.parse(html)\n  // console.log(\"frag\", frag)\n  return frag\n}\n\n// export function parseHTML2(html) {\n//   let frag = new VDocumentFragment()\n//\n//   let stack = [frag]\n//   let currentElement = frag\n//\n//   let parser = new Parser({\n//     onopentag: (name, attrs) => {\n//       let element = document.createElement(name, attrs)\n//       stack.push(element)\n//       currentElement.appendChild(element)\n//       currentElement = element\n//     },\n//     ontext: function (text) {\n//       if (currentElement?.lastChild?.nodeType === VNode.TEXT_NODE) {\n//         currentElement.lastChild._text += text\n//       } else {\n//         currentElement.appendChild(new VTextNode(text))\n//       }\n//     },\n//     onclosetag: function (name) {\n//       let element = stack.pop()\n//       currentElement = stack[stack.length - 1]\n//       // if (element.nodeName !== currentElement.nodeName) {\n//       //   console.log('error', element, currentElement)\n//       // }\n//     },\n//   }, { decodeEntities: true })\n//   parser.write(html)\n//   parser.end()\n//\n//   // console.log('frag', frag.innerHTML)\n//\n//   return frag\n// }\n\nVElement.prototype.setInnerHTML = function (html) {\n  const frag = parseHTML(html)\n  this._childNodes = frag._childNodes\n  this._fixChildNodesParent()\n}\n", "// (C)opyright 2021-07-20 Dirk Holtwick, holtwick.it. All rights reserved.\n\nimport type { VDocument } from './vdom'\nimport { VNode, VTextNode } from './vdom'\n\nconst SELECTOR_BLOCK_ELEMENTS\n  = 'meta,link,script,p,h1,h2,h3,h4,h5,h6,blockquote,div,ul,ol,li,article,section,footer,head,body,title,nav,section,article,hr,form'\nconst TAGS_KEEP_CONTENT = ['PRE', 'CODE', 'SCRIPT', 'STYLE', 'TT']\n\nfunction level(element: VNode): string {\n  let indent = ''\n  while (element.parentNode) {\n    indent += '  '\n    element = element.parentNode\n  }\n  return indent.substr(2)\n}\n\nexport function tidyDOM(document: VDocument) {\n  document.handle(SELECTOR_BLOCK_ELEMENTS, (e) => {\n    // Ignore if inside PRE etc.\n    let ee = e\n    while (ee) {\n      if (TAGS_KEEP_CONTENT.includes(ee.tagName))\n        return\n      ee = ee.parentNode\n    }\n\n    const prev = e.previousSibling\n    if (\n      !prev\n      || prev.nodeType !== VNode.TEXT_NODE\n      || !prev.nodeValue?.endsWith('\\n')\n    )\n      e.parentNode?.insertBefore(new VTextNode('\\n'), e)\n\n    e.parentNode?.insertBefore(new VTextNode(level(e)), e)\n\n    const next = e.nextSibling\n    if (\n      !next\n      || next.nodeType !== VNode.TEXT_NODE\n      || !next.nodeValue?.startsWith('\\n')\n    ) {\n      if (next)\n        e.parentNode?.insertBefore(new VTextNode('\\n'), next)\n      else\n        e.parentNode?.appendChild(new VTextNode('\\n'))\n    }\n\n    if (e.childNodes.length) {\n      const first = e.firstChild\n      if (first.nodeType === VNode.TEXT_NODE)\n        e.insertBefore(new VTextNode(`\\n${level(e)}  `))\n\n      e.appendChild(new VTextNode(`\\n${level(e)}`))\n    }\n  })\n}\n", "// (C)opyright 2021-07-20 Dirk Holtwick, holtwick.it. All rights reserved.\n\nimport { hArgumentParser } from './h'\nimport { markup } from './html'\n\nexport function xml(itag: string, iattrs?: object, ...ichildren: any[]) {\n  const { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n  return markup(true, tag, attrs, children)\n}\n\n// export const xmlVDOM = markup.bind(null, true)\n\nxml.firstLine = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'\nxml.xml = true\n\nexport const h = xml\n", "import type { VDocumentFragment, VHTMLDocument } from './vdom'\nimport { parseHTML } from './vdomparser'\n\nexport function handleHTML(html: string, handler: (document: VHTMLDocument | VDocumentFragment) => void) {\n  const document = parseHTML(html)\n  handler(document)\n  return document.render()\n}\n", "import { DOMSerializer, Node, Schema } from '@tiptap/pm/model'\nimport { createHTMLDocument, VHTMLDocument } from 'zeed-dom'\n\nexport function getHTMLFromFragment(doc: Node, schema: Schema, options?: { document?: Document }): string {\n  if (options?.document) {\n    // The caller is relying on their own document implementation. Use this\n    // instead of the default zeed-dom.\n    const wrap = options.document.createElement('div')\n\n    DOMSerializer.fromSchema(schema).serializeFragment(doc.content, { document: options.document }, wrap)\n    return wrap.innerHTML\n  }\n\n  // Use zeed-dom for serialization.\n  const zeedDocument = DOMSerializer.fromSchema(schema).serializeFragment(doc.content, {\n    document: createHTMLDocument() as unknown as Document,\n  }) as unknown as VHTMLDocument\n\n  return zeedDocument.render()\n}\n", "import { Extensions, getSchema, JSONContent } from '@tiptap/core'\nimport { Node } from '@tiptap/pm/model'\n\nimport { getHTMLFromFragment } from './getHTMLFromFragment.js'\n\nexport function generateHTML(doc: JSONContent, extensions: Extensions): string {\n  const schema = getSchema(extensions)\n  const contentNode = Node.fromJSON(schema, doc)\n\n  return getHTMLFromFragment(contentNode, schema)\n}\n", "import { Extensions, getSchema } from '@tiptap/core'\nimport { DOMParser } from '@tiptap/pm/model'\nimport { parseHTML } from 'zeed-dom'\n\nexport function generateJSON(html: string, extensions: Extensions): Record<string, any> {\n  const schema = getSchema(extensions)\n  const dom = parseHTML(html) as unknown as Node\n\n  return DOMParser.fromSchema(schema).parse(dom).toJSON()\n}\n", "/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n", "/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n", "/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n", "/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n", "/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n", "/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n", "import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n", "/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * \u2022 Transforms data to a binary format (not to a string)\n * \u2022 Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * \u2022 Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) \u21D2 RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n", "/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n", "/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n", "/* eslint-env browser */\n\nexport const subtle = crypto.subtle\nexport const getRandomValues = crypto.getRandomValues.bind(crypto)\n", "/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { getRandomValues } from 'lib0/webcrypto'\n\nexport const rand = Math.random\n\nexport const uint32 = () => getRandomValues(new Uint32Array(1))[0]\n\nexport const uint53 = () => {\n  const arr = getRandomValues(new Uint32Array(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\n\n/**\n * @return {string}\n */\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n", "/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10\u03BCs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n", "/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template {unknown[] | []} PS\n *\n * @param {PS} ps\n * @return {Promise<{ -readonly [P in keyof PS]: Awaited<PS[P]> }>}\n */\nexport const all = Promise.all.bind(Promise)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* c8 ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n", "/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n", "/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined' && localStorage) {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n", "/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n", "/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n", "/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n", "/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as array from './array.js'\nimport * as math from './math.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return createUint8ArrayViewFromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Implements base64url - see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * @param {Uint8Array} buf\n */\nexport const toBase64UrlEncoded = buf => toBase64(buf).replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '')\n\n/**\n * @param {string} base64\n */\nexport const fromBase64UrlEncoded = base64 => fromBase64(base64.replaceAll('-', '+').replaceAll('_', '/'))\n\n/**\n * Base64 is always a more efficient choice. This exists for utility purposes only.\n *\n * @param {Uint8Array} buf\n */\nexport const toHexString = buf => array.map(buf, b => b.toString(16).padStart(2, '0')).join('')\n\n/**\n * Note: This function expects that the hex doesn't start with 0x..\n *\n * @param {string} hex\n */\nexport const fromHexString = hex => {\n  const hlen = hex.length\n  const buf = new Uint8Array(math.ceil(hlen / 2))\n  for (let i = 0; i < hlen; i += 2) {\n    buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16)\n  }\n  return buf\n}\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data =>\n  encoding.encode(encoder => encoding.writeAny(encoder, data))\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n\n/**\n * Shift Byte Array {N} bits to the left. Does not expand byte array.\n *\n * @param {Uint8Array} bs\n * @param {number} N should be in the range of [0-7]\n */\nexport const shiftNBitsLeft = (bs, N) => {\n  if (N === 0) return bs\n  bs = new Uint8Array(bs)\n  bs[0] <<= N\n  for (let i = 1; i < bs.length; i++) {\n    bs[i - 1] |= bs[i] >>> (8 - N)\n    bs[i] <<= N\n  }\n  return bs\n}\n", "/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n", "/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* c8 ignore start */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\nexport const createTextNode = text => doc.createTextNode(text)\n\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n/* c8 ignore stop */\n", "/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = []\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]()\n  }\n  queue = []\n}\n\n/**\n * @param {function():void} f\n */\nexport const enqueue = f => {\n  queue.push(f)\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0)\n  }\n}\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId\n  }\n\n  destroy () {\n    clearFunction(this._)\n  }\n}\n\nconst Timeout = createTimeoutClass(clearTimeout)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\n\nconst Interval = createTimeoutClass(clearInterval)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\n\n/* c8 ignore next */\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\n\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next */\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\n\n/* c8 ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\n\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\n\n/**\n * @param {number} timeout Timeout of the debounce action\n * @return {function(function():void):void}\n */\nexport const createDebouncer = timeout => {\n  let timer = -1\n  return f => {\n    clearTimeout(timer)\n    if (f) {\n      timer = /** @type {any} */ (setTimeout(f, timeout))\n    }\n  }\n}\n", "/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n", "import * as symbol from './symbol.js'\nimport * as time from './time.js'\nimport * as env from './environment.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nexport const computeNoColorLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (arg.constructor === String || arg.constructor === Number) {\n      strBuilder.push(arg)\n    } else if (arg.constructor === Object) {\n      logArgs.push(JSON.stringify(arg))\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/* c8 ignore start */\n/**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (_print, moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n  return !doLogging\n    ? func.nop\n    : (...args) => {\n        const timeNow = time.getUnixTime()\n        const timeDiff = timeNow - lastLoggingTime\n        lastLoggingTime = timeNow\n        _print(\n          color,\n          moduleName,\n          UNCOLOR,\n          ...args.map((arg) =>\n            (typeof arg === 'string' || typeof arg === 'symbol')\n              ? arg\n              : JSON.stringify(arg)\n          ),\n          color,\n          ' +' + timeDiff + 'ms'\n        )\n      }\n}\n/* c8 ignore stop */\n", "/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as set from './set.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as common from './logging.common.js'\n\nexport { BOLD, UNBOLD, BLUE, GREY, GREEN, RED, PURPLE, ORANGE, UNCOLOR } from './logging.common.js'\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [common.BOLD]: pair.create('font-weight', 'bold'),\n  [common.UNBOLD]: pair.create('font-weight', 'normal'),\n  [common.BLUE]: pair.create('color', 'blue'),\n  [common.GREEN]: pair.create('color', 'green'),\n  [common.GREY]: pair.create('color', 'grey'),\n  [common.RED]: pair.create('color', 'red'),\n  [common.PURPLE]: pair.create('color', 'purple'),\n  [common.ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [common.UNCOLOR]: pair.create('color', 'black')\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\n/* c8 ignore start */\nconst computeBrowserLoggingArgs = (args) => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\n/* c8 ignore start */\nconst computeLoggingArgs = env.supportsColor\n  ? computeBrowserLoggingArgs\n  : common.computeNoColorLoggingArgs\n/* c8 ignore stop */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(common.ORANGE)\n  vconsoles.forEach((vc) => vc.print(args))\n}\n/* c8 ignore stop */\n\n/**\n * @param {Error} err\n */\n/* c8 ignore start */\nexport const printError = (err) => {\n  console.error(err)\n  vconsoles.forEach((vc) => vc.printError(err))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\n/* c8 ignore start */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log(\n      '%c                      ',\n      `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`\n    )\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach((vc) => vc.printImg(url, height))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} base64\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printImgBase64 = (base64, height) =>\n  printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupEnd())\n}\n\n/**\n * @param {function():Node} createNode\n */\n/* c8 ignore next 2 */\nexport const printDom = (createNode) =>\n  vconsoles.forEach((vc) => vc.printDom(createNode()))\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printCanvas = (canvas, height) =>\n  printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = set.create()\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\n/* c8 ignore start */\nconst _computeLineSpans = (args) => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [\n          pair.create('style', dom.mapToStyleString(currentStyle))\n        ], [dom.text(arg.toString())])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(\n        dom.element('span', [], [dom.text(/** @type {string} */ (content))])\n      )\n    }\n  }\n  return spans\n}\n/* c8 ignore stop */\n\nconst lineStyle =\n  'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* c8 ignore start */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [\n        pair.create('hidden', collapsed),\n        pair.create('style', 'color:grey;font-size:120%;')\n      ], [dom.text('\u25BC')])\n      const triangleRight = dom.element('span', [\n        pair.create('hidden', !collapsed),\n        pair.create('style', 'color:grey;font-size:125%;')\n      ], [dom.text('\u25B6')])\n      const content = dom.element(\n        'div',\n        [pair.create(\n          'style',\n          `${lineStyle};padding-left:${this.depth * 10}px`\n        )],\n        [triangleDown, triangleRight, dom.text(' ')].concat(\n          _computeLineSpans(args)\n        )\n      )\n      const nextContainer = dom.element('div', [\n        pair.create('hidden', collapsed)\n      ])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', (_event) => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('div', [\n          pair.create(\n            'style',\n            `${lineStyle};padding-left:${this.depth * 10}px`\n          )\n        ], _computeLineSpans(args))\n      ])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([common.RED, common.BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('img', [\n          pair.create('src', url),\n          pair.create('height', `${math.round(height * 1.5)}px`)\n        ])\n      ])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @param {Element} dom\n */\n/* c8 ignore next */\nexport const createVConsole = (dom) => new VConsole(dom)\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (moduleName) => common.createModuleLogger(print, moduleName)\n", "/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n", "import { Observable } from 'lib0/observable'\n\nimport {\n  Doc // eslint-disable-line\n} from '../internals.js'\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nexport class AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super()\n    this.doc = ydoc\n    this.awareness = awareness\n  }\n}\n", "import {\n  findIndexSS,\n  getState,\n  splitItem,\n  iterateStructs,\n  UpdateEncoderV2,\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array'\nimport * as math from 'lib0/math'\nimport * as map from 'lib0/map'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([])).push(new DeleteItem(clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\n\n  // Ensure that the delete set is written in a deterministic order\n  array.from(ds.clients.entries())\n    .sort((a, b) => b[0] - a[0])\n    .forEach(([client, dsitems]) => {\n      encoder.resetDsCurVal()\n      encoding.writeVarUint(encoder.restEncoder, client)\n      const len = dsitems.length\n      encoding.writeVarUint(encoder.restEncoder, len)\n      for (let i = 0; i < len; i++) {\n        const item = dsitems[i]\n        encoder.writeDsClock(item.clock)\n        encoder.writeDsLen(item.len)\n      }\n    })\n}\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([]))\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\n      }\n    }\n  }\n  return ds\n}\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock()\n      const clockEnd = clock + decoder.readDsLen()\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2()\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\n    writeDeleteSet(ds, unappliedDS)\n    return ds.toUint8Array()\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n */\nexport const equalDeleteSets = (ds1, ds2) => {\n  if (ds1.clients.size !== ds2.clients.size) return false\n  for (const [client, deleteItems1] of ds1.clients.entries()) {\n    const deleteItems2 = /** @type {Array<import('../internals.js').DeleteItem>} */ (ds2.clients.get(client))\n    if (deleteItems2 === undefined || deleteItems1.length !== deleteItems2.length) return false\n    for (let i = 0; i < deleteItems1.length; i++) {\n      const di1 = deleteItems1[i]\n      const di2 = deleteItems2[i]\n      if (di1.clock !== di2.clock || di1.len !== di2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n", "/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlFragment,\n  transact,\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { Observable } from 'lib0/observable'\nimport * as random from 'lib0/random'\nimport * as map from 'lib0/map'\nimport * as array from 'lib0/array'\nimport * as promise from 'lib0/promise'\n\nexport const generateNewClientId = random.uint32\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nexport class Doc extends Observable {\n  /**\n   * @param {DocOpts} opts configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = generateNewClientId()\n    this.guid = guid\n    this.collectionid = collectionid\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set()\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null\n    this.shouldLoad = shouldLoad\n    this.autoLoad = autoLoad\n    this.meta = meta\n    /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */\n    this.isLoaded = false\n    /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */\n    this.isSynced = false\n    /**\n     * Promise that resolves once the document has been loaded from a presistence provider.\n     */\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true\n        resolve(this)\n      })\n    })\n    const provideSyncedPromise = () => promise.create(resolve => {\n      /**\n       * @param {boolean} isSynced\n       */\n      const eventHandler = (isSynced) => {\n        if (isSynced === undefined || isSynced === true) {\n          this.off('sync', eventHandler)\n          resolve()\n        }\n      }\n      this.on('sync', eventHandler)\n    })\n    this.on('sync', isSynced => {\n      if (isSynced === false && this.isSynced) {\n        this.whenSynced = provideSyncedPromise()\n      }\n      this.isSynced = isSynced === undefined || isSynced === true\n      if (this.isSynced && !this.isLoaded) {\n        this.emit('load', [])\n      }\n    })\n    /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */\n    this.whenSynced = provideSyncedPromise()\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this)\n      }, null, true)\n    }\n    this.shouldLoad = true\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    return transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {}\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON()\n    })\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\n    const item = this._item\n    if (item !== null) {\n      this._item = null\n      const content = /** @type {ContentDoc} */ (item.content)\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false })\n      content.doc._item = item\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc)\n        }\n        transaction.subdocsRemoved.add(this)\n      }, null, true)\n    }\n    this.emit('destroyed', [true])\n    this.emit('destroy', [this])\n    super.destroy()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f)\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f)\n  }\n}\n", "import * as buffer from 'lib0/buffer'\nimport * as decoding from 'lib0/decoding'\nimport {\n  ID, createID\n} from '../internals.js'\n\nexport class DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nexport class UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nexport class DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder)\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1\n    this.dsCurrVal += diff\n    return diff\n  }\n}\n\nexport class UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder)\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = []\n    decoding.readVarUint(decoder) // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder))\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read()\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read()\n      this.keys.push(key)\n      return key\n    }\n  }\n}\n", "import * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nimport {\n  ID // eslint-disable-line\n} from '../internals.js'\n\nexport class DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder()\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n}\n\nexport class UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key)\n  }\n}\n\nexport class DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\n    this.dsCurrVal = 0\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal\n    this.dsCurrVal = clock\n    encoding.writeVarUint(this.restEncoder, diff)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase()\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1)\n    this.dsCurrVal += len\n  }\n}\n\nexport class UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map()\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.clientEncoder = new encoding.UintOptRleEncoder()\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.stringEncoder = new encoding.StringEncoder()\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\n    this.lenEncoder = new encoding.UintOptRleEncoder()\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client)\n    this.leftClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client)\n    this.rightClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed)\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key)\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++)\n      this.stringEncoder.write(key)\n    } else {\n      this.keyClockEncoder.write(clock)\n    }\n  }\n}\n", "/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  getState,\n  createID,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  readItemContent,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  DSEncoderV2,\n  DSDecoderV1,\n  DSEncoderV1,\n  mergeUpdates,\n  mergeUpdatesV2,\n  Skip,\n  diffUpdateV2,\n  convertUpdateFormatV2ToV1,\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as binary from 'lib0/binary'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as array from 'lib0/array'\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\n  encoder.writeClient(client)\n  encoding.writeVarUint(encoder.restEncoder, clock)\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0)\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((_clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    writeStructs(encoder, /** @type {Array<GC|Item>} */ (store.clients.get(client)), client, clock)\n  })\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create()\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs })\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen()\n          refs[i] = new GC(createID(client, clock), len)\n          clock += len\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder)\n          refs[i] = new Skip(createID(client, clock), len)\n          clock += len\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct\n          clock += struct.length\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = []\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop()\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  }\n  let curStructsTarget = getNextStructTarget()\n  if (curStructsTarget === null) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore()\n  const missingSV = new Map()\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client)\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock)\n    }\n  }\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\n  // caching the state because it is used very often\n  const state = new Map()\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client\n      const unapplicableItems = clientsStructRefs.get(client)\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i))\n        clientsStructRefs.delete(client)\n        unapplicableItems.i = 0\n        unapplicableItems.refs = []\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item])\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\n    }\n    stack.length = 0\n  }\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\n      const offset = localClock - stackHead.id.clock\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead)\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS()\n      } else {\n        const missing = stackHead.getMissing(transaction, store)\n        if (missing !== null) {\n          stack.push(stackHead)\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\n            addStackToRestSS()\n          } else {\n            stackHead = structRefs.refs[structRefs.i++]\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset)\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop())\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n    } else {\n      curStructsTarget = getNextStructTarget()\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2()\n    writeClientsStructs(encoder, restStructs, new Map())\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false\n    let retry = false\n    const doc = transaction.doc\n    const store = doc.store\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc)\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss)\n    const pending = store.pendingStructs\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client)\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock)\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\n      }\n    } else {\n      store.pendingStructs = restStructs\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\n      store.pendingStructs = null\n      applyUpdateV2(transaction.doc, update)\n    }\n  }, transactionOrigin, false)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update)\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\n}\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  const updates = [encoder.toUint8Array()]\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs)\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const clock = decoding.readVarUint(decoder.restDecoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\n  array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock)\n  })\n  return encoder\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc)\n  } else {\n    writeDocumentStateVector(encoder, doc)\n  }\n  return encoder.toUint8Array()\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\n", "import * as f from 'lib0/function'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l\n  const len = l.length\n  eventHandler.l = l.filter(g => f !== g)\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.')\n  }\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n", "import { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n", "import { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\n  }\n  return false\n}\n", "import {\n  AbstractType // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nexport const logType = type => {\n  const res = []\n  let n = type._start\n  while (n) {\n    res.push(n)\n    n = n.right\n  }\n  console.log('Children: ', res)\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content))\n}\n", "import {\n  YArray,\n  YMap,\n  readDeleteSet,\n  writeDeleteSet,\n  createDeleteSet,\n  DSEncoderV1, DSDecoderV1, ID, DeleteSet, YArrayEvent, Transaction, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding'\n\nimport { mergeDeleteSets, isDeleted } from './DeleteSet.js'\n\nexport class PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map()\n    this.yusers = storeType\n    this.doc = doc\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map()\n    this.dss = dss\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds')\n      const ids = user.get('ids')\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription)\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]))\n            }\n          })\n        })\n      })\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))))\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      )\n      ids.forEach(addClientId)\n    }\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      )\n    })\n    // add intial data\n    storeType.forEach(initUser)\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers\n    let user = users.get(userDescription)\n    if (!user) {\n      user = new YMap()\n      user.set('ids', new YArray())\n      user.set('ds', new YArray())\n      users.set(userDescription, user)\n    }\n    user.get('ids').push([clientid])\n    users.observe(_event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription)\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid])\n            }\n          })\n          const encoder = new DSEncoderV1()\n          const ds = this.dss.get(userDescription)\n          if (ds) {\n            writeDeleteSet(encoder, ds)\n            user.get('ds').push([encoder.toUint8Array()])\n          }\n        }\n      }, 0)\n    })\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds')\n        const ds = transaction.deleteSet\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1()\n          writeDeleteSet(encoder, ds)\n          yds.push([encoder.toUint8Array()])\n        }\n      })\n    })\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n", "import {\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  createID,\n  ContentType,\n  followRedone,\n  ID, Doc, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as error from 'lib0/error'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nexport const relativePositionToJSON = rpos => {\n  const json = {}\n  if (rpos.type) {\n    json.type = rpos.type\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname\n  }\n  if (rpos.item) {\n    json.item = rpos.item\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc\n  }\n  return json\n}\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc)\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createRelativePosition = (type, item, assoc) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock)\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null, assoc)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc)\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0\n  return new RelativePosition(type, tname, itemID, assoc)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  const assoc = rpos.assoc\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID)\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent)\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)) // adjust position based on left association if necessary\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID)\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length\n    } else {\n      index = 0\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n)\n", "import {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  createID,\n  getState,\n  findIndexSS,\n  UpdateEncoderV2,\n  applyUpdateV2,\n  LazyStructReader,\n  equalDeleteSets,\n  UpdateDecoderV1, UpdateDecoderV2, DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item, // eslint-disable-line\n  mergeDeleteSets\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as set from 'lib0/set'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, _item => {})\n    meta.add(snapshot)\n  }\n}\n\n/**\n * @example\n *  const ydoc = new Y.Doc({ gc: false })\n *  ydoc.getText().insert(0, 'world!')\n *  const snapshot = Y.snapshot(ydoc)\n *  ydoc.getText().insert(0, 'hello ')\n *  const restored = Y.createDocFromSnapshot(ydoc, snapshot)\n *  assert(restored.getText().toString() === 'world!')\n *\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('Garbage-collection must be disabled in `originDoc`!')\n  }\n  const { sv, ds } = snapshot\n\n  const encoder = new UpdateEncoderV2()\n  originDoc.transact(transaction => {\n    let size = 0\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++\n      }\n    })\n    encoding.writeVarUint(encoder.restEncoder, size)\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n      const structs = originDoc.store.clients.get(client) || []\n      const lastStructIndex = findIndexSS(structs, clock - 1)\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\n      encoder.writeClient(client)\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0)\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0)\n      }\n    }\n    writeDeleteSet(encoder, ds)\n  })\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\n  return newDoc\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n */\nexport const snapshotContainsUpdateV2 = (snapshot, update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n    if ((snapshot.sv.get(curr.id.client) || 0) < curr.id.clock + curr.length) {\n      return false\n    }\n  }\n  const mergedDS = mergeDeleteSets([snapshot.ds, readDeleteSet(updateDecoder)])\n  return equalDeleteSets(snapshot.ds, mergedDS)\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n */\nexport const snapshotContainsUpdate = (snapshot, update) => snapshotContainsUpdateV2(snapshot, update, UpdateDecoderV1)\n", "import {\n  GC,\n  splitItem,\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math'\nimport * as error from 'lib0/error'\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  let mid = structs[right]\n  let midclock = mid.id.clock\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex]\n    midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n    midindex = math.floor((left + right) / 2)\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n", "import {\n  getState,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  generateNewClientId,\n  createID,\n  cleanupYTextAfterTransaction,\n  UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as set from 'lib0/set'\nimport * as logging from 'lib0/logging'\nimport { callAll } from 'lib0/function'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = []\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set()\n    /**\n     * @type {boolean}\n     */\n    this._needFormattingCleanup = false\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return true\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n * @return {number} # of merged structs\n */\nconst tryToMergeWithLefts = (structs, pos) => {\n  let right = structs[pos]\n  let left = structs[pos - 1]\n  let i = pos\n  for (; i > 0; right = left, left = structs[--i - 1]) {\n    if (left.deleted === right.deleted && left.constructor === right.constructor) {\n      if (left.mergeWith(right)) {\n        if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n          /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\n        }\n        continue\n      }\n    }\n    break\n  }\n  const merged = pos - i\n  if (merged) {\n    // remove all merged structs from the array\n    structs.splice(pos + 1 - merged, merged)\n  }\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[si]\n      ) {\n        si -= 1 + tryToMergeWithLefts(structs, si)\n      }\n    }\n  })\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    const mergeStructs = transaction._mergeStructs\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) => {\n          // We need to think about the possibility that the user transforms the\n          // Y.Doc in the event.\n          if (type._dEH.l.length > 0 && (type._item === null || !type._item.deleted)) {\n            events = events\n              .filter(event =>\n                event.target._item === null || !event.target._item.deleted\n              )\n            events\n              .forEach(event => {\n                event.currentTarget = type\n                // path is relative to the current target\n                event._path = null\n              })\n            // sort events by path length so that top-level events are fired first.\n            events\n              .sort((event1, event2) => event1.path.length - event2.path.length)\n            // We don't need to check for events.length\n            // because we know it has at least one element\n            callEventHandlerListeners(type._dEH, events, transaction)\n          }\n        })\n      })\n      fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      callAll(fs, [])\n      if (transaction._needFormattingCleanup) {\n        cleanupYTextAfterTransaction(transaction)\n      }\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos;) {\n            i -= 1 + tryToMergeWithLefts(structs, i)\n          }\n        }\n      })\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = mergeStructs.length - 1; i >= 0; i--) {\n        const { client, clock } = mergeStructs[i].id\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          if (tryToMergeWithLefts(structs, replacedStructPos + 1) > 1) {\n            continue // no need to perform next check, both are already merged\n          }\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLefts(structs, replacedStructPos)\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\n        doc.clientID = generateNewClientId()\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid\n          }\n          doc.subdocs.add(subdoc)\n        })\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction])\n        subdocsRemoved.forEach(subdoc => subdoc.destroy())\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  /**\n   * @type {any}\n   */\n  let result = null\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc])\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    result = f(doc._transaction)\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0]\n      doc._transaction = null\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0)\n      }\n    }\n  }\n  return result\n}\n", "import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  createID,\n  redoItem,\n  isParentOf,\n  followRedone,\n  getItemCleanStart,\n  isDeleted,\n  addToDeleteSet,\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time'\nimport * as array from 'lib0/array'\nimport * as logging from 'lib0/logging'\nimport { Observable } from 'lib0/observable'\n\nexport class StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions\n    this.deletions = deletions\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false)\n    }\n  })\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set()\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges, undoManager) !== null || performedChange\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      result = performedChange ? stackItem : null\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0\n      }\n    })\n    _tr = transaction\n  }, undoManager)\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager])\n  }\n  return result\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nexport class UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = _tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super()\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = []\n    this.doc = doc\n    this.addToScope(typeScope)\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    this.captureTransaction = captureTransaction\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    this.lastChange = 0\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges\n    this.captureTimeout = captureTimeout\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true)\n      }\n      const insertions = new DeleteSet()\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0\n        const len = endClock - startClock\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len)\n        }\n      })\n      const now = time.getUnixTime()\n      let didAdd = false\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions))\n        didAdd = true\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true)\n        }\n      })\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent)\n      } else {\n        this.emit('stack-item-updated', changeEvent)\n      }\n    }\n    this.doc.on('afterTransaction', this.afterTransactionHandler)\n    this.doc.on('destroy', () => {\n      this.destroy()\n    })\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes]\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        if (ytype.doc !== this.doc) logging.warn('[yjs#509] Not same Y.Doc') // use MultiDocUndoManager instead. also see https://github.com/yjs/yjs/issues/509\n        this.scope.push(ytype)\n      }\n    })\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin)\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin)\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.undoStack = []\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.redoStack = []\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }])\n      })\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this)\n    this.doc.off('afterTransaction', this.afterTransactionHandler)\n    super.destroy()\n  }\n}\n", "import * as binary from 'lib0/binary'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\nimport * as f from 'lib0/function'\nimport * as logging from 'lib0/logging'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as string from 'lib0/string'\n\nimport {\n  ContentAny,\n  ContentBinary,\n  ContentDeleted,\n  ContentDoc,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentString,\n  ContentType,\n  createID,\n  decodeStateVector,\n  DSEncoderV1,\n  DSEncoderV2,\n  GC,\n  Item,\n  mergeDeleteSets,\n  readDeleteSet,\n  readItemContent,\n  Skip,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  writeDeleteSet,\n  YXmlElement,\n  YXmlHook\n} from '../internals.js'\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder)\n        yield new Skip(createID(client, clock), len)\n        clock += len\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        )\n        yield struct\n        clock += struct.length\n      } else {\n        const len = decoder.readLen()\n        yield new GC(createID(client, clock), len)\n        clock += len\n      }\n    }\n  }\n}\n\nexport class LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder)\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null\n    this.done = false\n    this.filterSkips = filterSkips\n    this.next()\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  logging.print('Structs: ', structs)\n  const ds = readDeleteSet(updateDecoder)\n  logging.print('DeleteSet: ', ds)\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n}\n\nexport class LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0\n    this.startClock = 0\n    this.written = 0\n    this.encoder = encoder\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = []\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let size = 0\n    let currClient = curr.id.client\n    let stopCounting = curr.id.clock !== 0 // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient)\n          encoding.writeVarUint(encoder.restEncoder, currClock)\n        }\n        currClient = curr.id.client\n        currClock = 0\n        stopCounting = curr.id.clock !== 0\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++\n      encoding.writeVarUint(encoder.restEncoder, currClient)\n      encoding.writeVarUint(encoder.restEncoder, currClock)\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder()\n    encoding.writeVarUint(enc, size)\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\n    encoder.restEncoder = enc\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0)\n    return encoder.toUint8Array()\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map()\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    // write the beginning to `from`\n    from.set(currClient, currClock)\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock)\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock)\n        // update currClient\n        currClient = curr.id.client\n      }\n      currClock = curr.id.clock + curr.length\n    }\n    // write the end to `to`\n    to.set(currClient, currClock)\n  }\n  return { from, to }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left)\n    const { client, clock } = leftItem.id\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n}\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null\n\n  const updateEncoder = new YEncoder()\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    )\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0]\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\n      let iterated = false\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next()\n        iterated = true\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n        currWrite = { struct: curr, offset: 0 }\n        currDecoder.next()\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\n            currWrite = { struct, offset: 0 }\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff\n            } else {\n              curr = sliceStruct(curr, diff)\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            currWrite = { struct: curr, offset: 0 }\n            currDecoder.next()\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\n      currDecoder.next()\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n      currWrite = { struct: next, offset: 0 }\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n    currWrite = null\n  }\n  finishLazyStructWriting(lazyStructEncoder)\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\n  const ds = mergeDeleteSets(dss)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv)\n  const encoder = new YEncoder()\n  const lazyStructWriter = new LazyStructWriter(encoder)\n  const decoder = new YDecoder(decoding.createDecoder(update))\n  const reader = new LazyStructReader(decoder, false)\n  while (reader.curr) {\n    const curr = reader.curr\n    const currClient = curr.id.client\n    const svClock = state.get(currClient) || 0\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next()\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\n      reader.next()\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\n        reader.next()\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next()\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter)\n  // write ds\n  const ds = readDeleteSet(decoder)\n  writeDeleteSet(encoder, ds)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\n    lazyWriter.written = 0\n  }\n}\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter)\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client)\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\n  }\n  struct.write(lazyWriter.encoder, offset)\n  lazyWriter.written++\n}\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter)\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i]\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written)\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @param {function(Item|GC|Skip):Item|GC|Skip} blockTransformer\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nexport const convertUpdateFormat = (update, blockTransformer, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  const updateEncoder = new YEncoder()\n  const lazyWriter = new LazyStructWriter(updateEncoder)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, blockTransformer(curr), 0)\n  }\n  finishLazyStructWriting(lazyWriter)\n  const ds = readDeleteSet(updateDecoder)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @typedef {Object} ObfuscatorOptions\n * @property {boolean} [ObfuscatorOptions.formatting=true]\n * @property {boolean} [ObfuscatorOptions.subdocs=true]\n * @property {boolean} [ObfuscatorOptions.yxml=true] Whether to obfuscate nodeName / hookName\n */\n\n/**\n * @param {ObfuscatorOptions} obfuscator\n */\nconst createObfuscator = ({ formatting = true, subdocs = true, yxml = true } = {}) => {\n  let i = 0\n  const mapKeyCache = map.create()\n  const nodeNameCache = map.create()\n  const formattingKeyCache = map.create()\n  const formattingValueCache = map.create()\n  formattingValueCache.set(null, null) // end of a formatting range should always be the end of a formatting range\n  /**\n   * @param {Item|GC|Skip} block\n   * @return {Item|GC|Skip}\n   */\n  return block => {\n    switch (block.constructor) {\n      case GC:\n      case Skip:\n        return block\n      case Item: {\n        const item = /** @type {Item} */ (block)\n        const content = item.content\n        switch (content.constructor) {\n          case ContentDeleted:\n            break\n          case ContentType: {\n            if (yxml) {\n              const type = /** @type {ContentType} */ (content).type\n              if (type instanceof YXmlElement) {\n                type.nodeName = map.setIfUndefined(nodeNameCache, type.nodeName, () => 'node-' + i)\n              }\n              if (type instanceof YXmlHook) {\n                type.hookName = map.setIfUndefined(nodeNameCache, type.hookName, () => 'hook-' + i)\n              }\n            }\n            break\n          }\n          case ContentAny: {\n            const c = /** @type {ContentAny} */ (content)\n            c.arr = c.arr.map(() => i)\n            break\n          }\n          case ContentBinary: {\n            const c = /** @type {ContentBinary} */ (content)\n            c.content = new Uint8Array([i])\n            break\n          }\n          case ContentDoc: {\n            const c = /** @type {ContentDoc} */ (content)\n            if (subdocs) {\n              c.opts = {}\n              c.doc.guid = i + ''\n            }\n            break\n          }\n          case ContentEmbed: {\n            const c = /** @type {ContentEmbed} */ (content)\n            c.embed = {}\n            break\n          }\n          case ContentFormat: {\n            const c = /** @type {ContentFormat} */ (content)\n            if (formatting) {\n              c.key = map.setIfUndefined(formattingKeyCache, c.key, () => i + '')\n              c.value = map.setIfUndefined(formattingValueCache, c.value, () => ({ i }))\n            }\n            break\n          }\n          case ContentJSON: {\n            const c = /** @type {ContentJSON} */ (content)\n            c.arr = c.arr.map(() => i)\n            break\n          }\n          case ContentString: {\n            const c = /** @type {ContentString} */ (content)\n            c.str = string.repeat((i % 10) + '', c.str.length)\n            break\n          }\n          default:\n            // unknown content type\n            error.unexpectedCase()\n        }\n        if (item.parentSub) {\n          item.parentSub = map.setIfUndefined(mapKeyCache, item.parentSub, () => i + '')\n        }\n        i++\n        return block\n      }\n      default:\n        // unknown block-type\n        error.unexpectedCase()\n    }\n  }\n}\n\n/**\n * This function obfuscates the content of a Yjs update. This is useful to share\n * buggy Yjs documents while significantly limiting the possibility that a\n * developer can on the user. Note that it might still be possible to deduce\n * some information by analyzing the \"structure\" of the document or by analyzing\n * the typing behavior using the CRDT-related metadata that is still kept fully\n * intact.\n *\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nexport const obfuscateUpdate = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nexport const obfuscateUpdateV2 = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV2, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, f.id, UpdateDecoderV1, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, f.id, UpdateDecoderV2, UpdateEncoderV1)\n", "import {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set'\nimport * as array from 'lib0/array'\nimport * as error from 'lib0/error'\n\nconst errorComputeChanges = 'You must not compute changes after the event-handler fired.'\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null\n    /**\n     * @type {Array<string|number>|null}\n     */\n    this._path = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    return this._path || (this._path = getPathTo(this.currentTarget, this.target))\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const keys = new Map()\n      const target = this.target\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._keys = keys\n    }\n    return this._keys\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\n  }\n  return path\n}\n", "import {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  getState,\n  isVisible,\n  ContentType,\n  createID,\n  ContentAny,\n  ContentBinary,\n  getItemCleanStart,\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as iterator from 'lib0/iterator'\nimport * as error from 'lib0/error'\nimport * as math from 'lib0/math'\n\nconst maxSearchMarker = 80\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0\n\nexport class ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true\n    this.p = p\n    this.index = index\n    this.timestamp = globalSearchMarkerTimestamp++\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false\n  marker.p = p\n  p.marker = true\n  marker.index = index\n  marker.timestamp = globalSearchMarkerTimestamp++\n}\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\n    overwriteMarker(marker, p, index)\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index)\n    searchMarker.push(pm)\n    return pm\n  }\n}\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nexport const findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\n  let p = yarray._start\n  let pindex = 0\n  if (marker !== null) {\n    p = marker.p\n    pindex = marker.index\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length\n    }\n    p = p.right\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex)\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n}\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nexport const updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i]\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p\n      p.marker = false\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1)\n        continue\n      }\n      m.p = p\n      p.marker = true\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len)\n    }\n  }\n}\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nexport const getTypeChildren = t => {\n  let s = t._start\n  const arr = []\n  while (s) {\n    arr.push(s)\n    s = s.right\n  }\n  return arr\n}\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */\n  _write (_encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, _parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start\n  }\n  if (end < 0) {\n    end = type._length + end\n  }\n  let len = end - start\n  const cs = []\n  let n = type._start\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      if (c.length <= start) {\n        start -= c.length\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i])\n          len--\n        }\n        start = 0\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  const marker = findMarker(type, index)\n  let n = type._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const store = doc.store\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction, 0)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c)\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c)\n          break\n        default:\n          packJsonContent()\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n              left.integrate(transaction, 0)\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\n              left.integrate(transaction, 0)\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\n                left.integrate(transaction, 0)\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  })\n  packJsonContent()\n}\n\nconst lengthExceeded = () => error.create('Length exceeded!')\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded()\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length)\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start })\n  let n = marker.p\n  if (n) {\n    while (n.right) {\n      n = n.right\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index\n  const startLength = length\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw lengthExceeded()\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {Snapshot} snapshot\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAllSnapshot = (parent, snapshot) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    /**\n     * @type {Item|null}\n     */\n    let v = value\n    while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n      v = v.left\n    }\n    if (v !== null && isVisible(v, snapshot)) {\n      res[key] = v.content.getContent()[v.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n", "/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListPushGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\nimport { typeListSlice } from './AbstractType.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nexport class YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction)\n    this._transaction = transaction\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    /**\n     * @type {YArray<T>}\n     */\n    const a = new YArray()\n    a.push(items)\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    /**\n     * @type {YArray<T>}\n     */\n    const arr = new YArray()\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? /** @type {typeof el} */ (el.clone()) : el\n    ))\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content)\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYArray = _decoder => new YArray()\n", "/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as iterator from 'lib0/iterator'\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<[string, MapType]>}\n */\nexport class YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null\n\n    if (entries === undefined) {\n      this._prelimContent = new Map()\n    } else {\n      this._prelimContent = new Map(entries)\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value)\n    })\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    /**\n     * @type {YMap<MapType>}\n     */\n    const map = new YMap()\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ (value.clone()) : value)\n    })\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<MapType>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => /** @type {any} */ ([v[0], v[1].content.getContent()[v[1].length - 1]]))\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    })\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   * @template {MapType} VAL\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {VAL} value The value of the element to add\n   * @return {VAL}\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, /** @type {any} */ (value))\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (_value, key, map) {\n          typeMapDelete(transaction, map, key)\n        })\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear()\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYMap = _decoder => new YMap()\n", "/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  getItemCleanStart,\n  getState,\n  isVisible,\n  createID,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  GC,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  iterateDeletedStructs,\n  iterateStructs,\n  findMarker,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  updateMarkerChanges,\n  ContentType,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as object from 'lib0/object'\nimport * as map from 'lib0/map'\nimport * as error from 'lib0/error'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left\n    this.right = right\n    this.index = index\n    this.currentAttributes = currentAttributes\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase()\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length\n        }\n        break\n    }\n    this.left = this.right\n    this.right = this.right.right\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\n          }\n          pos.index += pos.right.length\n          count -= pos.right.length\n        }\n        break\n    }\n    pos.left = pos.right\n    pos.right = pos.right.right\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {boolean} useSearchMarker\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index, useSearchMarker) => {\n  const currentAttributes = new Map()\n  const marker = useSearchMarker ? findMarker(parent, index) : null\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\n    return findNextPosition(transaction, pos, index)\n  }\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\n    }\n    currPos.forward()\n  }\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left\n    const right = currPos.right\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n    nextFormat.integrate(transaction, 0)\n    currPos.right = nextFormat\n    currPos.forward()\n  })\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\n      //\n    } else {\n      break\n    }\n    currPos.forward()\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currPos.currentAttributes.get(key) || null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      const { left, right } = currPos\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n      currPos.right.integrate(transaction, 0)\n      currPos.forward()\n    }\n  }\n  return negatedAttributes\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((_val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  })\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text))\n  let { left, right, index } = currPos\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\n  right.integrate(transaction, 0)\n  currPos.right = right\n  currPos.index = index\n  currPos.forward()\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value)\n            }\n            currPos.right.delete(transaction)\n          } else {\n            currPos.currentAttributes.set(key, value)\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          break\n      }\n    }\n    currPos.forward()\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\n    currPos.right.integrate(transaction, 0)\n    currPos.forward()\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  /**\n   * @type {Item|null}\n   */\n  let end = start\n  /**\n   * @type {Map<string,ContentFormat>}\n   */\n  const endFormats = map.create()\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      const cf = /** @type {ContentFormat} */ (end.content)\n      endFormats.set(cf.key, cf)\n    }\n    end = end.right\n  }\n  let cleanups = 0\n  let reachedCurr = false\n  while (start !== end) {\n    if (curr === start) {\n      reachedCurr = true\n    }\n    if (!start.deleted) {\n      const content = start.content\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content)\n          const startAttrValue = startAttributes.get(key) || null\n          if (endFormats.get(key) !== content || startAttrValue === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction)\n            cleanups++\n            if (!reachedCurr && (currAttributes.get(key) || null) === value && startAttrValue !== value) {\n              if (startAttrValue === null) {\n                currAttributes.delete(key)\n              } else {\n                currAttributes.set(key, startAttrValue)\n              }\n            }\n          }\n          if (!reachedCurr && !start.deleted) {\n            updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ (content))\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right)\n  }\n  return cleanups\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right\n  }\n  const attrs = new Set()\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key\n      if (attrs.has(key)) {\n        item.delete(transaction)\n      } else {\n        attrs.add(key)\n      }\n    }\n    item = item.left\n  }\n}\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nexport const cleanupYTextFormatting = type => {\n  let res = 0\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start)\n    let end = type._start\n    let startAttributes = map.create()\n    const currentAttributes = map.copy(startAttributes)\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\n            startAttributes = map.copy(currentAttributes)\n            start = end\n            break\n        }\n      }\n      end = end.right\n    }\n  })\n  return res\n}\n\n/**\n * This will be called by the transction once the event handlers are called to potentially cleanup\n * formatting attributes.\n *\n * @param {Transaction} transaction\n */\nexport const cleanupYTextAfterTransaction = transaction => {\n  /**\n   * @type {Set<YText>}\n   */\n  const needFullCleanup = new Set()\n  // check if another formatting item was inserted\n  const doc = transaction.doc\n  for (const [client, afterClock] of transaction.afterState.entries()) {\n    const clock = transaction.beforeState.get(client) || 0\n    if (afterClock === clock) {\n      continue\n    }\n    iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n      if (\n        !item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat && item.constructor !== GC\n      ) {\n        needFullCleanup.add(/** @type {any} */ (item).parent)\n      }\n    })\n  }\n  // cleanup in a new transaction\n  transact(doc, (t) => {\n    iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n      if (item instanceof GC || !(/** @type {YText} */ (item.parent)._hasFormatting) || needFullCleanup.has(/** @type {YText} */ (item.parent))) {\n        return\n      }\n      const parent = /** @type {YText} */ (item.parent)\n      if (item.content.constructor === ContentFormat) {\n        needFullCleanup.add(parent)\n      } else {\n        // If no formatting attribute was inserted or deleted, we can make due with contextless\n        // formatting cleanups.\n        // Contextless: it is not necessary to compute currentAttributes for the affected position.\n        cleanupContextlessFormattingGap(t, item)\n      }\n    })\n    // If a formatting item was inserted, we simply clean the whole type.\n    // We need to compute currentAttributes for the current position anyway.\n    for (const yText of needFullCleanup) {\n      cleanupYTextFormatting(yText)\n    }\n  })\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length\n  const startAttrs = map.copy(currPos.currentAttributes)\n  const start = currPos.right\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          currPos.right.delete(transaction)\n          break\n      }\n    }\n    currPos.forward()\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes)\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\n  }\n  return currPos\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.keysChanged.add(sub)\n      }\n    })\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = []\n      transact(y, transaction => {\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op = null\n            switch (action) {\n              case 'delete':\n                if (deleteLen > 0) {\n                  op = { delete: deleteLen }\n                }\n                deleteLen = 0\n                break\n              case 'insert':\n                if (typeof insert === 'object' || insert.length > 0) {\n                  op = { insert }\n                  if (currentAttributes.size > 0) {\n                    op.attributes = {}\n                    currentAttributes.forEach((value, key) => {\n                      if (value !== null) {\n                        op.attributes[key] = value\n                      }\n                    })\n                  }\n                }\n                insert = ''\n                break\n              case 'retain':\n                if (retain > 0) {\n                  op = { retain }\n                  if (!object.isEmpty(attributes)) {\n                    op.attributes = object.assign({}, attributes)\n                  }\n                }\n                retain = 0\n                break\n            }\n            if (op) delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = item.content.getContent()[0]\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) || null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n      this._delta = delta\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n    /**\n     * @type {Array<ArraySearchMarker>|null}\n     */\n    this._searchMarker = []\n    /**\n     * Whether this YText contains formatting attributes.\n     * This flag is updated when a formatting item is integrated (see ContentFormat.integrate)\n     */\n    this._hasFormatting = false\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    const event = new YTextEvent(this, transaction, parentSubs)\n    callTypeObservers(this, transaction, event)\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local && this._hasFormatting) {\n      transaction._needFormattingCleanup = true\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true\n          attributes[key] = value\n        })\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    const computeDelta = () => {\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value\n                })\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }\n    if (snapshot || prevSnapshot) {\n      // snapshots are merged again after the transaction, so we need to keep the\n      // transaction alive until we are done\n      transact(doc, transaction => {\n        if (snapshot) {\n          splitSnapshotAffectedStructs(transaction, snapshot)\n        }\n        if (prevSnapshot) {\n          splitSnapshotAffectedStructs(transaction, prevSnapshot)\n        }\n        computeDelta()\n      }, 'cleanup')\n    } else {\n      computeDelta()\n    }\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, !attributes)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, pos, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} [attributes] Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes) {\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, !attributes)\n        insertText(transaction, this, pos, embed, attributes || {})\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes || {}))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index, true), length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, false)\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = _decoder => new YText()\n", "/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListInsertGenericsAfter,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  typeListGet,\n  typeListSlice,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as array from 'lib0/array'\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = n && n.content && /** @type {any} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment()\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\n      })\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = _decoder => new YXmlFragment()\n", "import * as object from 'lib0/object'\n\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapHas,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeMapGetAllSnapshot,\n  typeListForEach,\n  YXmlElementRefID,\n  Snapshot, YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @typedef {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} ValueTypes\n */\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n *\n * @template {{ [key: string]: ValueTypes }} [KV={ [key: string]: string }]\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement<KV>}\n   */\n  clone () {\n    /**\n     * @type {YXmlElement<KV>}\n     */\n    const el = new YXmlElement(this.nodeName)\n    const attrs = this.getAttributes()\n    object.forEach(attrs, (value, key) => {\n      if (typeof value === 'string') {\n        el.setAttribute(key, value)\n      }\n    })\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {string} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that is to be set.\n   * @param {KV[KEY]} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {KV[KEY]|undefined} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {string} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return /** @type {any} */ (snapshot ? typeMapGetAllSnapshot(this, snapshot) : typeMapGetAll(this))\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      const value = attrs[key]\n      if (typeof value === 'string') {\n        dom.setAttribute(key, value)\n      }\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID)\n    encoder.writeKey(this.nodeName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\n", "import {\n  YEvent,\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n", "import {\n  YMap,\n  YXmlHookRefID,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName)\n    this.forEach((value, key) => {\n      el.set(key, value)\n    })\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID)\n    encoder.writeKey(this.hookName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey())\n", "import {\n  YText,\n  YXmlTextRefID,\n  ContentType, YXmlElement, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (const nodeName in delta.attributes) {\n        const attrs = []\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n", "import {\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id\n    this.length = length\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n", "import {\n  AbstractStruct,\n  addStruct,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.length -= offset\n    }\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber)\n    encoder.writeLen(this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\n", "import {\n  addToDeleteSet,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\n    item.markDeleted()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\n", "import {\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false })\n\n/**\n * @private\n */\nexport class ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * @type {any}\n     */\n    const opts = {}\n    this.opts = opts\n    if (!doc.gc) {\n      opts.gc = false\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item\n    transaction.subdocsAdded.add(this.doc)\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc)\n    } else {\n      transaction.subdocsRemoved.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid)\n    encoder.writeAny(this.opts)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nexport const readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()))\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\n", "import {\n  YText, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {ContentFormat}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} item\n   */\n  integrate (_transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    const p = /** @type {YText} */ (item.parent)\n    p._searchMarker = null\n    p._hasFormatting = true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key)\n    encoder.writeJSON(this.value)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON())\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString()\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n", "import {\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeAny(c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny())\n  }\n  return new ContentAny(cs)\n}\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1)\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�'\n      // replace right as well\n      right.str = '�' + right.str.slice(1)\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoder.readString())\n", "import {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // same as above\n        transaction._mergeStructs.push(item)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\n", "import {\n  GC,\n  getState,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentDoc,\n  createID,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  isDeleted,\n  StackItem, DeleteSet, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as binary from 'lib0/binary'\nimport * as array from 'lib0/array'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.markDeleted()\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * @param {Array<StackItem>} stack\n * @param {ID} id\n */\nconst isDeletedByUndoStack = (stack, id) => array.some(stack, /** @param {StackItem} s */ s => isDeleted(s.deletions, id))\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n * @param {import('../utils/UndoManager.js').UndoManager} um\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) => {\n  const doc = transaction.doc\n  const store = doc.store\n  const ownClientID = doc.clientID\n  const redone = item.redone\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\n  /**\n   * @type {Item|null}\n   */\n  let left = null\n  /**\n   * @type {Item|null}\n   */\n  let right\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  } else {\n    right = null\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && (left.right.redone || isDeleted(itemsToDelete, left.right.id) || isDeletedByUndoStack(um.undoStack, left.right.id) || isDeletedByUndoStack(um.redoStack, left.right.id))) {\n        left = left.right\n        // follow redone\n        while (left.redone) left = getItemCleanStart(transaction, left.redone)\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null\n    }\n  }\n  const nextClock = getState(store, ownClientID)\n  const nextId = createID(ownClientID, nextClock)\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = nextId\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction, 0)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin)\n      this.origin = this.left.lastId\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\n      this.rightOrigin = this.right.id\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null\n    } else if (!this.parent) {\n      // only set parent if this shouldn't be garbage collected\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent\n        this.parentSub = this.left.parentSub\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent\n        this.parentSub = this.right.parentSub\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent)\n      if (parentItem.constructor === GC) {\n        this.parent = null\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\n      this.origin = this.left.lastId\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left\n\n        /**\n         * @type {Item|null}\n         */\n        let o\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (o !== null && o.left !== null) {\n            o = o.left\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set()\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set()\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o)\n          conflictingItems.add(o)\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o\n              conflictingItems.clear()\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o\n              conflictingItems.clear()\n            }\n          } else {\n            break\n          }\n          o = o.right\n        }\n        this.left = left\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right\n        this.right = right\n        this.left.right = this\n      } else {\n        let r\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (r !== null && r.left !== null) {\n            r = r.left\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\n        }\n        this.right = r\n      }\n      if (this.right !== null) {\n        this.right.left = this\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction)\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\n      }\n      addStruct(transaction.doc.store, this)\n      this.content.integrate(transaction, this)\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction)\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length\n            }\n          }\n        })\n      }\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.markDeleted()\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoder.writeInfo(info)\n    if (origin !== null) {\n      encoder.writeLeftID(origin)\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      if (parent._item !== undefined) {\n        const parentItem = parent._item\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent)\n          encoder.writeParentInfo(true) // write parentYKey\n          encoder.writeString(ykey)\n        } else {\n          encoder.writeParentInfo(false) // write parent id\n          encoder.writeLeftID(parentItem.id)\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true) // write parentYKey\n        encoder.writeString(parent)\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false) // write parent id\n        encoder.writeLeftID(parent)\n      } else {\n        error.unexpectedCase()\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {AbstractContent}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} _item\n   */\n  integrate (_transaction, _item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   */\n  delete (_transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} _store\n   */\n  gc (_store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   * @param {number} _offset\n   */\n  write (_encoder, _offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n", "import {\n  AbstractStruct,\n  UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nexport const structSkipRefNumber = 10\n\n/**\n * @private\n */\nexport class Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber)\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n", "/** eslint-env browser */\n\nexport {\n  Doc,\n  Transaction,\n  YArray as Array,\n  YMap as Map,\n  YText as Text,\n  YXmlText as XmlText,\n  YXmlHook as XmlHook,\n  YXmlElement as XmlElement,\n  YXmlFragment as XmlFragment,\n  YXmlEvent,\n  YMapEvent,\n  YArrayEvent,\n  YTextEvent,\n  YEvent,\n  Item,\n  AbstractStruct,\n  GC,\n  Skip,\n  ContentBinary,\n  ContentDeleted,\n  ContentDoc,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentAny,\n  ContentString,\n  ContentType,\n  AbstractType,\n  getTypeChildren,\n  createRelativePositionFromTypeIndex,\n  createRelativePositionFromJSON,\n  createAbsolutePositionFromRelativePosition,\n  compareRelativePositions,\n  AbsolutePosition,\n  RelativePosition,\n  ID,\n  createID,\n  compareIDs,\n  getState,\n  Snapshot,\n  createSnapshot,\n  createDeleteSet,\n  createDeleteSetFromStructStore,\n  cleanupYTextFormatting,\n  snapshot,\n  emptySnapshot,\n  findRootTypeKey,\n  findIndexSS,\n  getItem,\n  typeListToArraySnapshot,\n  typeMapGetSnapshot,\n  typeMapGetAllSnapshot,\n  createDocFromSnapshot,\n  iterateDeletedStructs,\n  applyUpdate,\n  applyUpdateV2,\n  readUpdate,\n  readUpdateV2,\n  encodeStateAsUpdate,\n  encodeStateAsUpdateV2,\n  encodeStateVector,\n  UndoManager,\n  decodeSnapshot,\n  encodeSnapshot,\n  decodeSnapshotV2,\n  encodeSnapshotV2,\n  decodeStateVector,\n  logUpdate,\n  logUpdateV2,\n  decodeUpdate,\n  decodeUpdateV2,\n  relativePositionToJSON,\n  isDeleted,\n  isParentOf,\n  equalSnapshots,\n  PermanentUserData, // @TODO experimental\n  tryGc,\n  transact,\n  AbstractConnector,\n  logType,\n  mergeUpdates,\n  mergeUpdatesV2,\n  parseUpdateMeta,\n  parseUpdateMetaV2,\n  encodeStateVectorFromUpdate,\n  encodeStateVectorFromUpdateV2,\n  encodeRelativePosition,\n  decodeRelativePosition,\n  diffUpdate,\n  diffUpdateV2,\n  convertUpdateFormatV1ToV2,\n  convertUpdateFormatV2ToV1,\n  obfuscateUpdate,\n  obfuscateUpdateV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  equalDeleteSets,\n  snapshotContainsUpdate\n} from './internals.js'\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {})\n\nconst importIdentifier = '__ $YJS$ __'\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438')\n}\nglo[importIdentifier] = true\n", "/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n", "/**\n * Efficient diffs.\n *\n * @module diff\n */\n\nimport { equalityStrict } from './function.js'\n\n/**\n * A SimpleDiff describes a change on a String.\n *\n * ```js\n * console.log(a) // the old value\n * console.log(b) // the updated value\n * // Apply changes of diff (pseudocode)\n * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\n * a.insert(diff.index, diff.insert) // Insert `diff.insert`\n * a === b // values match\n * ```\n *\n * @typedef {Object} SimpleDiff\n * @property {Number} index The index where changes were applied\n * @property {Number} remove The number of characters to delete starting\n *                                  at `index`.\n * @property {T} insert The new text to insert at `index` after applying\n *                           `delete`\n *\n * @template T\n */\n\nconst highSurrogateRegex = /[\\uD800-\\uDBFF]/\nconst lowSurrogateRegex = /[\\uDC00-\\uDFFF]/\n\n/**\n * Create a diff between two strings. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * @function\n *\n * @param {string} a The old version of the string\n * @param {string} b The updated version of the string\n * @return {SimpleDiff<string>} The diff description.\n */\nexport const simpleDiffString = (a, b) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  while (left < a.length && left < b.length && a[left] === b[left]) {\n    left++\n  }\n  // If the last same character is a high surrogate, we need to rollback to the previous character\n  if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--\n  while (right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]) {\n    right++\n  }\n  // If the last same character is a low surrogate, we need to rollback to the previous character\n  if (right > 0 && lowSurrogateRegex.test(a[a.length - right])) right--\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n\n/**\n * @todo Remove in favor of simpleDiffString\n * @deprecated\n */\nexport const simpleDiff = simpleDiffString\n\n/**\n * Create a diff between two arrays. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * Note: This is basically the same function as above. Another function was created so that the runtime\n * can better optimize these function calls.\n *\n * @function\n * @template T\n *\n * @param {Array<T>} a The old version of the array\n * @param {Array<T>} b The updated version of the array\n * @param {function(T, T):boolean} [compare]\n * @return {SimpleDiff<Array<T>>} The diff description.\n */\nexport const simpleDiffArray = (a, b, compare = equalityStrict) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  while (left < a.length && left < b.length && compare(a[left], b[left])) {\n    left++\n  }\n  while (right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])) {\n    right++\n  }\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n\n/**\n * Diff text and try to diff at the current cursor position.\n *\n * @param {string} a\n * @param {string} b\n * @param {number} cursor This should refer to the current left cursor-range position\n */\nexport const simpleDiffStringWithCursor = (a, b, cursor) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  // Iterate left to the right until we find a changed character\n  // First iteration considers the current cursor position\n  while (\n    left < a.length &&\n    left < b.length &&\n    a[left] === b[left] &&\n    left < cursor\n  ) {\n    left++\n  }\n  // If the last same character is a high surrogate, we need to rollback to the previous character\n  if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--\n  // Iterate right to the left until we find a changed character\n  while (\n    right + left < a.length &&\n    right + left < b.length &&\n    a[a.length - right - 1] === b[b.length - right - 1]\n  ) {\n    right++\n  }\n  // If the last same character is a low surrogate, we need to rollback to the previous character\n  if (right > 0 && lowSurrogateRegex.test(a[a.length - right])) right--\n  // Try to iterate left further to the right without caring about the current cursor position\n  while (\n    right + left < a.length &&\n    right + left < b.length &&\n    a[left] === b[left]\n  ) {\n    left++\n  }\n  if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n", "\nimport { PluginKey } from 'prosemirror-state' // eslint-disable-line\n\n/**\n * The unique prosemirror plugin key for syncPlugin\n *\n * @public\n */\nexport const ySyncPluginKey = new PluginKey('y-sync')\n\n/**\n * The unique prosemirror plugin key for undoPlugin\n *\n * @public\n */\nexport const yUndoPluginKey = new PluginKey('y-undo')\n\n/**\n * The unique prosemirror plugin key for cursorPlugin\n *\n * @public\n */\nexport const yCursorPluginKey = new PluginKey('yjs-cursor')\n", "/**\n * @module bindings/prosemirror\n */\n\nimport { createMutex } from 'lib0/mutex'\nimport * as PModel from 'prosemirror-model'\nimport { Plugin, TextSelection } from \"prosemirror-state\"; // eslint-disable-line\nimport * as math from 'lib0/math'\nimport * as object from 'lib0/object'\nimport * as set from 'lib0/set'\nimport { simpleDiff } from 'lib0/diff'\nimport * as error from 'lib0/error'\nimport { ySyncPluginKey, yUndoPluginKey } from './keys.js'\nimport * as Y from 'yjs'\nimport {\n  absolutePositionToRelativePosition,\n  relativePositionToAbsolutePosition\n} from '../lib.js'\nimport * as random from 'lib0/random'\nimport * as environment from 'lib0/environment'\nimport * as dom from 'lib0/dom'\nimport * as eventloop from 'lib0/eventloop'\n\n/**\n * @param {Y.Item} item\n * @param {Y.Snapshot} [snapshot]\n */\nexport const isVisible = (item, snapshot) =>\n  snapshot === undefined\n    ? !item.deleted\n    : (snapshot.sv.has(item.id.client) && /** @type {number} */\n      (snapshot.sv.get(item.id.client)) > item.id.clock &&\n      !Y.isDeleted(snapshot.ds, item.id))\n\n/**\n * Either a node if type is YXmlElement or an Array of text nodes if YXmlText\n * @typedef {Map<Y.AbstractType<any>, PModel.Node | Array<PModel.Node>>} ProsemirrorMapping\n */\n\n/**\n * @typedef {Object} ColorDef\n * @property {string} ColorDef.light\n * @property {string} ColorDef.dark\n */\n\n/**\n * @typedef {Object} YSyncOpts\n * @property {Array<ColorDef>} [YSyncOpts.colors]\n * @property {Map<string,ColorDef>} [YSyncOpts.colorMapping]\n * @property {Y.PermanentUserData|null} [YSyncOpts.permanentUserData]\n * @property {function} [YSyncOpts.onFirstRender] Fired when the content from Yjs is initially rendered to ProseMirror\n */\n\n/**\n * @type {Array<ColorDef>}\n */\nconst defaultColors = [{ light: '#ecd44433', dark: '#ecd444' }]\n\n/**\n * @param {Map<string,ColorDef>} colorMapping\n * @param {Array<ColorDef>} colors\n * @param {string} user\n * @return {ColorDef}\n */\nconst getUserColor = (colorMapping, colors, user) => {\n  // @todo do not hit the same color twice if possible\n  if (!colorMapping.has(user)) {\n    if (colorMapping.size < colors.length) {\n      const usedColors = set.create()\n      colorMapping.forEach((color) => usedColors.add(color))\n      colors = colors.filter((color) => !usedColors.has(color))\n    }\n    colorMapping.set(user, random.oneOf(colors))\n  }\n  return /** @type {ColorDef} */ (colorMapping.get(user))\n}\n\n/**\n * This plugin listens to changes in prosemirror view and keeps yXmlState and view in sync.\n *\n * This plugin also keeps references to the type and the shared document so other plugins can access it.\n * @param {Y.XmlFragment} yXmlFragment\n * @param {YSyncOpts} opts\n * @return {any} Returns a prosemirror plugin that binds to this type\n */\nexport const ySyncPlugin = (yXmlFragment, {\n  colors = defaultColors,\n  colorMapping = new Map(),\n  permanentUserData = null,\n  onFirstRender = () => {}\n} = {}) => {\n  let changedInitialContent = false\n  let rerenderTimeout\n  const plugin = new Plugin({\n    props: {\n      editable: (state) => {\n        const syncState = ySyncPluginKey.getState(state)\n        return syncState.snapshot == null && syncState.prevSnapshot == null\n      }\n    },\n    key: ySyncPluginKey,\n    state: {\n      /**\n       * @returns {any}\n       */\n      init: (_initargs, _state) => {\n        return {\n          type: yXmlFragment,\n          doc: yXmlFragment.doc,\n          binding: null,\n          snapshot: null,\n          prevSnapshot: null,\n          isChangeOrigin: false,\n          isUndoRedoOperation: false,\n          addToHistory: true,\n          colors,\n          colorMapping,\n          permanentUserData\n        }\n      },\n      apply: (tr, pluginState) => {\n        const change = tr.getMeta(ySyncPluginKey)\n        if (change !== undefined) {\n          pluginState = Object.assign({}, pluginState)\n          for (const key in change) {\n            pluginState[key] = change[key]\n          }\n        }\n        pluginState.addToHistory = tr.getMeta('addToHistory') !== false\n        // always set isChangeOrigin. If undefined, this is not change origin.\n        pluginState.isChangeOrigin = change !== undefined &&\n          !!change.isChangeOrigin\n        pluginState.isUndoRedoOperation = change !== undefined && !!change.isChangeOrigin && !!change.isUndoRedoOperation\n        if (pluginState.binding !== null) {\n          if (\n            change !== undefined &&\n            (change.snapshot != null || change.prevSnapshot != null)\n          ) {\n            // snapshot changed, rerender next\n            eventloop.timeout(0, () => {\n              if (\n                pluginState.binding == null || pluginState.binding.isDestroyed\n              ) {\n                return\n              }\n              if (change.restore == null) {\n                pluginState.binding._renderSnapshot(\n                  change.snapshot,\n                  change.prevSnapshot,\n                  pluginState\n                )\n              } else {\n                pluginState.binding._renderSnapshot(\n                  change.snapshot,\n                  change.snapshot,\n                  pluginState\n                )\n                // reset to current prosemirror state\n                delete pluginState.restore\n                delete pluginState.snapshot\n                delete pluginState.prevSnapshot\n                pluginState.binding.mux(() => {\n                  pluginState.binding._prosemirrorChanged(\n                    pluginState.binding.prosemirrorView.state.doc\n                  )\n                })\n              }\n            })\n          }\n        }\n        return pluginState\n      }\n    },\n    view: (view) => {\n      const binding = new ProsemirrorBinding(yXmlFragment, view)\n      if (rerenderTimeout != null) {\n        rerenderTimeout.destroy()\n      }\n      // Make sure this is called in a separate context\n      rerenderTimeout = eventloop.timeout(0, () => {\n        binding._forceRerender()\n        view.dispatch(view.state.tr.setMeta(ySyncPluginKey, { binding }))\n        onFirstRender()\n      })\n      return {\n        update: () => {\n          const pluginState = plugin.getState(view.state)\n          if (\n            pluginState.snapshot == null && pluginState.prevSnapshot == null\n          ) {\n            if (\n              changedInitialContent ||\n              view.state.doc.content.findDiffStart(\n                view.state.doc.type.createAndFill().content\n              ) !== null\n            ) {\n              changedInitialContent = true\n              if (\n                pluginState.addToHistory === false &&\n                !pluginState.isChangeOrigin\n              ) {\n                const yUndoPluginState = yUndoPluginKey.getState(view.state)\n                /**\n                 * @type {Y.UndoManager}\n                 */\n                const um = yUndoPluginState && yUndoPluginState.undoManager\n                if (um) {\n                  um.stopCapturing()\n                }\n              }\n              binding.mux(() => {\n                /** @type {Y.Doc} */ (pluginState.doc).transact((tr) => {\n                  tr.meta.set('addToHistory', pluginState.addToHistory)\n                  binding._prosemirrorChanged(view.state.doc)\n                }, ySyncPluginKey)\n              })\n            }\n          }\n        },\n        destroy: () => {\n          rerenderTimeout.destroy()\n          binding.destroy()\n        }\n      }\n    }\n  })\n  return plugin\n}\n\n/**\n * @param {any} tr\n * @param {any} relSel\n * @param {ProsemirrorBinding} binding\n */\nconst restoreRelativeSelection = (tr, relSel, binding) => {\n  if (relSel !== null && relSel.anchor !== null && relSel.head !== null) {\n    const anchor = relativePositionToAbsolutePosition(\n      binding.doc,\n      binding.type,\n      relSel.anchor,\n      binding.mapping\n    )\n    const head = relativePositionToAbsolutePosition(\n      binding.doc,\n      binding.type,\n      relSel.head,\n      binding.mapping\n    )\n    if (anchor !== null && head !== null) {\n      tr = tr.setSelection(TextSelection.create(tr.doc, anchor, head))\n    }\n  }\n}\n\nexport const getRelativeSelection = (pmbinding, state) => ({\n  anchor: absolutePositionToRelativePosition(\n    state.selection.anchor,\n    pmbinding.type,\n    pmbinding.mapping\n  ),\n  head: absolutePositionToRelativePosition(\n    state.selection.head,\n    pmbinding.type,\n    pmbinding.mapping\n  )\n})\n\n/**\n * Binding for prosemirror.\n *\n * @protected\n */\nexport class ProsemirrorBinding {\n  /**\n   * @param {Y.XmlFragment} yXmlFragment The bind source\n   * @param {any} prosemirrorView The target binding\n   */\n  constructor (yXmlFragment, prosemirrorView) {\n    this.type = yXmlFragment\n    this.prosemirrorView = prosemirrorView\n    this.mux = createMutex()\n    this.isDestroyed = false\n    /**\n     * @type {ProsemirrorMapping}\n     */\n    this.mapping = new Map()\n    this._observeFunction = this._typeChanged.bind(this)\n    /**\n     * @type {Y.Doc}\n     */\n    // @ts-ignore\n    this.doc = yXmlFragment.doc\n    /**\n     * current selection as relative positions in the Yjs model\n     */\n    this.beforeTransactionSelection = null\n    this.beforeAllTransactions = () => {\n      if (this.beforeTransactionSelection === null) {\n        this.beforeTransactionSelection = getRelativeSelection(\n          this,\n          prosemirrorView.state\n        )\n      }\n    }\n    this.afterAllTransactions = () => {\n      this.beforeTransactionSelection = null\n    }\n\n    this.doc.on('beforeAllTransactions', this.beforeAllTransactions)\n    this.doc.on('afterAllTransactions', this.afterAllTransactions)\n    yXmlFragment.observeDeep(this._observeFunction)\n\n    this._domSelectionInView = null\n  }\n\n  /**\n   * Create a transaction for changing the prosemirror state.\n   *\n   * @returns\n   */\n  get _tr () {\n    return this.prosemirrorView.state.tr.setMeta('addToHistory', false)\n  }\n\n  _isLocalCursorInView () {\n    if (!this.prosemirrorView.hasFocus()) return false\n    if (environment.isBrowser && this._domSelectionInView === null) {\n      // Calculate the domSelectionInView and clear by next tick after all events are finished\n      eventloop.timeout(0, () => {\n        this._domSelectionInView = null\n      })\n      this._domSelectionInView = this._isDomSelectionInView()\n    }\n    return this._domSelectionInView\n  }\n\n  _isDomSelectionInView () {\n    const selection = this.prosemirrorView._root.getSelection()\n\n    const range = this.prosemirrorView._root.createRange()\n    range.setStart(selection.anchorNode, selection.anchorOffset)\n    range.setEnd(selection.focusNode, selection.focusOffset)\n\n    // This is a workaround for an edgecase where getBoundingClientRect will\n    // return zero values if the selection is collapsed at the start of a newline\n    // see reference here: https://stackoverflow.com/a/59780954\n    const rects = range.getClientRects()\n    if (rects.length === 0) {\n      // probably buggy newline behavior, explicitly select the node contents\n      if (range.startContainer && range.collapsed) {\n        range.selectNodeContents(range.startContainer)\n      }\n    }\n\n    const bounding = range.getBoundingClientRect()\n    const documentElement = dom.doc.documentElement\n\n    return bounding.bottom >= 0 && bounding.right >= 0 &&\n      bounding.left <=\n        (window.innerWidth || documentElement.clientWidth || 0) &&\n      bounding.top <= (window.innerHeight || documentElement.clientHeight || 0)\n  }\n\n  /**\n   * @param {Y.Snapshot} snapshot\n   * @param {Y.Snapshot} prevSnapshot\n   */\n  renderSnapshot (snapshot, prevSnapshot) {\n    if (!prevSnapshot) {\n      prevSnapshot = Y.createSnapshot(Y.createDeleteSet(), new Map())\n    }\n    this.prosemirrorView.dispatch(\n      this._tr.setMeta(ySyncPluginKey, { snapshot, prevSnapshot })\n    )\n  }\n\n  unrenderSnapshot () {\n    this.mapping = new Map()\n    this.mux(() => {\n      const fragmentContent = this.type.toArray().map((t) =>\n        createNodeFromYElement(\n          /** @type {Y.XmlElement} */ (t),\n          this.prosemirrorView.state.schema,\n          this.mapping\n        )\n      ).filter((n) => n !== null)\n      // @ts-ignore\n      const tr = this._tr.replace(\n        0,\n        this.prosemirrorView.state.doc.content.size,\n        new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n      )\n      tr.setMeta(ySyncPluginKey, { snapshot: null, prevSnapshot: null })\n      this.prosemirrorView.dispatch(tr)\n    })\n  }\n\n  _forceRerender () {\n    this.mapping = new Map()\n    this.mux(() => {\n      const fragmentContent = this.type.toArray().map((t) =>\n        createNodeFromYElement(\n          /** @type {Y.XmlElement} */ (t),\n          this.prosemirrorView.state.schema,\n          this.mapping\n        )\n      ).filter((n) => n !== null)\n      // @ts-ignore\n      const tr = this._tr.replace(\n        0,\n        this.prosemirrorView.state.doc.content.size,\n        new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n      )\n      this.prosemirrorView.dispatch(\n        tr.setMeta(ySyncPluginKey, { isChangeOrigin: true })\n      )\n    })\n  }\n\n  /**\n   * @param {Y.Snapshot} snapshot\n   * @param {Y.Snapshot} prevSnapshot\n   * @param {Object} pluginState\n   */\n  _renderSnapshot (snapshot, prevSnapshot, pluginState) {\n    if (!snapshot) {\n      snapshot = Y.snapshot(this.doc)\n    }\n    // clear mapping because we are going to rerender\n    this.mapping = new Map()\n    this.mux(() => {\n      this.doc.transact((transaction) => {\n        // before rendering, we are going to sanitize ops and split deleted ops\n        // if they were deleted by seperate users.\n        const pud = pluginState.permanentUserData\n        if (pud) {\n          pud.dss.forEach((ds) => {\n            Y.iterateDeletedStructs(transaction, ds, (_item) => {})\n          })\n        }\n        /**\n         * @param {'removed'|'added'} type\n         * @param {Y.ID} id\n         */\n        const computeYChange = (type, id) => {\n          const user = type === 'added'\n            ? pud.getUserByClientId(id.client)\n            : pud.getUserByDeletedId(id)\n          return {\n            user,\n            type,\n            color: getUserColor(\n              pluginState.colorMapping,\n              pluginState.colors,\n              user\n            )\n          }\n        }\n        // Create document fragment and render\n        const fragmentContent = Y.typeListToArraySnapshot(\n          this.type,\n          new Y.Snapshot(prevSnapshot.ds, snapshot.sv)\n        ).map((t) => {\n          if (\n            !t._item.deleted || isVisible(t._item, snapshot) ||\n            isVisible(t._item, prevSnapshot)\n          ) {\n            return createNodeFromYElement(\n              t,\n              this.prosemirrorView.state.schema,\n              new Map(),\n              snapshot,\n              prevSnapshot,\n              computeYChange\n            )\n          } else {\n            // No need to render elements that are not visible by either snapshot.\n            // If a client adds and deletes content in the same snapshot the element is not visible by either snapshot.\n            return null\n          }\n        }).filter((n) => n !== null)\n        // @ts-ignore\n        const tr = this._tr.replace(\n          0,\n          this.prosemirrorView.state.doc.content.size,\n          new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n        )\n        this.prosemirrorView.dispatch(\n          tr.setMeta(ySyncPluginKey, { isChangeOrigin: true })\n        )\n      }, ySyncPluginKey)\n    })\n  }\n\n  /**\n   * @param {Array<Y.YEvent<any>>} events\n   * @param {Y.Transaction} transaction\n   */\n  _typeChanged (events, transaction) {\n    const syncState = ySyncPluginKey.getState(this.prosemirrorView.state)\n    if (\n      events.length === 0 || syncState.snapshot != null ||\n      syncState.prevSnapshot != null\n    ) {\n      // drop out if snapshot is active\n      this.renderSnapshot(syncState.snapshot, syncState.prevSnapshot)\n      return\n    }\n    this.mux(() => {\n      /**\n       * @param {any} _\n       * @param {Y.AbstractType<any>} type\n       */\n      const delType = (_, type) => this.mapping.delete(type)\n      Y.iterateDeletedStructs(\n        transaction,\n        transaction.deleteSet,\n        (struct) => {\n          if (struct.constructor === Y.Item) {\n            const type = /** @type {Y.ContentType} */ (/** @type {Y.Item} */ (struct).content).type\n            type && this.mapping.delete(type)\n          }\n        }\n      )\n      transaction.changed.forEach(delType)\n      transaction.changedParentTypes.forEach(delType)\n      const fragmentContent = this.type.toArray().map((t) =>\n        createNodeIfNotExists(\n          /** @type {Y.XmlElement | Y.XmlHook} */ (t),\n          this.prosemirrorView.state.schema,\n          this.mapping\n        )\n      ).filter((n) => n !== null)\n      // @ts-ignore\n      let tr = this._tr.replace(\n        0,\n        this.prosemirrorView.state.doc.content.size,\n        new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n      )\n      restoreRelativeSelection(tr, this.beforeTransactionSelection, this)\n      tr = tr.setMeta(ySyncPluginKey, { isChangeOrigin: true, isUndoRedoOperation: transaction.origin instanceof Y.UndoManager })\n      if (\n        this.beforeTransactionSelection !== null && this._isLocalCursorInView()\n      ) {\n        tr.scrollIntoView()\n      }\n      this.prosemirrorView.dispatch(tr)\n    })\n  }\n\n  _prosemirrorChanged (doc) {\n    this.doc.transact(() => {\n      updateYFragment(this.doc, this.type, doc, this.mapping)\n      this.beforeTransactionSelection = getRelativeSelection(\n        this,\n        this.prosemirrorView.state\n      )\n    }, ySyncPluginKey)\n  }\n\n  destroy () {\n    this.isDestroyed = true\n    this.type.unobserveDeep(this._observeFunction)\n    this.doc.off('beforeAllTransactions', this.beforeAllTransactions)\n    this.doc.off('afterAllTransactions', this.afterAllTransactions)\n  }\n}\n\n/**\n * @private\n * @param {Y.XmlElement | Y.XmlHook} el\n * @param {PModel.Schema} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {PModel.Node | null}\n */\nconst createNodeIfNotExists = (\n  el,\n  schema,\n  mapping,\n  snapshot,\n  prevSnapshot,\n  computeYChange\n) => {\n  const node = /** @type {PModel.Node} */ (mapping.get(el))\n  if (node === undefined) {\n    if (el instanceof Y.XmlElement) {\n      return createNodeFromYElement(\n        el,\n        schema,\n        mapping,\n        snapshot,\n        prevSnapshot,\n        computeYChange\n      )\n    } else {\n      throw error.methodUnimplemented() // we are currently not handling hooks\n    }\n  }\n  return node\n}\n\n/**\n * @private\n * @param {Y.XmlElement} el\n * @param {any} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {PModel.Node | null} Returns node if node could be created. Otherwise it deletes the yjs type and returns null\n */\nconst createNodeFromYElement = (\n  el,\n  schema,\n  mapping,\n  snapshot,\n  prevSnapshot,\n  computeYChange\n) => {\n  const children = []\n  const createChildren = (type) => {\n    if (type.constructor === Y.XmlElement) {\n      const n = createNodeIfNotExists(\n        type,\n        schema,\n        mapping,\n        snapshot,\n        prevSnapshot,\n        computeYChange\n      )\n      if (n !== null) {\n        children.push(n)\n      }\n    } else {\n      const ns = createTextNodesFromYText(\n        type,\n        schema,\n        mapping,\n        snapshot,\n        prevSnapshot,\n        computeYChange\n      )\n      if (ns !== null) {\n        ns.forEach((textchild) => {\n          if (textchild !== null) {\n            children.push(textchild)\n          }\n        })\n      }\n    }\n  }\n  if (snapshot === undefined || prevSnapshot === undefined) {\n    el.toArray().forEach(createChildren)\n  } else {\n    Y.typeListToArraySnapshot(el, new Y.Snapshot(prevSnapshot.ds, snapshot.sv))\n      .forEach(createChildren)\n  }\n  try {\n    const attrs = el.getAttributes(snapshot)\n    if (snapshot !== undefined) {\n      if (!isVisible(/** @type {Y.Item} */ (el._item), snapshot)) {\n        attrs.ychange = computeYChange\n          ? computeYChange('removed', /** @type {Y.Item} */ (el._item).id)\n          : { type: 'removed' }\n      } else if (!isVisible(/** @type {Y.Item} */ (el._item), prevSnapshot)) {\n        attrs.ychange = computeYChange\n          ? computeYChange('added', /** @type {Y.Item} */ (el._item).id)\n          : { type: 'added' }\n      }\n    }\n    const node = schema.node(el.nodeName, attrs, children)\n    mapping.set(el, node)\n    return node\n  } catch (e) {\n    // an error occured while creating the node. This is probably a result of a concurrent action.\n    /** @type {Y.Doc} */ (el.doc).transact((transaction) => {\n      /** @type {Y.Item} */ (el._item).delete(transaction)\n    }, ySyncPluginKey)\n    mapping.delete(el)\n    return null\n  }\n}\n\n/**\n * @private\n * @param {Y.XmlText} text\n * @param {any} schema\n * @param {ProsemirrorMapping} _mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {Array<PModel.Node>|null}\n */\nconst createTextNodesFromYText = (\n  text,\n  schema,\n  _mapping,\n  snapshot,\n  prevSnapshot,\n  computeYChange\n) => {\n  const nodes = []\n  const deltas = text.toDelta(snapshot, prevSnapshot, computeYChange)\n  try {\n    for (let i = 0; i < deltas.length; i++) {\n      const delta = deltas[i]\n      const marks = []\n      for (const markName in delta.attributes) {\n        marks.push(schema.mark(markName, delta.attributes[markName]))\n      }\n      nodes.push(schema.text(delta.insert, marks))\n    }\n  } catch (e) {\n    // an error occured while creating the node. This is probably a result of a concurrent action.\n    /** @type {Y.Doc} */ (text.doc).transact((transaction) => {\n      /** @type {Y.Item} */ (text._item).delete(transaction)\n    }, ySyncPluginKey)\n    return null\n  }\n  // @ts-ignore\n  return nodes\n}\n\n/**\n * @private\n * @param {Array<any>} nodes prosemirror node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlText}\n */\nconst createTypeFromTextNodes = (nodes, mapping) => {\n  const type = new Y.XmlText()\n  const delta = nodes.map((node) => ({\n    // @ts-ignore\n    insert: node.text,\n    attributes: marksToAttributes(node.marks)\n  }))\n  type.applyDelta(delta)\n  mapping.set(type, nodes)\n  return type\n}\n\n/**\n * @private\n * @param {any} node prosemirror node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlElement}\n */\nconst createTypeFromElementNode = (node, mapping) => {\n  const type = new Y.XmlElement(node.type.name)\n  for (const key in node.attrs) {\n    const val = node.attrs[key]\n    if (val !== null && key !== 'ychange') {\n      type.setAttribute(key, val)\n    }\n  }\n  type.insert(\n    0,\n    normalizePNodeContent(node).map((n) =>\n      createTypeFromTextOrElementNode(n, mapping)\n    )\n  )\n  mapping.set(type, node)\n  return type\n}\n\n/**\n * @private\n * @param {PModel.Node|Array<PModel.Node>} node prosemirror text node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlElement|Y.XmlText}\n */\nconst createTypeFromTextOrElementNode = (node, mapping) =>\n  node instanceof Array\n    ? createTypeFromTextNodes(node, mapping)\n    : createTypeFromElementNode(node, mapping)\n\nconst isObject = (val) => typeof val === 'object' && val !== null\n\nconst equalAttrs = (pattrs, yattrs) => {\n  const keys = Object.keys(pattrs).filter((key) => pattrs[key] !== null)\n  let eq =\n    keys.length ===\n      Object.keys(yattrs).filter((key) => yattrs[key] !== null).length\n  for (let i = 0; i < keys.length && eq; i++) {\n    const key = keys[i]\n    const l = pattrs[key]\n    const r = yattrs[key]\n    eq = key === 'ychange' || l === r ||\n      (isObject(l) && isObject(r) && equalAttrs(l, r))\n  }\n  return eq\n}\n\n/**\n * @typedef {Array<Array<PModel.Node>|PModel.Node>} NormalizedPNodeContent\n */\n\n/**\n * @param {any} pnode\n * @return {NormalizedPNodeContent}\n */\nconst normalizePNodeContent = (pnode) => {\n  const c = pnode.content.content\n  const res = []\n  for (let i = 0; i < c.length; i++) {\n    const n = c[i]\n    if (n.isText) {\n      const textNodes = []\n      for (let tnode = c[i]; i < c.length && tnode.isText; tnode = c[++i]) {\n        textNodes.push(tnode)\n      }\n      i--\n      res.push(textNodes)\n    } else {\n      res.push(n)\n    }\n  }\n  return res\n}\n\n/**\n * @param {Y.XmlText} ytext\n * @param {Array<any>} ptexts\n */\nconst equalYTextPText = (ytext, ptexts) => {\n  const delta = ytext.toDelta()\n  return delta.length === ptexts.length &&\n    delta.every((d, i) =>\n      d.insert === /** @type {any} */ (ptexts[i]).text &&\n      object.keys(d.attributes || {}).length === ptexts[i].marks.length &&\n      ptexts[i].marks.every((mark) =>\n        equalAttrs(d.attributes[mark.type.name] || {}, mark.attrs)\n      )\n    )\n}\n\n/**\n * @param {Y.XmlElement|Y.XmlText|Y.XmlHook} ytype\n * @param {any|Array<any>} pnode\n */\nconst equalYTypePNode = (ytype, pnode) => {\n  if (\n    ytype instanceof Y.XmlElement && !(pnode instanceof Array) &&\n    matchNodeName(ytype, pnode)\n  ) {\n    const normalizedContent = normalizePNodeContent(pnode)\n    return ytype._length === normalizedContent.length &&\n      equalAttrs(ytype.getAttributes(), pnode.attrs) &&\n      ytype.toArray().every((ychild, i) =>\n        equalYTypePNode(ychild, normalizedContent[i])\n      )\n  }\n  return ytype instanceof Y.XmlText && pnode instanceof Array &&\n    equalYTextPText(ytype, pnode)\n}\n\n/**\n * @param {PModel.Node | Array<PModel.Node> | undefined} mapped\n * @param {PModel.Node | Array<PModel.Node>} pcontent\n */\nconst mappedIdentity = (mapped, pcontent) =>\n  mapped === pcontent ||\n  (mapped instanceof Array && pcontent instanceof Array &&\n    mapped.length === pcontent.length && mapped.every((a, i) =>\n    pcontent[i] === a\n  ))\n\n/**\n * @param {Y.XmlElement} ytype\n * @param {PModel.Node} pnode\n * @param {ProsemirrorMapping} mapping\n * @return {{ foundMappedChild: boolean, equalityFactor: number }}\n */\nconst computeChildEqualityFactor = (ytype, pnode, mapping) => {\n  const yChildren = ytype.toArray()\n  const pChildren = normalizePNodeContent(pnode)\n  const pChildCnt = pChildren.length\n  const yChildCnt = yChildren.length\n  const minCnt = math.min(yChildCnt, pChildCnt)\n  let left = 0\n  let right = 0\n  let foundMappedChild = false\n  for (; left < minCnt; left++) {\n    const leftY = yChildren[left]\n    const leftP = pChildren[left]\n    if (mappedIdentity(mapping.get(leftY), leftP)) {\n      foundMappedChild = true // definite (good) match!\n    } else if (!equalYTypePNode(leftY, leftP)) {\n      break\n    }\n  }\n  for (; left + right < minCnt; right++) {\n    const rightY = yChildren[yChildCnt - right - 1]\n    const rightP = pChildren[pChildCnt - right - 1]\n    if (mappedIdentity(mapping.get(rightY), rightP)) {\n      foundMappedChild = true\n    } else if (!equalYTypePNode(rightY, rightP)) {\n      break\n    }\n  }\n  return {\n    equalityFactor: left + right,\n    foundMappedChild\n  }\n}\n\nconst ytextTrans = (ytext) => {\n  let str = ''\n  /**\n   * @type {Y.Item|null}\n   */\n  let n = ytext._start\n  const nAttrs = {}\n  while (n !== null) {\n    if (!n.deleted) {\n      if (n.countable && n.content instanceof Y.ContentString) {\n        str += n.content.str\n      } else if (n.content instanceof Y.ContentFormat) {\n        nAttrs[n.content.key] = null\n      }\n    }\n    n = n.right\n  }\n  return {\n    str,\n    nAttrs\n  }\n}\n\n/**\n * @todo test this more\n *\n * @param {Y.Text} ytext\n * @param {Array<any>} ptexts\n * @param {ProsemirrorMapping} mapping\n */\nconst updateYText = (ytext, ptexts, mapping) => {\n  mapping.set(ytext, ptexts)\n  const { nAttrs, str } = ytextTrans(ytext)\n  const content = ptexts.map((p) => ({\n    insert: /** @type {any} */ (p).text,\n    attributes: Object.assign({}, nAttrs, marksToAttributes(p.marks))\n  }))\n  const { insert, remove, index } = simpleDiff(\n    str,\n    content.map((c) => c.insert).join('')\n  )\n  ytext.delete(index, remove)\n  ytext.insert(index, insert)\n  ytext.applyDelta(\n    content.map((c) => ({ retain: c.insert.length, attributes: c.attributes }))\n  )\n}\n\nconst marksToAttributes = (marks) => {\n  const pattrs = {}\n  marks.forEach((mark) => {\n    if (mark.type.name !== 'ychange') {\n      pattrs[mark.type.name] = mark.attrs\n    }\n  })\n  return pattrs\n}\n\n/**\n * @private\n * @param {{transact: Function}} y\n * @param {Y.XmlFragment} yDomFragment\n * @param {any} pNode\n * @param {ProsemirrorMapping} mapping\n */\nexport const updateYFragment = (y, yDomFragment, pNode, mapping) => {\n  if (\n    yDomFragment instanceof Y.XmlElement &&\n    yDomFragment.nodeName !== pNode.type.name\n  ) {\n    throw new Error('node name mismatch!')\n  }\n  mapping.set(yDomFragment, pNode)\n  // update attributes\n  if (yDomFragment instanceof Y.XmlElement) {\n    const yDomAttrs = yDomFragment.getAttributes()\n    const pAttrs = pNode.attrs\n    for (const key in pAttrs) {\n      if (pAttrs[key] !== null) {\n        if (yDomAttrs[key] !== pAttrs[key] && key !== 'ychange') {\n          yDomFragment.setAttribute(key, pAttrs[key])\n        }\n      } else {\n        yDomFragment.removeAttribute(key)\n      }\n    }\n    // remove all keys that are no longer in pAttrs\n    for (const key in yDomAttrs) {\n      if (pAttrs[key] === undefined) {\n        yDomFragment.removeAttribute(key)\n      }\n    }\n  }\n  // update children\n  const pChildren = normalizePNodeContent(pNode)\n  const pChildCnt = pChildren.length\n  const yChildren = yDomFragment.toArray()\n  const yChildCnt = yChildren.length\n  const minCnt = math.min(pChildCnt, yChildCnt)\n  let left = 0\n  let right = 0\n  // find number of matching elements from left\n  for (; left < minCnt; left++) {\n    const leftY = yChildren[left]\n    const leftP = pChildren[left]\n    if (!mappedIdentity(mapping.get(leftY), leftP)) {\n      if (equalYTypePNode(leftY, leftP)) {\n        // update mapping\n        mapping.set(leftY, leftP)\n      } else {\n        break\n      }\n    }\n  }\n  // find number of matching elements from right\n  for (; right + left + 1 < minCnt; right++) {\n    const rightY = yChildren[yChildCnt - right - 1]\n    const rightP = pChildren[pChildCnt - right - 1]\n    if (!mappedIdentity(mapping.get(rightY), rightP)) {\n      if (equalYTypePNode(rightY, rightP)) {\n        // update mapping\n        mapping.set(rightY, rightP)\n      } else {\n        break\n      }\n    }\n  }\n  y.transact(() => {\n    // try to compare and update\n    while (yChildCnt - left - right > 0 && pChildCnt - left - right > 0) {\n      const leftY = yChildren[left]\n      const leftP = pChildren[left]\n      const rightY = yChildren[yChildCnt - right - 1]\n      const rightP = pChildren[pChildCnt - right - 1]\n      if (leftY instanceof Y.XmlText && leftP instanceof Array) {\n        if (!equalYTextPText(leftY, leftP)) {\n          updateYText(leftY, leftP, mapping)\n        }\n        left += 1\n      } else {\n        let updateLeft = leftY instanceof Y.XmlElement &&\n          matchNodeName(leftY, leftP)\n        let updateRight = rightY instanceof Y.XmlElement &&\n          matchNodeName(rightY, rightP)\n        if (updateLeft && updateRight) {\n          // decide which which element to update\n          const equalityLeft = computeChildEqualityFactor(\n            /** @type {Y.XmlElement} */ (leftY),\n            /** @type {PModel.Node} */ (leftP),\n            mapping\n          )\n          const equalityRight = computeChildEqualityFactor(\n            /** @type {Y.XmlElement} */ (rightY),\n            /** @type {PModel.Node} */ (rightP),\n            mapping\n          )\n          if (\n            equalityLeft.foundMappedChild && !equalityRight.foundMappedChild\n          ) {\n            updateRight = false\n          } else if (\n            !equalityLeft.foundMappedChild && equalityRight.foundMappedChild\n          ) {\n            updateLeft = false\n          } else if (\n            equalityLeft.equalityFactor < equalityRight.equalityFactor\n          ) {\n            updateLeft = false\n          } else {\n            updateRight = false\n          }\n        }\n        if (updateLeft) {\n          updateYFragment(\n            y,\n            /** @type {Y.XmlFragment} */ (leftY),\n            /** @type {PModel.Node} */ (leftP),\n            mapping\n          )\n          left += 1\n        } else if (updateRight) {\n          updateYFragment(\n            y,\n            /** @type {Y.XmlFragment} */ (rightY),\n            /** @type {PModel.Node} */ (rightP),\n            mapping\n          )\n          right += 1\n        } else {\n          mapping.delete(yDomFragment.get(left))\n          yDomFragment.delete(left, 1)\n          yDomFragment.insert(left, [\n            createTypeFromTextOrElementNode(leftP, mapping)\n          ])\n          left += 1\n        }\n      }\n    }\n    const yDelLen = yChildCnt - left - right\n    if (\n      yChildCnt === 1 && pChildCnt === 0 && yChildren[0] instanceof Y.XmlText\n    ) {\n      mapping.delete(yChildren[0])\n      // Edge case handling https://github.com/yjs/y-prosemirror/issues/108\n      // Only delete the content of the Y.Text to retain remote changes on the same Y.Text object\n      yChildren[0].delete(0, yChildren[0].length)\n    } else if (yDelLen > 0) {\n      yDomFragment.slice(left, left + yDelLen).forEach(type => mapping.delete(type))\n      yDomFragment.delete(left, yDelLen)\n    }\n    if (left + right < pChildCnt) {\n      const ins = []\n      for (let i = left; i < pChildCnt - right; i++) {\n        ins.push(createTypeFromTextOrElementNode(pChildren[i], mapping))\n      }\n      yDomFragment.insert(left, ins)\n    }\n  }, ySyncPluginKey)\n}\n\n/**\n * @function\n * @param {Y.XmlElement} yElement\n * @param {any} pNode Prosemirror Node\n */\nconst matchNodeName = (yElement, pNode) =>\n  !(pNode instanceof Array) && yElement.nodeName === pNode.type.name\n", "import { updateYFragment } from './plugins/sync-plugin.js' // eslint-disable-line\nimport { ySyncPluginKey } from './plugins/keys.js'\nimport * as Y from 'yjs'\nimport { EditorView } from 'prosemirror-view' // eslint-disable-line\nimport { Node, Schema } from 'prosemirror-model' // eslint-disable-line\nimport * as error from 'lib0/error'\nimport * as map from 'lib0/map'\nimport * as eventloop from 'lib0/eventloop'\n\n/**\n * Either a node if type is YXmlElement or an Array of text nodes if YXmlText\n * @typedef {Map<Y.AbstractType, Node | Array<Node>>} ProsemirrorMapping\n */\n\n/**\n * Is null if no timeout is in progress.\n * Is defined if a timeout is in progress.\n * Maps from view\n * @type {Map<EditorView, Map<any, any>>|null}\n */\nlet viewsToUpdate = null\n\nconst updateMetas = () => {\n  const ups = /** @type {Map<EditorView, Map<any, any>>} */ (viewsToUpdate)\n  viewsToUpdate = null\n  ups.forEach((metas, view) => {\n    const tr = view.state.tr\n    const syncState = ySyncPluginKey.getState(view.state)\n    if (syncState && syncState.binding && !syncState.binding.isDestroyed) {\n      metas.forEach((val, key) => {\n        tr.setMeta(key, val)\n      })\n      view.dispatch(tr)\n    }\n  })\n}\n\nexport const setMeta = (view, key, value) => {\n  if (!viewsToUpdate) {\n    viewsToUpdate = new Map()\n    eventloop.timeout(0, updateMetas)\n  }\n  map.setIfUndefined(viewsToUpdate, view, map.create).set(key, value)\n}\n\n/**\n * Transforms a Prosemirror based absolute position to a Yjs Cursor (relative position in the Yjs model).\n *\n * @param {number} pos\n * @param {Y.XmlFragment} type\n * @param {ProsemirrorMapping} mapping\n * @return {any} relative position\n */\nexport const absolutePositionToRelativePosition = (pos, type, mapping) => {\n  if (pos === 0) {\n    return Y.createRelativePositionFromTypeIndex(type, 0)\n  }\n  /**\n   * @type {any}\n   */\n  let n = type._first === null ? null : /** @type {Y.ContentType} */ (type._first.content).type\n  while (n !== null && type !== n) {\n    if (n instanceof Y.XmlText) {\n      if (n._length >= pos) {\n        return Y.createRelativePositionFromTypeIndex(n, pos)\n      } else {\n        pos -= n._length\n      }\n      if (n._item !== null && n._item.next !== null) {\n        n = /** @type {Y.ContentType} */ (n._item.next.content).type\n      } else {\n        do {\n          n = n._item === null ? null : n._item.parent\n          pos--\n        } while (n !== type && n !== null && n._item !== null && n._item.next === null)\n        if (n !== null && n !== type) {\n          // @ts-gnore we know that n.next !== null because of above loop conditition\n          n = n._item === null ? null : /** @type {Y.ContentType} */ (/** @type Y.Item */ (n._item.next).content).type\n        }\n      }\n    } else {\n      const pNodeSize = /** @type {any} */ (mapping.get(n) || { nodeSize: 0 }).nodeSize\n      if (n._first !== null && pos < pNodeSize) {\n        n = /** @type {Y.ContentType} */ (n._first.content).type\n        pos--\n      } else {\n        if (pos === 1 && n._length === 0 && pNodeSize > 1) {\n          // edge case, should end in this paragraph\n          return new Y.RelativePosition(n._item === null ? null : n._item.id, n._item === null ? Y.findRootTypeKey(n) : null, null)\n        }\n        pos -= pNodeSize\n        if (n._item !== null && n._item.next !== null) {\n          n = /** @type {Y.ContentType} */ (n._item.next.content).type\n        } else {\n          if (pos === 0) {\n            // set to end of n.parent\n            n = n._item === null ? n : n._item.parent\n            return new Y.RelativePosition(n._item === null ? null : n._item.id, n._item === null ? Y.findRootTypeKey(n) : null, null)\n          }\n          do {\n            n = /** @type {Y.Item} */ (n._item).parent\n            pos--\n          } while (n !== type && /** @type {Y.Item} */ (n._item).next === null)\n          // if n is null at this point, we have an unexpected case\n          if (n !== type) {\n            // We know that n._item.next is defined because of above loop condition\n            n = /** @type {Y.ContentType} */ (/** @type {Y.Item} */ (/** @type {Y.Item} */ (n._item).next).content).type\n          }\n        }\n      }\n    }\n    if (n === null) {\n      throw error.unexpectedCase()\n    }\n    if (pos === 0 && n.constructor !== Y.XmlText && n !== type) { // TODO: set to <= 0\n      return createRelativePosition(n._item.parent, n._item)\n    }\n  }\n  return Y.createRelativePositionFromTypeIndex(type, type._length)\n}\n\nconst createRelativePosition = (type, item) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = Y.findRootTypeKey(type)\n  } else {\n    typeid = Y.createID(type._item.id.client, type._item.id.clock)\n  }\n  return new Y.RelativePosition(typeid, tname, item.id)\n}\n\n/**\n * @param {Y.Doc} y\n * @param {Y.XmlFragment} documentType Top level type that is bound to pView\n * @param {any} relPos Encoded Yjs based relative position\n * @param {ProsemirrorMapping} mapping\n * @return {null|number}\n */\nexport const relativePositionToAbsolutePosition = (y, documentType, relPos, mapping) => {\n  const decodedPos = Y.createAbsolutePositionFromRelativePosition(relPos, y)\n  if (decodedPos === null || (decodedPos.type !== documentType && !Y.isParentOf(documentType, decodedPos.type._item))) {\n    return null\n  }\n  let type = decodedPos.type\n  let pos = 0\n  if (type.constructor === Y.XmlText) {\n    pos = decodedPos.index\n  } else if (type._item === null || !type._item.deleted) {\n    let n = type._first\n    let i = 0\n    while (i < type._length && i < decodedPos.index && n !== null) {\n      if (!n.deleted) {\n        const t = /** @type {Y.ContentType} */ (n.content).type\n        i++\n        if (t instanceof Y.XmlText) {\n          pos += t._length\n        } else {\n          pos += /** @type {any} */ (mapping.get(t)).nodeSize\n        }\n      }\n      n = /** @type {Y.Item} */ (n.right)\n    }\n    pos += 1 // increase because we go out of n\n  }\n  while (type !== documentType && type._item !== null) {\n    // @ts-ignore\n    const parent = type._item.parent\n    // @ts-ignore\n    if (parent._item === null || !parent._item.deleted) {\n      pos += 1 // the start tag\n      let n = /** @type {Y.AbstractType} */ (parent)._first\n      // now iterate until we found type\n      while (n !== null) {\n        const contentType = /** @type {Y.ContentType} */ (n.content).type\n        if (contentType === type) {\n          break\n        }\n        if (!n.deleted) {\n          if (contentType instanceof Y.XmlText) {\n            pos += contentType._length\n          } else {\n            pos += /** @type {any} */ (mapping.get(contentType)).nodeSize\n          }\n        }\n        n = n.right\n      }\n    }\n    type = /** @type {Y.AbstractType} */ (parent)\n  }\n  return pos - 1 // we don't count the most outer tag, because it is a fragment\n}\n\n/**\n * Utility method to convert a Prosemirror Doc Node into a Y.Doc.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Node} doc\n * @param {string} xmlFragment\n * @return {Y.Doc}\n */\nexport function prosemirrorToYDoc (doc, xmlFragment = 'prosemirror') {\n  const ydoc = new Y.Doc()\n  const type = /** @type {Y.XmlFragment} */ (ydoc.get(xmlFragment, Y.XmlFragment))\n  if (!type.doc) {\n    return ydoc\n  }\n\n  prosemirrorToYXmlFragment(doc, type)\n  return type.doc\n}\n\n/**\n * Utility method to update an empty Y.XmlFragment with content from a Prosemirror Doc Node.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * Note: The Y.XmlFragment does not need to be part of a Y.Doc document at the time that this\n * method is called, but it must be added before any other operations are performed on it.\n *\n * @param {Node} doc prosemirror document.\n * @param {Y.XmlFragment} [xmlFragment] If supplied, an xml fragment to be\n *   populated from the prosemirror state; otherwise a new XmlFragment will be created.\n * @return {Y.XmlFragment}\n */\nexport function prosemirrorToYXmlFragment (doc, xmlFragment) {\n  const type = xmlFragment || new Y.XmlFragment()\n  const ydoc = type.doc ? type.doc : { transact: (transaction) => transaction(undefined) }\n  updateYFragment(ydoc, type, doc, new Map())\n  return type\n}\n\n/**\n * Utility method to convert Prosemirror compatible JSON into a Y.Doc.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Schema} schema\n * @param {any} state\n * @param {string} xmlFragment\n * @return {Y.Doc}\n */\nexport function prosemirrorJSONToYDoc (schema, state, xmlFragment = 'prosemirror') {\n  const doc = Node.fromJSON(schema, state)\n  return prosemirrorToYDoc(doc, xmlFragment)\n}\n\n/**\n * Utility method to convert Prosemirror compatible JSON to a Y.XmlFragment\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Schema} schema\n * @param {any} state\n * @param {Y.XmlFragment} [xmlFragment] If supplied, an xml fragment to be\n *   populated from the prosemirror state; otherwise a new XmlFragment will be created.\n * @return {Y.XmlFragment}\n */\nexport function prosemirrorJSONToYXmlFragment (schema, state, xmlFragment) {\n  const doc = Node.fromJSON(schema, state)\n  return prosemirrorToYXmlFragment(doc, xmlFragment)\n}\n\n/**\n * Utility method to convert a Y.Doc to a Prosemirror Doc node.\n *\n * @param {Schema} schema\n * @param {Y.Doc} ydoc\n * @return {Node}\n */\nexport function yDocToProsemirror (schema, ydoc) {\n  const state = yDocToProsemirrorJSON(ydoc)\n  return Node.fromJSON(schema, state)\n}\n\n/**\n * Utility method to convert a Y.XmlFragment to a Prosemirror Doc node.\n *\n * @param {Schema} schema\n * @param {Y.XmlFragment} xmlFragment\n * @return {Node}\n */\nexport function yXmlFragmentToProsemirror (schema, xmlFragment) {\n  const state = yXmlFragmentToProsemirrorJSON(xmlFragment)\n  return Node.fromJSON(schema, state)\n}\n\n/**\n * Utility method to convert a Y.Doc to Prosemirror compatible JSON.\n *\n * @param {Y.Doc} ydoc\n * @param {string} xmlFragment\n * @return {Record<string, any>}\n */\nexport function yDocToProsemirrorJSON (\n  ydoc,\n  xmlFragment = 'prosemirror'\n) {\n  return yXmlFragmentToProsemirrorJSON(ydoc.getXmlFragment(xmlFragment))\n}\n\n/**\n * Utility method to convert a Y.Doc to Prosemirror compatible JSON.\n *\n * @param {Y.XmlFragment} xmlFragment The fragment, which must be part of a Y.Doc.\n * @return {Record<string, any>}\n */\nexport function yXmlFragmentToProsemirrorJSON (xmlFragment) {\n  const items = xmlFragment.toArray()\n\n  function serialize (item) {\n    /**\n     * @type {Object} NodeObject\n     * @property {string} NodeObject.type\n     * @property {Record<string, string>=} NodeObject.attrs\n     * @property {Array<NodeObject>=} NodeObject.content\n     */\n    let response\n\n    // TODO: Must be a better way to detect text nodes than this\n    if (!item.nodeName) {\n      const delta = item.toDelta()\n      response = delta.map((d) => {\n        const text = {\n          type: 'text',\n          text: d.insert\n        }\n\n        if (d.attributes) {\n          text.marks = Object.keys(d.attributes).map((type) => {\n            const attrs = d.attributes[type]\n            const mark = {\n              type\n            }\n\n            if (Object.keys(attrs)) {\n              mark.attrs = attrs\n            }\n\n            return mark\n          })\n        }\n        return text\n      })\n    } else {\n      response = {\n        type: item.nodeName\n      }\n\n      const attrs = item.getAttributes()\n      if (Object.keys(attrs).length) {\n        response.attrs = attrs\n      }\n\n      const children = item.toArray()\n      if (children.length) {\n        response.content = children.map(serialize).flat()\n      }\n    }\n\n    return response\n  }\n\n  return {\n    type: 'doc',\n    content: items.map(serialize)\n  }\n}\n", "import * as Y from 'yjs'\nimport { Decoration, DecorationSet } from \"prosemirror-view\"; // eslint-disable-line\nimport { Plugin } from \"prosemirror-state\"; // eslint-disable-line\nimport { Awareness } from \"y-protocols/awareness\"; // eslint-disable-line\nimport {\n  absolutePositionToRelativePosition,\n  relativePositionToAbsolutePosition,\n  setMeta\n} from '../lib.js'\nimport { yCursorPluginKey, ySyncPluginKey } from './keys.js'\n\nimport * as math from 'lib0/math'\n\n/**\n * Default awareness state filter\n *\n * @param {number} currentClientId current client id\n * @param {number} userClientId user client id\n * @param {any} _user user data\n * @return {boolean}\n */\nexport const defaultAwarenessStateFilter = (currentClientId, userClientId, _user) => currentClientId !== userClientId\n\n/**\n * Default generator for a cursor element\n *\n * @param {any} user user data\n * @return {HTMLElement}\n */\nexport const defaultCursorBuilder = (user) => {\n  const cursor = document.createElement('span')\n  cursor.classList.add('ProseMirror-yjs-cursor')\n  cursor.setAttribute('style', `border-color: ${user.color}`)\n  const userDiv = document.createElement('div')\n  userDiv.setAttribute('style', `background-color: ${user.color}`)\n  userDiv.insertBefore(document.createTextNode(user.name), null)\n  const nonbreakingSpace1 = document.createTextNode('\\u2060')\n  const nonbreakingSpace2 = document.createTextNode('\\u2060')\n  cursor.insertBefore(nonbreakingSpace1, null)\n  cursor.insertBefore(userDiv, null)\n  cursor.insertBefore(nonbreakingSpace2, null)\n  return cursor\n}\n\n/**\n * Default generator for the selection attributes\n *\n * @param {any} user user data\n * @return {import('prosemirror-view').DecorationAttrs}\n */\nexport const defaultSelectionBuilder = (user) => {\n  return {\n    style: `background-color: ${user.color}70`,\n    class: 'ProseMirror-yjs-selection'\n  }\n}\n\nconst rxValidColor = /^#[0-9a-fA-F]{6}$/\n\n/**\n * @param {any} state\n * @param {Awareness} awareness\n * @param {function(number, number, any):boolean} awarenessFilter\n * @param {function({ name: string, color: string }):Element} createCursor\n * @param {function({ name: string, color: string }):import('prosemirror-view').DecorationAttrs} createSelection\n * @return {any} DecorationSet\n */\nexport const createDecorations = (\n  state,\n  awareness,\n  awarenessFilter,\n  createCursor,\n  createSelection\n) => {\n  const ystate = ySyncPluginKey.getState(state)\n  const y = ystate.doc\n  const decorations = []\n  if (\n    ystate.snapshot != null || ystate.prevSnapshot != null ||\n    ystate.binding === null\n  ) {\n    // do not render cursors while snapshot is active\n    return DecorationSet.create(state.doc, [])\n  }\n  awareness.getStates().forEach((aw, clientId) => {\n    if (!awarenessFilter(y.clientID, clientId, aw)) {\n      return\n    }\n\n    if (aw.cursor != null) {\n      const user = aw.user || {}\n      if (user.color == null) {\n        user.color = '#ffa500'\n      } else if (!rxValidColor.test(user.color)) {\n        // We only support 6-digit RGB colors in y-prosemirror\n        console.warn('A user uses an unsupported color format', user)\n      }\n      if (user.name == null) {\n        user.name = `User: ${clientId}`\n      }\n      let anchor = relativePositionToAbsolutePosition(\n        y,\n        ystate.type,\n        Y.createRelativePositionFromJSON(aw.cursor.anchor),\n        ystate.binding.mapping\n      )\n      let head = relativePositionToAbsolutePosition(\n        y,\n        ystate.type,\n        Y.createRelativePositionFromJSON(aw.cursor.head),\n        ystate.binding.mapping\n      )\n      if (anchor !== null && head !== null) {\n        const maxsize = math.max(state.doc.content.size - 1, 0)\n        anchor = math.min(anchor, maxsize)\n        head = math.min(head, maxsize)\n        decorations.push(\n          Decoration.widget(head, () => createCursor(user), {\n            key: clientId + '',\n            side: 10\n          })\n        )\n        const from = math.min(anchor, head)\n        const to = math.max(anchor, head)\n        decorations.push(\n          Decoration.inline(from, to, createSelection(user), {\n            inclusiveEnd: true,\n            inclusiveStart: false\n          })\n        )\n      }\n    }\n  })\n  return DecorationSet.create(state.doc, decorations)\n}\n\n/**\n * A prosemirror plugin that listens to awareness information on Yjs.\n * This requires that a `prosemirrorPlugin` is also bound to the prosemirror.\n *\n * @public\n * @param {Awareness} awareness\n * @param {object} opts\n * @param {function(any, any, any):boolean} [opts.awarenessStateFilter]\n * @param {function(any):HTMLElement} [opts.cursorBuilder]\n * @param {function(any):import('prosemirror-view').DecorationAttrs} [opts.selectionBuilder]\n * @param {function(any):any} [opts.getSelection]\n * @param {string} [cursorStateField] By default all editor bindings use the awareness 'cursor' field to propagate cursor information.\n * @return {any}\n */\nexport const yCursorPlugin = (\n  awareness,\n  {\n    awarenessStateFilter = defaultAwarenessStateFilter,\n    cursorBuilder = defaultCursorBuilder,\n    selectionBuilder = defaultSelectionBuilder,\n    getSelection = (state) => state.selection\n  } = {},\n  cursorStateField = 'cursor'\n) =>\n  new Plugin({\n    key: yCursorPluginKey,\n    state: {\n      init (_, state) {\n        return createDecorations(\n          state,\n          awareness,\n          awarenessStateFilter,\n          cursorBuilder,\n          selectionBuilder\n        )\n      },\n      apply (tr, prevState, _oldState, newState) {\n        const ystate = ySyncPluginKey.getState(newState)\n        const yCursorState = tr.getMeta(yCursorPluginKey)\n        if (\n          (ystate && ystate.isChangeOrigin) ||\n          (yCursorState && yCursorState.awarenessUpdated)\n        ) {\n          return createDecorations(\n            newState,\n            awareness,\n            awarenessStateFilter,\n            cursorBuilder,\n            selectionBuilder\n          )\n        }\n        return prevState.map(tr.mapping, tr.doc)\n      }\n    },\n    props: {\n      decorations: (state) => {\n        return yCursorPluginKey.getState(state)\n      }\n    },\n    view: (view) => {\n      const awarenessListener = () => {\n        // @ts-ignore\n        if (view.docView) {\n          setMeta(view, yCursorPluginKey, { awarenessUpdated: true })\n        }\n      }\n      const updateCursorInfo = () => {\n        const ystate = ySyncPluginKey.getState(view.state)\n        // @note We make implicit checks when checking for the cursor property\n        const current = awareness.getLocalState() || {}\n        if (ystate.binding == null) {\n          return\n        }\n        if (view.hasFocus()) {\n          const selection = getSelection(view.state)\n          /**\n           * @type {Y.RelativePosition}\n           */\n          const anchor = absolutePositionToRelativePosition(\n            selection.anchor,\n            ystate.type,\n            ystate.binding.mapping\n          )\n          /**\n           * @type {Y.RelativePosition}\n           */\n          const head = absolutePositionToRelativePosition(\n            selection.head,\n            ystate.type,\n            ystate.binding.mapping\n          )\n          if (\n            current.cursor == null ||\n            !Y.compareRelativePositions(\n              Y.createRelativePositionFromJSON(current.cursor.anchor),\n              anchor\n            ) ||\n            !Y.compareRelativePositions(\n              Y.createRelativePositionFromJSON(current.cursor.head),\n              head\n            )\n          ) {\n            awareness.setLocalStateField(cursorStateField, {\n              anchor,\n              head\n            })\n          }\n        } else if (\n          current.cursor != null &&\n          relativePositionToAbsolutePosition(\n            ystate.doc,\n            ystate.type,\n            Y.createRelativePositionFromJSON(current.cursor.anchor),\n            ystate.binding.mapping\n          ) !== null\n        ) {\n          // delete cursor information if current cursor information is owned by this editor binding\n          awareness.setLocalStateField(cursorStateField, null)\n        }\n      }\n      awareness.on('change', awarenessListener)\n      view.dom.addEventListener('focusin', updateCursorInfo)\n      view.dom.addEventListener('focusout', updateCursorInfo)\n      return {\n        update: updateCursorInfo,\n        destroy: () => {\n          view.dom.removeEventListener('focusin', updateCursorInfo)\n          view.dom.removeEventListener('focusout', updateCursorInfo)\n          awareness.off('change', awarenessListener)\n          awareness.setLocalStateField(cursorStateField, null)\n        }\n      }\n    }\n  })\n", "\nimport { Plugin } from 'prosemirror-state' // eslint-disable-line\n\nimport { getRelativeSelection } from './sync-plugin.js'\nimport { UndoManager, Item, ContentType, XmlElement, Text } from 'yjs'\nimport { yUndoPluginKey, ySyncPluginKey } from './keys.js'\n\nexport const undo = state => {\n  const undoManager = yUndoPluginKey.getState(state).undoManager\n  if (undoManager != null) {\n    undoManager.undo()\n    return true\n  }\n}\n\nexport const redo = state => {\n  const undoManager = yUndoPluginKey.getState(state).undoManager\n  if (undoManager != null) {\n    undoManager.redo()\n    return true\n  }\n}\n\nexport const defaultProtectedNodes = new Set(['paragraph'])\n\nexport const defaultDeleteFilter = (item, protectedNodes) => !(item instanceof Item) ||\n!(item.content instanceof ContentType) ||\n!(item.content.type instanceof Text ||\n  (item.content.type instanceof XmlElement && protectedNodes.has(item.content.type.nodeName))) ||\nitem.content.type._length === 0\n\nexport const yUndoPlugin = ({ protectedNodes = defaultProtectedNodes, trackedOrigins = [], undoManager = null } = {}) => new Plugin({\n  key: yUndoPluginKey,\n  state: {\n    init: (initargs, state) => {\n      // TODO: check if plugin order matches and fix\n      const ystate = ySyncPluginKey.getState(state)\n      const _undoManager = undoManager || new UndoManager(ystate.type, {\n        trackedOrigins: new Set([ySyncPluginKey].concat(trackedOrigins)),\n        deleteFilter: (item) => defaultDeleteFilter(item, protectedNodes),\n        captureTransaction: tr => tr.meta.get('addToHistory') !== false\n      })\n      return {\n        undoManager: _undoManager,\n        prevSel: null,\n        hasUndoOps: _undoManager.undoStack.length > 0,\n        hasRedoOps: _undoManager.redoStack.length > 0\n      }\n    },\n    /**\n     * @returns {any}\n     */\n    apply: (tr, val, oldState, state) => {\n      const binding = ySyncPluginKey.getState(state).binding\n      const undoManager = val.undoManager\n      const hasUndoOps = undoManager.undoStack.length > 0\n      const hasRedoOps = undoManager.redoStack.length > 0\n      if (binding) {\n        return {\n          undoManager,\n          prevSel: getRelativeSelection(binding, oldState),\n          hasUndoOps,\n          hasRedoOps\n        }\n      } else {\n        if (hasUndoOps !== val.hasUndoOps || hasRedoOps !== val.hasRedoOps) {\n          return Object.assign({}, val, {\n            hasUndoOps: undoManager.undoStack.length > 0,\n            hasRedoOps: undoManager.redoStack.length > 0\n          })\n        } else { // nothing changed\n          return val\n        }\n      }\n    }\n  },\n  view: view => {\n    const ystate = ySyncPluginKey.getState(view.state)\n    const undoManager = yUndoPluginKey.getState(view.state).undoManager\n    undoManager.on('stack-item-added', ({ stackItem }) => {\n      const binding = ystate.binding\n      if (binding) {\n        stackItem.meta.set(binding, yUndoPluginKey.getState(view.state).prevSel)\n      }\n    })\n    undoManager.on('stack-item-popped', ({ stackItem }) => {\n      const binding = ystate.binding\n      if (binding) {\n        binding.beforeTransactionSelection = stackItem.meta.get(binding) || binding.beforeTransactionSelection\n      }\n    })\n    return {\n      destroy: () => {\n        undoManager.destroy()\n      }\n    }\n  }\n})\n", "import { Extension } from '@tiptap/core'\nimport { EditorView } from '@tiptap/pm/view'\nimport {\n  redo,\n  undo,\n  ySyncPlugin,\n  yUndoPlugin,\n  yUndoPluginKey,\n} from 'y-prosemirror'\nimport { UndoManager } from 'yjs'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    collaboration: {\n      /**\n       * Undo recent changes\n       */\n      undo: () => ReturnType,\n      /**\n       * Reapply reverted changes\n       */\n      redo: () => ReturnType,\n    }\n  }\n}\n\nexport interface CollaborationOptions {\n  /**\n   * An initialized Y.js document.\n   */\n  document: any,\n  /**\n   * Name of a Y.js fragment, can be changed to sync multiple fields with one Y.js document.\n   */\n  field: string,\n  /**\n   * A raw Y.js fragment, can be used instead of `document` and `field`.\n   */\n  fragment: any,\n  /**\n   * Fired when the content from Yjs is initially rendered to Tiptap.\n   */\n  onFirstRender?: () => void,\n}\n\nexport const Collaboration = Extension.create<CollaborationOptions>({\n  name: 'collaboration',\n\n  priority: 1000,\n\n  addOptions() {\n    return {\n      document: null,\n      field: 'default',\n      fragment: null,\n    }\n  },\n\n  onCreate() {\n    if (this.editor.extensionManager.extensions.find(extension => extension.name === 'history')) {\n      console.warn('[tiptap warn]: \"@tiptap/extension-collaboration\" comes with its own history support and is not compatible with \"@tiptap/extension-history\".')\n    }\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ tr, state, dispatch }) => {\n        tr.setMeta('preventDispatch', true)\n\n        const undoManager: UndoManager = yUndoPluginKey.getState(state).undoManager\n\n        if (undoManager.undoStack.length === 0) {\n          return false\n        }\n\n        if (!dispatch) {\n          return true\n        }\n\n        return undo(state)\n      },\n      redo: () => ({ tr, state, dispatch }) => {\n        tr.setMeta('preventDispatch', true)\n\n        const undoManager: UndoManager = yUndoPluginKey.getState(state).undoManager\n\n        if (undoManager.redoStack.length === 0) {\n          return false\n        }\n\n        if (!dispatch) {\n          return true\n        }\n\n        return redo(state)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n    }\n  },\n\n  addProseMirrorPlugins() {\n    const fragment = this.options.fragment\n      ? this.options.fragment\n      : this.options.document.getXmlFragment(this.options.field)\n\n    // Quick fix until there is an official implementation (thanks to @hamflx).\n    // See https://github.com/yjs/y-prosemirror/issues/114 and https://github.com/yjs/y-prosemirror/issues/102\n    const yUndoPluginInstance = yUndoPlugin()\n    const originalUndoPluginView = yUndoPluginInstance.spec.view\n\n    yUndoPluginInstance.spec.view = (view: EditorView) => {\n      const { undoManager } = yUndoPluginKey.getState(view.state)\n\n      if (undoManager.restore) {\n        undoManager.restore()\n        // eslint-disable-next-line\n        undoManager.restore = () => {}\n      }\n\n      const viewRet = originalUndoPluginView ? originalUndoPluginView(view) : undefined\n\n      return {\n        destroy: () => {\n          const hasUndoManSelf = undoManager.trackedOrigins.has(undoManager)\n          // eslint-disable-next-line\n          const observers = undoManager._observers\n\n          undoManager.restore = () => {\n            if (hasUndoManSelf) {\n              undoManager.trackedOrigins.add(undoManager)\n            }\n\n            undoManager.doc.on('afterTransaction', undoManager.afterTransactionHandler)\n            // eslint-disable-next-line\n            undoManager._observers = observers\n          }\n\n          if (viewRet?.destroy) {\n            viewRet.destroy()\n          }\n        },\n      }\n    }\n\n    const onFirstRender = this.options.onFirstRender\n    const ySyncPluginOptions = onFirstRender ? { onFirstRender } : {}\n    const ySyncPluginInstance = ySyncPlugin(fragment, ySyncPluginOptions)\n\n    return [ySyncPluginInstance, yUndoPluginInstance]\n  },\n})\n", "import { Transaction } from '@tiptap/pm/state'\nimport { ySyncPluginKey } from 'y-prosemirror'\n\nexport function isChangeOrigin(transaction: Transaction): boolean {\n  return !!transaction.getMeta(ySyncPluginKey)\n}\n", "import { Extension } from '@tiptap/core'\nimport { DecorationAttrs } from '@tiptap/pm/view'\nimport { defaultSelectionBuilder, yCursorPlugin } from 'y-prosemirror'\n\ntype CollaborationCursorStorage = {\n  users: { clientId: number, [key: string]: any }[],\n}\n\nexport interface CollaborationCursorOptions {\n  provider: any,\n  user: Record<string, any>,\n  render (user: Record<string, any>): HTMLElement,\n  selectionRender (user: Record<string, any>): DecorationAttrs\n  /**\n   * @deprecated The \"onUpdate\" option is deprecated. Please use `editor.storage.collaborationCursor.users` instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor\n   */\n  onUpdate: (users: { clientId: number, [key: string]: any }[]) => null,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    collaborationCursor: {\n      /**\n       * Update details of the current user\n       */\n      updateUser: (attributes: Record<string, any>) => ReturnType,\n      /**\n       * Update details of the current user\n       *\n       * @deprecated The \"user\" command is deprecated. Please use \"updateUser\" instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor\n       */\n      user: (attributes: Record<string, any>) => ReturnType,\n    }\n  }\n}\n\nconst awarenessStatesToArray = (states: Map<number, Record<string, any>>) => {\n  return Array.from(states.entries()).map(([key, value]) => {\n    return {\n      clientId: key,\n      ...value.user,\n    }\n  })\n}\n\nconst defaultOnUpdate = () => null\n\nexport const CollaborationCursor = Extension.create<CollaborationCursorOptions, CollaborationCursorStorage>({\n  name: 'collaborationCursor',\n\n  addOptions() {\n    return {\n      provider: null,\n      user: {\n        name: null,\n        color: null,\n      },\n      render: user => {\n        const cursor = document.createElement('span')\n\n        cursor.classList.add('collaboration-cursor__caret')\n        cursor.setAttribute('style', `border-color: ${user.color}`)\n\n        const label = document.createElement('div')\n\n        label.classList.add('collaboration-cursor__label')\n        label.setAttribute('style', `background-color: ${user.color}`)\n        label.insertBefore(document.createTextNode(user.name), null)\n        cursor.insertBefore(label, null)\n\n        return cursor\n      },\n      selectionRender: defaultSelectionBuilder,\n      onUpdate: defaultOnUpdate,\n    }\n  },\n\n  onCreate() {\n    if (this.options.onUpdate !== defaultOnUpdate) {\n      console.warn('[tiptap warn]: DEPRECATED: The \"onUpdate\" option is deprecated. Please use `editor.storage.collaborationCursor.users` instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor')\n    }\n  },\n\n  addStorage() {\n    return {\n      users: [],\n    }\n  },\n\n  addCommands() {\n    return {\n      updateUser: attributes => () => {\n        this.options.user = attributes\n\n        this.options.provider.awareness.setLocalStateField('user', this.options.user)\n\n        return true\n      },\n      user: attributes => ({ editor }) => {\n        console.warn('[tiptap warn]: DEPRECATED: The \"user\" command is deprecated. Please use \"updateUser\" instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor')\n\n        return editor.commands.updateUser(attributes)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      yCursorPlugin(\n        (() => {\n          this.options.provider.awareness.setLocalStateField('user', this.options.user)\n\n          this.storage.users = awarenessStatesToArray(this.options.provider.awareness.states)\n\n          this.options.provider.awareness.on('update', () => {\n            this.storage.users = awarenessStatesToArray(this.options.provider.awareness.states)\n          })\n\n          return this.options.provider.awareness\n        })(),\n        // @ts-ignore\n        {\n          cursorBuilder: this.options.render,\n          selectionBuilder: this.options.selectionRender,\n        },\n      ),\n    ]\n  },\n})\n", "/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n", "/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n", "/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n", "import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n", "/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n", "/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n", "/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n", "import * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nenum AuthMessageType {\n  Token = 0,\n  PermissionDenied = 1,\n  Authenticated = 2,\n}\n\nexport const writeAuthentication = (encoder: encoding.Encoder, auth: string) => {\n  encoding.writeVarUint(encoder, AuthMessageType.Token)\n  encoding.writeVarString(encoder, auth)\n}\n\nexport const writePermissionDenied = (encoder: encoding.Encoder, reason: string) => {\n  encoding.writeVarUint(encoder, AuthMessageType.PermissionDenied)\n  encoding.writeVarString(encoder, reason)\n}\n\nexport const writeAuthenticated = (encoder: encoding.Encoder, scope: 'readonly' | 'read-write') => {\n  encoding.writeVarUint(encoder, AuthMessageType.Authenticated)\n  encoding.writeVarString(encoder, scope)\n}\n\nexport const readAuthMessage = (\n  decoder: decoding.Decoder,\n  permissionDeniedHandler: (reason: string) => void,\n  authenticatedHandler: (scope: string) => void,\n) => {\n  switch (decoding.readVarUint(decoder)) {\n    case AuthMessageType.PermissionDenied: {\n      permissionDeniedHandler(decoding.readVarString(decoder))\n      break\n    }\n    case AuthMessageType.Authenticated: {\n      authenticatedHandler(decoding.readVarString(decoder))\n      break\n    }\n    default:\n  }\n}\n", "export interface CloseEvent {\n  code: number,\n  reason: string,\n}\n\n/**\n * The server is terminating the connection because a data frame was received\n * that is too large.\n * See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent/code\n */\nexport const MessageTooBig: CloseEvent = {\n  code: 1009,\n  reason: 'Message Too Big',\n}\n\n/**\n * The server successfully processed the request, asks that the requester reset\n * its document view, and is not returning any content.\n */\nexport const ResetConnection: CloseEvent = {\n  code: 4205,\n  reason: 'Reset Connection',\n}\n\n/**\n * Similar to Forbidden, but specifically for use when authentication is required and has\n * failed or has not yet been provided.\n */\nexport const Unauthorized: CloseEvent = {\n  code: 4401,\n  reason: 'Unauthorized',\n}\n\n/**\n * The request contained valid data and was understood by the server, but the server\n * is refusing action.\n */\nexport const Forbidden: CloseEvent = {\n  code: 4403,\n  reason: 'Forbidden',\n}\n\n/**\n * The server timed out waiting for the request.\n */\nexport const ConnectionTimeout: CloseEvent = {\n  code: 4408,\n  reason: 'Connection Timeout',\n}\n", "export const awarenessStatesToArray = (states: Map<number, Record<string, any>>) => {\n  return Array.from(states.entries()).map(([key, value]) => {\n    return {\n      clientId: key,\n      ...value,\n    }\n  })\n}\n", "/**\n * State of the WebSocket connection.\n * https://developer.mozilla.org/de/docs/Web/API/WebSocket/readyState\n */\nexport enum WsReadyStates {\n  Connecting = 0,\n  Open = 1,\n  Closing = 2,\n  Closed = 3,\n}\n", "function applyDefaults(options) {\n    if (!options) {\n        options = {};\n    }\n    return {\n        delay: (options.delay === undefined) ? 200 : options.delay,\n        initialDelay: (options.initialDelay === undefined) ? 0 : options.initialDelay,\n        minDelay: (options.minDelay === undefined) ? 0 : options.minDelay,\n        maxDelay: (options.maxDelay === undefined) ? 0 : options.maxDelay,\n        factor: (options.factor === undefined) ? 0 : options.factor,\n        maxAttempts: (options.maxAttempts === undefined) ? 3 : options.maxAttempts,\n        timeout: (options.timeout === undefined) ? 0 : options.timeout,\n        jitter: (options.jitter === true),\n        handleError: (options.handleError === undefined) ? null : options.handleError,\n        handleTimeout: (options.handleTimeout === undefined) ? null : options.handleTimeout,\n        beforeAttempt: (options.beforeAttempt === undefined) ? null : options.beforeAttempt,\n        calculateDelay: (options.calculateDelay === undefined) ? null : options.calculateDelay\n    };\n}\nexport async function sleep(delay) {\n    return new Promise((resolve, reject) => {\n        setTimeout(resolve, delay);\n    });\n}\nexport function defaultCalculateDelay(context, options) {\n    let delay = options.delay;\n    if (delay === 0) {\n        // no delay between attempts\n        return 0;\n    }\n    if (options.factor) {\n        delay *= Math.pow(options.factor, context.attemptNum - 1);\n        if (options.maxDelay !== 0) {\n            delay = Math.min(delay, options.maxDelay);\n        }\n    }\n    if (options.jitter) {\n        // Jitter will result in a random value between `minDelay` and\n        // calculated delay for a given attempt.\n        // See https://www.awsarchitectureblog.com/2015/03/backoff.html\n        // We're using the \"full jitter\" strategy.\n        const min = Math.ceil(options.minDelay);\n        const max = Math.floor(delay);\n        delay = Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    return Math.round(delay);\n}\nexport async function retry(attemptFunc, attemptOptions) {\n    const options = applyDefaults(attemptOptions);\n    for (const prop of [\n        'delay',\n        'initialDelay',\n        'minDelay',\n        'maxDelay',\n        'maxAttempts',\n        'timeout'\n    ]) {\n        const value = options[prop];\n        if (!Number.isInteger(value) || (value < 0)) {\n            throw new Error(`Value for ${prop} must be an integer greater than or equal to 0`);\n        }\n    }\n    if ((options.factor.constructor !== Number) || (options.factor < 0)) {\n        throw new Error(`Value for factor must be a number greater than or equal to 0`);\n    }\n    if (options.delay < options.minDelay) {\n        throw new Error(`delay cannot be less than minDelay (delay: ${options.delay}, minDelay: ${options.minDelay}`);\n    }\n    const context = {\n        attemptNum: 0,\n        attemptsRemaining: options.maxAttempts ? options.maxAttempts : -1,\n        aborted: false,\n        abort() {\n            context.aborted = true;\n        }\n    };\n    const calculateDelay = options.calculateDelay || defaultCalculateDelay;\n    async function makeAttempt() {\n        if (options.beforeAttempt) {\n            options.beforeAttempt(context, options);\n        }\n        if (context.aborted) {\n            const err = new Error(`Attempt aborted`);\n            err.code = 'ATTEMPT_ABORTED';\n            throw err;\n        }\n        const onError = async (err) => {\n            if (options.handleError) {\n                await options.handleError(err, context, options);\n            }\n            if (context.aborted || (context.attemptsRemaining === 0)) {\n                throw err;\n            }\n            // We are about to try again so increment attempt number\n            context.attemptNum++;\n            const delay = calculateDelay(context, options);\n            if (delay) {\n                await sleep(delay);\n            }\n            return makeAttempt();\n        };\n        if (context.attemptsRemaining > 0) {\n            context.attemptsRemaining--;\n        }\n        if (options.timeout) {\n            return new Promise((resolve, reject) => {\n                const timer = setTimeout(() => {\n                    if (options.handleTimeout) {\n                        // If calling handleTimeout throws an error that is not wrapped in a promise\n                        // we want to catch the error and reject.\n                        try {\n                            resolve(options.handleTimeout(context, options));\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    }\n                    else {\n                        const err = new Error(`Retry timeout (attemptNum: ${context.attemptNum}, timeout: ${options.timeout})`);\n                        err.code = 'ATTEMPT_TIMEOUT';\n                        reject(err);\n                    }\n                }, options.timeout);\n                attemptFunc(context, options).then((result) => {\n                    clearTimeout(timer);\n                    resolve(result);\n                }).catch((err) => {\n                    clearTimeout(timer);\n                    // Calling resolve with a Promise that rejects here will result\n                    // in an unhandled rejection. Calling `reject` with errors\n                    // does not result in an unhandled rejection\n                    onError(err).then(resolve).catch(reject);\n                });\n            });\n        }\n        else {\n            // No timeout provided so wait indefinitely for the returned promise\n            // to be resolved.\n            return attemptFunc(context, options).catch(onError);\n        }\n    }\n    const initialDelay = options.calculateDelay\n        ? options.calculateDelay(context, options)\n        : options.initialDelay;\n    if (initialDelay) {\n        await sleep(initialDelay);\n    }\n    return makeAttempt();\n}\n", "/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template V,K\n * @template {Map<K,V>} MAP\n * @param {MAP} map\n * @param {K} key\n * @param {function():V} createT\n * @return {V}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n", "/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n", "/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n", "import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n", "/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n", "/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined' && localStorage) {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n", "/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n", "/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n", "/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n", "/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n", "/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n", "/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n", "/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n", "/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n", "/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n", "/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as array from './array.js'\nimport * as math from './math.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return createUint8ArrayViewFromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Implements base64url - see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * @param {Uint8Array} buf\n */\nexport const toBase64UrlEncoded = buf => toBase64(buf).replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '')\n\n/**\n * @param {string} base64\n */\nexport const fromBase64UrlEncoded = base64 => fromBase64(base64.replaceAll('-', '+').replaceAll('_', '/'))\n\n/**\n * Base64 is always a more efficient choice. This exists for utility purposes only.\n *\n * @param {Uint8Array} buf\n */\nexport const toHexString = buf => array.map(buf, b => b.toString(16).padStart(2, '0')).join('')\n\n/**\n * Note: This function expects that the hex doesn't start with 0x..\n *\n * @param {string} hex\n */\nexport const fromHexString = hex => {\n  const hlen = hex.length\n  const buf = new Uint8Array(math.ceil(hlen / 2))\n  for (let i = 0; i < hlen; i += 2) {\n    buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16)\n  }\n  return buf\n}\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data =>\n  encoding.encode(encoder => encoding.writeAny(encoder, data))\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n\n/**\n * Shift Byte Array {N} bits to the left. Does not expand byte array.\n *\n * @param {Uint8Array} bs\n * @param {number} N should be in the range of [0-7]\n */\nexport const shiftNBitsLeft = (bs, N) => {\n  if (N === 0) return bs\n  bs = new Uint8Array(bs)\n  bs[0] <<= N\n  for (let i = 1; i < bs.length; i++) {\n    bs[i - 1] |= bs[i] >>> (8 - N)\n    bs[i] <<= N\n  }\n  return bs\n}\n", "/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\n/* c8 ignore start */\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    /**\n     * @param {any} e\n     */\n    this._onChange = e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') })\n    storage.onChange(this._onChange)\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n\n  close () {\n    storage.offChange(this._onChange)\n  }\n}\n/* c8 ignore stop */\n\n// Use BroadcastChannel or Polyfill\n/* c8 ignore next */\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = set.create()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    /* c8 ignore next */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => {\n  getChannel(room).subs.add(f)\n  return f\n}\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => {\n  const channel = getChannel(room)\n  const unsubscribed = channel.subs.delete(f)\n  if (unsubscribed && channel.subs.size === 0) {\n    channel.bc.close()\n    channels.delete(room)\n  }\n  return unsubscribed\n}\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n", "/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n", "/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n", "/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n", "/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n", "export default class EventEmitter {\n\n  public callbacks: { [key: string]: Function[] } = {}\n\n  public on(event: string, fn: Function): this {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    this.callbacks[event].push(fn)\n\n    return this\n  }\n\n  protected emit(event: string, ...args: any): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args))\n    }\n\n    return this\n  }\n\n  public off(event: string, fn?: Function): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter(callback => callback !== fn)\n      } else {\n        delete this.callbacks[event]\n      }\n    }\n\n    return this\n  }\n\n  removeAllListeners(): void {\n    this.callbacks = {}\n  }\n}\n", "/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (let i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n", "import { Encoder } from 'lib0/encoding'\nimport type { Event, MessageEvent } from 'ws'\nimport { Awareness } from 'y-protocols/awareness'\nimport * as Y from 'yjs'\nimport { CloseEvent } from '@hocuspocus/common'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { OutgoingMessage } from './OutgoingMessage.js'\nimport { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'\nimport { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'\nimport { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'\nimport { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'\nimport { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'\nimport { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'\n\nexport enum MessageType {\n  Sync = 0,\n  Awareness = 1,\n  Auth = 2,\n  QueryAwareness = 3,\n  Stateless = 5,\n  CLOSE = 7,\n  SyncStatus = 8,\n}\n\nexport enum WebSocketStatus {\n  Connecting = 'connecting',\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface OutgoingMessageInterface {\n  encoder: Encoder\n  type?: MessageType\n}\n\nexport interface OutgoingMessageArguments {\n  documentName: string,\n  token: string,\n  document: Y.Doc,\n  awareness: Awareness,\n  clients: number[],\n  states: Map<number, { [key: string]: any; }>,\n  update: any,\n  payload: string,\n  encoder: Encoder,\n}\n\nexport interface Constructable<T> {\n  new(...args: any) : T\n}\n\nexport type ConstructableOutgoingMessage =\n  Constructable<AuthenticationMessage> |\n  Constructable<AwarenessMessage> |\n  Constructable<QueryAwarenessMessage> |\n  Constructable<SyncStepOneMessage> |\n  Constructable<SyncStepTwoMessage> |\n  Constructable<UpdateMessage>\n\nexport type onAuthenticationFailedParameters = {\n  reason: string,\n}\n\nexport type onOpenParameters = {\n  event: Event,\n}\n\nexport type onMessageParameters = {\n  event: MessageEvent,\n  message: IncomingMessage,\n}\n\nexport type onOutgoingMessageParameters = {\n  message: OutgoingMessage,\n}\n\nexport type onStatusParameters = {\n  status: WebSocketStatus,\n}\n\nexport type onSyncedParameters = {\n  state: boolean,\n}\n\nexport type onDisconnectParameters = {\n  event: CloseEvent,\n}\n\nexport type onCloseParameters = {\n  event: CloseEvent,\n}\n\nexport type onAwarenessUpdateParameters = {\n  states: StatesArray\n}\n\nexport type onAwarenessChangeParameters = {\n  states: StatesArray\n}\n\nexport type onStatelessParameters = {\n  payload: string\n}\n\nexport type StatesArray = { clientId: number, [key: string | number]: any }[]\n\n// hocuspocus-pro types\n\nexport type THistoryVersion = {\n  name?: string;\n  version: number;\n  date: number;\n};\n\nexport type THistoryConfiguration = {\n  autoVersioning: boolean;\n  currentVersion: number;\n  stateCaptured: number; // indicates whether changes have been made since the last version\n};\n\nexport type THistoryAction =\n  | THistoryDocumentRevertAction\n  | THistoryVersionCreateAction\n  | THistoryVersionPreviewAction;\n\nexport type THistoryDocumentRevertAction = {\n  action: 'document.revert';\n  /**\n   * if changes havent been persisted to a version yet, we'll create one with the specified name,\n   * expect when `false` is passed.\n   */\n  currentVersionName?: string | false;\n  /**\n   * Name of the version that is created after the revert. Pass `false` to avoid generating a new version.\n   */\n  newVersionName?: string | false;\n};\n\nexport type THistoryVersionCreateAction = {\n  action: 'version.create';\n  name?: string;\n};\n\nexport type THistoryVersionPreviewAction = {\n  action: 'version.preview';\n  version: number;\n};\n\nexport type THistoryEvent =\n  | THistoryVersionPreviewEvent\n  | THistoryVersionCreatedEvent\n  | THistoryDocumentRevertedEvent;\n\nexport type THistoryVersionCreatedEvent = {\n  event: 'version.created';\n  version: number;\n};\n\nexport type THistoryVersionPreviewEvent = {\n  event: 'version.preview';\n  version: number;\n  ydoc: string; // base64-encoded Uint8Array\n};\n\nexport type THistoryDocumentRevertedEvent = {\n  event: 'document.reverted';\n  version: number;\n};\n", "import {\n  createDecoder,\n  peekVarString,\n  readVarUint,\n  readVarUint8Array,\n  readVarString,\n  Decoder,\n} from 'lib0/decoding'\nimport {\n  Encoder,\n  createEncoder,\n  writeVarUint,\n  writeVarUint8Array,\n  writeVarString,\n  length,\n} from 'lib0/encoding'\nimport { MessageType } from './types.js'\n\nexport class IncomingMessage {\n\n  data: any\n\n  encoder: Encoder\n\n  decoder: Decoder\n\n  constructor(data: any) {\n    this.data = data\n    this.encoder = createEncoder()\n    this.decoder = createDecoder(new Uint8Array(this.data))\n  }\n\n  peekVarString(): string {\n    return peekVarString(this.decoder)\n  }\n\n  readVarUint(): MessageType {\n    return readVarUint(this.decoder)\n  }\n\n  readVarString(): string {\n    return readVarString(this.decoder)\n  }\n\n  readVarUint8Array() {\n    return readVarUint8Array(this.decoder)\n  }\n\n  writeVarUint(type: MessageType) {\n    return writeVarUint(this.encoder, type)\n  }\n\n  writeVarString(string: string) {\n    return writeVarString(this.encoder, string)\n  }\n\n  writeVarUint8Array(data: Uint8Array) {\n    return writeVarUint8Array(this.encoder, data)\n  }\n\n  length() {\n    return length(this.encoder)\n  }\n}\n", "import {\n  Forbidden, MessageTooBig, Unauthorized, WsReadyStates,\n} from '@hocuspocus/common'\nimport { retry } from '@lifeomic/attempt'\nimport * as time from 'lib0/time'\nimport * as url from 'lib0/url'\nimport type { MessageEvent } from 'ws'\nimport { Event } from 'ws'\nimport EventEmitter from './EventEmitter.js'\nimport { HocuspocusProvider } from './HocuspocusProvider.js'\nimport {\n  WebSocketStatus,\n  onAwarenessChangeParameters, onAwarenessUpdateParameters,\n  onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatusParameters,\n} from './types.js'\nimport { IncomingMessage } from './IncomingMessage.js'\n\nexport type HocusPocusWebSocket = WebSocket & { identifier: string };\n\nexport type HocuspocusProviderWebsocketConfiguration =\n  Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>>\n  & Partial<CompleteHocuspocusProviderWebsocketConfiguration>\n\nexport interface CompleteHocuspocusProviderWebsocketConfiguration {\n  /**\n   * URL of your @hocuspocus/server instance\n   */\n   url: string,\n\n  /**\n   * Pass `false` to start the connection manually.\n   */\n  connect: boolean,\n\n  /**\n   * URL parameters that should be added.\n   */\n  parameters: { [key: string]: any },\n  /**\n   * An optional WebSocket polyfill, for example for Node.js\n   */\n  WebSocketPolyfill: any,\n\n  /**\n   * Disconnect when no message is received for the defined amount of milliseconds.\n   */\n  messageReconnectTimeout: number,\n  /**\n   * The delay between each attempt in milliseconds. You can provide a factor to have the delay grow exponentially.\n   */\n  delay: number,\n  /**\n   * The intialDelay is the amount of time to wait before making the first attempt. This option should typically be 0 since you typically want the first attempt to happen immediately.\n   */\n  initialDelay: number,\n  /**\n   * The factor option is used to grow the delay exponentially.\n   */\n  factor: number,\n  /**\n   * The maximum number of attempts or 0 if there is no limit on number of attempts.\n   */\n  maxAttempts: number,\n  /**\n   * minDelay is used to set a lower bound of delay when jitter is enabled. This property has no effect if jitter is disabled.\n   */\n  minDelay: number,\n  /**\n   * The maxDelay option is used to set an upper bound for the delay when factor is enabled. A value of 0 can be provided if there should be no upper bound when calculating delay.\n   */\n  maxDelay: number,\n  /**\n   * If jitter is true then the calculated delay will be a random integer value between minDelay and the calculated delay for the current iteration.\n   */\n  jitter: boolean,\n  /**\n   * A timeout in milliseconds. If timeout is non-zero then a timer is set using setTimeout. If the timeout is triggered then future attempts will be aborted.\n   */\n  timeout: number,\n  onOpen: (data: onOpenParameters) => void,\n  onConnect: () => void,\n  onMessage: (data: onMessageParameters) => void,\n  onOutgoingMessage: (data: onOutgoingMessageParameters) => void,\n  onStatus: (data: onStatusParameters) => void,\n  onDisconnect: (data: onDisconnectParameters) => void,\n  onClose: (data: onCloseParameters) => void,\n  onDestroy: () => void,\n  onAwarenessUpdate: (data: onAwarenessUpdateParameters) => void,\n  onAwarenessChange: (data: onAwarenessChangeParameters) => void,\n  /**\n   * Don’t output any warnings.\n   */\n  quiet: boolean,\n\n  /**\n   * Map of attached providers keyed by documentName.\n   */\n  providerMap: Map<string, HocuspocusProvider>,\n}\n\nexport class HocuspocusProviderWebsocket extends EventEmitter {\n  private messageQueue: any[] = []\n\n  public configuration: CompleteHocuspocusProviderWebsocketConfiguration = {\n    url: '',\n    // @ts-ignore\n    document: undefined,\n    WebSocketPolyfill: undefined,\n    parameters: {},\n    connect: true,\n    broadcast: true,\n    forceSyncInterval: false,\n    // TODO: this should depend on awareness.outdatedTime\n    messageReconnectTimeout: 30000,\n    // 1 second\n    delay: 1000,\n    // instant\n    initialDelay: 0,\n    // double the delay each time\n    factor: 2,\n    // unlimited retries\n    maxAttempts: 0,\n    // wait at least 1 second\n    minDelay: 1000,\n    // at least every 30 seconds\n    maxDelay: 30000,\n    // randomize\n    jitter: true,\n    // retry forever\n    timeout: 0,\n    onOpen: () => null,\n    onConnect: () => null,\n    onMessage: () => null,\n    onOutgoingMessage: () => null,\n    onStatus: () => null,\n    onDisconnect: () => null,\n    onClose: () => null,\n    onDestroy: () => null,\n    onAwarenessUpdate: () => null,\n    onAwarenessChange: () => null,\n    quiet: false,\n    providerMap: new Map(),\n  }\n\n  webSocket: HocusPocusWebSocket | null = null\n\n  webSocketHandlers: { [key: string]: any } = {}\n\n  shouldConnect = true\n\n  status = WebSocketStatus.Disconnected\n\n  lastMessageReceived = 0\n\n  identifier = 0\n\n  intervals: any = {\n    forceSync: null,\n    connectionChecker: null,\n  }\n\n  connectionAttempt: {\n    resolve: (value?: any) => void;\n    reject: (reason?: any) => void;\n  } | null = null\n\n  constructor(configuration: HocuspocusProviderWebsocketConfiguration) {\n    super()\n    this.setConfiguration(configuration)\n\n    this.configuration.WebSocketPolyfill = configuration.WebSocketPolyfill\n      ? configuration.WebSocketPolyfill\n      : WebSocket\n\n    this.on('open', this.configuration.onOpen)\n    this.on('open', this.onOpen.bind(this))\n    this.on('connect', this.configuration.onConnect)\n    this.on('message', this.configuration.onMessage)\n    this.on('outgoingMessage', this.configuration.onOutgoingMessage)\n    this.on('status', this.configuration.onStatus)\n    this.on('status', this.onStatus.bind(this))\n    this.on('disconnect', this.configuration.onDisconnect)\n    this.on('close', this.configuration.onClose)\n    this.on('destroy', this.configuration.onDestroy)\n    this.on('awarenessUpdate', this.configuration.onAwarenessUpdate)\n    this.on('awarenessChange', this.configuration.onAwarenessChange)\n\n    this.on('close', this.onClose.bind(this))\n    this.on('message', this.onMessage.bind(this))\n\n    this.intervals.connectionChecker = setInterval(\n      this.checkConnection.bind(this),\n      this.configuration.messageReconnectTimeout / 10,\n    )\n\n    if (typeof configuration.connect !== 'undefined') {\n      this.shouldConnect = configuration.connect\n    }\n\n    if (!this.shouldConnect) {\n      return\n    }\n\n    this.connect()\n  }\n\n  receivedOnOpenPayload?: Event | undefined = undefined\n\n  receivedOnStatusPayload?: onStatusParameters | undefined = undefined\n\n  async onOpen(event: Event) {\n    this.receivedOnOpenPayload = event\n  }\n\n  async onStatus(data: onStatusParameters) {\n    this.receivedOnStatusPayload = data\n  }\n\n  attach(provider: HocuspocusProvider) {\n    this.configuration.providerMap.set(provider.configuration.name, provider)\n\n    if (this.status === WebSocketStatus.Disconnected && this.shouldConnect) {\n      this.connect()\n    }\n\n    if (this.receivedOnOpenPayload) {\n      provider.onOpen(this.receivedOnOpenPayload)\n    }\n\n    if (this.receivedOnStatusPayload) {\n      provider.onStatus(this.receivedOnStatusPayload)\n    }\n  }\n\n  detach(provider: HocuspocusProvider) {\n    this.configuration.providerMap.delete(provider.configuration.name)\n  }\n\n  public setConfiguration(\n    configuration: Partial<HocuspocusProviderWebsocketConfiguration> = {},\n  ): void {\n    this.configuration = { ...this.configuration, ...configuration }\n  }\n\n  cancelWebsocketRetry?: () => void\n\n  async connect() {\n    if (this.status === WebSocketStatus.Connected) {\n      return\n    }\n\n    // Always cancel any previously initiated connection retryer instances\n    if (this.cancelWebsocketRetry) {\n      this.cancelWebsocketRetry()\n      this.cancelWebsocketRetry = undefined\n    }\n\n    this.receivedOnOpenPayload = undefined\n    this.receivedOnStatusPayload = undefined\n    this.shouldConnect = true\n\n    const abortableRetry = () => {\n      let cancelAttempt = false\n\n      const retryPromise = retry(this.createWebSocketConnection.bind(this), {\n        delay: this.configuration.delay,\n        initialDelay: this.configuration.initialDelay,\n        factor: this.configuration.factor,\n        maxAttempts: this.configuration.maxAttempts,\n        minDelay: this.configuration.minDelay,\n        maxDelay: this.configuration.maxDelay,\n        jitter: this.configuration.jitter,\n        timeout: this.configuration.timeout,\n        beforeAttempt: context => {\n          if (!this.shouldConnect || cancelAttempt) {\n            context.abort()\n          }\n        },\n      }).catch((error: any) => {\n        // If we aborted the connection attempt then don’t throw an error\n        // ref: https://github.com/lifeomic/attempt/blob/master/src/index.ts#L136\n        if (error && error.code !== 'ATTEMPT_ABORTED') {\n          throw error\n        }\n      })\n\n      return {\n        retryPromise,\n        cancelFunc: () => {\n          cancelAttempt = true\n        },\n      }\n    }\n\n    const { retryPromise, cancelFunc } = abortableRetry()\n    this.cancelWebsocketRetry = cancelFunc\n\n    return retryPromise\n  }\n\n  attachWebSocketListeners(ws: HocusPocusWebSocket, reject: Function) {\n    const { identifier } = ws\n    const onMessageHandler = (payload: any) => this.emit('message', payload)\n    const onCloseHandler = (payload: any) => this.emit('close', { event: payload })\n    const onOpenHandler = (payload: any) => this.emit('open', payload)\n    const onErrorHandler = (err: any) => {\n      reject(err)\n    }\n\n    this.webSocketHandlers[identifier] = {\n      message: onMessageHandler,\n      close: onCloseHandler,\n      open: onOpenHandler,\n      error: onErrorHandler,\n    }\n\n    const handlers = this.webSocketHandlers[ws.identifier]\n\n    Object.keys(handlers).forEach(name => {\n      ws.addEventListener(name, handlers[name])\n    })\n  }\n\n  cleanupWebSocket() {\n    if (!this.webSocket) {\n      return\n    }\n    const { identifier } = this.webSocket\n    const handlers = this.webSocketHandlers[identifier]\n\n    Object.keys(handlers).forEach(name => {\n      this.webSocket?.removeEventListener(name, handlers[name])\n      delete this.webSocketHandlers[identifier]\n    })\n    this.webSocket.close()\n    this.webSocket = null\n  }\n\n  createWebSocketConnection() {\n    return new Promise((resolve, reject) => {\n      if (this.webSocket) {\n        this.messageQueue = []\n        this.cleanupWebSocket()\n      }\n      this.lastMessageReceived = 0\n      this.identifier += 1\n\n      // Init the WebSocket connection\n      const ws = new this.configuration.WebSocketPolyfill(this.url)\n      ws.binaryType = 'arraybuffer'\n      ws.identifier = this.identifier\n\n      this.attachWebSocketListeners(ws, reject)\n\n      this.webSocket = ws\n\n      // Reset the status\n      this.status = WebSocketStatus.Connecting\n      this.emit('status', { status: WebSocketStatus.Connecting })\n\n      // Store resolve/reject for later use\n      this.connectionAttempt = {\n        resolve,\n        reject,\n      }\n    })\n  }\n\n  onMessage(event: MessageEvent) {\n    this.resolveConnectionAttempt()\n\n    this.lastMessageReceived = time.getUnixTime()\n\n    const message = new IncomingMessage(event.data)\n    const documentName = message.peekVarString()\n\n    this.configuration.providerMap.get(documentName)?.onMessage(event)\n  }\n\n  resolveConnectionAttempt() {\n    if (this.connectionAttempt) {\n      this.connectionAttempt.resolve()\n      this.connectionAttempt = null\n\n      this.status = WebSocketStatus.Connected\n      this.emit('status', { status: WebSocketStatus.Connected })\n      this.emit('connect')\n      this.messageQueue.forEach(message => this.send(message))\n      this.messageQueue = []\n    }\n  }\n\n  stopConnectionAttempt() {\n    this.connectionAttempt = null\n  }\n\n  rejectConnectionAttempt() {\n    this.connectionAttempt?.reject()\n    this.connectionAttempt = null\n  }\n\n  closeTries = 0\n\n  checkConnection() {\n    // Don’t check the connection when it’s not even established\n    if (this.status !== WebSocketStatus.Connected) {\n      return\n    }\n\n    // Don’t close the connection while waiting for the first message\n    if (!this.lastMessageReceived) {\n      return\n    }\n\n    // Don’t close the connection when a message was received recently\n    if (\n      this.configuration.messageReconnectTimeout\n      >= time.getUnixTime() - this.lastMessageReceived\n    ) {\n      return\n    }\n\n    // No message received in a long time, not even your own\n    // Awareness updates, which are updated every 15 seconds\n    // if awareness is enabled.\n    this.closeTries += 1\n    // https://bugs.webkit.org/show_bug.cgi?id=247943\n    if (this.closeTries > 2) {\n      this.onClose({\n        event: {\n          code: 4408,\n          reason: 'forced',\n        },\n      })\n      this.closeTries = 0\n    } else {\n      this.webSocket?.close()\n      this.messageQueue = []\n    }\n  }\n\n  // Ensure that the URL always ends with /\n  get serverUrl() {\n    while (this.configuration.url[this.configuration.url.length - 1] === '/') {\n      return this.configuration.url.slice(0, this.configuration.url.length - 1)\n    }\n\n    return this.configuration.url\n  }\n\n  get url() {\n    const encodedParams = url.encodeQueryParams(this.configuration.parameters)\n\n    return `${this.serverUrl}${encodedParams.length === 0 ? '' : `?${encodedParams}`}`\n  }\n\n  disconnect() {\n    this.shouldConnect = false\n\n    if (this.webSocket === null) {\n      return\n    }\n\n    try {\n      this.webSocket.close()\n      this.messageQueue = []\n    } catch {\n      //\n    }\n  }\n\n  send(message: any) {\n    if (this.webSocket?.readyState === WsReadyStates.Open) {\n      this.webSocket.send(message)\n    } else {\n      this.messageQueue.push(message)\n    }\n  }\n\n  onClose({ event }: onCloseParameters) {\n    this.closeTries = 0\n    this.cleanupWebSocket()\n\n    if (this.status === WebSocketStatus.Connected) {\n      this.status = WebSocketStatus.Disconnected\n      this.emit('status', { status: WebSocketStatus.Disconnected })\n      this.emit('disconnect', { event })\n    }\n\n    if (event.code === Unauthorized.code) {\n      if (event.reason === Unauthorized.reason) {\n        console.warn(\n          '[HocuspocusProvider] An authentication token is required, but you didn’t send one. Try adding a `token` to your HocuspocusProvider configuration. Won’t try again.',\n        )\n      } else {\n        console.warn(\n          `[HocuspocusProvider] Connection closed with status Unauthorized: ${event.reason}`,\n        )\n      }\n\n      this.shouldConnect = false\n    }\n\n    if (event.code === Forbidden.code) {\n      if (!this.configuration.quiet) {\n        console.warn(\n          '[HocuspocusProvider] The provided authentication token isn’t allowed to connect to this server. Will try again.',\n        )\n        return // TODO REMOVE ME\n      }\n    }\n\n    if (event.code === MessageTooBig.code) {\n      console.warn(\n        `[HocuspocusProvider] Connection closed with status MessageTooBig: ${event.reason}`,\n      )\n      this.shouldConnect = false\n    }\n\n    if (this.connectionAttempt) {\n      // That connection attempt failed.\n      this.rejectConnectionAttempt()\n    } else if (this.shouldConnect) {\n      // The connection was closed by the server. Let’s just try again.\n      this.connect()\n    }\n\n    // If we’ll reconnect, we’re done for now.\n    if (this.shouldConnect) {\n      return\n    }\n\n    // The status is set correctly already.\n    if (this.status === WebSocketStatus.Disconnected) {\n      return\n    }\n\n    // Let’s update the connection status.\n    this.status = WebSocketStatus.Disconnected\n    this.emit('status', { status: WebSocketStatus.Disconnected })\n    this.emit('disconnect', { event })\n  }\n\n  destroy() {\n    this.emit('destroy')\n\n    if (this.intervals.forceSync) {\n      clearInterval(this.intervals.forceSync)\n    }\n\n    clearInterval(this.intervals.connectionChecker)\n\n    // If there is still a connection attempt outstanding then we should stop\n    // it before calling disconnect, otherwise it will be rejected in the onClose\n    // handler and trigger a retry\n    this.stopConnectionAttempt()\n\n    this.disconnect()\n\n    this.removeAllListeners()\n\n    this.cleanupWebSocket()\n  }\n}\n", "/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server should only reply to requests, and not initiate them.\n * Therefore it is necessary that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Does not need to be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n", "import { Encoder, createEncoder, toUint8Array } from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments, OutgoingMessageInterface } from './types.js'\n\nexport class OutgoingMessage implements OutgoingMessageInterface {\n  encoder: Encoder\n\n  type?: MessageType\n\n  constructor() {\n    this.encoder = createEncoder()\n  }\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    return args.encoder\n  }\n\n  toUint8Array() {\n    return toUint8Array(this.encoder)\n  }\n}\n", "import { readAuthMessage } from '@hocuspocus/common'\nimport { readVarInt, readVarString } from 'lib0/decoding'\nimport * as awarenessProtocol from 'y-protocols/awareness'\nimport { messageYjsSyncStep2, readSyncMessage } from 'y-protocols/sync'\nimport { HocuspocusProvider } from './HocuspocusProvider.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { OutgoingMessage } from './OutgoingMessage.js'\nimport { MessageType } from './types.js'\n\nexport class MessageReceiver {\n\n  message: IncomingMessage\n\n  broadcasted = false\n\n  constructor(message: IncomingMessage) {\n    this.message = message\n  }\n\n  public setBroadcasted(value: boolean) {\n    this.broadcasted = value\n\n    return this\n  }\n\n  public apply(provider: HocuspocusProvider, emitSynced: boolean) {\n    const { message } = this\n    const type = message.readVarUint()\n\n    const emptyMessageLength = message.length()\n\n    switch (type) {\n      case MessageType.Sync:\n        this.applySyncMessage(provider, emitSynced)\n        break\n\n      case MessageType.Awareness:\n        this.applyAwarenessMessage(provider)\n        break\n\n      case MessageType.Auth:\n        this.applyAuthMessage(provider)\n        break\n\n      case MessageType.QueryAwareness:\n        this.applyQueryAwarenessMessage(provider)\n        break\n\n      case MessageType.Stateless:\n        provider.receiveStateless(readVarString(message.decoder))\n        break\n\n      case MessageType.SyncStatus:\n        this.applySyncStatusMessage(provider, readVarInt(message.decoder) === 1)\n        break\n      default:\n        throw new Error(`Can’t apply message of unknown type: ${type}`)\n    }\n\n    // Reply\n    if (message.length() > emptyMessageLength + 1) { // length of documentName (considered in emptyMessageLength plus length of yjs sync type, set in applySyncMessage)\n      if (this.broadcasted) {\n        // TODO: Some weird TypeScript error\n        // @ts-ignore\n        provider.broadcast(OutgoingMessage, { encoder: message.encoder })\n      } else {\n        // TODO: Some weird TypeScript error\n        // @ts-ignore\n        provider.send(OutgoingMessage, { encoder: message.encoder })\n      }\n    }\n  }\n\n  private applySyncMessage(provider: HocuspocusProvider, emitSynced: boolean) {\n    const { message } = this\n\n    message.writeVarUint(MessageType.Sync)\n\n    // Apply update\n    const syncMessageType = readSyncMessage(\n      message.decoder,\n      message.encoder,\n      provider.document,\n      provider,\n    )\n\n    // Synced once we receive Step2\n    if (emitSynced && syncMessageType === messageYjsSyncStep2) {\n      provider.synced = true\n    }\n  }\n\n  applySyncStatusMessage(provider: HocuspocusProvider, applied: boolean) {\n    if (applied) {\n      provider.decrementUnsyncedChanges()\n    }\n  }\n\n  private applyAwarenessMessage(provider: HocuspocusProvider) {\n    if (!provider.awareness) return\n\n    const { message } = this\n\n    awarenessProtocol.applyAwarenessUpdate(\n      provider.awareness,\n      message.readVarUint8Array(),\n      provider,\n    )\n  }\n\n  private applyAuthMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    readAuthMessage(\n      message.decoder,\n      provider.permissionDeniedHandler.bind(provider),\n      provider.authenticatedHandler.bind(provider),\n    )\n  }\n\n  private applyQueryAwarenessMessage(provider: HocuspocusProvider) {\n    if (!provider.awareness) return\n\n    const { message } = this\n\n    message.writeVarUint(MessageType.Awareness)\n    message.writeVarUint8Array(\n      awarenessProtocol.encodeAwarenessUpdate(\n        provider.awareness,\n        Array.from(provider.awareness.getStates().keys()),\n      ),\n    )\n  }\n}\n", "import { Encoder, toUint8Array } from 'lib0/encoding'\nimport * as bc from 'lib0/broadcastchannel'\nimport { ConstructableOutgoingMessage } from './types.js'\n\nexport class MessageSender {\n\n  encoder: Encoder\n\n  message: any\n\n  constructor(Message: ConstructableOutgoingMessage, args: any = {}) {\n    this.message = new Message()\n    this.encoder = this.message.get(args)\n  }\n\n  create() {\n    return toUint8Array(this.encoder)\n  }\n\n  send(webSocket: any) {\n    webSocket?.send(this.create())\n  }\n\n  broadcast(channel: string) {\n    bc.publish(channel, this.create())\n  }\n}\n", "import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { writeAuthentication } from '@hocuspocus/common'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class AuthenticationMessage extends OutgoingMessage {\n  type = MessageType.Auth\n\n  description = 'Authentication'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.token === 'undefined') {\n      throw new Error('The authentication message requires `token` as an argument.')\n    }\n\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n    writeAuthentication(this.encoder, args.token)\n\n    return this.encoder\n  }\n}\n", "import * as encoding from 'lib0/encoding'\nimport { encodeAwarenessUpdate } from 'y-protocols/awareness'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class AwarenessMessage extends OutgoingMessage {\n  type = MessageType.Awareness\n\n  description = 'Awareness states update'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.awareness === 'undefined') {\n      throw new Error('The awareness message requires awareness as an argument')\n    }\n\n    if (typeof args.clients === 'undefined') {\n      throw new Error('The awareness message requires clients as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    let awarenessUpdate\n    if (args.states === undefined) {\n      awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients)\n    } else {\n      awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients, args.states)\n    }\n\n    encoding.writeVarUint8Array(this.encoder, awarenessUpdate)\n\n    return this.encoder\n  }\n}\n", "import * as encoding from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class CloseMessage extends OutgoingMessage {\n  type = MessageType.CLOSE\n\n  description = 'Ask the server to close the connection'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    return this.encoder\n  }\n}\n", "import * as encoding from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class QueryAwarenessMessage extends OutgoingMessage {\n  type = MessageType.QueryAwareness\n\n  description = 'Queries awareness states'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    return this.encoder\n  }\n}\n", "import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class StatelessMessage extends OutgoingMessage {\n  type = MessageType.Stateless\n\n  description = 'A stateless message'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n    writeVarString(this.encoder, args.payload ?? '')\n\n    return this.encoder\n  }\n}\n", "import * as encoding from 'lib0/encoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class SyncStepOneMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'First sync step'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.document === 'undefined') {\n      throw new Error('The sync step one message requires document as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n    syncProtocol.writeSyncStep1(this.encoder, args.document)\n\n    return this.encoder\n  }\n}\n", "import * as encoding from 'lib0/encoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class SyncStepTwoMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'Second sync step'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.document === 'undefined') {\n      throw new Error('The sync step two message requires document as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n    syncProtocol.writeSyncStep2(this.encoder, args.document)\n\n    return this.encoder\n  }\n}\n", "import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { writeUpdate } from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class UpdateMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'A document update'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n\n    writeUpdate(this.encoder, args.update)\n\n    return this.encoder\n  }\n}\n", "import { awarenessStatesToArray } from '@hocuspocus/common'\nimport * as bc from 'lib0/broadcastchannel'\nimport * as mutex from 'lib0/mutex'\nimport type { CloseEvent, Event, MessageEvent } from 'ws'\nimport { Awareness, removeAwarenessStates } from 'y-protocols/awareness'\nimport * as Y from 'yjs'\nimport EventEmitter from './EventEmitter.js'\nimport {\n  CompleteHocuspocusProviderWebsocketConfiguration,\n  HocuspocusProviderWebsocket,\n} from './HocuspocusProviderWebsocket.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { MessageReceiver } from './MessageReceiver.js'\nimport { MessageSender } from './MessageSender.js'\nimport { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'\nimport { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'\nimport { CloseMessage } from './OutgoingMessages/CloseMessage.js'\nimport { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'\nimport { StatelessMessage } from './OutgoingMessages/StatelessMessage.js'\nimport { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'\nimport { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'\nimport { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'\nimport {\n  ConstructableOutgoingMessage,\n  WebSocketStatus,\n  onAuthenticationFailedParameters,\n  onAwarenessChangeParameters,\n  onAwarenessUpdateParameters,\n  onCloseParameters,\n  onDisconnectParameters,\n  onMessageParameters,\n  onOpenParameters,\n  onOutgoingMessageParameters, onStatelessParameters,\n  onStatusParameters,\n  onSyncedParameters,\n} from './types.js'\n\nexport type HocuspocusProviderConfiguration =\n  Required<Pick<CompleteHocuspocusProviderConfiguration, 'name'>>\n    & Partial<CompleteHocuspocusProviderConfiguration> & (\n  Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>> |\n  Required<Pick<CompleteHocuspocusProviderConfiguration, 'websocketProvider'>>\n  )\n\nexport interface CompleteHocuspocusProviderConfiguration {\n  /**\n  * The identifier/name of your document\n  */\n   name: string,\n  /**\n   * The actual Y.js document\n   */\n  document: Y.Doc,\n\n  /**\n   * Pass false to disable broadcasting between browser tabs.\n   */\n  broadcast: boolean,\n  /**\n   * An Awareness instance to keep the presence state of all clients.\n   *\n   * You can disable sharing awareness information by passing `null`.\n   * Note that having no awareness information shared across all connections will break our ping checks\n   * and thus trigger reconnects. You should always have at least one Provider with enabled awareness per\n   * socket connection, or ensure that the Provider receives messages before running into `HocuspocusProviderWebsocket.messageReconnectTimeout`.\n   */\n  awareness: Awareness | null,\n  /**\n   * A token that’s sent to the backend for authentication purposes.\n   */\n  token: string | (() => string) | (() => Promise<string>) | null,\n  /**\n   * URL parameters that should be added.\n   */\n  parameters: { [key: string]: any },\n  /**\n   * Hocuspocus websocket provider\n   */\n  websocketProvider: HocuspocusProviderWebsocket,\n  /**\n   * Force syncing the document in the defined interval.\n   */\n  forceSyncInterval: false | number,\n\n  onAuthenticated: () => void,\n  onAuthenticationFailed: (data: onAuthenticationFailedParameters) => void,\n  onOpen: (data: onOpenParameters) => void,\n  onConnect: () => void,\n  onMessage: (data: onMessageParameters) => void,\n  onOutgoingMessage: (data: onOutgoingMessageParameters) => void,\n  onStatus: (data: onStatusParameters) => void,\n  onSynced: (data: onSyncedParameters) => void,\n  onDisconnect: (data: onDisconnectParameters) => void,\n  onClose: (data: onCloseParameters) => void,\n  onDestroy: () => void,\n  onAwarenessUpdate: (data: onAwarenessUpdateParameters) => void,\n  onAwarenessChange: (data: onAwarenessChangeParameters) => void,\n  onStateless: (data: onStatelessParameters) => void\n\n  /**\n   * Don’t output any warnings.\n   */\n  quiet: boolean,\n\n  /**\n   * Pass `false` to start the connection manually.\n   */\n  connect: boolean,\n\n  /**\n   * Pass `false` to close the connection manually.\n   */\n  preserveConnection: boolean,\n}\n\nexport class AwarenessError extends Error {\n  code = 1001\n}\n\nexport class HocuspocusProvider extends EventEmitter {\n  public configuration: CompleteHocuspocusProviderConfiguration = {\n    name: '',\n    // @ts-ignore\n    document: undefined,\n    // @ts-ignore\n    awareness: undefined,\n    token: null,\n    parameters: {},\n    broadcast: true,\n    forceSyncInterval: false,\n    onAuthenticated: () => null,\n    onAuthenticationFailed: () => null,\n    onOpen: () => null,\n    onConnect: () => null,\n    onMessage: () => null,\n    onOutgoingMessage: () => null,\n    onStatus: () => null,\n    onSynced: () => null,\n    onDisconnect: () => null,\n    onClose: () => null,\n    onDestroy: () => null,\n    onAwarenessUpdate: () => null,\n    onAwarenessChange: () => null,\n    onStateless: () => null,\n    quiet: false,\n    connect: true,\n    preserveConnection: true,\n  }\n\n  subscribedToBroadcastChannel = false\n\n  isSynced = false\n\n  unsyncedChanges = 0\n\n  status = WebSocketStatus.Disconnected\n\n  isAuthenticated = false\n\n  authorizedScope: string | undefined = undefined\n\n  mux = mutex.createMutex()\n\n  intervals: any = {\n    forceSync: null,\n  }\n\n  isConnected = true\n\n  constructor(configuration: HocuspocusProviderConfiguration) {\n    super()\n    this.setConfiguration(configuration)\n\n    this.configuration.document = configuration.document ? configuration.document : new Y.Doc()\n    this.configuration.awareness = configuration.awareness !== undefined ? configuration.awareness : new Awareness(this.document)\n\n    this.on('open', this.configuration.onOpen)\n    this.on('message', this.configuration.onMessage)\n    this.on('outgoingMessage', this.configuration.onOutgoingMessage)\n    this.on('synced', this.configuration.onSynced)\n    this.on('destroy', this.configuration.onDestroy)\n    this.on('awarenessUpdate', this.configuration.onAwarenessUpdate)\n    this.on('awarenessChange', this.configuration.onAwarenessChange)\n    this.on('stateless', this.configuration.onStateless)\n\n    this.on('authenticated', this.configuration.onAuthenticated)\n    this.on('authenticationFailed', this.configuration.onAuthenticationFailed)\n\n    this.configuration.websocketProvider.on('connect', this.configuration.onConnect)\n    this.configuration.websocketProvider.on('connect', this.forwardConnect)\n\n    this.configuration.websocketProvider.on('open', this.boundOnOpen)\n    this.configuration.websocketProvider.on('open', this.forwardOpen)\n\n    this.configuration.websocketProvider.on('close', this.boundOnClose)\n    this.configuration.websocketProvider.on('close', this.configuration.onClose)\n    this.configuration.websocketProvider.on('close', this.forwardClose)\n\n    this.configuration.websocketProvider.on('status', this.boundOnStatus)\n\n    this.configuration.websocketProvider.on('disconnect', this.configuration.onDisconnect)\n    this.configuration.websocketProvider.on('disconnect', this.forwardDisconnect)\n\n    this.configuration.websocketProvider.on('destroy', this.configuration.onDestroy)\n    this.configuration.websocketProvider.on('destroy', this.forwardDestroy)\n\n    this.awareness?.on('update', () => {\n      this.emit('awarenessUpdate', { states: awarenessStatesToArray(this.awareness!.getStates()) })\n    })\n\n    this.awareness?.on('change', () => {\n      this.emit('awarenessChange', { states: awarenessStatesToArray(this.awareness!.getStates()) })\n    })\n\n    this.document.on('update', this.documentUpdateHandler.bind(this))\n    this.awareness?.on('update', this.awarenessUpdateHandler.bind(this))\n    this.registerEventListeners()\n\n    if (this.configuration.forceSyncInterval) {\n      this.intervals.forceSync = setInterval(\n        this.forceSync.bind(this),\n        this.configuration.forceSyncInterval,\n      )\n    }\n\n    this.configuration.websocketProvider.attach(this)\n  }\n\n  boundBroadcastChannelSubscriber = this.broadcastChannelSubscriber.bind(this)\n\n  boundPageUnload = this.pageUnload.bind(this)\n\n  boundOnOpen = this.onOpen.bind(this)\n\n  boundOnClose = this.onClose.bind(this)\n\n  boundOnStatus = this.onStatus.bind(this)\n\n  forwardConnect = (e: any) => this.emit('connect', e)\n\n  forwardOpen = (e: any) => this.emit('open', e)\n\n  forwardClose = (e: any) => this.emit('close', e)\n\n  forwardDisconnect = (e: any) => this.emit('disconnect', e)\n\n  forwardDestroy = (e: any) => this.emit('destroy', e)\n\n  public onStatus({ status } : onStatusParameters) {\n    this.status = status\n\n    this.configuration.onStatus({ status })\n    this.emit('status', { status })\n  }\n\n  public setConfiguration(configuration: Partial<HocuspocusProviderConfiguration> = {}): void {\n    if (!configuration.websocketProvider && (configuration as CompleteHocuspocusProviderWebsocketConfiguration).url) {\n      const websocketProviderConfig = configuration as CompleteHocuspocusProviderWebsocketConfiguration\n\n      this.configuration.websocketProvider = new HocuspocusProviderWebsocket({\n        url: websocketProviderConfig.url,\n        connect: websocketProviderConfig.connect,\n        parameters: websocketProviderConfig.parameters,\n      })\n    }\n\n    this.configuration = { ...this.configuration, ...configuration }\n  }\n\n  get document() {\n    return this.configuration.document\n  }\n\n  get awareness() {\n    return this.configuration.awareness\n  }\n\n  get hasUnsyncedChanges(): boolean {\n    return this.unsyncedChanges > 0\n  }\n\n  incrementUnsyncedChanges() {\n    this.unsyncedChanges += 1\n    this.emit('unsyncedChanges', this.unsyncedChanges)\n  }\n\n  decrementUnsyncedChanges() {\n    this.unsyncedChanges -= 1\n    if (this.unsyncedChanges === 0) {\n      this.synced = true\n    }\n    this.emit('unsyncedChanges', this.unsyncedChanges)\n  }\n\n  forceSync() {\n    this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n  }\n\n  pageUnload() {\n    if (this.awareness) {\n      removeAwarenessStates(this.awareness, [this.document.clientID], 'window unload')\n    }\n  }\n\n  registerEventListeners() {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.addEventListener('unload', this.boundPageUnload)\n  }\n\n  sendStateless(payload: string) {\n    this.send(StatelessMessage, { documentName: this.configuration.name, payload })\n  }\n\n  documentUpdateHandler(update: Uint8Array, origin: any) {\n    if (origin === this) {\n      return\n    }\n\n    this.incrementUnsyncedChanges()\n    this.send(UpdateMessage, { update, documentName: this.configuration.name }, true)\n  }\n\n  awarenessUpdateHandler({ added, updated, removed }: any, origin: any) {\n    const changedClients = added.concat(updated).concat(removed)\n\n    this.send(AwarenessMessage, {\n      awareness: this.awareness,\n      clients: changedClients,\n      documentName: this.configuration.name,\n    }, true)\n  }\n\n  /**\n   * Indicates whether a first handshake with the server has been established\n   *\n   * Note: this does not mean all updates from the client have been persisted to the backend. For this,\n   * use `hasUnsyncedChanges`.\n   */\n  get synced(): boolean {\n    return this.isSynced\n  }\n\n  set synced(state) {\n    if (this.isSynced === state) {\n      return\n    }\n\n    this.isSynced = state\n    this.emit('synced', { state })\n    this.emit('sync', { state })\n  }\n\n  receiveStateless(payload: string) {\n    this.emit('stateless', { payload })\n  }\n\n  get isAuthenticationRequired(): boolean {\n    return !!this.configuration.token && !this.isAuthenticated\n  }\n\n  // not needed, but provides backward compatibility with e.g. lexicla/yjs\n  async connect() {\n    if (this.configuration.broadcast) {\n      this.subscribeToBroadcastChannel()\n    }\n\n    return this.configuration.websocketProvider.connect()\n  }\n\n  disconnect() {\n    this.disconnectBroadcastChannel()\n    this.configuration.websocketProvider.detach(this)\n    this.isConnected = false\n\n    if (!this.configuration.preserveConnection) {\n      this.configuration.websocketProvider.disconnect()\n    }\n\n  }\n\n  async onOpen(event: Event) {\n    this.isAuthenticated = false\n    this.isConnected = true\n\n    this.emit('open', { event })\n\n    let token: string | null\n    try {\n      token = await this.getToken()\n    } catch (error) {\n      this.permissionDeniedHandler(`Failed to get token: ${error}`)\n      return\n    }\n\n    if (this.isAuthenticationRequired) {\n      this.send(AuthenticationMessage, {\n        token,\n        documentName: this.configuration.name,\n      })\n    }\n\n    this.startSync()\n  }\n\n  async getToken() {\n    if (typeof this.configuration.token === 'function') {\n      const token = await this.configuration.token()\n      return token\n    }\n\n    return this.configuration.token\n  }\n\n  startSync() {\n    this.incrementUnsyncedChanges()\n    this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n\n    if (this.awareness && this.awareness.getLocalState() !== null) {\n      this.send(AwarenessMessage, {\n        awareness: this.awareness,\n        clients: [this.document.clientID],\n        documentName: this.configuration.name,\n      })\n    }\n  }\n\n  send(message: ConstructableOutgoingMessage, args: any, broadcast = false) {\n    if (!this.isConnected) {\n      return\n    }\n\n    if (broadcast) {\n      this.mux(() => { this.broadcast(message, args) })\n    }\n\n    const messageSender = new MessageSender(message, args)\n\n    this.emit('outgoingMessage', { message: messageSender.message })\n    messageSender.send(this.configuration.websocketProvider)\n  }\n\n  onMessage(event: MessageEvent) {\n    const message = new IncomingMessage(event.data)\n\n    const documentName = message.readVarString()\n\n    message.writeVarString(documentName)\n\n    this.emit('message', { event, message: new IncomingMessage(event.data) })\n\n    new MessageReceiver(message).apply(this, true)\n  }\n\n  onClose(event: CloseEvent) {\n    this.isAuthenticated = false\n    this.synced = false\n\n    // update awareness (all users except local left)\n    if (this.awareness) {\n      removeAwarenessStates(\n        this.awareness,\n        Array.from(this.awareness.getStates().keys()).filter(client => client !== this.document.clientID),\n        this,\n      )\n    }\n  }\n\n  destroy() {\n    this.emit('destroy')\n\n    if (this.intervals.forceSync) {\n      clearInterval(this.intervals.forceSync)\n    }\n\n    if (this.awareness) {\n      removeAwarenessStates(this.awareness, [this.document.clientID], 'provider destroy')\n      this.awareness.off('update', this.awarenessUpdateHandler)\n      this.awareness.destroy()\n    }\n\n    this.document.off('update', this.documentUpdateHandler)\n\n    this.removeAllListeners()\n\n    this.configuration.websocketProvider.off('connect', this.configuration.onConnect)\n    this.configuration.websocketProvider.off('connect', this.forwardConnect)\n    this.configuration.websocketProvider.off('open', this.boundOnOpen)\n    this.configuration.websocketProvider.off('open', this.forwardOpen)\n    this.configuration.websocketProvider.off('close', this.boundOnClose)\n    this.configuration.websocketProvider.off('close', this.configuration.onClose)\n    this.configuration.websocketProvider.off('close', this.forwardClose)\n    this.configuration.websocketProvider.off('status', this.boundOnStatus)\n    this.configuration.websocketProvider.off('disconnect', this.configuration.onDisconnect)\n    this.configuration.websocketProvider.off('disconnect', this.forwardDisconnect)\n    this.configuration.websocketProvider.off('destroy', this.configuration.onDestroy)\n    this.configuration.websocketProvider.off('destroy', this.forwardDestroy)\n\n    this.send(CloseMessage, { documentName: this.configuration.name })\n    this.disconnect()\n\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.removeEventListener('unload', this.boundPageUnload)\n  }\n\n  permissionDeniedHandler(reason: string) {\n    this.emit('authenticationFailed', { reason })\n    this.isAuthenticated = false\n    this.disconnect()\n    this.status = WebSocketStatus.Disconnected\n  }\n\n  authenticatedHandler(scope: string) {\n    this.isAuthenticated = true\n    this.authorizedScope = scope\n\n    this.emit('authenticated')\n  }\n\n  get broadcastChannel() {\n    return `${this.configuration.name}`\n  }\n\n  broadcastChannelSubscriber(data: ArrayBuffer) {\n    this.mux(() => {\n      const message = new IncomingMessage(data)\n\n      const documentName = message.readVarString()\n\n      message.writeVarString(documentName)\n\n      new MessageReceiver(message)\n        .setBroadcasted(true)\n        .apply(this, false)\n    })\n  }\n\n  subscribeToBroadcastChannel() {\n    if (!this.subscribedToBroadcastChannel) {\n      bc.subscribe(this.broadcastChannel, this.boundBroadcastChannelSubscriber)\n      this.subscribedToBroadcastChannel = true\n    }\n\n    this.mux(() => {\n      this.broadcast(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n      this.broadcast(SyncStepTwoMessage, { document: this.document, documentName: this.configuration.name })\n      this.broadcast(QueryAwarenessMessage, { document: this.document, documentName: this.configuration.name })\n      if (this.awareness) {\n        this.broadcast(AwarenessMessage, {\n          awareness: this.awareness,\n          clients: [this.document.clientID],\n          document: this.document,\n          documentName: this.configuration.name,\n        })\n      }\n    })\n  }\n\n  disconnectBroadcastChannel() {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    if (this.awareness) {\n      this.send(AwarenessMessage, {\n        awareness: this.awareness,\n        clients: [this.document.clientID],\n        states: new Map(),\n        documentName: this.configuration.name,\n      }, true)\n    }\n\n    if (this.subscribedToBroadcastChannel) {\n      bc.unsubscribe(this.broadcastChannel, this.boundBroadcastChannelSubscriber)\n      this.subscribedToBroadcastChannel = false\n    }\n  }\n\n  broadcast(Message: ConstructableOutgoingMessage, args?: any) {\n    if (!this.configuration.broadcast) {\n      return\n    }\n\n    if (!this.subscribedToBroadcastChannel) {\n      return\n    }\n\n    new MessageSender(Message, args).broadcast(this.broadcastChannel)\n  }\n\n  setAwarenessField(key: string, value: any) {\n    if (!this.awareness) {\n      throw new AwarenessError(`Cannot set awareness field \"${key}\" to ${JSON.stringify(value)}. You have disabled Awareness for this provider by explicitly passing awareness: null in the provider configuration.`)\n    }\n    this.awareness.setLocalStateField(key, value)\n  }\n}\n", "import {\n  CompleteHocuspocusProviderWebsocketConfiguration,\n  HocuspocusProviderWebsocket, HocuspocusProviderWebsocketConfiguration,\n} from './HocuspocusProviderWebsocket.js'\n\nexport type TiptapCollabProviderWebsocketConfiguration =\n  Partial<CompleteHocuspocusProviderWebsocketConfiguration> &\n  AdditionalTiptapCollabProviderWebsocketConfiguration\n\nexport interface AdditionalTiptapCollabProviderWebsocketConfiguration {\n  /**\n   * A Hocuspocus Cloud App ID, get one here: https://cloud.tiptap.dev\n   */\n  appId: string,\n}\n\nexport class TiptapCollabProviderWebsocket extends HocuspocusProviderWebsocket {\n  constructor(configuration: TiptapCollabProviderWebsocketConfiguration) {\n    super({ ...configuration as HocuspocusProviderWebsocketConfiguration, url: `wss://${configuration.appId}.collab.tiptap.cloud` })\n  }\n}\n", "import type { AbstractType, YArrayEvent } from 'yjs'\nimport {\n  HocuspocusProvider,\n  HocuspocusProviderConfiguration,\n} from './HocuspocusProvider.js'\n\nimport { TiptapCollabProviderWebsocket } from './TiptapCollabProviderWebsocket.js'\nimport type { THistoryVersion } from './types'\n\nexport type TiptapCollabProviderConfiguration =\n  Required<Pick<HocuspocusProviderConfiguration, 'name'>> &\n  Partial<HocuspocusProviderConfiguration> &\n  (Required<Pick<AdditionalTiptapCollabProviderConfiguration, 'websocketProvider'>> |\n  Required<Pick<AdditionalTiptapCollabProviderConfiguration, 'appId'>>)\n\nexport interface AdditionalTiptapCollabProviderConfiguration {\n  /**\n   * A Hocuspocus Cloud App ID, get one here: https://cloud.tiptap.dev\n   */\n  appId?: string,\n\n  websocketProvider?: TiptapCollabProviderWebsocket\n}\n\nexport class TiptapCollabProvider extends HocuspocusProvider {\n  tiptapCollabConfigurationPrefix = '__tiptapcollab__'\n\n  constructor(configuration: TiptapCollabProviderConfiguration) {\n    if (!configuration.websocketProvider) {\n      configuration.websocketProvider = new TiptapCollabProviderWebsocket({ appId: (configuration as Required<Pick<AdditionalTiptapCollabProviderConfiguration, 'appId'>>).appId })\n    }\n\n    if (!configuration.token) {\n      configuration.token = 'notoken' // need to send a token anyway (which will be ignored)\n    }\n\n    super(configuration as HocuspocusProviderConfiguration)\n  }\n\n  /**\n   * note: this will only work if your server loaded @hocuspocus-pro/extension-history, or if you are on a Tiptap business plan.\n   */\n  createVersion(name?: string) {\n    return this.sendStateless(JSON.stringify({ action: 'version.create', name }))\n  }\n\n  /**\n   * note: this will only work if your server loaded @hocuspocus-pro/extension-history, or if you are on a Tiptap business plan.\n   */\n  revertToVersion(targetVersion: number) {\n    return this.sendStateless(JSON.stringify({ action: 'document.revert', version: targetVersion }))\n  }\n\n  /**\n   * note: this will only work if your server loaded @hocuspocus-pro/extension-history, or if you are on a Tiptap business plan.\n   *\n   * The server will reply with a stateless message (THistoryVersionPreviewEvent)\n   */\n  previewVersion(targetVersion: number) {\n    return this.sendStateless(JSON.stringify({ action: 'version.preview', version: targetVersion }))\n  }\n\n  /**\n   * note: this will only work if your server loaded @hocuspocus-pro/extension-history, or if you are on a Tiptap business plan.\n   */\n  getVersions(): THistoryVersion[] {\n    return this.configuration.document.getArray<THistoryVersion>(`${this.tiptapCollabConfigurationPrefix}versions`).toArray()\n  }\n\n  watchVersions(callback: Parameters<AbstractType<YArrayEvent<THistoryVersion>>['observe']>[0]) {\n    return this.configuration.document.getArray<THistoryVersion>('__tiptapcollab__versions').observe(callback)\n  }\n\n  unwatchVersions(callback: Parameters<AbstractType<YArrayEvent<THistoryVersion>>['unobserve']>[0]) {\n    return this.configuration.document.getArray<THistoryVersion>('__tiptapcollab__versions').unobserve(callback)\n  }\n\n  isAutoVersioning(): boolean {\n    return !!this.configuration.document.getMap<number>(`${this.tiptapCollabConfigurationPrefix}config`).get('autoVersioning')\n  }\n\n  enableAutoVersioning() {\n    return this.configuration.document.getMap<number>(`${this.tiptapCollabConfigurationPrefix}config`).set('autoVersioning', 1)\n  }\n\n  disableAutoVersioning() {\n    return this.configuration.document.getMap<number>(`${this.tiptapCollabConfigurationPrefix}config`).set('autoVersioning', 0)\n  }\n\n}\n", "declare const __VERSION__: string;\ndeclare const TSUP_FORMAT: string;\n\nexport const PKG_NAME = \"@liveblocks/core\";\nexport const PKG_VERSION = typeof __VERSION__ === \"string\" && __VERSION__;\nexport const PKG_FORMAT = typeof TSUP_FORMAT === \"string\" && TSUP_FORMAT;\n", "import { PKG_NAME, PKG_VERSION } from \"./version\";\n\nconst g = (\n  typeof globalThis !== \"undefined\"\n    ? globalThis\n    : typeof window !== \"undefined\"\n      ? window\n      : typeof global !== \"undefined\"\n        ? global\n        : {}\n) as { [key: symbol]: string };\n\nconst crossLinkedDocs = \"https://liveblocks.io/docs/errors/cross-linked\";\nconst dupesDocs = \"https://liveblocks.io/docs/errors/dupes\";\nconst SPACE = \" \"; // Important space to make sure links in errors are clickable in all browsers\n\nfunction error(msg: string): void {\n  if (process.env.NODE_ENV === \"production\") {\n    // eslint-disable-next-line rulesdir/console-must-be-fancy\n    console.error(msg);\n  } else {\n    throw new Error(msg);\n  }\n}\n\n/**\n * Throws an error if multiple copies of a Liveblocks package are being loaded\n * at runtime. This likely indicates a packaging issue with the project.\n */\nexport function detectDupes(\n  pkgName: string,\n  pkgVersion: string | false, // false if not built yet\n  pkgFormat: string | false // false if not built yet\n): void {\n  const pkgId = Symbol.for(pkgName);\n  const pkgBuildInfo = pkgFormat\n    ? `${pkgVersion || \"dev\"} (${pkgFormat})`\n    : pkgVersion || \"dev\";\n\n  if (!g[pkgId]) {\n    g[pkgId] = pkgBuildInfo;\n  } else if (g[pkgId] === pkgBuildInfo) {\n    // Allow it, see https://github.com/liveblocks/liveblocks/pull/1004\n  } else {\n    const msg = [\n      `Multiple copies of Liveblocks are being loaded in your project. This will cause issues! See ${\n        dupesDocs + SPACE\n      }`,\n      \"\",\n      \"Conflicts:\",\n      `- ${pkgName} ${g[pkgId]} (already loaded)`,\n      `- ${pkgName} ${pkgBuildInfo} (trying to load this now)`,\n    ].join(\"\\n\");\n    error(msg);\n  }\n\n  if (pkgVersion && PKG_VERSION && pkgVersion !== PKG_VERSION) {\n    error(\n      [\n        `Cross-linked versions of Liveblocks found, which will cause issues! See ${\n          crossLinkedDocs + SPACE\n        }`,\n        \"\",\n        \"Conflicts:\",\n        `- ${PKG_NAME} is at ${PKG_VERSION}`,\n        `- ${pkgName} is at ${pkgVersion}`,\n        \"\",\n        \"Always upgrade all Liveblocks packages to the same version number.\",\n      ].join(\"\\n\")\n    );\n  }\n}\n", "/**\n * Helper function that can be used to implement exhaustive switch statements\n * with TypeScript. Example usage:\n *\n *    type Fruit = \"🍎\" | \"🍌\";\n *\n *    switch (fruit) {\n *      case \"🍎\":\n *      case \"🍌\":\n *        return doSomething();\n *\n *      default:\n *        return assertNever(fruit, \"Unknown fruit\");\n *    }\n *\n * If now the Fruit union is extended (i.e. add \"🍒\"), TypeScript will catch\n * this *statically*, rather than at runtime, and force you to handle the\n * 🍒 case.\n */\n// istanbul ignore next\nexport function assertNever(_value: never, errmsg: string): never {\n  throw new Error(errmsg);\n}\n\n/**\n * Asserts that a certain condition holds. If it does not hold, will throw\n * a runtime error in dev mode.\n *\n * In production, nothing is asserted and this acts as a no-op.\n */\nexport function assert(condition: boolean, errmsg: string): asserts condition {\n  if (process.env.NODE_ENV !== \"production\") {\n    // istanbul ignore if\n    if (!condition) {\n      const err = new Error(errmsg);\n      err.name = \"Assertion failure\";\n      throw err;\n    }\n  }\n}\n\n/**\n * Asserts that a given value is non-nullable. This is similar to TypeScript's\n * `!` operator, but will throw an error at runtime (dev-mode only) indicating\n * an incorrect assumption.\n *\n * Instead of:\n *\n *     foo!.bar\n *\n * Use:\n *\n *     nn(foo).bar\n *\n */\nexport function nn<T>(\n  value: T,\n  errmsg: string = \"Expected value to be non-nullable\"\n): NonNullable<T> {\n  assert(value !== null && value !== undefined, errmsg);\n  return value as NonNullable<T>;\n}\n", "/**\n * Returns a pair of a Promise, and a flagger function that can be passed\n * around to resolve the promise \"from anywhere\".\n *\n * The Promise will remain unresolved, until the flagger function is called.\n * Once the flagger function is called with a value, the Promise will resolve\n * to that value.\n *\n * Calling the flagger function beyond the first time is a no-op.\n */\nexport function controlledPromise<T>(): [\n  promise: Promise<T>,\n  flagger: (value: T) => void,\n] {\n  let flagger: ((value: T) => void) | undefined;\n  const promise = new Promise<T>((res) => {\n    flagger = res;\n  });\n  if (!flagger) {\n    throw new Error(\"Should never happen\");\n  }\n  return [promise, flagger];\n}\n", "export type Callback<T> = (event: T) => void;\nexport type UnsubscribeCallback = () => void;\n\nexport type Observable<T> = {\n  /**\n   * Register a callback function to be called whenever the event source emits\n   * an event.\n   */\n  subscribe(callback: Callback<T>): UnsubscribeCallback;\n  /**\n   * Register a one-time callback function to be called whenever the event\n   * source emits an event. After the event fires, the callback is\n   * auto-unsubscribed.\n   */\n  subscribeOnce(callback: Callback<T>): UnsubscribeCallback;\n  /**\n   * Returns a promise that will resolve when an event is emitted by this\n   * event source. Optionally, specify a predicate that has to match. The first\n   * event matching that predicate will then resolve the promise.\n   */\n  waitUntil(predicate?: (event: T) => boolean): Promise<T>;\n};\n\nexport type EventSource<T> = Observable<T> & {\n  /**\n   * Notify all subscribers about the event.\n   */\n  notify(event: T): void;\n  /**\n   * Clear all registered event listeners. None of the registered functions\n   * will ever get called again. Be careful when using this API, because the\n   * subscribers may not have any idea they won't be notified anymore.\n   */\n  clear(): void;\n  /**\n   * Returns the number of active subscribers.\n   */\n  count(): number;\n  /**\n   * Pauses event delivery until unpaused. Any .notify() calls made while\n   * paused will get buffered into memory and emitted later.\n   */\n  pause(): void;\n  /**\n   * Emits all in-memory buffered events, and unpauses. Any .notify() calls\n   * made after this will be synchronously delivered again.\n   */\n  unpause(): void;\n  /**\n   * Observable instance, which can be used to subscribe to this event source\n   * in a readonly fashion. Safe to publicly expose.\n   */\n  observable: Observable<T>;\n};\n\nexport type EventEmitter<T> = (event: T) => void;\n\n/**\n * makeEventSource allows you to generate a subscribe/notify pair of functions\n * to make subscribing easy and to get notified about events.\n *\n * The events are anonymous, so you can use it to define events, like so:\n *\n *   const event1 = makeEventSource();\n *   const event2 = makeEventSource();\n *\n *   event1.subscribe(foo);\n *   event1.subscribe(bar);\n *   event2.subscribe(qux);\n *\n *   // Unsubscription is pretty standard\n *   const unsub = event2.subscribe(foo);\n *   unsub();\n *\n *   event1.notify();  // Now foo and bar will get called\n *   event2.notify();  // Now qux will get called (but foo will not, since it's unsubscribed)\n *\n */\nexport function makeEventSource<T>(): EventSource<T> {\n  const _onetimeObservers = new Set<Callback<T>>();\n  const _observers = new Set<Callback<T>>();\n  let _buffer: T[] | null = null;\n\n  function pause(): void {\n    _buffer = [];\n  }\n\n  function unpause(): void {\n    if (_buffer === null) {\n      // Already unpaused\n      return;\n    }\n\n    for (const event of _buffer) {\n      notify(event);\n    }\n    _buffer = null;\n  }\n\n  function subscribe(callback: Callback<T>): UnsubscribeCallback {\n    _observers.add(callback);\n    return () => _observers.delete(callback);\n  }\n\n  function subscribeOnce(callback: Callback<T>): UnsubscribeCallback {\n    _onetimeObservers.add(callback);\n    return () => _onetimeObservers.delete(callback);\n  }\n\n  async function waitUntil(predicate?: (event: T) => boolean): Promise<T> {\n    let unsub: () => void | undefined;\n    return new Promise<T>((res) => {\n      unsub = subscribe((event) => {\n        if (predicate === undefined || predicate(event)) {\n          res(event);\n        }\n      });\n    }).finally(() => unsub?.());\n  }\n\n  function notifyOrBuffer(event: T) {\n    if (_buffer !== null) {\n      _buffer.push(event);\n    } else {\n      notify(event);\n    }\n  }\n\n  function notify(event: T) {\n    _onetimeObservers.forEach((callback) => callback(event));\n    _onetimeObservers.clear();\n\n    _observers.forEach((callback) => callback(event));\n  }\n\n  function clear() {\n    _onetimeObservers.clear();\n    _observers.clear();\n  }\n\n  function count() {\n    return _onetimeObservers.size + _observers.size;\n  }\n\n  return {\n    // Private/internal control over event emission\n    notify: notifyOrBuffer,\n    subscribe,\n    subscribeOnce,\n    clear,\n    count,\n\n    waitUntil,\n    pause,\n    unpause,\n\n    // Publicly exposable subscription API\n    observable: {\n      subscribe,\n      subscribeOnce,\n      waitUntil,\n    },\n  };\n}\n", "/* eslint-disable rulesdir/console-must-be-fancy */\n\nconst badge =\n  \"background:#0e0d12;border-radius:9999px;color:#fff;padding:3px 7px;font-family:sans-serif;font-weight:600;\";\nconst bold = \"font-weight:600\";\n\nfunction wrap(\n  method: \"log\" | \"warn\" | \"error\"\n): (message: string, ...args: readonly unknown[]) => void {\n  return typeof window === \"undefined\" || process.env.NODE_ENV === \"test\"\n    ? console[method]\n    : /* istanbul ignore next */\n      (message, ...args) =>\n        console[method](\"%cLiveblocks\", badge, message, ...args);\n}\n\n// export const log = wrap(\"log\");\nexport const warn = wrap(\"warn\");\nexport const error = wrap(\"error\");\n\nfunction wrapWithTitle(\n  method: \"log\" | \"warn\" | \"error\"\n): (title: string, message: string, ...args: readonly unknown[]) => void {\n  return typeof window === \"undefined\" || process.env.NODE_ENV === \"test\"\n    ? console[method]\n    : /* istanbul ignore next */\n      (title, message, ...args) =>\n        console[method](\n          `%cLiveblocks%c ${title}`,\n          badge,\n          bold,\n          message,\n          ...args\n        );\n}\n\n// export const logWithTitle = wrapWithTitle(\"log\");\nexport const warnWithTitle = wrapWithTitle(\"warn\");\nexport const errorWithTitle = wrapWithTitle(\"error\");\n", "/**\n * A generic Finite State Machine (FSM) implementation.\n *\n * This is a generic implementation that is not Liveblocks specific. We could\n * put this in a separate NPM package if we wanted to make this more reusable.\n */\n\nimport type { EventSource, Observable } from \"./EventSource\";\nimport { makeEventSource } from \"./EventSource\";\n\n/**\n * Built-in event sent by .addTimedTransition().\n */\nexport type TimerEvent = { readonly type: \"TIMER\" };\n\n/**\n * Built-in events sent by .onEnterAsync().\n */\nexport type AsyncOKEvent<T> = {\n  readonly type: \"ASYNC_OK\";\n  readonly data: T;\n};\nexport type AsyncErrorEvent = {\n  readonly type: \"ASYNC_ERROR\";\n  readonly reason: unknown;\n};\n\nexport type BaseEvent = { readonly type: string };\nexport type BuiltinEvent = TimerEvent | AsyncOKEvent<unknown> | AsyncErrorEvent;\n\nexport type Patchable<TContext> = Readonly<TContext> & {\n  patch(patch: Partial<TContext>): void;\n};\n\nexport type CleanupFn<TContext> = (context: Patchable<TContext>) => void;\nexport type EnterFn<TContext> = (\n  context: Patchable<TContext>\n) => void | CleanupFn<TContext>;\n\nexport type TargetFn<\n  TContext extends object,\n  TEvent extends BaseEvent,\n  TState extends string,\n> = (\n  event: TEvent,\n  context: Readonly<TContext>\n) => TState | TargetObject<TContext, TEvent, TState> | null;\n\nexport type Effect<TContext, TEvent extends BaseEvent> = (\n  context: Patchable<TContext>,\n  event: TEvent\n) => void;\n\n/**\n * \"Expanded\" object form to specify a target state with.\n */\nexport type TargetObject<\n  TContext extends object,\n  TEvent extends BaseEvent,\n  TState extends string,\n> = {\n  target: TState;\n\n  /**\n   * Emit a side effect (other than assigning to the context) when this\n   * transition is taken.\n   */\n  effect: Effect<TContext, TEvent> | Effect<TContext, TEvent>[];\n};\n\nexport type Target<\n  TContext extends object,\n  TEvent extends BaseEvent,\n  TState extends string,\n> =\n  | TState // Static, e.g. 'complete'\n  | TargetObject<TContext, TEvent, TState>\n  | TargetFn<TContext, TEvent, TState>; // Dynamic, e.g. (context) => context.x ? 'complete' : 'other'\n\ntype Groups<T extends string> = T extends `${infer G}.${infer Rest}`\n  ? G | `${G}.${Groups<Rest>}`\n  : never;\nexport type Wildcard<T extends string> = \"*\" | `${Groups<T>}.*`;\n\nfunction distance(state1: string, state2: string): [number, number] {\n  if (state1 === state2) {\n    return [0, 0];\n  }\n\n  const chunks1 = state1.split(\".\");\n  const chunks2 = state2.split(\".\");\n  const minLen = Math.min(chunks1.length, chunks2.length);\n  let shared = 0;\n  for (; shared < minLen; shared++) {\n    if (chunks1[shared] !== chunks2[shared]) {\n      break;\n    }\n  }\n\n  const up = chunks1.length - shared;\n  const down = chunks2.length - shared;\n  return [up, down];\n}\n\nfunction patterns<TState extends string>(\n  targetState: TState,\n  levels: number\n): (Wildcard<TState> | TState)[] {\n  const parts = targetState.split(\".\");\n  if (levels < 1 || levels > parts.length + 1) {\n    throw new Error(\"Invalid number of levels\");\n  }\n\n  const result: (Wildcard<TState> | TState)[] = [];\n  if (levels > parts.length) {\n    result.push(\"*\");\n  }\n\n  for (let i = parts.length - levels + 1; i < parts.length; i++) {\n    const slice = parts.slice(0, i);\n    if (slice.length > 0) {\n      result.push((slice.join(\".\") + \".*\") as Wildcard<TState>);\n    }\n  }\n\n  result.push(targetState);\n\n  return result;\n}\n\nclass SafeContext<TContext extends object> {\n  private curr: Readonly<TContext>;\n\n  constructor(initialContext: TContext) {\n    this.curr = initialContext;\n  }\n\n  get current(): Readonly<TContext> {\n    return this.curr;\n  }\n\n  /**\n   * Call a callback function that allows patching of the context, by\n   * calling `context.patch()`. Patching is only allowed for the duration\n   * of this window.\n   */\n  allowPatching(callback: (context: Patchable<TContext>) => void): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    let allowed = true;\n\n    const patchableContext = {\n      ...this.curr,\n      patch(patch: Partial<TContext>): void {\n        if (allowed) {\n          self.curr = Object.assign({}, self.curr, patch);\n\n          // Also patch the temporary mutable context helper itself, in case\n          // there are multiple calls in a succession that need\n          for (const pair of Object.entries(patch)) {\n            const [key, value] = pair as [\n              keyof TContext,\n              TContext[keyof TContext],\n            ];\n            if (key !== \"patch\") {\n              (this as TContext)[key] = value;\n            }\n          }\n        } else {\n          throw new Error(\"Can no longer patch stale context\");\n        }\n      },\n    };\n    callback(patchableContext);\n\n    // If ever the patch function is called after this temporary window,\n    // disallow it\n    allowed = false;\n    return;\n  }\n}\n\nenum RunningState {\n  NOT_STARTED_YET, // Machine can be set up during this phase\n  STARTED,\n  STOPPED,\n}\n\nlet nextId = 1;\n\nexport class FSM<\n  TContext extends object,\n  TEvent extends BaseEvent,\n  TState extends string,\n> {\n  public id: number;\n\n  // Indicates whether this state machine is still being configured, has\n  // started, or has terminated\n  private runningState: RunningState;\n\n  private readonly currentContext: SafeContext<TContext>;\n\n  private states: Set<TState>;\n  private currentStateOrNull: TState | null;\n\n  private allowedTransitions: Map<\n    TState,\n    Map<TEvent[\"type\"], TargetFn<TContext, TEvent, TState>>\n  >;\n\n  private readonly eventHub: {\n    readonly didReceiveEvent: EventSource<TEvent | BuiltinEvent>;\n    readonly willTransition: EventSource<{ from: TState; to: TState }>;\n    readonly didIgnoreEvent: EventSource<TEvent | BuiltinEvent>;\n    readonly willExitState: EventSource<TState>;\n    readonly didEnterState: EventSource<TState>;\n  };\n\n  public readonly events: {\n    readonly didReceiveEvent: Observable<TEvent | BuiltinEvent>;\n    readonly willTransition: Observable<{ from: TState; to: TState }>;\n    readonly didIgnoreEvent: Observable<TEvent | BuiltinEvent>;\n    readonly willExitState: Observable<TState>;\n    readonly didEnterState: Observable<TState>;\n  };\n\n  //\n  // The cleanup stack is a stack of (optional) callback functions that will\n  // be run when exiting the current state. If a state (or state group) does\n  // not have an exit handler, then the entry for that level may be\n  // `undefined`, but there will be an explicit entry in the stack for it.\n  //\n  // This will always be true:\n  //\n  //   cleanupStack.length == currentState.split('.').length + 1\n  //\n  // Each stack level represents a different state \"group\".\n  //\n  // For example, if you are in a state named `foo.bar.qux`, then the stack\n  // will contain the exit handler for `foo.bar.qux` (at the top), then\n  // `foo.bar.*`, then `foo.*`, and finally, `*`.\n  //\n  private cleanupStack: (CleanupFn<TContext> | null)[];\n\n  private enterFns: Map<TState | Wildcard<TState>, EnterFn<TContext>>;\n\n  // Used to provide better error messages\n  private knownEventTypes: Set<string>;\n\n  /**\n   * Returns the initial state, which is defined by the first call made to\n   * .addState().\n   */\n  private get initialState(): TState {\n    // Return the first state ever defined as the initial state\n    const result = this.states.values()[Symbol.iterator]().next();\n    if (result.done) {\n      throw new Error(\"No states defined yet\");\n    } else {\n      return result.value;\n    }\n  }\n\n  public get currentState(): TState {\n    if (this.currentStateOrNull === null) {\n      if (this.runningState === RunningState.NOT_STARTED_YET) {\n        throw new Error(\"Not started yet\");\n      } else {\n        throw new Error(\"Already stopped\");\n      }\n    }\n    return this.currentStateOrNull;\n  }\n\n  /**\n   * Starts the machine by entering the initial state.\n   */\n  public start(): this {\n    if (this.runningState !== RunningState.NOT_STARTED_YET) {\n      throw new Error(\"State machine has already started\");\n    }\n\n    this.runningState = RunningState.STARTED;\n    this.currentStateOrNull = this.initialState;\n    this.enter(null);\n    return this;\n  }\n\n  /**\n   * Stops the state machine. Stopping the state machine will call exit\n   * handlers for the current state, but not enter a new state.\n   */\n  public stop(): void {\n    if (this.runningState !== RunningState.STARTED) {\n      throw new Error(\"Cannot stop a state machine that hasn't started yet\");\n    }\n    this.exit(null);\n    this.runningState = RunningState.STOPPED;\n    this.currentStateOrNull = null;\n  }\n\n  constructor(initialContext: Readonly<TContext>) {\n    this.id = nextId++;\n    this.runningState = RunningState.NOT_STARTED_YET;\n    this.currentStateOrNull = null;\n    this.states = new Set();\n    this.enterFns = new Map();\n    this.cleanupStack = [];\n    this.knownEventTypes = new Set();\n    this.allowedTransitions = new Map();\n    this.currentContext = new SafeContext(initialContext);\n    this.eventHub = {\n      didReceiveEvent: makeEventSource(),\n      willTransition: makeEventSource(),\n      didIgnoreEvent: makeEventSource(),\n      willExitState: makeEventSource(),\n      didEnterState: makeEventSource(),\n    };\n    this.events = {\n      didReceiveEvent: this.eventHub.didReceiveEvent.observable,\n      willTransition: this.eventHub.willTransition.observable,\n      didIgnoreEvent: this.eventHub.didIgnoreEvent.observable,\n      willExitState: this.eventHub.willExitState.observable,\n      didEnterState: this.eventHub.didEnterState.observable,\n    };\n  }\n\n  public get context(): Readonly<TContext> {\n    return this.currentContext.current;\n  }\n\n  /**\n   * Define an explicit finite state in the state machine.\n   */\n  public addState(state: TState): this {\n    if (this.runningState !== RunningState.NOT_STARTED_YET) {\n      throw new Error(\"Already started\");\n    }\n    this.states.add(state);\n    return this;\n  }\n\n  public onEnter(\n    nameOrPattern: TState | Wildcard<TState>,\n    enterFn: EnterFn<TContext>\n  ): this {\n    if (this.runningState !== RunningState.NOT_STARTED_YET) {\n      throw new Error(\"Already started\");\n    } else if (this.enterFns.has(nameOrPattern)) {\n      throw new Error(\n        // TODO We _currently_ don't support multiple .onEnters() for the same\n        // state, but this is not a fundamental limitation. Just not\n        // implemented yet. If we wanted to, we could make this an array.\n        `enter/exit function for ${nameOrPattern} already exists`\n      );\n    }\n\n    this.enterFns.set(nameOrPattern, enterFn);\n    return this;\n  }\n\n  public onEnterAsync<T>(\n    nameOrPattern: TState | Wildcard<TState>,\n    promiseFn: (context: Readonly<TContext>, signal: AbortSignal) => Promise<T>,\n    onOK: Target<TContext, AsyncOKEvent<T>, TState>,\n    onError: Target<TContext, AsyncErrorEvent, TState>\n  ): this {\n    return this.onEnter(nameOrPattern, () => {\n      const abortController = new AbortController();\n      const signal = abortController.signal;\n\n      let done = false;\n      void promiseFn(this.currentContext.current, signal).then(\n        // On OK\n        (data: T) => {\n          if (!signal.aborted) {\n            done = true;\n            this.transition({ type: \"ASYNC_OK\", data }, onOK);\n          }\n        },\n\n        // On Error\n        (reason: unknown) => {\n          if (!signal.aborted) {\n            done = true;\n            this.transition({ type: \"ASYNC_ERROR\", reason }, onError);\n          }\n        }\n      );\n\n      return () => {\n        if (!done) {\n          abortController.abort();\n        }\n      };\n    });\n  }\n\n  private getStatesMatching(\n    nameOrPattern: TState | Wildcard<TState>\n  ): TState[] {\n    const matches: TState[] = [];\n\n    // We're trying to match a group pattern here, i.e. `foo.*` (which might\n    // match `foo.bar` and `foo.qux` states)\n    if (nameOrPattern === \"*\") {\n      for (const state of this.states) {\n        matches.push(state);\n      }\n    } else if (nameOrPattern.endsWith(\".*\")) {\n      const prefix = nameOrPattern.slice(0, -1); // Strip only the \"*\", keep the \".\"\n      for (const state of this.states) {\n        if (state.startsWith(prefix)) {\n          matches.push(state);\n        }\n      }\n    } else {\n      // Just a single, explicit state name\n      const name = nameOrPattern as TState;\n      if (this.states.has(name)) {\n        matches.push(name);\n      }\n    }\n\n    if (matches.length === 0) {\n      throw new Error(`No states match ${JSON.stringify(nameOrPattern)}`);\n    }\n\n    return matches;\n  }\n\n  /**\n   * Define all allowed outgoing transitions for a state.\n   *\n   * The targets for each event can be defined as a function which returns the\n   * next state to transition to. These functions can look at the `event` or\n   * `context` params to conditionally decide which next state to transition\n   * to.\n   *\n   * If you set it to `null`, then the transition will be explicitly forbidden\n   * and throw an error. If you don't define a target for a transition, then\n   * such events will get ignored.\n   */\n  public addTransitions(\n    nameOrPattern: TState | Wildcard<TState>,\n    mapping: {\n      [E in TEvent as E[\"type\"]]?: Target<TContext, E, TState> | null;\n    }\n  ): this {\n    if (this.runningState !== RunningState.NOT_STARTED_YET) {\n      throw new Error(\"Already started\");\n    }\n\n    for (const srcState of this.getStatesMatching(nameOrPattern)) {\n      let map = this.allowedTransitions.get(srcState);\n      if (map === undefined) {\n        map = new Map();\n        this.allowedTransitions.set(srcState, map);\n      }\n\n      for (const [type, target_] of Object.entries(mapping)) {\n        if (map.has(type)) {\n          throw new Error(\n            `Trying to set transition \"${type}\" on \"${srcState}\" (via \"${nameOrPattern}\"), but a transition already exists there.`\n          );\n        }\n\n        const target = target_ as\n          | Target<TContext, TEvent, TState>\n          | null\n          | undefined;\n        this.knownEventTypes.add(type);\n\n        if (target !== undefined) {\n          const targetFn = typeof target === \"function\" ? target : () => target;\n          map.set(type, targetFn);\n        }\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Like `.addTransition()`, but takes an (anonymous) transition whenever the\n   * timer fires.\n   *\n   * @param stateOrPattern The state name, or state group pattern name.\n   * @param after          Number of milliseconds after which to take the\n   *                       transition. If in the mean time, another transition\n   *                       is taken, the timer will get cancelled.\n   * @param target     The target state to go to.\n   */\n  public addTimedTransition(\n    stateOrPattern: TState | Wildcard<TState>,\n    after: number | ((context: Readonly<TContext>) => number),\n    target: Target<TContext, TimerEvent, TState>\n  ): this {\n    return this.onEnter(stateOrPattern, () => {\n      const ms =\n        typeof after === \"function\"\n          ? after(this.currentContext.current)\n          : after;\n      const timeoutID = setTimeout(() => {\n        this.transition({ type: \"TIMER\" }, target);\n      }, ms);\n\n      return () => {\n        clearTimeout(timeoutID);\n      };\n    });\n  }\n\n  private getTargetFn(\n    eventName: TEvent[\"type\"]\n  ): TargetFn<TContext, TEvent, TState> | undefined {\n    return this.allowedTransitions.get(this.currentState)?.get(eventName);\n  }\n\n  /**\n   * Exits the current state, and executes any necessary cleanup functions.\n   * Call this before changing the current state to the next state.\n   *\n   * @param levels Defines how many \"levels\" of nesting will be\n   * exited. For example, if you transition from `foo.bar.qux` to\n   * `foo.bar.baz`, then the level is 1. But if you transition from\n   * `foo.bar.qux` to `bla.bla`, then the level is 3.\n   * If `null`, it will exit all levels.\n   */\n  private exit(levels: number | null) {\n    this.eventHub.willExitState.notify(this.currentState);\n\n    this.currentContext.allowPatching((patchableContext) => {\n      levels = levels ?? this.cleanupStack.length;\n      for (let i = 0; i < levels; i++) {\n        this.cleanupStack.pop()?.(patchableContext);\n      }\n    });\n  }\n\n  /**\n   * Enters the current state, and executes any necessary onEnter handlers.\n   * Call this directly _after_ setting the current state to the next state.\n   */\n  private enter(levels: number | null) {\n    const enterPatterns = patterns(\n      this.currentState,\n      levels ?? this.currentState.split(\".\").length + 1\n    );\n\n    this.currentContext.allowPatching((patchableContext) => {\n      for (const pattern of enterPatterns) {\n        const enterFn = this.enterFns.get(pattern);\n        const cleanupFn = enterFn?.(patchableContext);\n        if (typeof cleanupFn === \"function\") {\n          this.cleanupStack.push(cleanupFn);\n        } else {\n          this.cleanupStack.push(null);\n        }\n      }\n    });\n\n    this.eventHub.didEnterState.notify(this.currentState);\n  }\n\n  /**\n   * Sends an event to the machine, which may cause an internal state\n   * transition to happen. When that happens, will trigger side effects.\n   */\n  public send(event: TEvent): void {\n    // Throw if the event is unknown, which may likely be a configuration error\n    if (!this.knownEventTypes.has(event.type)) {\n      throw new Error(`Invalid event ${JSON.stringify(event.type)}`);\n    }\n\n    if (this.runningState === RunningState.STOPPED) {\n      // Ignore all events sent to the machine after it has stopped. This is\n      // similar to how we ignore events sent to the machine after it\n      // transitioned to a phase in which the event won't be handled: it would\n      // also get ignored.\n      // However, if the machine _hasn't started yet_, we still let it throw an\n      // error, because then it's most likely a usage error.\n      return;\n    }\n\n    const targetFn = this.getTargetFn(event.type);\n    if (targetFn !== undefined) {\n      return this.transition(event, targetFn);\n    } else {\n      // Ignore the event otherwise\n      this.eventHub.didIgnoreEvent.notify(event);\n    }\n  }\n\n  private transition<E extends TEvent | BuiltinEvent>(\n    event: E,\n    target: Target<TContext, E, TState>\n  ) {\n    this.eventHub.didReceiveEvent.notify(event);\n\n    const oldState = this.currentState;\n\n    const targetFn = typeof target === \"function\" ? target : () => target;\n    const nextTarget = targetFn(event, this.currentContext.current);\n    let nextState: TState;\n    let effects: Effect<TContext, E>[] | undefined = undefined;\n    if (nextTarget === null) {\n      // Do not transition\n      this.eventHub.didIgnoreEvent.notify(event);\n      return;\n    }\n\n    if (typeof nextTarget === \"string\") {\n      nextState = nextTarget;\n    } else {\n      nextState = nextTarget.target;\n      effects = Array.isArray(nextTarget.effect)\n        ? nextTarget.effect\n        : [nextTarget.effect];\n    }\n\n    if (!this.states.has(nextState)) {\n      throw new Error(`Invalid next state name: ${JSON.stringify(nextState)}`);\n    }\n\n    this.eventHub.willTransition.notify({ from: oldState, to: nextState });\n\n    const [up, down] = distance(this.currentState, nextState);\n    if (up > 0) {\n      this.exit(up);\n    }\n\n    this.currentStateOrNull = nextState; // NOTE: Could stay the same, but... there could be an action to execute here\n    if (effects !== undefined) {\n      const effectsToRun = effects;\n      this.currentContext.allowPatching((patchableContext) => {\n        for (const effect of effectsToRun) {\n          if (typeof effect === \"function\") {\n            // May mutate context\n            effect(patchableContext, event);\n          } else {\n            patchableContext.patch(effect);\n          }\n        }\n      });\n    }\n\n    if (down > 0) {\n      this.enter(down);\n    }\n  }\n}\n\n/** @internal - For unit tests only */\nexport { distance, patterns };\n", "import type { Json } from \"./Json\";\n\ndeclare const brand: unique symbol;\nexport type Brand<T, TBrand extends string> = T & { [brand]: TBrand };\n\n/**\n * Throw an error, but as an expression instead of a statement.\n */\nexport function raise(msg: string): never {\n  throw new Error(msg);\n}\n\nexport function isPlainObject(\n  blob: unknown\n): blob is { [key: string]: unknown } {\n  // Implementation borrowed from pojo decoder, see\n  // https://github.com/nvie/decoders/blob/78849f843193647eb6b5307240387bdcff7161fb/src/lib/objects.js#L10-L41\n  return (\n    blob !== null &&\n    typeof blob === \"object\" &&\n    Object.prototype.toString.call(blob) === \"[object Object]\"\n  );\n}\n\n/**\n * Drop-in replacement for Object.entries() that retains better types.\n */\nexport function entries<\n  O extends { [key: string]: unknown },\n  K extends keyof O,\n>(obj: O): [K, O[K]][] {\n  return Object.entries(obj) as [K, O[K]][];\n}\n\n/**\n * Drop-in replacement for Object.keys() that retains better types.\n */\nexport function keys<O extends { [key: string]: unknown }, K extends keyof O>(\n  obj: O\n): K[] {\n  return Object.keys(obj) as K[];\n}\n\n/**\n * Drop-in replacement for Object.values() that retains better types.\n */\nexport function values<O extends Record<string, unknown>>(\n  obj: O\n): O[keyof O][] {\n  return Object.values(obj) as O[keyof O][];\n}\n\n/**\n * Creates a new object by mapping a function over all values. Keys remain the\n * same. Think Array.prototype.map(), but for values in an object.\n */\nexport function mapValues<V, O extends Record<string, unknown>>(\n  obj: O,\n  mapFn: (value: O[keyof O], key: keyof O) => V\n): { [K in keyof O]: V } {\n  const result = {} as { [K in keyof O]: V };\n  for (const pair of Object.entries(obj)) {\n    const key: keyof O = pair[0];\n    if (key === \"__proto__\") {\n      // Avoid setting dangerous __proto__ keys\n      continue;\n    }\n    const value = pair[1] as O[keyof O];\n    result[key] = mapFn(value, key);\n  }\n  return result;\n}\n\n/**\n * Alternative to JSON.parse() that will not throw in production. If the passed\n * string cannot be parsed, this will return `undefined`.\n */\nexport function tryParseJson(rawMessage: string): Json | undefined {\n  try {\n    // eslint-disable-next-line no-restricted-syntax\n    return JSON.parse(rawMessage) as Json;\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * Deep-clones a JSON-serializable value.\n *\n * NOTE: We should be able to replace `deepClone` by `structuredClone` once\n * we've upgraded to Node 18.\n */\nexport function deepClone<T extends Json>(value: T): T {\n  // NOTE: In this case, the combination of JSON.parse() and JSON.stringify\n  // won't lead to type unsafety, so this use case is okay.\n  // eslint-disable-next-line no-restricted-syntax\n  return JSON.parse(JSON.stringify(value)) as T;\n}\n\n/**\n * Decode base64 string.\n */\nexport function b64decode(b64value: string): string {\n  try {\n    const formattedValue = b64value.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const decodedValue = decodeURIComponent(\n      atob(formattedValue)\n        .split(\"\")\n        .map(function (c) {\n          return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join(\"\")\n    );\n\n    return decodedValue;\n  } catch (err) {\n    return atob(b64value);\n  }\n}\n\n/**\n * Mutates the array in-place by removing the first occurrence of `item` from\n * the array.\n */\nexport function remove<T>(array: T[], item: T): void {\n  for (let i = 0; i < array.length; i++) {\n    if (array[i] === item) {\n      array.splice(i, 1);\n      break;\n    }\n  }\n}\n\n/**\n * Removes null and undefined values from the array, and reflects this in the\n * output type.\n */\nexport function compact<T>(items: readonly T[]): NonNullable<T>[] {\n  return items.filter(\n    (item: T): item is NonNullable<T> => item !== null && item !== undefined\n  );\n}\n\n/**\n * Returns a new object instance where all explictly-undefined values are\n * removed.\n */\nexport function compactObject<O extends Record<string, unknown>>(obj: O): O {\n  const newObj = { ...obj };\n  Object.keys(obj).forEach((k) => {\n    const key = k as keyof O;\n    if (newObj[key] === undefined) {\n      delete newObj[key];\n    }\n  });\n  return newObj;\n}\n\n/**\n * Returns whatever the given promise returns, but will be rejected with\n * a \"Timed out\" error if the given promise does not return or reject within\n * the given timeout period (in milliseconds).\n */\nexport async function withTimeout<T>(\n  promise: Promise<T>,\n  millis: number,\n  errmsg: string\n): Promise<T> {\n  let timerID: ReturnType<typeof setTimeout> | undefined;\n  const timer$ = new Promise<never>((_, reject) => {\n    timerID = setTimeout(() => {\n      reject(new Error(errmsg));\n    }, millis);\n  });\n  return (\n    Promise\n      // Race the given promise against the timer. Whichever one finishes\n      // first wins the race.\n      .race([promise, timer$])\n\n      // Either way, clear the timeout, no matter who won\n      .finally(() => clearTimeout(timerID))\n  );\n}\n", "import type { Json, JsonObject } from \"../lib/Json\";\nimport type { BaseUserMeta } from \"./BaseUserMeta\";\nimport type { Op } from \"./Op\";\nimport type { IdTuple, SerializedCrdt } from \"./SerializedCrdt\";\n\nexport enum ServerMsgCode {\n  // For Presence\n  UPDATE_PRESENCE = 100,\n  USER_JOINED = 101,\n  USER_LEFT = 102,\n  BROADCASTED_EVENT = 103,\n  ROOM_STATE = 104,\n\n  // For Storage\n  INITIAL_STORAGE_STATE = 200,\n  UPDATE_STORAGE = 201,\n  REJECT_STORAGE_OP = 299,\n\n  // For Yjs Docs\n  UPDATE_YDOC = 300,\n\n  THREAD_CREATED = 400,\n  THREAD_METADATA_UPDATED = 401,\n  COMMENT_CREATED = 402,\n  COMMENT_EDITED = 403,\n  COMMENT_DELETED = 404,\n  COMMENT_REACTION_ADDED = 405,\n  COMMENT_REACTION_REMOVED = 406,\n}\n\n/**\n * Messages that can be sent from the server to the client.\n */\nexport type ServerMsg<\n  TPresence extends JsonObject,\n  TUserMeta extends BaseUserMeta,\n  TRoomEvent extends Json,\n> =\n  // For Presence\n  | UpdatePresenceServerMsg<TPresence> // Broadcasted\n  | UserJoinServerMsg<TUserMeta> // Broadcasted\n  | UserLeftServerMsg // Broadcasted\n  | BroadcastedEventServerMsg<TRoomEvent> // Broadcasted\n  | RoomStateServerMsg<TUserMeta> // For a single client\n\n  // For Storage\n  | InitialDocumentStateServerMsg // For a single client\n  | UpdateStorageServerMsg // Broadcasted\n  | RejectedStorageOpServerMsg // For a single client\n  | YDocUpdateServerMsg // For receiving doc from backend\n\n  // Comments\n  | CommentsEventServerMsg;\n\nexport type CommentsEventServerMsg =\n  | ThreadCreatedEvent\n  | ThreadMetadataUpdatedEvent\n  | CommentCreatedEvent\n  | CommentEditedEvent\n  | CommentDeletedEvent\n  | CommentReactionAdded\n  | CommentReactionRemoved;\n\ntype ThreadCreatedEvent = {\n  type: ServerMsgCode.THREAD_CREATED;\n  threadId: string;\n};\n\ntype ThreadMetadataUpdatedEvent = {\n  type: ServerMsgCode.THREAD_METADATA_UPDATED;\n  threadId: string;\n};\n\ntype CommentCreatedEvent = {\n  type: ServerMsgCode.COMMENT_CREATED;\n  threadId: string;\n  commentId: string;\n};\n\ntype CommentEditedEvent = {\n  type: ServerMsgCode.COMMENT_EDITED;\n  threadId: string;\n  commentId: string;\n};\n\ntype CommentDeletedEvent = {\n  type: ServerMsgCode.COMMENT_DELETED;\n  threadId: string;\n  commentId: string;\n};\n\ntype CommentReactionAdded = {\n  type: ServerMsgCode.COMMENT_REACTION_ADDED;\n  threadId: string;\n  commentId: string;\n  emoji: string;\n};\n\ntype CommentReactionRemoved = {\n  type: ServerMsgCode.COMMENT_REACTION_REMOVED;\n  threadId: string;\n  commentId: string;\n  emoji: string;\n};\n\n/**\n * Sent by the WebSocket server and broadcasted to all clients to announce that\n * a User updated their presence. For example, when a user moves their cursor.\n *\n * In most cases, the data payload will only include the fields from the\n * Presence that have been changed since the last announcement. However, after\n * a new user joins a room, a \"full presence\" will be announced so the newly\n * connected user will get each other's user full presence at least once. In\n * those cases, the `targetActor` field indicates the newly connected client,\n * so all other existing clients can ignore this broadcasted message.\n */\nexport type UpdatePresenceServerMsg<TPresence extends JsonObject> =\n  //\n  // Full Presence™ message\n  //\n  | {\n      readonly type: ServerMsgCode.UPDATE_PRESENCE;\n      /**\n       * The User whose Presence has changed.\n       */\n      readonly actor: number;\n      /**\n       * When set, signifies that this is a Full Presence™ update, not a patch.\n       *\n       * The numeric value itself no longer has specific meaning. Historically,\n       * this field was intended so that clients could ignore these broadcasted\n       * full presence messages, but it turned out that getting a full presence\n       * \"keyframe\" from time to time was useful.\n       *\n       * So nowadays, the presence (pun intended) of this `targetActor` field\n       * is a backward-compatible way of expressing that the `data` contains\n       * all presence fields, and isn't a partial \"patch\".\n       */\n      readonly targetActor: number;\n      /**\n       * The partial or full Presence of a User. If the `targetActor` field is set,\n       * this will be the full Presence, otherwise it only contain the fields that\n       * have changed since the last broadcast.\n       */\n      readonly data: TPresence;\n    }\n\n  //\n  // Partial Presence™ message\n  //\n  | {\n      readonly type: ServerMsgCode.UPDATE_PRESENCE;\n      /**\n       * The User whose Presence has changed.\n       */\n      readonly actor: number;\n      /**\n       * Not set for partial presence updates.\n       */\n      readonly targetActor?: undefined;\n      /**\n       * A partial Presence patch to apply to the User. It will only contain the\n       * fields that have changed since the last broadcast.\n       */\n      readonly data: Partial<TPresence>;\n    };\n\n/**\n * Sent by the WebSocket server and broadcasted to all clients to announce that\n * a new User has joined the Room.\n */\nexport type UserJoinServerMsg<TUserMeta extends BaseUserMeta> = {\n  readonly type: ServerMsgCode.USER_JOINED;\n  readonly actor: number;\n  /**\n   * The id of the User that has been set in the authentication endpoint.\n   * Useful to get additional information about the connected user.\n   */\n  readonly id: TUserMeta[\"id\"];\n  /**\n   * Additional user information that has been set in the authentication\n   * endpoint.\n   */\n  readonly info: TUserMeta[\"info\"];\n  /**\n   * Informs the client what (public) permissions this (other) User has.\n   */\n  readonly scopes: string[];\n};\n\n/**\n * Sent by the WebSocket server and broadcasted to all clients to announce that\n * a new User has left the Room.\n */\nexport type UserLeftServerMsg = {\n  readonly type: ServerMsgCode.USER_LEFT;\n  readonly actor: number;\n};\n\n/**\n * Sent by the WebSocket server when the ydoc is updated or when requested based on stateVector passed.\n * Contains a base64 encoded update\n */\nexport type YDocUpdateServerMsg = {\n  readonly type: ServerMsgCode.UPDATE_YDOC;\n  readonly update: string;\n  readonly isSync: boolean; // dropped after 1.2, we use presence of stateVector instead\n  readonly stateVector: string | null; // server's state vector, sent in response to fetch\n  readonly guid?: string; // an optional guid to identify which subdoc this update to\n};\n\n/**\n * Sent by the WebSocket server and broadcasted to all clients to announce that\n * a User broadcasted an Event to everyone in the Room.\n */\nexport type BroadcastedEventServerMsg<TRoomEvent extends Json> = {\n  readonly type: ServerMsgCode.BROADCASTED_EVENT;\n  /**\n   * The User who broadcast the Event. Absent when this event is broadcast from\n   * the REST API in the backend.\n   */\n  readonly actor: number;\n  /**\n   * The arbitrary payload of the Event. This can be any JSON value. Clients\n   * will have to manually verify/decode this event.\n   */\n  readonly event: TRoomEvent;\n};\n\n/**\n * Sent by the WebSocket server to a single client in response to the client\n * joining the Room, to provide the initial state of the Room. The payload\n * includes a list of all other Users that already are in the Room.\n */\nexport type RoomStateServerMsg<TUserMeta extends BaseUserMeta> = {\n  readonly type: ServerMsgCode.ROOM_STATE;\n\n  /**\n   * Informs the client what their actor ID is going to be.\n   * @since v1.2 (WS API v7)\n   */\n  readonly actor: number;\n\n  /**\n   * Secure nonce for the current session.\n   * @since v1.2 (WS API v7)\n   */\n  readonly nonce: string;\n\n  /**\n   * Informs the client what permissions the current User (self) has.\n   * @since v1.2 (WS API v7)\n   */\n  readonly scopes: string[];\n\n  readonly users: {\n    readonly [otherActor: number]: TUserMeta & { scopes: string[] };\n  };\n};\n\n/**\n * Sent by the WebSocket server to a single client in response to the client\n * joining the Room, to provide the initial Storage state of the Room. The\n * payload includes the entire Storage document.\n */\nexport type InitialDocumentStateServerMsg = {\n  readonly type: ServerMsgCode.INITIAL_STORAGE_STATE;\n  readonly items: IdTuple<SerializedCrdt>[];\n};\n\n/**\n * Sent by the WebSocket server and broadcasted to all clients to announce that\n * a change occurred in the Storage document.\n *\n * The payload of this message contains a list of Ops (aka incremental\n * mutations to make to the initially loaded document).\n */\nexport type UpdateStorageServerMsg = {\n  readonly type: ServerMsgCode.UPDATE_STORAGE;\n  readonly ops: Op[];\n};\n\n/**\n * Sent by the WebSocket server to the client to indicate that certain opIds\n * have been received but were rejected because they caused mutations that are\n * incompatible with the Room's schema.\n */\nexport type RejectedStorageOpServerMsg = {\n  readonly type: ServerMsgCode.REJECT_STORAGE_OP;\n  readonly opIds: string[];\n  readonly reason: string;\n};\n", "export interface IWebSocketEvent {\n  type: string;\n}\n\nexport interface IWebSocketCloseEvent extends IWebSocketEvent {\n  readonly code: WebsocketCloseCodes;\n  readonly wasClean: boolean;\n  readonly reason: string;\n}\n\nexport interface IWebSocketMessageEvent extends IWebSocketEvent {\n  readonly data: string | Buffer | ArrayBuffer | readonly Buffer[];\n}\n\nexport interface IWebSocketInstance {\n  readonly CONNECTING: number; // 0\n  readonly OPEN: number; // 1\n  readonly CLOSING: number; // 2\n  readonly CLOSED: number; // 3\n\n  readonly readyState: number;\n\n  addEventListener(type: \"close\", listener: (this: IWebSocketInstance, ev: IWebSocketCloseEvent) => unknown): void; // prettier-ignore\n  addEventListener(type: \"message\", listener: (this: IWebSocketInstance, ev: IWebSocketMessageEvent) => unknown): void; // prettier-ignore\n  addEventListener(type: \"open\" | \"error\", listener: (this: IWebSocketInstance, ev: IWebSocketEvent) => unknown): void; // prettier-ignore\n\n  removeEventListener(type: \"close\", listener: (this: IWebSocketInstance, ev: IWebSocketCloseEvent) => unknown): void; // prettier-ignore\n  removeEventListener(type: \"message\", listener: (this: IWebSocketInstance, ev: IWebSocketMessageEvent) => unknown): void; // prettier-ignore\n  removeEventListener(type: \"open\" | \"error\", listener: (this: IWebSocketInstance, ev: IWebSocketEvent) => unknown): void; // prettier-ignore\n\n  close(): void;\n  send(data: string): void;\n}\n\n/**\n * Either the browser-based WebSocket API or Node.js' WebSocket API (from the\n * 'ws' package).\n *\n * This type defines the minimal WebSocket API that Liveblocks needs from\n * a WebSocket implementation, and is a minimal subset of the browser-based\n * WebSocket APIs and Node.js' WebSocket API so that both implementations are\n * assignable to this type.\n */\nexport interface IWebSocket {\n  new (address: string): IWebSocketInstance;\n}\n\n/**\n * The following ranges will be respected by the client:\n *\n *   10xx: client will reauthorize (just like 41xx)\n *   40xx: client will disconnect\n *   41xx: client will reauthorize\n *   42xx: client will retry without reauthorizing (currently not used)\n *\n */\nexport enum WebsocketCloseCodes {\n  /** Normal close of connection, the connection fulfilled its purpose. */\n  CLOSE_NORMAL = 1000,\n  /** Unexpected error happened with the network/infra level. In spirit akin to HTTP 503 */\n  CLOSE_ABNORMAL = 1006,\n  /** Unexpected error happened. In spirit akin to HTTP 500 */\n  UNEXPECTED_CONDITION = 1011,\n  /** Please back off for now, but try again in a few moments */\n  TRY_AGAIN_LATER = 1013,\n  /** Message wasn't understood, disconnect */\n  INVALID_MESSAGE_FORMAT = 4000,\n  /** Server refused to allow connection. Re-authorizing won't help. Disconnect. In spirit akin to HTTP 403 */\n  NOT_ALLOWED = 4001,\n  /** Unused */\n  MAX_NUMBER_OF_MESSAGES_PER_SECONDS = 4002,\n  /** Unused */\n  MAX_NUMBER_OF_CONCURRENT_CONNECTIONS = 4003,\n  /** Unused */\n  MAX_NUMBER_OF_MESSAGES_PER_DAY_PER_APP = 4004,\n  /** Room is full, disconnect */\n  MAX_NUMBER_OF_CONCURRENT_CONNECTIONS_PER_ROOM = 4005,\n  /** The server kicked the connection from the room. */\n  KICKED = 4100,\n  /** The auth token is expired, reauthorize to get a fresh one. In spirit akin to HTTP 401 */\n  TOKEN_EXPIRED = 4109,\n  /** Disconnect immediately */\n  CLOSE_WITHOUT_RETRY = 4999,\n}\n\nexport function shouldDisconnect(code: WebsocketCloseCodes): boolean {\n  return (\n    code === WebsocketCloseCodes.CLOSE_WITHOUT_RETRY ||\n    ((code as number) >= 4000 && (code as number) < 4100)\n  );\n}\n\nexport function shouldReauth(code: WebsocketCloseCodes): boolean {\n  return (code as number) >= 4100 && (code as number) < 4200;\n}\n\nexport function shouldRetryWithoutReauth(code: WebsocketCloseCodes): boolean {\n  return (\n    code === WebsocketCloseCodes.TRY_AGAIN_LATER ||\n    ((code as number) >= 4200 && (code as number) < 4300)\n  );\n}\n", "import { assertNever } from \"./lib/assert\";\nimport { controlledPromise } from \"./lib/controlledPromise\";\nimport type { Observable } from \"./lib/EventSource\";\nimport { makeEventSource } from \"./lib/EventSource\";\nimport * as console from \"./lib/fancy-console\";\nimport type { BuiltinEvent, Patchable, Target } from \"./lib/fsm\";\nimport { FSM } from \"./lib/fsm\";\nimport type { Json } from \"./lib/Json\";\nimport { tryParseJson, withTimeout } from \"./lib/utils\";\nimport { ServerMsgCode } from \"./protocol/ServerMsg\";\nimport type {\n  IWebSocketCloseEvent,\n  IWebSocketEvent,\n  IWebSocketInstance,\n  IWebSocketMessageEvent,\n} from \"./types/IWebSocket\";\nimport {\n  shouldDisconnect,\n  shouldReauth,\n  shouldRetryWithoutReauth,\n  WebsocketCloseCodes,\n} from \"./types/IWebSocket\";\n\n/**\n * Old connection statuses, here for backward-compatibility reasons only.\n */\nexport type LegacyConnectionStatus =\n  | \"closed\" // Room hasn't been entered, or has left already\n  | \"authenticating\" // This state is no longer used, but older versions of the Liveblocks client still use it\n  | \"connecting\" // In the process of authenticating and establishing a WebSocket connection\n  | \"open\" // Successful room connection, on the happy path\n  | \"unavailable\" // Connection lost unexpectedly, considered a temporary hiccup, will retry\n  | \"failed\"; // Connection failed and we won't retry automatically (e.g. unauthorized)\n\n/**\n * Returns a human-readable status indicating the current connection status of\n * a Room, as returned by `room.getStatus()`. Can be used to implement\n * a connection status badge.\n */\nexport type Status =\n  | \"initial\"\n  | \"connecting\"\n  | \"connected\"\n  | \"reconnecting\"\n  | \"disconnected\";\n\n/**\n * Whether or not the status is an \"idle\" state. Here, idle means that nothing\n * will happen until some action is taken. Unsurprisingly, these statuses match\n * the start and end states of the state machine.\n */\nexport function isIdle(status: Status): status is \"initial\" | \"disconnected\" {\n  return status === \"initial\" || status === \"disconnected\";\n}\n\n/**\n * Used to report about app-level reconnection issues.\n *\n * Normal (quick) reconnects won't be reported as a \"lost connection\". Instead,\n * the application will only get an event if the reconnection attempts by the\n * client are taking (much) longer than usual. Definitely a situation you want\n * to inform your users about, for example, by throwing a toast message on\n * screen, or show a \"trying to reconnect\" banner.\n */\nexport type LostConnectionEvent =\n  | \"lost\" // the client is trying to reconnect to Liveblocks, but it's taking (much) longer than usual\n  | \"restored\" // the client did reconnect after all\n  | \"failed\"; // the client was told to stop trying\n\nexport function newToLegacyStatus(status: Status): LegacyConnectionStatus {\n  switch (status) {\n    case \"connecting\":\n      return \"connecting\";\n\n    case \"connected\":\n      return \"open\";\n\n    case \"reconnecting\":\n      return \"unavailable\";\n\n    case \"disconnected\":\n      return \"failed\";\n\n    case \"initial\":\n      return \"closed\";\n\n    // istanbul ignore next\n    default:\n      return \"closed\";\n  }\n}\n\n/**\n * Maps internal machine state to the public Status API.\n */\nfunction toNewConnectionStatus(machine: FSM<Context, Event, State>): Status {\n  const state = machine.currentState;\n  switch (state) {\n    case \"@ok.connected\":\n    case \"@ok.awaiting-pong\":\n      return \"connected\";\n\n    case \"@idle.initial\":\n      return \"initial\";\n\n    case \"@auth.busy\":\n    case \"@auth.backoff\":\n    case \"@connecting.busy\":\n    case \"@connecting.backoff\":\n    case \"@idle.zombie\":\n      return machine.context.successCount > 0 ? \"reconnecting\" : \"connecting\";\n\n    case \"@idle.failed\":\n      return \"disconnected\";\n\n    // istanbul ignore next\n    default:\n      return assertNever(state, \"Unknown state\");\n  }\n}\n\n/**\n * Events that can be sent to the machine externally.\n */\ntype Event =\n  // Public events that can be called on the connection manager\n  | { type: \"CONNECT\" } // e.g. when trying to enter a room\n  | { type: \"RECONNECT\" } // e.g. user asking for an explicit reconnect of the socket\n  | { type: \"DISCONNECT\" } // e.g. leaving the room\n  | { type: \"WINDOW_GOT_FOCUS\" } // e.g. user's browser tab is refocused\n  | { type: \"NAVIGATOR_ONLINE\" } // e.g. browser gets back online\n  | { type: \"NAVIGATOR_OFFLINE\" } // e.g. browser goes offline\n\n  // Events that the connection manager will internally deal with\n  | { type: \"PONG\" }\n  | { type: \"EXPLICIT_SOCKET_ERROR\"; event: IWebSocketEvent }\n  | { type: \"EXPLICIT_SOCKET_CLOSE\"; event: IWebSocketCloseEvent }\n\n  // Only used by the E2E testing app, to simulate a pong timeout :(\n  | { type: \"PONG_TIMEOUT\" };\n\ntype State =\n  | \"@idle.initial\"\n  | \"@idle.failed\"\n  | \"@idle.zombie\"\n  | \"@auth.busy\"\n  | \"@auth.backoff\"\n  | \"@connecting.busy\"\n  | \"@connecting.backoff\"\n  | \"@ok.connected\"\n  | \"@ok.awaiting-pong\";\n\n/**\n * Arbitrary record that will be used as the authentication \"authValue\". It's the\n * value that is returned by calling the authentication delegate, and will get\n * passed to the connection factory delegate. This value will be remembered by\n * the connection manager, but its value will not be interpreted, so it can be\n * any value (except null).\n */\nexport type BaseAuthResult = NonNullable<Json>;\n\ntype Context = {\n  /**\n   * Count the number of times the machine reaches an \"@ok.*\" state. Once the\n   * machine reaches idle state again, this count is reset to 0 again.\n   *\n   * This lets us distinguish:\n   * - If successCount = 0, then it's an initial \"connecting\" state.\n   * - If successCount > 0, then it's an \"reconnecting\" state.\n   */\n  successCount: number;\n\n  /**\n   * Will be populated with the last known auth authValue.\n   */\n  authValue: BaseAuthResult | null;\n\n  /**\n   * The current active WebSocket connection to the room. If this is not null\n   * on the context, then the socket has successfully been opened.\n   */\n  socket: IWebSocketInstance | null;\n\n  /**\n   * The current retry delay when automatically retrying. Will get bumped to\n   * the next \"tier\" every time a connection attempt fails. Reset every time\n   * a connection succeeded.\n   */\n  backoffDelay: number;\n};\n\nconst BACKOFF_DELAYS = [250, 500, 1_000, 2_000, 4_000, 8_000, 10_000] as const;\n\n// Resetting the delay happens upon success. We could reset to 0, but that\n// would risk no delay, which generally isn't wise. Instead, we'll reset it to\n// the lowest safe delay minus 1 millisecond. The reason is that every time\n// a retry happens, the retry delay will first be bumped to the next \"tier\".\nconst RESET_DELAY = BACKOFF_DELAYS[0] - 1;\n\n/**\n * Used to back off from WebSocket reconnection attempts after a known\n * Liveblocks issue, like \"room full\" or a \"rate limit\" error.\n */\nconst BACKOFF_DELAYS_SLOW = [2_000, 30_000, 60_000, 300_000] as const;\n\n/**\n * The client will send a PING to the server every 30 seconds, after which it\n * must receive a PONG back within the next 2 seconds. If that doesn't happen,\n * this is interpreted as an implicit connection loss event.\n */\nconst HEARTBEAT_INTERVAL = 30_000;\nconst PONG_TIMEOUT = 2_000;\n\n/**\n * Maximum amount of time that the authentication delegate take to return an\n * auth authValue, or else we consider authentication timed out.\n */\nconst AUTH_TIMEOUT = 10_000;\n\n/**\n * Maximum amount of time that the socket connect delegate may take to return\n * an opened WebSocket connection, or else we consider the attempt timed out.\n */\nconst SOCKET_CONNECT_TIMEOUT = 10_000;\n\n/**\n * Special error class that can be thrown during authentication to stop the\n * connection manager from retrying.\n */\nexport class StopRetrying extends Error {\n  constructor(reason: string) {\n    super(reason);\n  }\n}\n\nexport class LiveblocksError extends Error {\n  /** @internal */\n  constructor(\n    message: string,\n    public code: number\n  ) {\n    super(message);\n  }\n}\n\nfunction nextBackoffDelay(\n  currentDelay: number,\n  delays: readonly number[] = BACKOFF_DELAYS\n): number {\n  return (\n    delays.find((delay) => delay > currentDelay) ?? delays[delays.length - 1]\n  );\n}\n\nfunction increaseBackoffDelay(context: Patchable<Context>) {\n  context.patch({ backoffDelay: nextBackoffDelay(context.backoffDelay) });\n}\n\nfunction increaseBackoffDelayAggressively(context: Patchable<Context>) {\n  context.patch({\n    backoffDelay: nextBackoffDelay(context.backoffDelay, BACKOFF_DELAYS_SLOW),\n  });\n}\n\nfunction resetSuccessCount(context: Patchable<Context>) {\n  context.patch({ successCount: 0 });\n}\n\nenum LogLevel {\n  INFO,\n  WARN,\n  ERROR,\n}\n\n/**\n * Generic \"log\" effect. Use it in `effect` handlers of state transitions.\n */\nfunction log(level: LogLevel, message: string) {\n  const logger =\n    level === LogLevel.ERROR\n      ? console.error\n      : level === LogLevel.WARN\n        ? console.warn\n        : /* black hole */ () => {};\n  return () => {\n    logger(message);\n  };\n}\n\nfunction logPrematureErrorOrCloseEvent(e: IWebSocketEvent | Error) {\n  // Produce a useful log message\n  const conn = \"Connection to Liveblocks websocket server\";\n  return (ctx: Readonly<Context>) => {\n    if (e instanceof Error) {\n      console.warn(`${conn} could not be established. ${String(e)}`);\n    } else {\n      console.warn(\n        isCloseEvent(e)\n          ? `${conn} closed prematurely (code: ${e.code}). Retrying in ${ctx.backoffDelay}ms.`\n          : `${conn} could not be established.`\n      );\n    }\n  };\n}\n\nfunction logCloseEvent(event: IWebSocketCloseEvent) {\n  return (ctx: Readonly<Context>) => {\n    console.warn(\n      `Connection to Liveblocks websocket server closed (code: ${event.code}). Retrying in ${ctx.backoffDelay}ms.`\n    );\n  };\n}\n\nconst logPermanentClose = log(\n  LogLevel.WARN,\n  \"Connection to WebSocket closed permanently. Won't retry.\"\n);\n\nfunction isCloseEvent(\n  error: IWebSocketEvent | Error\n): error is IWebSocketCloseEvent {\n  return !(error instanceof Error) && error.type === \"close\";\n}\n\nexport type Delegates<T extends BaseAuthResult> = {\n  authenticate: () => Promise<T>;\n  createSocket: (authValue: T) => IWebSocketInstance;\n  canZombie: () => boolean;\n};\n\n// istanbul ignore next\nfunction enableTracing(machine: FSM<Context, Event, State>) {\n  const start = new Date().getTime();\n\n  function log(...args: unknown[]) {\n    console.warn(\n      `${((new Date().getTime() - start) / 1000).toFixed(2)} [FSM #${\n        machine.id\n      }]`,\n      ...args\n    );\n  }\n  const unsubs = [\n    machine.events.didReceiveEvent.subscribe((e) => log(`Event ${e.type}`)),\n    machine.events.willTransition.subscribe(({ from, to }) =>\n      log(\"Transitioning\", from, \"→\", to)\n    ),\n    machine.events.didIgnoreEvent.subscribe((e) =>\n      log(\"Ignored event\", e.type, e, \"(current state won't handle it)\")\n    ),\n    // machine.events.willExitState.subscribe((s) => log(\"Exiting state\", s)),\n    // machine.events.didEnterState.subscribe((s) => log(\"Entering state\", s)),\n  ];\n  return () => {\n    for (const unsub of unsubs) {\n      unsub();\n    }\n  };\n}\n\nfunction defineConnectivityEvents(machine: FSM<Context, Event, State>) {\n  // Emitted whenever a new WebSocket connection attempt succeeds\n  const statusDidChange = makeEventSource<Status>();\n  const didConnect = makeEventSource<void>();\n  const didDisconnect = makeEventSource<void>();\n\n  let lastStatus: Status | null = null;\n\n  const unsubscribe = machine.events.didEnterState.subscribe(() => {\n    const currStatus = toNewConnectionStatus(machine);\n    if (currStatus !== lastStatus) {\n      statusDidChange.notify(currStatus);\n    }\n\n    if (lastStatus === \"connected\" && currStatus !== \"connected\") {\n      didDisconnect.notify();\n    } else if (lastStatus !== \"connected\" && currStatus === \"connected\") {\n      didConnect.notify();\n    }\n    lastStatus = currStatus;\n  });\n\n  return {\n    statusDidChange: statusDidChange.observable,\n    didConnect: didConnect.observable,\n    didDisconnect: didDisconnect.observable,\n    unsubscribe,\n  };\n}\n\nconst assign = (patch: Partial<Context>) => (ctx: Patchable<Context>) =>\n  ctx.patch(patch);\n\nfunction createConnectionStateMachine<T extends BaseAuthResult>(\n  delegates: Delegates<T>,\n  options: {\n    enableDebugLogging: boolean;\n    /** In protocol V7, the actor will no longer be available on the token.\n     * Instead, the `actor` will be sent to the client via a ROOM_STATE message\n     * over an established WebSocket connection. If this setting is set to\n     * `true`, the state machine will only jump to \"connected\" state _after_\n     * this message has been received. If this setting is `false`, the machine\n     * won't wait for the actor to be received, and instead jump to \"connected\"\n     * as soon as the WebSocket connection is established. */\n    waitForActorId: boolean;\n  }\n) {\n  // Create observable event sources, which this machine will call into when\n  // specific events happen\n  const onMessage = makeEventSource<IWebSocketMessageEvent>();\n  onMessage.pause(); // Pause all message delivery until status is OPEN\n\n  // Emitted whenever the server deliberately closes the connection for\n  // a specific Liveblocks reason\n  const onLiveblocksError = makeEventSource<LiveblocksError>();\n\n  function fireErrorEvent(errmsg: string, errcode: number) {\n    return () => {\n      const err = new LiveblocksError(errmsg, errcode);\n      onLiveblocksError.notify(err);\n    };\n  }\n\n  const initialContext: Context & { authValue: T | null } = {\n    successCount: 0,\n    authValue: null,\n    socket: null,\n    backoffDelay: RESET_DELAY,\n  };\n\n  // The `machine` is the actual finite state machine instance that will\n  // maintain the WebSocket's connection\n  const machine = new FSM<Context, Event, State>(initialContext)\n    .addState(\"@idle.initial\")\n    .addState(\"@idle.failed\")\n    .addState(\"@idle.zombie\")\n    .addState(\"@auth.busy\")\n    .addState(\"@auth.backoff\")\n    .addState(\"@connecting.busy\")\n    .addState(\"@connecting.backoff\")\n    .addState(\"@ok.connected\")\n    .addState(\"@ok.awaiting-pong\");\n\n  //\n  // Configure events that can happen from anywhere\n  //\n  // It's always possible to explicitly get a .reconnect() or .disconnect()\n  // from the user.\n  //\n  machine.addTransitions(\"*\", {\n    RECONNECT: {\n      target: \"@auth.backoff\",\n      effect: [increaseBackoffDelay, resetSuccessCount],\n    },\n\n    DISCONNECT: \"@idle.initial\",\n  });\n\n  //\n  // Configure the @idle.* states\n  //\n  machine\n    .onEnter(\"@idle.*\", resetSuccessCount)\n\n    .addTransitions(\"@idle.*\", {\n      CONNECT: (_, ctx) =>\n        // If we still have a known authValue, try to reconnect to the socket directly,\n        // otherwise, try to obtain a new authValue\n        ctx.authValue !== null ? \"@connecting.busy\" : \"@auth.busy\",\n    });\n\n  //\n  // Configure the @auth.* states\n  //\n  machine\n    .addTransitions(\"@auth.backoff\", {\n      NAVIGATOR_ONLINE: {\n        target: \"@auth.busy\",\n        effect: assign({ backoffDelay: RESET_DELAY }),\n      },\n    })\n    .addTimedTransition(\n      \"@auth.backoff\",\n      (ctx) => ctx.backoffDelay,\n      \"@auth.busy\"\n    )\n\n    .onEnterAsync(\n      \"@auth.busy\",\n\n      () =>\n        withTimeout(\n          delegates.authenticate(),\n          AUTH_TIMEOUT,\n          \"Timed out during auth\"\n        ),\n\n      // On successful authentication\n      (okEvent) => ({\n        target: \"@connecting.busy\",\n        effect: assign({\n          authValue: okEvent.data,\n          backoffDelay: RESET_DELAY,\n        }),\n      }),\n\n      // Auth failed\n      (failedEvent) => {\n        if (failedEvent.reason instanceof StopRetrying) {\n          return {\n            target: \"@idle.failed\",\n            effect: [\n              log(LogLevel.ERROR, failedEvent.reason.message),\n              fireErrorEvent(failedEvent.reason.message, -1),\n            ],\n          };\n        }\n\n        return {\n          target: \"@auth.backoff\",\n          effect: [\n            increaseBackoffDelay,\n            log(\n              LogLevel.ERROR,\n              `Authentication failed: ${\n                failedEvent.reason instanceof Error\n                  ? failedEvent.reason.message\n                  : String(failedEvent.reason)\n              }`\n            ),\n          ],\n        };\n      }\n    );\n\n  //\n  // Configure the @connecting.* states\n  //\n\n  // Function references\n  const onSocketError = (event: IWebSocketEvent) =>\n    machine.send({ type: \"EXPLICIT_SOCKET_ERROR\", event });\n\n  const onSocketClose = (event: IWebSocketCloseEvent) =>\n    machine.send({ type: \"EXPLICIT_SOCKET_CLOSE\", event });\n\n  const onSocketMessage = (event: IWebSocketMessageEvent) =>\n    event.data === \"pong\"\n      ? machine.send({ type: \"PONG\" })\n      : onMessage.notify(event);\n\n  function teardownSocket(socket: IWebSocketInstance | null) {\n    if (socket) {\n      socket.removeEventListener(\"error\", onSocketError);\n      socket.removeEventListener(\"close\", onSocketClose);\n      socket.removeEventListener(\"message\", onSocketMessage);\n      socket.close();\n    }\n  }\n\n  machine\n    .addTransitions(\"@connecting.backoff\", {\n      NAVIGATOR_ONLINE: {\n        target: \"@connecting.busy\",\n        effect: assign({ backoffDelay: RESET_DELAY }),\n      },\n    })\n    .addTimedTransition(\n      \"@connecting.backoff\",\n      (ctx) => ctx.backoffDelay,\n      \"@connecting.busy\"\n    )\n\n    .onEnterAsync(\n      \"@connecting.busy\",\n\n      //\n      // Use the \"createSocket\" delegate function (provided to the\n      // ManagedSocket) to create the actual WebSocket connection instance.\n      // Then, set up all the necessary event listeners, and wait for the\n      // \"open\" event to occur.\n      //\n      // When the \"open\" event happens, we're ready to transition to the\n      // OK state. This is done by resolving the Promise.\n      //\n      async (ctx, signal) => {\n        let capturedPrematureEvent: IWebSocketEvent | null = null;\n        let unconfirmedSocket: IWebSocketInstance | null = null;\n\n        const connect$ = new Promise<[IWebSocketInstance, () => void]>(\n          (resolve, rej) => {\n            // istanbul ignore next\n            if (ctx.authValue === null) {\n              throw new Error(\"No auth authValue\"); // This should never happen\n            }\n\n            const socket = delegates.createSocket(ctx.authValue as T);\n            unconfirmedSocket = socket;\n\n            function reject(event: IWebSocketEvent) {\n              capturedPrematureEvent = event;\n              socket.removeEventListener(\"message\", onSocketMessage);\n              rej(event);\n            }\n\n            const [actor$, didReceiveActor] = controlledPromise<void>();\n            if (!options.waitForActorId) {\n              // Mark the promise as \"resolved\" immediately, so we won't wait\n              // for a ROOM_STATE message to happen.\n              didReceiveActor();\n            }\n\n            /** Waits until actor is received (from the ROOM_STATE message) */\n            function waitForActorId(event: IWebSocketMessageEvent) {\n              const serverMsg = tryParseJson(event.data as string) as\n                | Record<string, Json>\n                | undefined;\n              if (serverMsg?.type === ServerMsgCode.ROOM_STATE) {\n                didReceiveActor();\n              }\n            }\n\n            //\n            // Part 1:\n            // The `error` and `close` event handlers marked (*) are installed\n            // here only temporarily, just to handle this promise-based state.\n            // When those get triggered, we reject this promise.\n            //\n            socket.addEventListener(\"message\", onSocketMessage);\n            if (options.waitForActorId) {\n              socket.addEventListener(\"message\", waitForActorId);\n            }\n            socket.addEventListener(\"error\", reject); // (*)\n            socket.addEventListener(\"close\", reject); // (*)\n            socket.addEventListener(\"open\", () => {\n              //\n              // Part 2:\n              // The \"open\" event just fired, so the server accepted our\n              // attempt to connect. We'll go on and resolve() our promise as\n              // a result.\n              //\n              // However, we cannot safely remove our error/close rejection\n              // handlers _just yet_. There is a small, unlikely-but-possible\n              // edge case: if (and only if) any close/error events are\n              // _already_ queued up in the event queue before this handler is\n              // invoked, then those will fire before our promise will be\n              // resolved.\n              //\n              // Scenario:\n              // - Event queue is empty, listeners are installed\n              // - Two events synchronously get scheduled in the event queue: [<open event>, <close event>]\n              // - The open handler is invoked (= this very callback)\n              // - Event queue now looks like: [<close event>]\n              // - We happily continue and resolve the promise\n              // - Event queue now looks like: [<close event>, <our resolved promise>]\n              // - Close event handler fires, but we already resolved promise! 😣\n              //\n              // This is what's called a \"premature\" event here, we'll deal\n              // with it in part 3.\n              //\n              socket.addEventListener(\"error\", onSocketError);\n              socket.addEventListener(\"close\", onSocketClose);\n              const unsub = () => {\n                socket.removeEventListener(\"error\", reject); // Remove (*)\n                socket.removeEventListener(\"close\", reject); // Remove (*)\n                socket.removeEventListener(\"message\", waitForActorId);\n              };\n\n              // Resolve the promise only once we received the actor ID from\n              // the server. This will act like a traffic light, going green\n              // only once the actor is received. If the machine is configured\n              // not to wait for the actor, the traffic light will already be\n              // green.\n              // All messages received in the mean time while waiting for the\n              // green light will be played back to the client after the\n              // transition to \"connected\".\n              void actor$.then(() => {\n                resolve([socket, unsub]);\n              });\n            });\n          }\n        );\n\n        return withTimeout(\n          connect$,\n          SOCKET_CONNECT_TIMEOUT,\n          \"Timed out during websocket connection\"\n        )\n          .then(\n            //\n            // Part 3:\n            // By now, our \"open\" event has fired, and the promise has been\n            // resolved. Two possible scenarios:\n            //\n            // 1. The happy path. Most likely.\n            // 2. Uh-oh. A premature close/error event has been observed. Let's\n            //    reject the promise after all.\n            //\n            // Any close/error event that will get scheduled after this point\n            // onwards, will be caught in the OK state, and dealt with\n            // accordingly.\n            //\n            ([socket, unsub]) => {\n              unsub();\n\n              if (signal.aborted) {\n                // Trigger cleanup logic in .catch() below. At this point, the\n                // promise is already cancelled, so none of the ok/err\n                // transitions will take place.\n                throw new Error(\"Aborted\");\n              }\n\n              if (capturedPrematureEvent) {\n                throw capturedPrematureEvent; // Take failure transition\n              }\n\n              return socket;\n            }\n          )\n          .catch((e) => {\n            teardownSocket(unconfirmedSocket);\n            throw e;\n          });\n      },\n\n      // Only transition to OK state after a successfully opened WebSocket connection\n      (okEvent) => ({\n        target: \"@ok.connected\",\n        effect: assign({\n          socket: okEvent.data,\n          backoffDelay: RESET_DELAY,\n        }),\n      }),\n\n      // If the WebSocket connection cannot be established\n      (failure) => {\n        const err = failure.reason as IWebSocketEvent | StopRetrying | Error;\n\n        // Stop retrying if this promise explicitly tells us so. This should,\n        // in the case of a WebSocket connection attempt only be the case if\n        // there is a configuration error.\n        if (err instanceof StopRetrying) {\n          return {\n            target: \"@idle.failed\",\n            effect: [\n              log(LogLevel.ERROR, err.message),\n              fireErrorEvent(err.message, -1),\n            ],\n          };\n        }\n\n        // If the server actively refuses the connection attempt, stop trying.\n        if (isCloseEvent(err)) {\n          // The default fall-through behavior is going to be reauthorizing\n          // with a back-off strategy. If we know the token was expired however\n          // we can reauthorize immediately (without back-off).\n          if (err.code === WebsocketCloseCodes.TOKEN_EXPIRED) {\n            return \"@auth.busy\";\n          }\n\n          if (shouldRetryWithoutReauth(err.code)) {\n            // Retry after backoff, but don't get a new token\n            return {\n              target: \"@connecting.backoff\",\n              effect: [\n                increaseBackoffDelayAggressively,\n                logPrematureErrorOrCloseEvent(err),\n              ],\n            };\n          }\n\n          // If the token was not allowed we can stop trying because getting\n          // another token for the same user won't help\n          if (shouldDisconnect(err.code)) {\n            return {\n              target: \"@idle.failed\",\n              effect: [\n                log(LogLevel.ERROR, err.reason),\n                fireErrorEvent(err.reason, err.code),\n              ],\n            };\n          }\n        }\n\n        // In all other (unknown) cases, always re-authenticate (but after a back-off)\n        return {\n          target: \"@auth.backoff\",\n          effect: [increaseBackoffDelay, logPrematureErrorOrCloseEvent(err)],\n        };\n      }\n    );\n\n  //\n  // Configure the @ok.* states\n  //\n  // Keeps a heartbeat alive with the server whenever in the @ok.* state group.\n  // 30 seconds after entering the \"@ok.connected\" state, it will emit\n  // a heartbeat, and awaits a PONG back that should arrive within 2 seconds.\n  // If this happens, then it transitions back to normal \"connected\" state, and\n  // the cycle repeats. If the PONG is not received timely, then we interpret\n  // it as an implicit connection loss, and transition to reconnect (throw away\n  // this socket, and open a new one).\n  //\n\n  const sendHeartbeat: Target<Context, Event | BuiltinEvent, State> = {\n    target: \"@ok.awaiting-pong\",\n    effect: (ctx) => {\n      ctx.socket?.send(\"ping\");\n    },\n  };\n\n  const maybeHeartbeat: Target<Context, Event | BuiltinEvent, State> = () => {\n    // If the browser tab isn't visible currently, ask the application if going\n    // zombie is fine\n    const doc = typeof document !== \"undefined\" ? document : undefined;\n    const canZombie =\n      doc?.visibilityState === \"hidden\" && delegates.canZombie();\n    return canZombie ? \"@idle.zombie\" : sendHeartbeat;\n  };\n\n  machine\n    .addTimedTransition(\"@ok.connected\", HEARTBEAT_INTERVAL, maybeHeartbeat)\n    .addTransitions(\"@ok.connected\", {\n      NAVIGATOR_OFFLINE: maybeHeartbeat, // Don't take the browser's word for it when it says it's offline. Do a ping/pong to make sure.\n      WINDOW_GOT_FOCUS: sendHeartbeat,\n    });\n\n  machine.addTransitions(\"@idle.zombie\", {\n    WINDOW_GOT_FOCUS: \"@connecting.backoff\", // When in zombie state, the client will try to wake up automatically when the window regains focus\n  });\n\n  machine\n    .onEnter(\"@ok.*\", (ctx) => {\n      ctx.patch({ successCount: ctx.successCount + 1 });\n\n      const timerID = setTimeout(\n        // On the next tick, start delivering all messages that have already\n        // been received, and continue synchronous delivery of all future\n        // incoming messages.\n        onMessage.unpause,\n        0\n      );\n\n      // ...but when *leaving* OK state, always tear down the old socket. It's\n      // no longer valid.\n      return (ctx) => {\n        teardownSocket(ctx.socket);\n        ctx.patch({ socket: null });\n        clearTimeout(timerID);\n        onMessage.pause();\n      };\n    })\n\n    .addTransitions(\"@ok.awaiting-pong\", { PONG: \"@ok.connected\" })\n    .addTimedTransition(\"@ok.awaiting-pong\", PONG_TIMEOUT, {\n      target: \"@connecting.busy\",\n      // Log implicit connection loss and drop the current open socket\n      effect: log(\n        LogLevel.WARN,\n        \"Received no pong from server, assume implicit connection loss.\"\n      ),\n    })\n\n    .addTransitions(\"@ok.*\", {\n      // When a socket receives an error, this can cause the closing of the\n      // socket, or not. So always check to see if the socket is still OPEN or\n      // not. When still OPEN, don't transition.\n      EXPLICIT_SOCKET_ERROR: (_, context) => {\n        if (context.socket?.readyState === 1 /* WebSocket.OPEN */) {\n          // TODO Do we need to forward this error to the client?\n          return null; /* Do not leave OK state, socket is still usable */\n        }\n\n        return {\n          target: \"@connecting.backoff\",\n          effect: increaseBackoffDelay,\n        };\n      },\n\n      EXPLICIT_SOCKET_CLOSE: (e) => {\n        // Server instructed us to stop retrying, so move to failed state\n        if (shouldDisconnect(e.event.code)) {\n          return {\n            target: \"@idle.failed\",\n            effect: [\n              logPermanentClose,\n              fireErrorEvent(e.event.reason, e.event.code),\n            ],\n          };\n        }\n\n        if (shouldReauth(e.event.code)) {\n          if (e.event.code === WebsocketCloseCodes.TOKEN_EXPIRED) {\n            // Token expiry is a special case, we can reauthorize immediately\n            // (without back-off)\n            return \"@auth.busy\";\n          } else {\n            return {\n              target: \"@auth.backoff\",\n              effect: [increaseBackoffDelay, logCloseEvent(e.event)],\n            };\n          }\n        }\n\n        if (shouldRetryWithoutReauth(e.event.code)) {\n          // If this is a custom Liveblocks server close reason, back off more\n          // aggressively, and emit a Liveblocks error event...\n          return {\n            target: \"@connecting.backoff\",\n            effect: [increaseBackoffDelayAggressively, logCloseEvent(e.event)],\n          };\n        }\n\n        // Consider any other close event a temporary network hiccup, and retry\n        // after a normal backoff delay\n        return {\n          target: \"@connecting.backoff\",\n          effect: [increaseBackoffDelay, logCloseEvent(e.event)],\n        };\n      },\n    });\n\n  // Lastly, register an event handler to listen for window-focus events as\n  // soon as the machine starts, and use it to send itself \"WINDOW_GOT_FOCUS\"\n  // events.\n  if (typeof document !== \"undefined\") {\n    const doc = typeof document !== \"undefined\" ? document : undefined;\n    const win = typeof window !== \"undefined\" ? window : undefined;\n    const root = win ?? doc;\n\n    machine.onEnter(\"*\", (ctx) => {\n      function onNetworkOffline() {\n        machine.send({ type: \"NAVIGATOR_OFFLINE\" });\n      }\n\n      function onNetworkBackOnline() {\n        machine.send({ type: \"NAVIGATOR_ONLINE\" });\n      }\n\n      function onVisibilityChange() {\n        if (doc?.visibilityState === \"visible\") {\n          machine.send({ type: \"WINDOW_GOT_FOCUS\" });\n        }\n      }\n\n      win?.addEventListener(\"online\", onNetworkBackOnline);\n      win?.addEventListener(\"offline\", onNetworkOffline);\n      root?.addEventListener(\"visibilitychange\", onVisibilityChange);\n      return () => {\n        root?.removeEventListener(\"visibilitychange\", onVisibilityChange);\n        win?.removeEventListener(\"online\", onNetworkBackOnline);\n        win?.removeEventListener(\"offline\", onNetworkOffline);\n\n        // Also tear down the old socket when stopping the machine, if there is one\n        teardownSocket(ctx.socket);\n      };\n    });\n  }\n\n  const cleanups = [];\n\n  const { statusDidChange, didConnect, didDisconnect, unsubscribe } =\n    defineConnectivityEvents(machine);\n  cleanups.push(unsubscribe);\n\n  // Install debug logging\n  // istanbul ignore next\n  if (options.enableDebugLogging) {\n    cleanups.push(enableTracing(machine));\n  }\n\n  // Start the machine\n  machine.start();\n\n  return {\n    machine,\n    cleanups,\n\n    // Observable events that will be emitted by this machine\n    events: {\n      statusDidChange,\n      didConnect,\n      didDisconnect,\n      onMessage: onMessage.observable,\n      onLiveblocksError: onLiveblocksError.observable,\n    },\n  };\n}\n\n/**\n * The ManagedSocket will set up a WebSocket connection to a room, and maintain\n * that connection over time.\n *\n * It's a light wrapper around the actual FSM that implements the logic,\n * exposing just a few safe actions and events that can be called or observed\n * from the outside.\n */\nexport class ManagedSocket<T extends BaseAuthResult> {\n  /** @internal */\n  private machine: FSM<Context, Event, State>;\n  private cleanups: (() => void)[];\n\n  public readonly events: {\n    /**\n     * Emitted when the WebSocket connection goes in or out of \"connected\"\n     * state.\n     */\n    readonly statusDidChange: Observable<Status>;\n    /**\n     * Emitted when the WebSocket connection is first opened.\n     */\n    readonly didConnect: Observable<void>;\n    /**\n     * Emitted when the current WebSocket connection is lost and the socket\n     * becomes useless. A new WebSocket connection must be made after this to\n     * restore connectivity.\n     */\n    readonly didDisconnect: Observable<void>; // Deliberate close, a connection loss, etc.\n\n    /**\n     * Emitted for every incoming message from the currently active WebSocket\n     * connection.\n     */\n    readonly onMessage: Observable<IWebSocketMessageEvent>;\n\n    /**\n     * Emitted whenever a connection gets closed for a known error reason, e.g.\n     * max number of connections, max number of messages, etc.\n     */\n    readonly onLiveblocksError: Observable<LiveblocksError>;\n  };\n\n  constructor(\n    delegates: Delegates<T>,\n    enableDebugLogging: boolean = false,\n    waitForActorId: boolean = true\n  ) {\n    const { machine, events, cleanups } = createConnectionStateMachine(\n      delegates,\n      { waitForActorId, enableDebugLogging }\n    );\n    this.machine = machine;\n    this.events = events;\n    this.cleanups = cleanups;\n  }\n\n  getLegacyStatus(): LegacyConnectionStatus {\n    return newToLegacyStatus(this.getStatus());\n  }\n\n  getStatus(): Status {\n    try {\n      return toNewConnectionStatus(this.machine);\n    } catch {\n      return \"initial\";\n    }\n  }\n\n  /**\n   * Returns the current auth authValue.\n   */\n  get authValue(): T | null {\n    return this.machine.context.authValue as T | null;\n  }\n\n  /**\n   * Call this method to try to connect to a WebSocket. This only has an effect\n   * if the machine is idle at the moment, otherwise this is a no-op.\n   */\n  public connect(): void {\n    this.machine.send({ type: \"CONNECT\" });\n  }\n\n  /**\n   * If idle, will try to connect. Otherwise, it will attempt to reconnect to\n   * the socket, potentially obtaining a new authValue first, if needed.\n   */\n  public reconnect(): void {\n    this.machine.send({ type: \"RECONNECT\" });\n  }\n\n  /**\n   * Call this method to disconnect from the current WebSocket. Is going to be\n   * a no-op if there is no active connection.\n   */\n  public disconnect(): void {\n    this.machine.send({ type: \"DISCONNECT\" });\n  }\n\n  /**\n   * Call this to stop the machine and run necessary cleanup functions. After\n   * calling destroy(), you can no longer use this instance. Call this before\n   * letting the instance get garbage collected.\n   */\n  public destroy(): void {\n    this.machine.stop();\n\n    let cleanup: (() => void) | undefined;\n    while ((cleanup = this.cleanups.pop())) {\n      cleanup();\n    }\n  }\n\n  /**\n   * Safely send a message to the current WebSocket connection. Will emit a log\n   * message if this is somehow impossible.\n   */\n  public send(data: string): void {\n    const socket = this.machine.context?.socket;\n    if (socket === null) {\n      console.warn(\"Cannot send: not connected yet\", data);\n    } else if (socket.readyState !== 1 /* WebSocket.OPEN */) {\n      console.warn(\"Cannot send: WebSocket no longer open\", data);\n    } else {\n      socket.send(data);\n    }\n  }\n\n  /**\n   * NOTE: Used by the E2E app only, to simulate explicit events.\n   * Not ideal to keep exposed :(\n   */\n  public _privateSendMachineEvent(event: Event): void {\n    this.machine.send(event);\n  }\n}\n", "import type { Json } from \"../lib/Json\";\nimport { b64decode, isPlainObject, tryParseJson } from \"../lib/utils\";\nimport type { IUserInfo } from \"./BaseUserMeta\";\n\nexport enum Permission {\n  Read = \"room:read\",\n  Write = \"room:write\",\n  PresenceWrite = \"room:presence:write\",\n  CommentsWrite = \"comments:write\",\n  CommentsRead = \"comments:read\",\n}\n\nexport type LiveblocksPermissions = Record<string, Permission[]>;\n\nexport enum TokenKind {\n  SECRET_LEGACY = \"sec-legacy\",\n  ACCESS_TOKEN = \"acc\",\n  ID_TOKEN = \"id\",\n}\n\n/**\n * Infers from the given scopes whether the user can write the document (e.g.\n * Storage and/or YDoc).\n */\nexport function canWriteStorage(scopes: readonly string[]): boolean {\n  return scopes.includes(Permission.Write);\n}\n\nexport function canComment(scopes: readonly string[]): boolean {\n  return (\n    scopes.includes(Permission.CommentsWrite) ||\n    scopes.includes(Permission.Write)\n  );\n}\n\ntype JwtMeta = {\n  iat: number;\n  exp: number;\n};\n\n/**\n * Legacy Secret Token.\n */\nexport type LegacySecretToken = {\n  k: TokenKind.SECRET_LEGACY;\n  roomId: string;\n  scopes: string[];\n\n  // Extra payload as defined by the customer's own authorization\n  id?: string;\n  info?: IUserInfo;\n\n  // IMPORTANT: All other fields on the JWT token are deliberately treated as\n  // opaque, and not relied on by the client.\n  [other: string]: Json | undefined;\n} & JwtMeta;\n\n/**\n * New authorization Access Token.\n */\nexport type AccessToken = {\n  k: TokenKind.ACCESS_TOKEN;\n  pid: string; // project id\n  uid: string; // user id\n  perms: LiveblocksPermissions; // permissions\n  ui?: IUserInfo; // user info\n} & JwtMeta;\n\n/**\n * New authorization ID Token.\n */\nexport type IDToken = {\n  k: TokenKind.ID_TOKEN;\n  pid: string; // project id\n  uid: string; // user id\n  gids?: string[]; // group ids\n  ui?: IUserInfo; // user info\n} & JwtMeta;\n\nexport type AuthToken = AccessToken | IDToken | LegacySecretToken;\n\n// The \"rich\" token is data we obtain by parsing the JWT token and making all\n// metadata on it accessible. It's done right after hitting the backend, but\n// before the promise will get returned, so it's an inherent part of the\n// authentication step.\nexport type ParsedAuthToken = {\n  readonly raw: string; // The raw JWT value, unchanged\n  readonly parsed: AuthToken; // Rich data on the JWT value\n};\n\nfunction isValidAuthTokenPayload(\n  data: Json\n): data is AccessToken | IDToken | LegacySecretToken {\n  return (\n    isPlainObject(data) &&\n    (data.k === TokenKind.ACCESS_TOKEN ||\n      data.k === TokenKind.ID_TOKEN ||\n      data.k === TokenKind.SECRET_LEGACY)\n  );\n}\n\n/**\n * Parses a raw JWT token string, which allows reading the metadata/payload of\n * the token.\n *\n * NOTE: Doesn't do any validation, so always treat the metadata as other user\n * input: never trust these values for anything important.\n */\nexport function parseAuthToken(rawTokenString: string): ParsedAuthToken {\n  const tokenParts = rawTokenString.split(\".\");\n  if (tokenParts.length !== 3) {\n    throw new Error(\"Authentication error: invalid JWT token\");\n  }\n\n  const payload = tryParseJson(b64decode(tokenParts[1]));\n  if (!(payload && isValidAuthTokenPayload(payload))) {\n    throw new Error(\n      \"Authentication error: expected a valid token but did not get one. Hint: if you are using a callback, ensure the room is passed when creating the token. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientCallback\"\n    );\n  }\n\n  return {\n    raw: rawTokenString,\n    parsed: payload,\n  };\n}\n", "import { StopRetrying } from \"./connection\";\nimport type { Json } from \"./lib/Json\";\nimport { isPlainObject } from \"./lib/utils\";\nimport type {\n  Authentication,\n  CustomAuthenticationResult,\n} from \"./protocol/Authentication\";\nimport type { ParsedAuthToken } from \"./protocol/AuthToken\";\nimport { parseAuthToken, Permission, TokenKind } from \"./protocol/AuthToken\";\nimport type { Polyfills } from \"./room\";\n\nexport type AuthValue =\n  | { type: \"secret\"; token: ParsedAuthToken }\n  | { type: \"public\"; publicApiKey: string };\n\nexport type RequestedScope = \"room:read\" | \"comments:read\";\n\nexport type AuthManager = {\n  reset(): void;\n  getAuthValue(requestOptions: {\n    requestedScope: RequestedScope;\n    roomId?: string;\n  }): Promise<AuthValue>;\n};\n\ntype AuthEndpoint =\n  | string\n  | ((room?: string) => Promise<CustomAuthenticationResult>);\n\nexport type AuthenticationOptions = {\n  polyfills?: Polyfills;\n} & (\n  | { publicApiKey: string; authEndpoint?: never }\n  | { publicApiKey?: never; authEndpoint: AuthEndpoint }\n);\n\nexport function createAuthManager(\n  authOptions: AuthenticationOptions\n): AuthManager {\n  const authentication = prepareAuthentication(authOptions);\n\n  const seenTokens: Set<string> = new Set();\n\n  const tokens: ParsedAuthToken[] = [];\n  const expiryTimes: number[] = []; // Supposed to always contain the same number of elements as `tokens`\n\n  const requestPromises = new Map<string, Promise<ParsedAuthToken>>();\n\n  function reset() {\n    seenTokens.clear();\n    tokens.length = 0;\n    expiryTimes.length = 0;\n    requestPromises.clear();\n  }\n\n  function hasCorrespondingScopes(\n    requestedScope: RequestedScope,\n    scopes: Permission[]\n  ) {\n    if (requestedScope === \"comments:read\") {\n      return (\n        scopes.includes(Permission.CommentsRead) ||\n        scopes.includes(Permission.CommentsWrite) ||\n        scopes.includes(Permission.Read) ||\n        scopes.includes(Permission.Write)\n      );\n    } else if (requestedScope === \"room:read\") {\n      return (\n        scopes.includes(Permission.Read) || scopes.includes(Permission.Write)\n      );\n    }\n\n    return false;\n  }\n\n  function getCachedToken(requestOptions: {\n    requestedScope: RequestedScope;\n    roomId?: string;\n  }): ParsedAuthToken | undefined {\n    const now = Math.ceil(Date.now() / 1000);\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const token = tokens[i];\n      const expiresAt = expiryTimes[i];\n\n      // If this token is expired, remove it from cache, as if it never existed\n      // in the first place\n      if (expiresAt <= now) {\n        tokens.splice(i, 1);\n        expiryTimes.splice(i, 1);\n        continue;\n      }\n\n      if (token.parsed.k === TokenKind.ID_TOKEN) {\n        // When ID token method is used, only one token per user should be used and cached at the same time.\n        return token;\n      } else if (token.parsed.k === TokenKind.ACCESS_TOKEN) {\n        // In this version, we accept access tokens with zero permission when issuing token for resources outside a room.\n        if (\n          !requestOptions.roomId &&\n          Object.entries(token.parsed.perms).length === 0\n        ) {\n          return token;\n        }\n\n        for (const [resource, scopes] of Object.entries(token.parsed.perms)) {\n          // If the requester didn't pass a roomId,\n          // it means they need the token to access the user's resources (inbox notifications for example).\n          // We return any access token that contains a wildcard for the requested scope.\n          if (!requestOptions.roomId) {\n            if (\n              resource.includes(\"*\") &&\n              hasCorrespondingScopes(requestOptions.requestedScope, scopes)\n            ) {\n              return token;\n            }\n          } else if (\n            (resource.includes(\"*\") &&\n              requestOptions.roomId.startsWith(resource.replace(\"*\", \"\"))) ||\n            (requestOptions.roomId === resource &&\n              hasCorrespondingScopes(requestOptions.requestedScope, scopes))\n          ) {\n            return token;\n          }\n        }\n      }\n    }\n\n    return undefined;\n  }\n\n  async function makeAuthRequest(options: {\n    requestedScope: RequestedScope;\n    roomId?: string;\n  }): Promise<ParsedAuthToken> {\n    const fetcher =\n      authOptions.polyfills?.fetch ??\n      (typeof window === \"undefined\" ? undefined : window.fetch);\n\n    if (authentication.type === \"private\") {\n      if (fetcher === undefined) {\n        throw new StopRetrying(\n          \"To use Liveblocks client in a non-DOM environment with a url as auth endpoint, you need to provide a fetch polyfill.\"\n        );\n      }\n\n      const response = await fetchAuthEndpoint(fetcher, authentication.url, {\n        room: options.roomId,\n      });\n      const parsed = parseAuthToken(response.token);\n\n      verifyTokenPermissions(parsed, options);\n\n      if (seenTokens.has(parsed.raw)) {\n        throw new StopRetrying(\n          \"The same Liveblocks auth token was issued from the backend before. Caching Liveblocks tokens is not supported.\"\n        );\n      }\n\n      return parsed;\n    }\n\n    if (authentication.type === \"custom\") {\n      const response = await authentication.callback(options.roomId);\n      if (response && typeof response === \"object\") {\n        if (typeof response.token === \"string\") {\n          const parsed = parseAuthToken(response.token);\n          verifyTokenPermissions(parsed, options);\n          return parsed;\n        } else if (typeof response.error === \"string\") {\n          const reason = `Authentication failed: ${\n            \"reason\" in response && typeof response.reason === \"string\"\n              ? response.reason\n              : \"Forbidden\"\n          }`;\n\n          // istanbul ignore else\n          if (response.error === \"forbidden\") {\n            throw new StopRetrying(reason);\n          } else {\n            throw new Error(reason);\n          }\n        }\n      }\n\n      throw new Error(\n        'Your authentication callback function should return a token, but it did not. Hint: the return value should look like: { token: \"...\" }'\n      );\n    }\n\n    // istanbul ignore next\n    throw new Error(\n      \"Unexpected authentication type. Must be private or custom.\"\n    );\n  }\n\n  /**\n   * Throw an error and stops retrying if the issued token doesn't have enough\n   * permissions for the requested usage.\n   */\n  function verifyTokenPermissions(\n    parsedToken: ParsedAuthToken,\n    options: {\n      requestedScope: RequestedScope;\n      roomId?: string;\n    }\n  ) {\n    // If the requester didn't pass a roomId,\n    // it means they need the token to access the user's resources (inbox notifications for example).\n    // If the token is access token, it needs to have a wildcard permission (or to have zero permission).\n    if (!options.roomId && parsedToken.parsed.k === TokenKind.ACCESS_TOKEN) {\n      // In this version, we accept access tokens with zero permission when issuing token for resources outside a room.\n      if (Object.entries(parsedToken.parsed.perms).length === 0) {\n        return;\n      }\n      for (const [resource, scopes] of Object.entries(\n        parsedToken.parsed.perms\n      )) {\n        if (\n          resource.includes(\"*\") &&\n          hasCorrespondingScopes(options.requestedScope, scopes)\n        ) {\n          return;\n        }\n      }\n      throw new StopRetrying(\n        \"The issued access token doesn't grant enough permissions. Please follow the instructions at https://liveblocks.io/docs/errors/liveblocks-client/access-tokens-not-enough-permissions\"\n      );\n    }\n  }\n\n  async function getAuthValue(requestOptions: {\n    requestedScope: RequestedScope;\n    roomId?: string;\n  }): Promise<AuthValue> {\n    if (authentication.type === \"public\") {\n      return { type: \"public\", publicApiKey: authentication.publicApiKey };\n    }\n\n    const cachedToken = getCachedToken(requestOptions);\n    if (cachedToken !== undefined) {\n      return { type: \"secret\", token: cachedToken };\n    }\n\n    let currentPromise;\n    if (requestOptions.roomId) {\n      currentPromise = requestPromises.get(requestOptions.roomId);\n      if (currentPromise === undefined) {\n        currentPromise = makeAuthRequest(requestOptions);\n        requestPromises.set(requestOptions.roomId, currentPromise);\n      }\n    } else {\n      currentPromise = requestPromises.get(\"liveblocks-user-token\");\n      if (currentPromise === undefined) {\n        currentPromise = makeAuthRequest(requestOptions);\n        requestPromises.set(\"liveblocks-user-token\", currentPromise);\n      }\n    }\n\n    try {\n      const token = await currentPromise;\n      // Translate \"server timestamps\" to \"local timestamps\" in case clocks aren't in sync\n      const BUFFER = 30; // Expire tokens 30 seconds sooner than they have to\n      const expiresAt =\n        Math.floor(Date.now() / 1000) +\n        (token.parsed.exp - token.parsed.iat) -\n        BUFFER;\n\n      seenTokens.add(token.raw);\n\n      // Legacy tokens should not get cached\n      if (token.parsed.k !== TokenKind.SECRET_LEGACY) {\n        tokens.push(token);\n        expiryTimes.push(expiresAt);\n      }\n\n      return { type: \"secret\", token };\n    } finally {\n      if (requestOptions.roomId) {\n        requestPromises.delete(requestOptions.roomId);\n      } else {\n        requestPromises.delete(\"liveblocks-user-token\");\n      }\n    }\n  }\n\n  return {\n    reset,\n    getAuthValue,\n  };\n}\n\nfunction prepareAuthentication(\n  authOptions: AuthenticationOptions\n): Authentication {\n  const { publicApiKey, authEndpoint } = authOptions;\n\n  if (authEndpoint !== undefined && publicApiKey !== undefined) {\n    throw new Error(\n      \"You cannot simultaneously use `publicApiKey` and `authEndpoint` options. Please pick one and leave the other option unspecified. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClient\"\n    );\n  }\n\n  if (typeof publicApiKey === \"string\") {\n    if (publicApiKey.startsWith(\"sk_\")) {\n      throw new Error(\n        \"Invalid `publicApiKey` option. The value you passed is a secret key, which should not be used from the client. Please only ever pass a public key here. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientPublicKey\"\n      );\n    } else if (!publicApiKey.startsWith(\"pk_\")) {\n      throw new Error(\n        \"Invalid key. Please use the public key format: pk_<public key>. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientPublicKey\"\n      );\n    }\n    return {\n      type: \"public\",\n      publicApiKey,\n    };\n  }\n\n  if (typeof authEndpoint === \"string\") {\n    return {\n      type: \"private\",\n      url: authEndpoint,\n    };\n  } else if (typeof authEndpoint === \"function\") {\n    return {\n      type: \"custom\",\n      callback: authEndpoint,\n    };\n  } else if (authEndpoint !== undefined) {\n    throw new Error(\n      \"The `authEndpoint` option must be a string or a function. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientAuthEndpoint\"\n    );\n  }\n\n  throw new Error(\n    \"Invalid Liveblocks client options. Please provide either a `publicApiKey` or `authEndpoint` option. They cannot both be empty. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClient\"\n  );\n}\n\nasync function fetchAuthEndpoint(\n  fetch: typeof window.fetch,\n  endpoint: string,\n  body: {\n    room?: string;\n  }\n): Promise<{ token: string }> {\n  const res = await fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n  if (!res.ok) {\n    const reason = `${\n      (await res.text()).trim() || \"reason not provided in auth response\"\n    } (${res.status} returned by POST ${endpoint})`;\n\n    if (res.status === 401 || res.status === 403) {\n      // Throw a special error instance, which the connection manager will\n      // recognize and understand that retrying will have no effect\n      throw new StopRetrying(`Unauthorized: ${reason}`);\n    } else {\n      throw new Error(`Failed to authenticate: ${reason}`);\n    }\n  }\n\n  let data: Json;\n  try {\n    data = await (res.json() as Promise<Json>);\n  } catch (er) {\n    throw new Error(\n      `Expected a JSON response when doing a POST request on \"${endpoint}\". ${String(\n        er\n      )}`\n    );\n  }\n\n  if (!isPlainObject(data) || typeof data.token !== \"string\") {\n    throw new Error(\n      `Expected a JSON response of the form \\`{ token: \"...\" }\\` when doing a POST request on \"${endpoint}\", but got ${JSON.stringify(\n        data\n      )}`\n    );\n  }\n  const { token } = data;\n  return { token };\n}\n", "export const DEFAULT_BASE_URL = \"https://api.liveblocks.io\";\n", "/**\n * Use this symbol to brand an object property as internal.\n *\n * @example\n * Object.defineProperty(\n *   {\n *     public,\n *     [kInternal]: {\n *       private\n *     },\n *   },\n *   kInternal,\n *   {\n *     enumerable: false,\n *   }\n * );\n */\nexport const kInternal = Symbol();\n", "import { makeEventSource } from \"../lib/EventSource\";\nimport type * as DevTools from \"./protocol\";\n\ntype SendToPanelOptions = {\n  /**\n   * We'll only want to send messages from the client to the panel if the panel\n   * has shown interest in this. To allow message passing to the dev panel,\n   * call allowMessagePassing().\n   */\n  force: boolean;\n};\n\nlet _bridgeActive = false;\nexport function activateBridge(allowed: boolean): void {\n  _bridgeActive = allowed;\n}\n\nexport function sendToPanel(\n  message: DevTools.ClientToPanelMessage,\n  options?: SendToPanelOptions\n): void {\n  // DevTools communication only happens on the client side\n  // Define it as a no-op in production environments or when run outside of a browser context\n  if (process.env.NODE_ENV === \"production\" || typeof window === \"undefined\") {\n    return;\n  }\n\n  const fullMsg = {\n    ...message,\n    source: \"liveblocks-devtools-client\",\n  };\n\n  if (!(options?.force || _bridgeActive)) {\n    /*\n    // eslint-disable-next-line rulesdir/console-must-be-fancy\n    console.log(\n      \"%c[client → panel] %c%s\",\n      \"color: green\",\n      \"color: gray; font-weight: bold\",\n      fullMsg.msg,\n      \"[🚫 NOT sent!]\"\n    );\n    */\n    return;\n  }\n  /*\n  // eslint-disable-next-line rulesdir/console-must-be-fancy\n  console.log(\n    \"%c[client → panel] %c%s\",\n    \"color: green\",\n    \"color: green; font-weight: bold\",\n    fullMsg.msg,\n    fullMsg\n  );*/\n  window.postMessage(fullMsg, \"*\");\n}\n\nconst eventSource = makeEventSource<DevTools.FullPanelToClientMessage>();\n\n// Define it as a no-op in production environments or when run outside of a browser context\nif (process.env.NODE_ENV !== \"production\" && typeof window !== \"undefined\") {\n  window.addEventListener(\"message\", (event: MessageEvent<unknown>) => {\n    if (\n      event.source === window &&\n      (event.data as Record<string, unknown>)?.source ===\n        \"liveblocks-devtools-panel\"\n    ) {\n      // console.log(\n      //   \"%c[client ← panel] %c%s\",\n      //   \"color: purple\",\n      //   \"color: purple; font-weight: bold\",\n      //   (event.data as Record<string, unknown>).msg,\n      //   event.data\n      // );\n      eventSource.notify(event.data as DevTools.FullPanelToClientMessage);\n    } else {\n      // Message not for us\n    }\n  });\n}\n\nexport const onMessageFromPanel = eventSource.observable;\n", "import type { LsonObject } from \"../crdts/Lson\";\nimport { kInternal } from \"../internal\";\nimport type { Json, JsonObject } from \"../lib/Json\";\nimport type { BaseUserMeta } from \"../protocol/BaseUserMeta\";\nimport type { UpdateYDocClientMsg } from \"../protocol/ClientMsg\";\nimport type { YDocUpdateServerMsg } from \"../protocol/ServerMsg\";\nimport type { Room, RoomEventMessage } from \"../room\";\nimport { PKG_VERSION } from \"../version\";\nimport { activateBridge, onMessageFromPanel, sendToPanel } from \"./bridge\";\n\nconst VERSION = PKG_VERSION || \"dev\";\nlet _devtoolsSetupHasRun = false;\n\n/**\n * Sends a wake up message to the devtools panel, if any such panel exists, and\n * listens for the initial connect message, which would be the trigger to start\n * emitting updates.\n *\n * Must be called before linkDevTools() can be used.\n *\n * Will only run once, even when called multiple times.\n */\nexport function setupDevTools(getAllRooms: () => string[]): void {\n  // Define it as a no-op in production environments or when run outside of a browser context\n  if (process.env.NODE_ENV === \"production\" || typeof window === \"undefined\") {\n    return;\n  }\n\n  if (_devtoolsSetupHasRun) {\n    // This setup code should only happen the first time\n    return;\n  }\n\n  _devtoolsSetupHasRun = true;\n\n  onMessageFromPanel.subscribe((msg) => {\n    switch (msg.msg) {\n      // When a devtool panel sends an explicit \"connect\" message back to this\n      // live running client (in response to the \"wake-up-devtools\" message,\n      // or when the devtool panel is opened for the first time), it means that it's okay to\n      // start emitting messages.\n      // Before this explicit acknowledgement, any call to sendToPanel() will\n      // be a no-op.\n      case \"connect\": {\n        // Allows future sendToPanel() messages to go through\n        activateBridge(true);\n\n        // Emit an explicit \"room::available\" message for every known room at\n        // this point. These can be used by the devpanel to subscribe to such\n        // room's updates.\n        for (const roomId of getAllRooms()) {\n          sendToPanel({\n            msg: \"room::available\",\n            roomId,\n            clientVersion: VERSION,\n          });\n        }\n\n        break;\n      }\n\n      // TODO: Later on, we can support explicit disconnects, too\n      // case \"disconnect\": {\n      //   // Make sendToPanel() no-ops again\n      //   activateBridge(false);\n      //   break;\n      // }\n    }\n  });\n\n  // Send initial wake up message, in case the devtool panel is already open!\n  sendToPanel({ msg: \"wake-up-devtools\" }, { force: true });\n}\n\nconst unsubsByRoomId = new Map<string, (() => void)[]>();\n\nfunction stopSyncStream(roomId: string): void {\n  const unsubs = unsubsByRoomId.get(roomId) ?? [];\n  unsubsByRoomId.delete(roomId); // Pop it off\n\n  for (const unsub of unsubs) {\n    // Cancel all of the subscriptions to room updates that are synchronizing\n    // partial state to the devtools panel\n    unsub();\n  }\n}\n\n/**\n * Starts, or restarts, the stream of sync messages for the given room. A sync\n * stream consists of an initial \"full sync\" message, followed by many\n * \"partial\" messages that happen whenever part of the room changes.\n */\nfunction startSyncStream(\n  room: Room<JsonObject, LsonObject, BaseUserMeta, Json>\n): void {\n  stopSyncStream(room.id);\n\n  // Sync the room ID instantly, as soon as we know it\n  fullSync(room);\n\n  unsubsByRoomId.set(room.id, [\n    // When the connection status changes\n    room.events.status.subscribe(() => partialSyncConnection(room)),\n\n    // When storage initializes, send the update\n    room.events.storageDidLoad.subscribeOnce(() => partialSyncStorage(room)),\n\n    // Any time storage updates, send the new storage root\n    room.events.storage.subscribe(() => partialSyncStorage(room)),\n\n    // Any time \"me\" or \"others\" updates, send the new values accordingly\n    room.events.self.subscribe(() => partialSyncMe(room)),\n    room.events.others.subscribe(() => partialSyncOthers(room)),\n\n    // Any time ydoc is updated, forward the update\n    room.events.ydoc.subscribe((update) => syncYdocUpdate(room, update)),\n\n    // Any time a custom room event is received, forward it\n    room.events.customEvent.subscribe((eventData) =>\n      forwardEvent(room, eventData)\n    ),\n  ]);\n}\n\nfunction syncYdocUpdate(\n  room: Room<JsonObject, LsonObject, BaseUserMeta, Json>,\n  update: YDocUpdateServerMsg | UpdateYDocClientMsg\n) {\n  sendToPanel({\n    msg: \"room::sync::ydoc\",\n    roomId: room.id,\n    update,\n  });\n}\n\nconst loadedAt = Date.now();\nlet eventCounter = 0;\n\nfunction nextEventId() {\n  return `event-${loadedAt}-${eventCounter++}`;\n}\n\nfunction forwardEvent(\n  room: Room<JsonObject, LsonObject, BaseUserMeta, Json>,\n  eventData: RoomEventMessage<JsonObject, BaseUserMeta, Json>\n) {\n  sendToPanel({\n    msg: \"room::events::custom-event\",\n    roomId: room.id,\n    event: {\n      type: \"CustomEvent\",\n      id: nextEventId(),\n      key: \"Event\",\n      connectionId: eventData.connectionId,\n      payload: eventData.event,\n    },\n  });\n}\n\nfunction partialSyncConnection(\n  room: Room<JsonObject, LsonObject, BaseUserMeta, Json>\n) {\n  sendToPanel({\n    msg: \"room::sync::partial\",\n    roomId: room.id,\n    status: room.getStatus(),\n  });\n}\n\nfunction partialSyncStorage(\n  room: Room<JsonObject, LsonObject, BaseUserMeta, Json>\n) {\n  const root = room.getStorageSnapshot();\n  if (root) {\n    sendToPanel({\n      msg: \"room::sync::partial\",\n      roomId: room.id,\n      storage: root.toTreeNode(\"root\").payload,\n    });\n  }\n}\n\nfunction partialSyncMe(room: Room<JsonObject, LsonObject, BaseUserMeta, Json>) {\n  const me = room[kInternal].getSelf_forDevTools();\n  if (me) {\n    sendToPanel({\n      msg: \"room::sync::partial\",\n      roomId: room.id,\n      me,\n    });\n  }\n}\n\nfunction partialSyncOthers(\n  room: Room<JsonObject, LsonObject, BaseUserMeta, Json>\n) {\n  // Any time others updates, send the new storage root to the dev panel\n  const others = room[kInternal].getOthers_forDevTools();\n  if (others) {\n    sendToPanel({\n      msg: \"room::sync::partial\",\n      roomId: room.id,\n      others,\n    });\n  }\n}\n\nfunction fullSync(room: Room<JsonObject, LsonObject, BaseUserMeta, Json>) {\n  const root = room.getStorageSnapshot();\n  const me = room[kInternal].getSelf_forDevTools();\n  const others = room[kInternal].getOthers_forDevTools();\n  // Because the room doesn't have access to the YJS doc, we must tell it to go get the full doc\n  // sending an empty vector will return the whole document and then devtools will be up to date\n  room.fetchYDoc(\"\");\n  sendToPanel({\n    msg: \"room::sync::full\",\n    roomId: room.id,\n    status: room.getStatus(),\n    storage: root?.toTreeNode(\"root\").payload ?? null,\n    me,\n    others,\n  });\n}\n\n// Currently registered \"channel\" listeners, waiting for \"room::subscribe\" or\n// \"room::unsubscribe\" messages coming from the devtools panel\nconst roomChannelListeners = new Map<string, () => void>();\n\nfunction stopRoomChannelListener(roomId: string) {\n  const listener = roomChannelListeners.get(roomId);\n  roomChannelListeners.delete(roomId);\n  if (listener) {\n    listener();\n  }\n}\n\n/**\n * Publicly announce to the devtool panel that a new room is available.\n */\nexport function linkDevTools(\n  roomId: string,\n  room: Room<JsonObject, LsonObject, BaseUserMeta, Json>\n): void {\n  // Define it as a no-op in production environments or when run outside of a browser context\n  if (process.env.NODE_ENV === \"production\" || typeof window === \"undefined\") {\n    return;\n  }\n  sendToPanel({ msg: \"room::available\", roomId, clientVersion: VERSION });\n\n  // Before adding a new listener, stop all active listeners, so there is only\n  // ever going to be one listener per room \"channel\"\n  stopRoomChannelListener(roomId);\n  roomChannelListeners.set(\n    roomId,\n\n    // Returns the unsubscribe callback, that we store in the\n    // roomChannelListeners registry\n    onMessageFromPanel.subscribe((msg) => {\n      switch (msg.msg) {\n        // Sent by the devtool panel when it wants to receive the sync stream\n        // for a room\n        case \"room::subscribe\": {\n          // Only act on this message if it's intended for this room\n          if (msg.roomId === roomId) {\n            startSyncStream(room);\n          }\n          break;\n        }\n\n        case \"room::unsubscribe\": {\n          // Only act on this message if it's intended for this room\n          if (msg.roomId === roomId) {\n            stopSyncStream(roomId);\n          }\n          break;\n        }\n      }\n    })\n  );\n}\n\nexport function unlinkDevTools(roomId: string): void {\n  // Define it as a no-op in production environments or when run outside of a browser context\n  if (process.env.NODE_ENV === \"production\" || typeof window === \"undefined\") {\n    return;\n  }\n\n  // Immediately stop the sync stream of room updates to the dev panel\n  stopSyncStream(roomId);\n\n  stopRoomChannelListener(roomId);\n\n  // Inform dev panel that this room is no longer available\n  sendToPanel({\n    msg: \"room::unavailable\",\n    roomId,\n  });\n}\n", "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\n\ntype OmitFirstTupleElement<T extends any[]> = T extends [any, ...infer R]\n  ? R\n  : never;\n\nexport function stringify(\n  object: Parameters<typeof JSON.stringify>[0],\n  ...args: OmitFirstTupleElement<Parameters<typeof JSON.stringify>>\n): string {\n  if (typeof object !== \"object\" || object === null || Array.isArray(object)) {\n    return JSON.stringify(object, ...args);\n  }\n\n  const sortedObject = Object.keys(object)\n    .sort()\n    .reduce(\n      (sortedObject, key) => {\n        sortedObject[key] = object[key];\n\n        return sortedObject;\n      },\n      {} as Record<string, any>\n    );\n\n  return JSON.stringify(sortedObject, ...args);\n}\n", "import type { EventSource } from \"./EventSource\";\nimport { makeEventSource } from \"./EventSource\";\nimport { stringify } from \"./stringify\";\n\nconst DEFAULT_SIZE = 50;\nconst DEFAULT_DELAY = 100;\n\ntype Resolve<T> = (value: T | Promise<T>) => void;\n\ntype Reject = (reason?: unknown) => void;\n\nexport type BatchCallback<T, A extends unknown[]> = (\n  args: A[]\n) => (T | Error)[] | Promise<(T | Error)[]>;\n\nexport type BatchStoreStateLoading = {\n  isLoading: true;\n  data?: never;\n  error?: never;\n};\n\nexport type BatchStoreStateError = {\n  isLoading: false;\n  data?: never;\n  error: Error;\n};\n\nexport type BatchStoreStateSuccess<T> = {\n  isLoading: false;\n  data: T;\n  error?: never;\n};\n\nexport type BatchStoreState<T> =\n  | BatchStoreStateLoading\n  | BatchStoreStateError\n  | BatchStoreStateSuccess<T>;\n\nexport type BatchStore<T, A extends unknown[]> = EventSource<\n  BatchStoreState<T> | undefined\n> & {\n  get: (...args: A) => Promise<void>;\n  getState: (...args: A) => BatchStoreState<T> | undefined;\n};\n\ninterface Options {\n  /**\n   * How many calls to batch together at most.\n   */\n  size?: number;\n\n  /**\n   * How long to wait before flushing the batch.\n   */\n  delay?: number;\n}\n\nconst noop = () => {};\n\nclass BatchCall<T, A extends unknown[]> {\n  readonly args: A;\n  resolve: Resolve<T> = noop;\n  reject: Reject = noop;\n  promise: Promise<T> = new Promise(noop);\n\n  constructor(args: A) {\n    this.args = args;\n  }\n}\n\n/**\n * Batch calls to a function, either by number of calls or by a maximum delay.\n */\nexport class Batch<T, A extends unknown[] = []> {\n  private queue: BatchCall<T, A>[] = [];\n  private callback: BatchCallback<T, A>;\n  private size: number;\n  private delay: number;\n  private delayTimeoutId?: ReturnType<typeof setTimeout>;\n  public error = false;\n\n  constructor(callback: BatchCallback<T, A>, options?: Options) {\n    this.callback = callback;\n    this.size = options?.size ?? DEFAULT_SIZE;\n    this.delay = options?.delay ?? DEFAULT_DELAY;\n  }\n\n  private clearDelayTimeout(): void {\n    if (this.delayTimeoutId !== undefined) {\n      clearTimeout(this.delayTimeoutId);\n      this.delayTimeoutId = undefined;\n    }\n  }\n\n  private schedule() {\n    if (this.queue.length === this.size) {\n      // If the queue is full, flush it immediately.\n      void this.flush();\n    } else if (this.queue.length === 1) {\n      // If the call is the first in the queue, schedule a flush.\n      this.clearDelayTimeout();\n      this.delayTimeoutId = setTimeout(() => void this.flush(), this.delay);\n    }\n  }\n\n  private async flush(): Promise<void> {\n    // If the queue is empty, don't call the callback.\n    if (this.queue.length === 0) {\n      return;\n    }\n\n    // Empty the queue and get its calls.\n    const calls = this.queue.splice(0);\n    const args = calls.map((call) => call.args);\n\n    try {\n      // Call the batch callback with the queued arguments.\n      const results = await this.callback(args);\n      this.error = false;\n\n      // Resolve or reject each call.\n      calls.forEach((call, index) => {\n        const result = results?.[index];\n\n        if (result instanceof Error) {\n          call.reject(result);\n        } else if (result !== undefined) {\n          call.resolve(result);\n        } else {\n          if (Array.isArray(results)) {\n            call.reject(\n              new Error(\n                `Batch callback must return an array of the same length as the number of calls in the batch. Expected ${calls.length}, but got ${results.length}.`\n              )\n            );\n          } else {\n            call.reject(new Error(\"Batch callback must return an array.\"));\n          }\n        }\n      });\n    } catch (error) {\n      this.error = true;\n\n      // Reject all calls if the whole batch errored or was rejected.\n      calls.forEach((call) => {\n        call.reject(error);\n      });\n    }\n  }\n\n  get(...args: A): Promise<T> {\n    // Check if there's already an identical call in the queue.\n    const existingCall = this.queue.find(\n      (call) => stringify(call.args) === stringify(args)\n    );\n\n    // If an existing call exists, return its promise.\n    if (existingCall) {\n      return existingCall.promise;\n    }\n\n    // If no existing call exists, add the call to the queue and schedule a flush.\n    const call = new BatchCall<T, A>(args);\n    call.promise = new Promise<T>((resolve, reject) => {\n      call.resolve = resolve;\n      call.reject = reject;\n    });\n    this.queue.push(call);\n    this.schedule();\n\n    return call.promise;\n  }\n\n  clear(): void {\n    this.queue = [];\n    this.error = false;\n    this.clearDelayTimeout();\n  }\n}\n\n/**\n * Create a store based on a batch callback.\n * Each call will be cached and get its own state in addition to being batched.\n */\nexport function createBatchStore<T, A extends unknown[]>(\n  callback: BatchCallback<T, A>,\n  options?: Options\n): BatchStore<T, A> {\n  const batch = new Batch(callback, options);\n  const cache = new Map<string, BatchStoreState<T>>();\n  const eventSource = makeEventSource<BatchStoreState<T> | undefined>();\n\n  function getCacheKey(args: A): string {\n    return stringify(args);\n  }\n\n  function setStateAndNotify(\n    cacheKey: string,\n    state: BatchStoreState<T> | undefined\n  ) {\n    // Set or delete the state.\n    if (state) {\n      cache.set(cacheKey, state);\n    } else {\n      cache.delete(cacheKey);\n    }\n\n    // Notify subscribers.\n    eventSource.notify(state);\n  }\n\n  async function get(...args: A) {\n    const cacheKey = getCacheKey(args);\n\n    // If this call already has a state, return early.\n    if (cache.has(cacheKey)) {\n      return;\n    }\n\n    try {\n      // Set the state to loading.\n      setStateAndNotify(cacheKey, { isLoading: true });\n\n      // Wait for the batch to process this call.\n      const result = await batch.get(...args);\n\n      // Set the state to the result.\n      setStateAndNotify(cacheKey, { isLoading: false, data: result });\n    } catch (error) {\n      // // TODO: Differentiate whole batch errors from individual errors.\n      // if (batch.error) {\n      //   // If the whole batch errored, clear the state.\n      //   // TODO: Keep track of retries and only clear the state a few times because it will be retried each time.\n      //   //       Also implement exponential backoff to delay retries to avoid hammering `resolveUsers`.\n      //   setStateAndNotify(cacheKey, undefined);\n      // } else {\n      //   // Otherwise, keep individual errors to avoid repeatedly loading the same error.\n      //   setStateAndNotify(cacheKey, {\n      //     isLoading: false,\n      //     error: error as Error,\n      //   });\n      // }\n\n      // If there was an error (for various reasons), set the state to the error.\n      setStateAndNotify(cacheKey, {\n        isLoading: false,\n        error: error as Error,\n      });\n    }\n  }\n\n  function getState(...args: A) {\n    const cacheKey = getCacheKey(args);\n\n    return cache.get(cacheKey);\n  }\n\n  return {\n    ...eventSource,\n    get,\n    getState,\n  };\n}\n", "export type Store<T> = {\n  get: () => T;\n  set: (callback: (currentState: T) => T) => void;\n  subscribe: (callback: (state: T) => void) => () => void;\n};\n\n/**\n * Create a store for an immutable state. Close to Zustand's vanilla store conceptually but with less features.\n */\nexport function createStore<T>(initialState: T): Store<T> {\n  let state = initialState;\n  const subscribers = new Set<(state: T) => void>();\n\n  /**\n   * Return the current state.\n   */\n  function get() {\n    return state;\n  }\n\n  /**\n   * Update the current state and notify all the subscribers of the update.\n   */\n  function set(callback: (currentState: T) => T) {\n    const newState = callback(state);\n    if (state === newState) {\n      return;\n    }\n\n    state = newState;\n\n    for (const subscriber of subscribers) {\n      subscriber(state);\n    }\n  }\n\n  /**\n   * Subscribe to any store updates.\n   *\n   * @returns A function to unsubscribe\n   */\n  function subscribe(callback: (state: T) => void): () => void {\n    subscribers.add(callback);\n\n    callback(state);\n\n    return () => {\n      subscribers.delete(callback);\n    };\n  }\n\n  return {\n    get,\n    set,\n    subscribe,\n  };\n}\n", "import * as console from \"./fancy-console\";\n\n/**\n * Tools to help with the controlled deprecation of public APIs.\n *\n * First warn, then error, then remove eventually.\n */\n\n// Keeps a set of deprecation messages in memory that it has warned about\n// already. There will be only one deprecation message in the console, no\n// matter how often it gets called.\nconst _emittedDeprecationWarnings: Set<string> = new Set();\n\n/**\n * Displays a deprecation warning in the dev console. Only in dev mode, and\n * only once per message/key. In production, this is a no-op.\n */\n// istanbul ignore next\nexport function deprecate(message: string, key = message): void {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!_emittedDeprecationWarnings.has(key)) {\n      _emittedDeprecationWarnings.add(key);\n      console.errorWithTitle(\"Deprecation warning\", message);\n    }\n  }\n}\n\n/**\n * Conditionally displays a deprecation warning in the dev\n * console if the first argument is truthy. Only in dev mode, and\n * only once per message/key. In production, this is a no-op.\n */\n// istanbul ignore next\nexport function deprecateIf(\n  condition: unknown,\n  message: string,\n  key = message\n): void {\n  if (process.env.NODE_ENV !== \"production\") {\n    // istanbul ignore if\n    if (condition) {\n      deprecate(message, key);\n    }\n  }\n}\n\n/**\n * Throws a deprecation error in the dev console.\n *\n * Only triggers in dev mode. In production, this is a no-op.\n */\n// istanbul ignore next\nexport function throwUsageError(message: string): void {\n  if (process.env.NODE_ENV !== \"production\") {\n    const usageError = new Error(message);\n    usageError.name = \"Usage error\";\n    console.errorWithTitle(\"Usage error\", message);\n    throw usageError;\n  }\n}\n\n/**\n * Conditionally throws a usage error in the dev console if the first argument\n * is truthy. Use this to \"escalate\" usage patterns that in previous versions\n * we already warned about with deprecation warnings.\n *\n * Only has effect in dev mode. In production, this is a no-op.\n */\n// istanbul ignore next\nexport function errorIf(condition: unknown, message: string): void {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (condition) {\n      throwUsageError(message);\n    }\n  }\n}\n", "import type { BaseMetadata } from \"./types/BaseMetadata\";\nimport type { CommentData, CommentDataPlain } from \"./types/CommentData\";\nimport type {\n  CommentUserReaction,\n  CommentUserReactionPlain,\n} from \"./types/CommentReaction\";\nimport type {\n  InboxNotificationData,\n  InboxNotificationDataPlain,\n} from \"./types/InboxNotificationData\";\nimport type {\n  InboxNotificationDeleteInfo,\n  InboxNotificationDeleteInfoPlain,\n} from \"./types/InboxNotificationDeleteInfo\";\nimport type { ThreadData, ThreadDataPlain } from \"./types/ThreadData\";\nimport type {\n  ThreadDeleteInfo,\n  ThreadDeleteInfoPlain,\n} from \"./types/ThreadDeleteInfo\";\n\n/**\n * Converts a plain comment data object (usually returned by the API) to a comment data object that can be used by the client.\n * This is necessary because the plain data object stores dates as ISO strings, but the client expects them as Date objects.\n * @param data The plain comment data object (usually returned by the API)\n * @returns The rich comment data object that can be used by the client.\n */\nexport function convertToCommentData(data: CommentDataPlain): CommentData {\n  const editedAt = data.editedAt ? new Date(data.editedAt) : undefined;\n  const createdAt = new Date(data.createdAt);\n  const reactions = data.reactions.map((reaction) => ({\n    ...reaction,\n    createdAt: new Date(reaction.createdAt),\n  }));\n\n  if (data.body) {\n    return {\n      ...data,\n      reactions,\n      createdAt,\n      editedAt,\n    };\n  } else {\n    const deletedAt = new Date(data.deletedAt);\n    return {\n      ...data,\n      reactions,\n      createdAt,\n      editedAt,\n      deletedAt,\n    };\n  }\n}\n\n/**\n * Converts a plain thread data object (usually returned by the API) to a thread data object that can be used by the client.\n * This is necessary because the plain data object stores dates as ISO strings, but the client expects them as Date objects.\n * @param data The plain thread data object (usually returned by the API)\n * @returns The rich thread data object that can be used by the client.\n */\nexport function convertToThreadData<\n  TThreadMetadata extends BaseMetadata = never,\n>(data: ThreadDataPlain<TThreadMetadata>): ThreadData<TThreadMetadata> {\n  const updatedAt = data.updatedAt ? new Date(data.updatedAt) : undefined;\n  const createdAt = new Date(data.createdAt);\n\n  const comments = data.comments.map((comment) =>\n    convertToCommentData(comment)\n  );\n\n  return {\n    ...data,\n    createdAt,\n    updatedAt,\n    comments,\n  };\n}\n\n/**\n * Converts a plain comment reaction object (usually returned by the API) to a comment reaction object that can be used by the client.\n * This is necessary because the plain data object stores dates as ISO strings, but the client expects them as Date objects.\n * @param data The plain comment reaction object (usually returned by the API)\n * @returns The rich comment reaction object that can be used by the client.\n */\nexport function convertToCommentUserReaction(\n  data: CommentUserReactionPlain\n): CommentUserReaction {\n  return {\n    ...data,\n    createdAt: new Date(data.createdAt),\n  };\n}\n\n/**\n * Converts a plain inbox notification data object (usually returned by the API) to an inbox notification data object that can be used by the client.\n * This is necessary because the plain data object stores dates as ISO strings, but the client expects them as Date objects.\n * @param data The plain inbox notification data object (usually returned by the API)\n * @returns The rich inbox notification data object that can be used by the client.\n */\nexport function convertToInboxNotificationData(\n  data: InboxNotificationDataPlain\n): InboxNotificationData {\n  const notifiedAt = new Date(data.notifiedAt);\n  const readAt = data.readAt ? new Date(data.readAt) : null;\n\n  return {\n    ...data,\n    notifiedAt,\n    readAt,\n  };\n}\n\nexport function convertToThreadDeleteInfo(\n  data: ThreadDeleteInfoPlain\n): ThreadDeleteInfo {\n  const deletedAt = new Date(data.deletedAt);\n\n  return {\n    ...data,\n    deletedAt,\n  };\n}\n\nexport function convertToInboxNotificationDeleteInfo(\n  data: InboxNotificationDeleteInfoPlain\n): InboxNotificationDeleteInfo {\n  const deletedAt = new Date(data.deletedAt);\n\n  return {\n    ...data,\n    deletedAt,\n  };\n}\n", "export type QueryParams =\n  | Record<string, string | number | null | undefined>\n  | URLSearchParams;\n\n/**\n * Safely but conveniently build a URLSearchParams instance from a given\n * dictionary of values. For example:\n *\n *   {\n *     \"foo\": \"bar+qux/baz\",\n *     \"empty\": \"\",\n *     \"n\": 42,\n *     \"nope\": undefined,\n *     \"alsonope\": null,\n *   }\n *\n * Will produce a value that will get serialized as\n * `foo=bar%2Bqux%2Fbaz&empty=&n=42`.\n *\n * Notice how the number is converted to its string representation\n * automatically and the `null`/`undefined` values simply don't end up in the\n * URL.\n */\nfunction toURLSearchParams(\n  params: Record<string, string | number | null | undefined>\n): URLSearchParams {\n  const result = new URLSearchParams();\n  for (const [key, value] of Object.entries(params)) {\n    if (value !== undefined && value !== null) {\n      result.set(key, value.toString());\n    }\n  }\n  return result;\n}\n\n/**\n * Concatenates a path to an existing URL.\n */\nexport function urljoin(\n  baseUrl: string | URL,\n  path: string,\n  params?: QueryParams\n): string {\n  // First, sanitize by removing user/passwd/search/hash parts from the URL\n  const url = new URL(path, baseUrl);\n  if (params !== undefined) {\n    url.search = (\n      params instanceof URLSearchParams ? params : toURLSearchParams(params)\n    ).toString();\n  }\n  return url.toString();\n}\n", "import type { AuthManager } from \"./auth-manager\";\nimport type { NotificationsApi } from \"./client\";\nimport {\n  getAuthBearerHeaderFromAuthValue,\n  NotificationsApiError,\n} from \"./client\";\nimport {\n  convertToInboxNotificationData,\n  convertToInboxNotificationDeleteInfo,\n  convertToThreadData,\n  convertToThreadDeleteInfo,\n} from \"./convert-plain-data\";\nimport { Batch } from \"./lib/batch\";\nimport type { Store } from \"./lib/create-store\";\nimport { type QueryParams, urljoin } from \"./lib/url\";\nimport { TokenKind } from \"./protocol/AuthToken\";\nimport type { InboxNotificationDataPlain } from \"./types/InboxNotificationData\";\nimport type { InboxNotificationDeleteInfoPlain } from \"./types/InboxNotificationDeleteInfo\";\nimport type { ThreadDataPlain } from \"./types/ThreadData\";\nimport type { ThreadDeleteInfoPlain } from \"./types/ThreadDeleteInfo\";\n\nconst MARK_INBOX_NOTIFICATIONS_AS_READ_BATCH_DELAY = 50;\n\nexport type GetInboxNotificationsOptions = {\n  limit?: number;\n  since?: Date;\n};\n\nexport function createNotificationsApi({\n  baseUrl,\n  authManager,\n  currentUserIdStore,\n  fetcher,\n}: {\n  baseUrl: string;\n  authManager: AuthManager;\n  currentUserIdStore: Store<string | null>;\n  fetcher: (url: string, init?: RequestInit) => Promise<Response>;\n}): NotificationsApi {\n  async function fetchJson<T>(\n    endpoint: string,\n    options?: RequestInit,\n    params?: QueryParams\n  ): Promise<T> {\n    const authValue = await authManager.getAuthValue({\n      requestedScope: \"comments:read\",\n    });\n\n    if (\n      authValue.type === \"secret\" &&\n      authValue.token.parsed.k === TokenKind.ACCESS_TOKEN\n    ) {\n      const userId = authValue.token.parsed.uid;\n      currentUserIdStore.set(() => userId);\n    }\n\n    const url = urljoin(baseUrl, `/v2/c${endpoint}`, params);\n    const response = await fetcher(url.toString(), {\n      ...options,\n      headers: {\n        ...options?.headers,\n        Authorization: `Bearer ${getAuthBearerHeaderFromAuthValue(authValue)}`,\n      },\n    });\n\n    if (!response.ok) {\n      if (response.status >= 400 && response.status < 600) {\n        let error: NotificationsApiError;\n\n        try {\n          const errorBody = (await response.json()) as { message: string };\n\n          error = new NotificationsApiError(\n            errorBody.message,\n            response.status,\n            errorBody\n          );\n        } catch {\n          error = new NotificationsApiError(\n            response.statusText,\n            response.status\n          );\n        }\n\n        throw error;\n      }\n    }\n\n    let body;\n\n    try {\n      body = (await response.json()) as T;\n    } catch {\n      body = {} as T;\n    }\n\n    return body;\n  }\n\n  async function getInboxNotifications(options?: GetInboxNotificationsOptions) {\n    const json = await fetchJson<{\n      threads: ThreadDataPlain[];\n      inboxNotifications: InboxNotificationDataPlain[];\n      deletedThreads: ThreadDeleteInfoPlain[];\n      deletedInboxNotifications: InboxNotificationDeleteInfoPlain[];\n      meta: {\n        requestedAt: string;\n      };\n    }>(\"/inbox-notifications\", undefined, {\n      limit: options?.limit,\n      since: options?.since?.toISOString(),\n    });\n\n    return {\n      threads: json.threads.map((thread) => convertToThreadData(thread)),\n      inboxNotifications: json.inboxNotifications.map((notification) =>\n        convertToInboxNotificationData(notification)\n      ),\n      deletedThreads: json.deletedThreads.map((info) =>\n        convertToThreadDeleteInfo(info)\n      ),\n      deletedInboxNotifications: json.deletedInboxNotifications.map((info) =>\n        convertToInboxNotificationDeleteInfo(info)\n      ),\n      meta: {\n        requestedAt: new Date(json.meta.requestedAt),\n      },\n    };\n  }\n\n  async function getUnreadInboxNotificationsCount() {\n    const { count } = await fetchJson<{\n      count: number;\n    }>(\"/inbox-notifications/count\");\n\n    return count;\n  }\n\n  async function markAllInboxNotificationsAsRead() {\n    await fetchJson(\"/inbox-notifications/read\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ inboxNotificationIds: \"all\" }),\n    });\n  }\n\n  async function markInboxNotificationsAsRead(inboxNotificationIds: string[]) {\n    await fetchJson(\"/inbox-notifications/read\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ inboxNotificationIds }),\n    });\n  }\n\n  const batchedMarkInboxNotificationsAsRead = new Batch(\n    async (batchedInboxNotificationIds: [string][]) => {\n      const inboxNotificationIds = batchedInboxNotificationIds.flat();\n\n      await markInboxNotificationsAsRead(inboxNotificationIds);\n\n      return inboxNotificationIds;\n    },\n    { delay: MARK_INBOX_NOTIFICATIONS_AS_READ_BATCH_DELAY }\n  );\n\n  async function markInboxNotificationAsRead(inboxNotificationId: string) {\n    await batchedMarkInboxNotificationsAsRead.get(inboxNotificationId);\n  }\n\n  return {\n    getInboxNotifications,\n    getUnreadInboxNotificationsCount,\n    markAllInboxNotificationsAsRead,\n    markInboxNotificationAsRead,\n  };\n}\n", "/**\n * Positions, aka the Pos type, are efficient encodings of \"positions\" in\n * a list, using the following printable subset of the ASCII alphabet:\n *\n *    !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\n *   ^                                                                                             ^\n *   Lowest digit                                                                      Highest digit\n *\n * Each Pos is a sequence of characters from the above alphabet, conceptually\n * codifying a floating point number 0 < n < 1. For example, the string \"31007\"\n * would be used to represent the number 0.31007, except that this\n * representation uses base 96.\n *\n *   0 ≃ ' '  (lowest digit)\n *   1 ≃ '!'\n *   2 ≃ '\"'\n *   ...\n *   9 ≃ '~'  (highest digit)\n *\n * So think:\n *   '!'    ≃ 0.1\n *   '\"'    ≃ 0.2\n *   '!\"~'  ≃ 0.129\n *\n * Three rules:\n * - All \"characters\" in the string should be valid digits (from the above\n *   alphabet)\n * - The value 0.0 is not a valid Pos value\n * - A Pos cannot have trailing \"zeroes\"\n *\n * This representation has the following benefits:\n *\n * 1. It's always possible to get a number that lies before, after, or between\n *    two arbitrary Pos values.\n * 2. Pos values can be compared using normal string comparison.\n *\n * Some examples:\n * - '!'  < '\"'   (like how .1  < .2)\n * - '!'  < '~'   (like how .1  < .9)\n * - '!!' < '!~'  (like how .11 < .19)\n * - '~!' < '~~'  (like how .91 < .99)\n * - '~'  < '~!'  (like how .9  < .91)\n * - '!!' < '!O'  (like how .1  < .5)\n * - '!O' < '!~'  (like how .5  < .9)\n *\n */\nimport type { Brand } from \"./utils\";\n\n/**\n * A valid/verified \"position\" string. These values are used as \"parentKey\"s by\n * LiveList children, and define their relative ordering.\n */\nexport type Pos = Brand<string, \"Pos\">;\n\nconst MIN_CODE = 32; // ASCII code of the lowest alphabet char (e.g. ' ')\nconst MAX_CODE = 126; // ASCII code of the highest alphabet char (e.g. '~')\n\nconst NUM_DIGITS = MAX_CODE - MIN_CODE + 1;\n\nconst ZERO: string = nthDigit(0); // \" \"\n\n/**\n * The \"first\" canonical position.\n * In an equivalent decimal number system, think of this as the value .1.\n */\nconst ONE: Pos = nthDigit(1); // \"!\"\n\nconst ZERO_NINE = (ZERO + nthDigit(-1)) as Pos;\n\n/**\n * Returns the Pos value for the nth digit in the alphabet.\n * Value must be between 0 and 94.\n *\n * Just used to generate some static data, and for usage in test cases.\n */\nfunction nthDigit(n: 0): string; // \"0\" is a legal _digit_, but not a legal Pos value\nfunction nthDigit(n: number): Pos;\nfunction nthDigit(n: number): Pos {\n  const code = MIN_CODE + (n < 0 ? NUM_DIGITS + n : n);\n  if (code < MIN_CODE || code > MAX_CODE) {\n    throw new Error(`Invalid n value: ${n}`);\n  }\n  return String.fromCharCode(code) as Pos;\n}\n\n/**\n * Given two positions, returns the position value that lies in the middle.\n * When given only a high bound, computes the canonical position \"before\" it.\n * When given only a low bound, computes the canonical position \"after\" it.\n * When given no bounds at all, returns the \"first\" canonical position.\n */\nfunction makePosition(x?: Pos, y?: Pos): Pos {\n  if (x !== undefined && y !== undefined) {\n    return between(x, y);\n  } else if (x !== undefined) {\n    return after(x);\n  } else if (y !== undefined) {\n    return before(y);\n  } else {\n    return ONE;\n  }\n}\n\n/**\n * Given any position value, computes the canonical position \"before\" it.\n *\n * The equivalent in a decimal number system would be:\n *   before(.1)     // .09\n *   before(.11)    // .1\n *   before(.111)   // .1\n *   before(.2)     // .1\n *   before(.23101) // .2\n *   before(.3)     // .2\n *   ...\n *   before(.8)     // .7\n *   before(.9)     // .8\n *   before(.91)    // .9\n *   before(.92)    // .9\n *   before(.93)    // .9\n *   ...\n *   before(.98)    // .9\n *   before(.99)    // .9\n *\n * Note:\n *   before(.01)    // .009\n *   before(.001)   // .0009\n *   before(.002)   // .001\n *   before(.00283) // .002\n *\n */\nfunction before(pos: Pos): Pos {\n  const lastIndex = pos.length - 1;\n  for (let i = 0; i <= lastIndex; i++) {\n    const code = pos.charCodeAt(i);\n\n    // Scan away all leading zeros, if there are any\n    if (code <= MIN_CODE) {\n      continue;\n    }\n\n    //\n    // Now, i points to the first non-zero digit\n    //\n    // Two options:\n    // 1. It's the last digit.\n    //    a. If it's a 1, it's on the edge. Replace with \"09\".\n    //    b. Otherwise, just lower it.\n    // 2. It's not the last digit, so we can just chop off the remainder.\n    //\n    if (i === lastIndex) {\n      if (code === MIN_CODE + 1) {\n        return (pos.substring(0, i) + ZERO_NINE) as Pos;\n      } else {\n        return (pos.substring(0, i) + String.fromCharCode(code - 1)) as Pos;\n      }\n    } else {\n      return pos.substring(0, i + 1) as Pos;\n    }\n  }\n\n  // If we end up here, it means the input consisted of only zeroes, which is\n  // invalid, so return the canonical first value as a best effort\n  return ONE;\n}\n\n/**\n * Given any position value, computes the canonical position \"after\" it.\n *\n * The equivalent in a decimal number system would be:\n *   after(.001)  // .1\n *   after(.1)    // .2\n *   after(.101)  // .2\n *   after(.2)    // .3\n *   after(.3)    // .4\n *   ...\n *   after(.8)    // .9\n *   after(.9)    // .91\n *   after(.91)   // .92\n *   after(.9123) // .92\n *   ...\n *   after(.98)   // .99\n *   after(.99)   // .991\n *   after(.9999) // .99991\n *\n */\nfunction after(pos: Pos): Pos {\n  for (let i = 0; i <= pos.length - 1; i++) {\n    const code = pos.charCodeAt(i);\n\n    // Scan away all leading \"nines\", if there are any\n    if (code >= MAX_CODE) {\n      continue;\n    }\n\n    // Now, i points to the first non-\"nine\" digit\n    return (pos.substring(0, i) + String.fromCharCode(code + 1)) as Pos;\n  }\n\n  // If we end up here, it means the input consisted of only \"nines\", means we\n  // can just append a ONE digit.\n  return (pos + ONE) as Pos;\n}\n\n/**\n * Given two positions, returns the position value that lies in the middle.\n *\n * Think:\n *   between('!', '%')  // '#'    (like how between(.1, .5) would be .3)\n *   between('!', '\"')  // '!O'   (like how between(.1, .2) would be .15)\n *\n *   between(.1, .3)      // .2\n *   between(.1, .4)      // also .2\n *   between(.1, .5)      // .3\n *   between(.11, .21)    // .15\n *   between(.1,  .1003)  // .1001\n *   between(.11, .12)    // .115\n *   between(.09, .1)     // .095\n *   between(.19, .21)    // .195\n *\n */\nfunction between(lo: Pos, hi: Pos): Pos {\n  if (lo < hi) {\n    return _between(lo, hi);\n  } else if (lo > hi) {\n    return _between(hi, lo);\n  } else {\n    throw new Error(\"Cannot compute value between two equal positions\");\n  }\n}\n\n/**\n * Like between(), but guaranteed that lo < hi.\n */\nfunction _between(lo: Pos, hi: Pos | \"\"): Pos {\n  let index = 0;\n\n  const loLen = lo.length;\n  const hiLen = hi.length;\n  while (true) {\n    const loCode = index < loLen ? lo.charCodeAt(index) : MIN_CODE;\n    const hiCode = index < hiLen ? hi.charCodeAt(index) : MAX_CODE;\n\n    if (loCode === hiCode) {\n      index++;\n      continue;\n    }\n\n    // Difference of only 1 means we'll have to settle this in the next digit\n    if (hiCode - loCode === 1) {\n      const size = index + 1;\n      let prefix = lo.substring(0, size);\n      if (prefix.length < size) {\n        prefix += ZERO.repeat(size - prefix.length);\n      }\n      const suffix = lo.substring(size) as Pos;\n      const nines = \"\"; // Will get interpreted like .999999…\n      return (prefix + _between(suffix, nines)) as Pos;\n    } else {\n      // Difference of more than 1 means we take the \"middle\" between these digits\n      return (takeN(lo, index) +\n        String.fromCharCode((hiCode + loCode) >> 1)) as Pos;\n    }\n  }\n}\n\nfunction takeN(pos: string, n: number): string {\n  return n < pos.length\n    ? pos.substring(0, n)\n    : pos + ZERO.repeat(n - pos.length);\n}\n\nconst MIN_NON_ZERO_CODE = MIN_CODE + 1;\n\n/**\n * Checks whether a given string is a valid Pos value. There are three rules:\n *\n *   - The string must not be the empty string\n *   - The string must not have any trailing \"zeroes\" (trailing \" \")\n *   - All characters in the string must be from our alphabet\n *\n */\nfunction isPos(str: string): str is Pos {\n  // May not be empty string\n  if (str === \"\") {\n    return false;\n  }\n\n  // Last digit may not be a \"0\" (no trailing zeroes)\n  const lastIdx = str.length - 1;\n  const last = str.charCodeAt(lastIdx);\n  if (last < MIN_NON_ZERO_CODE || last > MAX_CODE) {\n    return false;\n  }\n\n  for (let i = 0; i < lastIdx; i++) {\n    const code = str.charCodeAt(i);\n    if (code < MIN_CODE || code > MAX_CODE) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction convertToPos(str: string): Pos {\n  const codes: number[] = [];\n\n  // All chars in the string must be in the min-max range\n  for (let i = 0; i < str.length; i++) {\n    const code = str.charCodeAt(i);\n\n    // Clamp to min-max range\n    codes.push(code < MIN_CODE ? MIN_CODE : code > MAX_CODE ? MAX_CODE : code);\n  }\n\n  // Strip all trailing zeros\n  while (codes.length > 0 && codes[codes.length - 1] === MIN_CODE) {\n    codes.length--;\n  }\n\n  return codes.length > 0\n    ? (String.fromCharCode(...codes) as Pos)\n    : // Edge case: the str was a 0-only string, which is invalid. Default back to .1\n      ONE;\n}\n\n/**\n * Checks that a str is a valid Pos, and converts it to the nearest valid one\n * if not.\n */\nfunction asPos(str: string): Pos {\n  // Calling convertToPos(str) would suffice here, but since this is a hot code\n  // path, we prefer to just check, which is a lot faster.\n  return isPos(str) ? str : convertToPos(str);\n}\n\nexport { asPos, makePosition };\n\n// For use in unit tests only\nexport {\n  after as __after,\n  before as __before,\n  between as __between,\n  isPos as __isPos,\n  nthDigit as __nthDigit,\n  NUM_DIGITS as __NUM_DIGITS,\n};\n", "import type { Json, JsonObject } from \"../lib/Json\";\n\nexport enum OpCode {\n  INIT = 0,\n  SET_PARENT_KEY = 1,\n  CREATE_LIST = 2,\n  UPDATE_OBJECT = 3,\n  CREATE_OBJECT = 4,\n  DELETE_CRDT = 5,\n  DELETE_OBJECT_KEY = 6,\n  CREATE_MAP = 7,\n  CREATE_REGISTER = 8,\n}\n\n/**\n * These operations are the payload for {@link UpdateStorageServerMsg} messages\n * only.\n */\nexport type Op =\n  | AckOp\n  | CreateOp\n  | UpdateObjectOp\n  | DeleteCrdtOp\n  | SetParentKeyOp // Only for lists!\n  | DeleteObjectKeyOp;\n\nexport type CreateOp =\n  | CreateObjectOp\n  | CreateRegisterOp\n  | CreateMapOp\n  | CreateListOp;\n\nexport type UpdateObjectOp = {\n  readonly opId?: string;\n  readonly id: string;\n  readonly type: OpCode.UPDATE_OBJECT;\n  readonly data: Partial<JsonObject>;\n};\n\nexport type CreateObjectOp = {\n  readonly opId?: string;\n  readonly id: string;\n  readonly intent?: \"set\";\n  readonly deletedId?: string;\n  readonly type: OpCode.CREATE_OBJECT;\n  readonly parentId: string;\n  readonly parentKey: string;\n  readonly data: JsonObject;\n};\n\nexport type CreateListOp = {\n  readonly opId?: string;\n  readonly id: string;\n  readonly intent?: \"set\";\n  readonly deletedId?: string;\n  readonly type: OpCode.CREATE_LIST;\n  readonly parentId: string;\n  readonly parentKey: string;\n};\n\nexport type CreateMapOp = {\n  readonly opId?: string;\n  readonly id: string;\n  readonly intent?: \"set\";\n  readonly deletedId?: string;\n  readonly type: OpCode.CREATE_MAP;\n  readonly parentId: string;\n  readonly parentKey: string;\n};\n\nexport type CreateRegisterOp = {\n  readonly opId?: string;\n  readonly id: string;\n  readonly intent?: \"set\";\n  readonly deletedId?: string;\n  readonly type: OpCode.CREATE_REGISTER;\n  readonly parentId: string;\n  readonly parentKey: string;\n  readonly data: Json;\n};\n\nexport type DeleteCrdtOp = {\n  readonly opId?: string;\n  readonly id: string;\n  readonly type: OpCode.DELETE_CRDT;\n};\n\n//\n// HACK:\n// Disguised as a \"DeleteCrdtOp\" for a nonexisting node \"ACK\", this Op that the\n// server may return to senders is effectively sent as a backward-compatible\n// way to trigger an acknowledgement for Ops that were seen by the server, but\n// deliberately ignored.\n//\nexport type AckOp = {\n  readonly type: OpCode.DELETE_CRDT; // Not a typo!\n  readonly id: \"ACK\";\n  readonly opId: string;\n};\n\n/**\n * Create an Op that can be used as an acknowledgement for the given opId, to\n * send back to the originating client in cases where the server decided to\n * ignore the Op and not forward it.\n *\n * Why?\n * It's important for the client to receive an acknowledgement for this, so\n * that it can correctly update its own unacknowledged Ops administration.\n * Otherwise it could get in \"synchronizing\" state indefinitely.\n *\n * CLEVER HACK\n * Introducing a new Op type for this would not be backward-compatible as\n * receiving such Op would crash old clients :(\n * So the clever backward-compatible hack pulled here is that we codify the\n * acknowledgement as a \"deletion Op\" for the non-existing node id \"ACK\". In\n * old clients such Op is accepted, but will effectively be a no-op as that\n * node does not exist, but as a side-effect the Op will get acknowledged.\n */\nexport function ackOp(opId: string): AckOp {\n  return {\n    type: OpCode.DELETE_CRDT,\n    id: \"ACK\", // (H)ACK\n    opId,\n  };\n}\n\nexport function isAckOp(op: Op): op is AckOp {\n  return op.type === OpCode.DELETE_CRDT && op.id === \"ACK\";\n}\n\nexport type SetParentKeyOp = {\n  readonly opId?: string;\n  readonly id: string;\n  readonly type: OpCode.SET_PARENT_KEY;\n  readonly parentKey: string;\n};\n\nexport type DeleteObjectKeyOp = {\n  readonly opId?: string;\n  readonly id: string;\n  readonly type: OpCode.DELETE_OBJECT_KEY;\n  readonly key: string;\n};\n", "import { assertNever } from \"../lib/assert\";\nimport type { Pos } from \"../lib/position\";\nimport { asPos } from \"../lib/position\";\nimport type { CreateOp, Op } from \"../protocol/Op\";\nimport { OpCode } from \"../protocol/Op\";\nimport type { SerializedCrdt } from \"../protocol/SerializedCrdt\";\nimport type * as DevTools from \"../types/DevToolsTreeNode\";\nimport type { Immutable } from \"../types/Immutable\";\nimport type { LiveNode, Lson } from \"./Lson\";\nimport type { StorageUpdate } from \"./StorageUpdates\";\n\nexport type ApplyResult =\n  | { reverse: Op[]; modified: StorageUpdate }\n  | { modified: false };\n\n/**\n * The managed pool is a namespace registry (i.e. a context) that \"owns\" all\n * the individual live nodes, ensuring each one has a unique ID, and holding on\n * to live nodes before and after they are inter-connected.\n */\nexport interface ManagedPool {\n  roomId: string;\n  generateId: () => string;\n  generateOpId: () => string;\n\n  getNode: (id: string) => LiveNode | undefined;\n  addNode: (id: string, node: LiveNode) => void;\n  deleteNode: (id: string) => void;\n\n  /**\n   * Dispatching has three responsibilities:\n   * - Sends serialized ops to the WebSocket servers\n   * - Add reverse operations to the undo/redo stack\n   * - Notify room subscribers with updates (in-client, no networking)\n   */\n  dispatch: (\n    ops: Op[],\n    reverseOps: Op[],\n    storageUpdates: Map<string, StorageUpdate>\n  ) => void;\n\n  /**\n   * Ensures storage can be written to else throws an error.\n   * This is used to prevent writing to storage when the user does not have\n   * permission to do so.\n   * @throws {Error} if storage is not writable\n   * @returns {void}\n   */\n  assertStorageIsWritable: () => void;\n}\n\nexport enum OpSource {\n  UNDOREDO_RECONNECT,\n  REMOTE,\n  ACK,\n}\n\n// TODO Temporary helper to help convert from AbstractCrdt -> LiveNode, only\n// needed for within this module. The reason is that AbstractCrdt is an\n// _abstract_ type, and in our LiveNode union we exhaustively include all\n// concrete types.\n// TODO Remove me later, if we inline the abstract base methods in the concrete\n// classes.\nfunction crdtAsLiveNode(\n  value: AbstractCrdt // eslint-disable-line no-restricted-syntax\n): LiveNode {\n  return value as LiveNode;\n}\n\ntype HasParent = {\n  readonly type: \"HasParent\";\n  readonly node: LiveNode;\n  readonly key: string;\n\n  // Typically the same as `key`, but checked to be a valid Pos value (needed\n  // when used as item in a LiveList)\n  readonly pos: Pos;\n};\n\ntype NoParent = {\n  readonly type: \"NoParent\";\n};\n\ntype Orphaned = {\n  readonly type: \"Orphaned\";\n  readonly oldKey: string;\n\n  // Typically the same as `key`, but checked to be a valid Pos value (needed\n  // when used as item in a LiveList)\n  readonly oldPos: Pos;\n};\n\nfunction HasParent(\n  node: LiveNode,\n  key: string,\n  pos: Pos = asPos(key)\n): HasParent {\n  return Object.freeze({ type: \"HasParent\", node, key, pos });\n}\n\nconst NoParent: NoParent = Object.freeze({ type: \"NoParent\" });\n\nfunction Orphaned(oldKey: string, oldPos: Pos = asPos(oldKey)): Orphaned {\n  return Object.freeze({ type: \"Orphaned\", oldKey, oldPos });\n}\n\n/**\n * Represents the possible states of the parent field pointers.\n */\ntype ParentInfo =\n  // Both the parent node and the parent key are set. This is a normal child.\n  | HasParent\n\n  // Neither are set. This is either the root node (if attached to a document),\n  // or it's a dangling node that hasn't been attached yet.\n  | NoParent\n\n  // -------------------------------------------------------------------------\n  // TODO Refactor this state away!\n  // -------------------------------------------------------------------------\n  // Tricky case! This state is used after the node is detached from its\n  // parent, but we still need to retain the parent key that it was originally\n  // attached under. For example we rely on this to derive the reverse Op to\n  // add. We should be able to get rid of this case by structuring the code\n  // differently!\n  | Orphaned;\n\nexport abstract class AbstractCrdt {\n  //                  ^^^^^^^^^^^^ TODO: Make this an interface\n  /** @internal */\n  private __pool?: ManagedPool;\n  /** @internal */\n  private __id?: string;\n\n  /** @internal */\n  private _parent: ParentInfo = NoParent;\n\n  /** @internal */\n  _getParentKeyOrThrow(): string {\n    switch (this.parent.type) {\n      case \"HasParent\":\n        return this.parent.key;\n\n      case \"NoParent\":\n        throw new Error(\"Parent key is missing\");\n\n      case \"Orphaned\":\n        return this.parent.oldKey;\n\n      default:\n        return assertNever(this.parent, \"Unknown state\");\n    }\n  }\n\n  /** @internal */\n  get _parentPos(): Pos {\n    switch (this.parent.type) {\n      case \"HasParent\":\n        return this.parent.pos;\n\n      case \"NoParent\":\n        throw new Error(\"Parent key is missing\");\n\n      case \"Orphaned\":\n        return this.parent.oldPos;\n\n      default:\n        return assertNever(this.parent, \"Unknown state\");\n    }\n  }\n\n  /** @internal */\n  protected get _pool(): ManagedPool | undefined {\n    return this.__pool;\n  }\n\n  get roomId(): string | null {\n    return this.__pool ? this.__pool.roomId : null;\n  }\n\n  /** @internal */\n  get _id(): string | undefined {\n    return this.__id;\n  }\n\n  /** @internal */\n  get parent(): ParentInfo {\n    return this._parent;\n  }\n\n  /** @internal */\n  get _parentKey(): string | null {\n    switch (this.parent.type) {\n      case \"HasParent\":\n        return this.parent.key;\n\n      case \"NoParent\":\n        return null;\n\n      case \"Orphaned\":\n        return this.parent.oldKey;\n\n      default:\n        return assertNever(this.parent, \"Unknown state\");\n    }\n  }\n\n  /** @internal */\n  _apply(op: Op, _isLocal: boolean): ApplyResult {\n    switch (op.type) {\n      case OpCode.DELETE_CRDT: {\n        if (this.parent.type === \"HasParent\") {\n          return this.parent.node._detachChild(crdtAsLiveNode(this));\n        }\n\n        return { modified: false };\n      }\n    }\n\n    return { modified: false };\n  }\n\n  /** @internal */\n  _setParentLink(newParentNode: LiveNode, newParentKey: string): void {\n    switch (this.parent.type) {\n      case \"HasParent\":\n        if (this.parent.node !== newParentNode) {\n          throw new Error(\"Cannot set parent: node already has a parent\");\n        } else {\n          // Ignore\n          this._parent = HasParent(newParentNode, newParentKey);\n          return;\n        }\n\n      case \"Orphaned\":\n      case \"NoParent\": {\n        this._parent = HasParent(newParentNode, newParentKey);\n        return;\n      }\n\n      default:\n        return assertNever(this.parent, \"Unknown state\");\n    }\n  }\n\n  /** @internal */\n  _attach(id: string, pool: ManagedPool): void {\n    if (this.__id || this.__pool) {\n      throw new Error(\"Cannot attach node: already attached\");\n    }\n\n    pool.addNode(id, crdtAsLiveNode(this));\n\n    this.__id = id;\n    this.__pool = pool;\n  }\n\n  /** @internal */\n  abstract _attachChild(op: CreateOp, source: OpSource): ApplyResult;\n\n  /** @internal */\n  _detach(): void {\n    if (this.__pool && this.__id) {\n      this.__pool.deleteNode(this.__id);\n    }\n\n    switch (this.parent.type) {\n      case \"HasParent\": {\n        this._parent = Orphaned(this.parent.key, this.parent.pos);\n        break;\n      }\n\n      case \"NoParent\": {\n        this._parent = NoParent;\n        break;\n      }\n\n      case \"Orphaned\": {\n        // No change needed\n        break;\n      }\n\n      default:\n        assertNever(this.parent, \"Unknown state\");\n    }\n\n    this.__pool = undefined;\n  }\n\n  /** @internal */\n  abstract _detachChild(crdt: LiveNode): ApplyResult;\n\n  /** @internal */\n  abstract _toOps(\n    parentId: string,\n    parentKey: string,\n    pool?: ManagedPool\n  ): CreateOp[];\n\n  /** @internal */\n  abstract _serialize(): SerializedCrdt;\n\n  /**\n   * @internal\n   *\n   * This caches the result of the last .toImmutable() call for this Live node.\n   */\n  private _cachedImmutable?: Immutable;\n\n  /** @internal */\n  private _cachedTreeNodeKey?: string | number;\n  /**\n   * @internal\n   * This caches the result of the last .toTreeNode() call for this Live node.\n   */\n  private _cachedTreeNode?: DevTools.LsonTreeNode;\n\n  /**\n   * @internal\n   *\n   * Clear the Immutable cache, so that the next call to `.toImmutable()` will\n   * recompute the equivalent Immutable value again.  Call this after every\n   * mutation to the Live node.\n   */\n  invalidate(): void {\n    if (\n      this._cachedImmutable !== undefined ||\n      this._cachedTreeNode !== undefined\n    ) {\n      this._cachedImmutable = undefined;\n      this._cachedTreeNode = undefined;\n\n      if (this.parent.type === \"HasParent\") {\n        this.parent.node.invalidate();\n      }\n    }\n  }\n\n  /** @internal */\n  abstract _toTreeNode(key: string): DevTools.LsonTreeNode;\n\n  /**\n   * @internal\n   *\n   * Return an snapshot of this Live tree for use in DevTools.\n   */\n  toTreeNode(key: string): DevTools.LsonTreeNode {\n    if (this._cachedTreeNode === undefined || this._cachedTreeNodeKey !== key) {\n      this._cachedTreeNodeKey = key;\n      this._cachedTreeNode = this._toTreeNode(key);\n    }\n\n    // Return cached version\n    return this._cachedTreeNode;\n  }\n\n  /** @internal */\n  abstract _toImmutable(): Immutable;\n\n  /**\n   * Return an immutable snapshot of this Live node and its children.\n   */\n  toImmutable(): Immutable {\n    if (this._cachedImmutable === undefined) {\n      this._cachedImmutable = this._toImmutable();\n    }\n\n    // Return cached version\n    return this._cachedImmutable;\n  }\n\n  /**\n   * Returns a deep clone of the current LiveStructure, suitable for insertion\n   * in the tree elsewhere.\n   */\n  abstract clone(): Lson;\n}\n", "import type { Json, JsonObject } from \"../lib/Json\";\n\nexport type IdTuple<T> = [id: string, value: T];\n\nexport enum CrdtType {\n  OBJECT = 0,\n  LIST = 1,\n  MAP = 2,\n  REGISTER = 3,\n}\n\nexport type SerializedCrdt = SerializedRootObject | SerializedChild;\n\nexport type SerializedChild =\n  | SerializedObject\n  | SerializedList\n  | SerializedMap\n  | SerializedRegister;\n\nexport type SerializedRootObject = {\n  readonly type: CrdtType.OBJECT;\n  readonly data: JsonObject;\n\n  // Root objects don't have a parent relationship\n  readonly parentId?: never;\n  readonly parentKey?: never;\n};\n\nexport type SerializedObject = {\n  readonly type: CrdtType.OBJECT;\n  readonly parentId: string;\n  readonly parentKey: string;\n  readonly data: JsonObject;\n};\n\nexport type SerializedList = {\n  readonly type: CrdtType.LIST;\n  readonly parentId: string;\n  readonly parentKey: string;\n};\n\nexport type SerializedMap = {\n  readonly type: CrdtType.MAP;\n  readonly parentId: string;\n  readonly parentKey: string;\n};\n\nexport type SerializedRegister = {\n  readonly type: CrdtType.REGISTER;\n  readonly parentId: string;\n  readonly parentKey: string;\n  readonly data: Json;\n};\n\nexport function isRootCrdt(crdt: SerializedCrdt): crdt is SerializedRootObject {\n  return crdt.type === CrdtType.OBJECT && !isChildCrdt(crdt);\n}\n\nexport function isChildCrdt(crdt: SerializedCrdt): crdt is SerializedChild {\n  return crdt.parentId !== undefined && crdt.parentKey !== undefined;\n}\n", "export function nanoid(length: number = 7): string {\n  const alphabet =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789,./;[]~!@#$%&*()_+=-\";\n  const len = alphabet.length;\n  return Array.from({ length }, () =>\n    alphabet.charAt(Math.floor(Math.random() * len))\n  ).join(\"\");\n}\n", "import type { LiveNode } from \"../crdts/Lson\";\nimport { nn } from \"../lib/assert\";\nimport type { Json } from \"../lib/Json\";\nimport { nanoid } from \"../lib/nanoid\";\nimport { deepClone } from \"../lib/utils\";\nimport type { CreateOp, CreateRegisterOp, Op } from \"../protocol/Op\";\nimport { OpCode } from \"../protocol/Op\";\nimport type { IdTuple, SerializedRegister } from \"../protocol/SerializedCrdt\";\nimport { CrdtType } from \"../protocol/SerializedCrdt\";\nimport type * as DevTools from \"../types/DevToolsTreeNode\";\nimport type { Immutable } from \"../types/Immutable\";\nimport type { ParentToChildNodeMap } from \"../types/NodeMap\";\nimport type { ApplyResult, ManagedPool } from \"./AbstractCrdt\";\nimport { AbstractCrdt } from \"./AbstractCrdt\";\n\n/**\n * INTERNAL\n */\nexport class LiveRegister<TValue extends Json> extends AbstractCrdt {\n  /** @internal */\n  _data: TValue;\n\n  constructor(data: TValue) {\n    super();\n    this._data = data;\n  }\n\n  get data(): TValue {\n    return this._data;\n  }\n\n  /** @internal */\n  static _deserialize(\n    [id, item]: IdTuple<SerializedRegister>,\n    _parentToChildren: ParentToChildNodeMap,\n    pool: ManagedPool\n  ): LiveRegister<Json> {\n    const register = new LiveRegister(item.data);\n    register._attach(id, pool);\n    return register;\n  }\n\n  /** @internal */\n  _toOps(\n    parentId: string,\n    parentKey: string,\n    pool?: ManagedPool\n  ): CreateRegisterOp[] {\n    if (this._id === undefined) {\n      throw new Error(\n        \"Cannot serialize register if parentId or parentKey is undefined\"\n      );\n    }\n\n    return [\n      {\n        type: OpCode.CREATE_REGISTER,\n        opId: pool?.generateOpId(),\n        id: this._id,\n        parentId,\n        parentKey,\n        data: this.data,\n      },\n    ];\n  }\n\n  /** @internal */\n  _serialize(): SerializedRegister {\n    if (this.parent.type !== \"HasParent\") {\n      throw new Error(\"Cannot serialize LiveRegister if parent is missing\");\n    }\n\n    return {\n      type: CrdtType.REGISTER,\n      parentId: nn(this.parent.node._id, \"Parent node expected to have ID\"),\n      parentKey: this.parent.key,\n      data: this.data,\n    };\n  }\n\n  /** @internal */\n  _attachChild(_op: CreateOp): ApplyResult {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /** @internal */\n  _detachChild(_crdt: LiveNode): ApplyResult {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /** @internal */\n  _apply(op: Op, isLocal: boolean): ApplyResult {\n    return super._apply(op, isLocal);\n  }\n\n  /** @internal */\n  _toTreeNode(key: string): DevTools.LsonTreeNode {\n    return {\n      type: \"Json\",\n      id: this._id ?? nanoid(),\n      key,\n      payload: this._data,\n    };\n  }\n\n  /** @internal */\n  _toImmutable(): Immutable {\n    return this._data;\n  }\n\n  clone(): TValue {\n    return deepClone(this.data);\n  }\n}\n", "import { nn } from \"../lib/assert\";\nimport { nanoid } from \"../lib/nanoid\";\nimport type { Pos } from \"../lib/position\";\nimport { asPos, makePosition } from \"../lib/position\";\nimport type { CreateListOp, CreateOp, Op } from \"../protocol/Op\";\nimport { OpCode } from \"../protocol/Op\";\nimport type { IdTuple, SerializedList } from \"../protocol/SerializedCrdt\";\nimport { CrdtType } from \"../protocol/SerializedCrdt\";\nimport type * as DevTools from \"../types/DevToolsTreeNode\";\nimport type { ParentToChildNodeMap } from \"../types/NodeMap\";\nimport type { ApplyResult, ManagedPool } from \"./AbstractCrdt\";\nimport { AbstractCrdt, OpSource } from \"./AbstractCrdt\";\nimport {\n  creationOpToLiveNode,\n  deserialize,\n  liveNodeToLson,\n  lsonToLiveNode,\n} from \"./liveblocks-helpers\";\nimport { LiveRegister } from \"./LiveRegister\";\nimport type { LiveNode, Lson } from \"./Lson\";\nimport type { ToImmutable } from \"./utils\";\n\nexport type LiveListUpdateDelta =\n  | { type: \"insert\"; index: number; item: Lson }\n  | { type: \"delete\"; index: number }\n  | { type: \"move\"; index: number; previousIndex: number; item: Lson }\n  | { type: \"set\"; index: number; item: Lson };\n\n/**\n * A LiveList notification that is sent in-client to any subscribers whenever\n * one or more of the items inside the LiveList instance have changed.\n */\nexport type LiveListUpdates<TItem extends Lson> = {\n  type: \"LiveList\";\n  node: LiveList<TItem>;\n  updates: LiveListUpdateDelta[];\n};\n\nfunction compareNodePosition(itemA: LiveNode, itemB: LiveNode) {\n  const posA = itemA._parentPos;\n  const posB = itemB._parentPos;\n  return posA === posB ? 0 : posA < posB ? -1 : 1;\n}\n\n/**\n * The LiveList class represents an ordered collection of items that is synchronized across clients.\n */\nexport class LiveList<TItem extends Lson> extends AbstractCrdt {\n  // TODO: Naive array at first, find a better data structure. Maybe an Order statistics tree?\n  /** @internal */\n  private _items: LiveNode[];\n\n  /** @internal */\n  private _implicitlyDeletedItems: WeakSet<LiveNode>;\n\n  /** @internal */\n  private _unacknowledgedSets: Map<string, string>;\n\n  constructor(items: TItem[] = []) {\n    super();\n    this._items = [];\n    this._implicitlyDeletedItems = new WeakSet();\n    this._unacknowledgedSets = new Map();\n\n    let position = undefined;\n    for (const item of items) {\n      const newPosition = makePosition(position);\n      const node = lsonToLiveNode(item);\n      node._setParentLink(this, newPosition);\n      this._items.push(node);\n      position = newPosition;\n    }\n  }\n\n  /** @internal */\n  static _deserialize(\n    [id]: IdTuple<SerializedList>,\n    parentToChildren: ParentToChildNodeMap,\n    pool: ManagedPool\n  ): LiveList<Lson> {\n    const list = new LiveList();\n    list._attach(id, pool);\n\n    const children = parentToChildren.get(id);\n    if (children === undefined) {\n      return list;\n    }\n\n    for (const [id, crdt] of children) {\n      const child = deserialize([id, crdt], parentToChildren, pool);\n\n      child._setParentLink(list, crdt.parentKey);\n      list._insertAndSort(child);\n    }\n\n    return list;\n  }\n\n  /**\n   * @internal\n   * This function assumes that the resulting ops will be sent to the server if they have an 'opId'\n   * so we mutate _unacknowledgedSets to avoid potential flickering\n   * https://github.com/liveblocks/liveblocks/pull/1177\n   *\n   * This is quite unintuitive and should disappear as soon as\n   * we introduce an explicit LiveList.Set operation\n   */\n  _toOps(parentId: string, parentKey: string, pool?: ManagedPool): CreateOp[] {\n    if (this._id === undefined) {\n      throw new Error(\"Cannot serialize item is not attached\");\n    }\n\n    const ops: CreateOp[] = [];\n    const op: CreateListOp = {\n      id: this._id,\n      opId: pool?.generateOpId(),\n      type: OpCode.CREATE_LIST,\n      parentId,\n      parentKey,\n    };\n\n    ops.push(op);\n\n    for (const item of this._items) {\n      const parentKey = item._getParentKeyOrThrow();\n      const childOps = HACK_addIntentAndDeletedIdToOperation(\n        item._toOps(this._id, parentKey, pool),\n        undefined\n      );\n      const childOpId = childOps[0].opId;\n      if (childOpId !== undefined) {\n        this._unacknowledgedSets.set(parentKey, childOpId);\n      }\n      ops.push(...childOps);\n    }\n\n    return ops;\n  }\n\n  /**\n   * @internal\n   *\n   * Adds a new item into the sorted list, in the correct position.\n   */\n  _insertAndSort(item: LiveNode): void {\n    this._items.push(item);\n    this._sortItems();\n  }\n\n  /** @internal */\n  _sortItems(): void {\n    this._items.sort(compareNodePosition);\n    this.invalidate();\n  }\n\n  /** @internal */\n  _indexOfPosition(position: string): number {\n    return this._items.findIndex(\n      (item) => item._getParentKeyOrThrow() === position\n    );\n  }\n\n  /** @internal */\n  _attach(id: string, pool: ManagedPool): void {\n    super._attach(id, pool);\n\n    for (const item of this._items) {\n      item._attach(pool.generateId(), pool);\n    }\n  }\n\n  /** @internal */\n  _detach(): void {\n    super._detach();\n\n    for (const item of this._items) {\n      item._detach();\n    }\n  }\n\n  /** @internal */\n  private _applySetRemote(op: CreateOp): ApplyResult {\n    if (this._pool === undefined) {\n      throw new Error(\"Can't attach child if managed pool is not present\");\n    }\n\n    const { id, parentKey: key } = op;\n    const child = creationOpToLiveNode(op);\n    child._attach(id, this._pool);\n    child._setParentLink(this, key);\n\n    const deletedId = op.deletedId;\n\n    const indexOfItemWithSamePosition = this._indexOfPosition(key);\n\n    // If there is already an item at this position\n    if (indexOfItemWithSamePosition !== -1) {\n      const itemWithSamePosition = this._items[indexOfItemWithSamePosition];\n\n      // No conflict, the item that is being replaced is the same that was deleted on the sender\n      if (itemWithSamePosition._id === deletedId) {\n        itemWithSamePosition._detach();\n\n        // Replace the existing item with the newly created item without sorting the list\n        this._items[indexOfItemWithSamePosition] = child;\n\n        return {\n          modified: makeUpdate(this, [\n            setDelta(indexOfItemWithSamePosition, child),\n          ]),\n          reverse: [],\n        };\n      } else {\n        // item at position to be replaced is different from server, so we put in a cache\n        // This scenario can happen if an other item has been put at this position\n        // while getting the acknowledgement of the set (move, insert or set)\n        this._implicitlyDeletedItems.add(itemWithSamePosition);\n\n        // Replace the existing item with the newly created item without sorting the list\n        this._items[indexOfItemWithSamePosition] = child;\n\n        const delta: LiveListUpdateDelta[] = [\n          setDelta(indexOfItemWithSamePosition, child),\n        ];\n\n        // Even if we implicitly delete the item at the set position\n        // We still need to delete the item that was orginaly deleted by the set\n        const deleteDelta = this._detachItemAssociatedToSetOperation(\n          op.deletedId\n        );\n\n        if (deleteDelta) {\n          delta.push(deleteDelta);\n        }\n\n        return {\n          modified: makeUpdate(this, delta),\n          reverse: [],\n        };\n      }\n    } else {\n      // Item at position to be replaced doesn't exist\n      const updates: LiveListUpdateDelta[] = [];\n      const deleteDelta = this._detachItemAssociatedToSetOperation(\n        op.deletedId\n      );\n      if (deleteDelta) {\n        updates.push(deleteDelta);\n      }\n\n      this._insertAndSort(child);\n\n      updates.push(insertDelta(this._indexOfPosition(key), child));\n\n      return {\n        reverse: [],\n        modified: makeUpdate(this, updates),\n      };\n    }\n  }\n\n  /** @internal */\n  private _applySetAck(op: CreateOp): ApplyResult {\n    if (this._pool === undefined) {\n      throw new Error(\"Can't attach child if managed pool is not present\");\n    }\n\n    const delta: LiveListUpdateDelta[] = [];\n\n    // Deleted item can be re-inserted by remote undo/redo\n    const deletedDelta = this._detachItemAssociatedToSetOperation(op.deletedId);\n    if (deletedDelta) {\n      delta.push(deletedDelta);\n    }\n\n    const unacknowledgedOpId = this._unacknowledgedSets.get(op.parentKey);\n\n    if (unacknowledgedOpId !== undefined) {\n      if (unacknowledgedOpId !== op.opId) {\n        return delta.length === 0\n          ? { modified: false }\n          : { modified: makeUpdate(this, delta), reverse: [] };\n      } else {\n        this._unacknowledgedSets.delete(op.parentKey);\n      }\n    }\n\n    const indexOfItemWithSamePosition = this._indexOfPosition(op.parentKey);\n\n    const existingItem = this._items.find((item) => item._id === op.id);\n\n    // If item already exists...\n    if (existingItem !== undefined) {\n      // ...and if it's at the right position\n      if (existingItem._parentKey === op.parentKey) {\n        // ... do nothing\n        return {\n          modified: delta.length > 0 ? makeUpdate(this, delta) : false,\n          reverse: [],\n        };\n      }\n\n      // Item exists but not at the right position (local move after set)\n      if (indexOfItemWithSamePosition !== -1) {\n        this._implicitlyDeletedItems.add(\n          this._items[indexOfItemWithSamePosition]\n        );\n        this._items.splice(indexOfItemWithSamePosition, 1);\n        delta.push(deleteDelta(indexOfItemWithSamePosition));\n      }\n\n      const previousIndex = this._items.indexOf(existingItem);\n\n      existingItem._setParentLink(this, op.parentKey);\n      this._sortItems();\n\n      const newIndex = this._items.indexOf(existingItem);\n\n      if (newIndex !== previousIndex) {\n        delta.push(moveDelta(previousIndex, newIndex, existingItem));\n      }\n\n      return {\n        modified: delta.length > 0 ? makeUpdate(this, delta) : false,\n        reverse: [],\n      };\n    } else {\n      // Item associated to the set ack does not exist either deleted localy or via remote undo/redo\n      const orphan = this._pool.getNode(op.id);\n      if (orphan && this._implicitlyDeletedItems.has(orphan)) {\n        // Reattach orphan at the new position\n        orphan._setParentLink(this, op.parentKey);\n        // And delete it from the orphan cache\n        this._implicitlyDeletedItems.delete(orphan);\n\n        this._insertAndSort(orphan);\n\n        const recreatedItemIndex = this._items.indexOf(orphan);\n\n        return {\n          modified: makeUpdate(this, [\n            // If there is an item at this position, update is a set, else it's an insert\n            indexOfItemWithSamePosition === -1\n              ? insertDelta(recreatedItemIndex, orphan)\n              : setDelta(recreatedItemIndex, orphan),\n            ...delta,\n          ]),\n          reverse: [],\n        };\n      } else {\n        if (indexOfItemWithSamePosition !== -1) {\n          this._items.splice(indexOfItemWithSamePosition, 1);\n        }\n\n        const { newItem, newIndex } = this._createAttachItemAndSort(\n          op,\n          op.parentKey\n        );\n\n        return {\n          modified: makeUpdate(this, [\n            // If there is an item at this position, update is a set, else it's an insert\n            indexOfItemWithSamePosition === -1\n              ? insertDelta(newIndex, newItem)\n              : setDelta(newIndex, newItem),\n            ...delta,\n          ]),\n          reverse: [],\n        };\n      }\n    }\n  }\n\n  /**\n   * Returns the update delta of the deletion or null\n   * @internal\n   */\n  private _detachItemAssociatedToSetOperation(\n    deletedId?: string\n  ): LiveListUpdateDelta | null {\n    if (deletedId === undefined || this._pool === undefined) {\n      return null;\n    }\n\n    const deletedItem = this._pool.getNode(deletedId);\n    if (deletedItem === undefined) {\n      return null;\n    }\n\n    const result = this._detachChild(deletedItem);\n    if (result.modified === false) {\n      return null;\n    }\n\n    return result.modified.updates[0];\n  }\n\n  /** @internal */\n  private _applyRemoteInsert(op: CreateOp): ApplyResult {\n    if (this._pool === undefined) {\n      throw new Error(\"Can't attach child if managed pool is not present\");\n    }\n\n    const key = asPos(op.parentKey);\n\n    const existingItemIndex = this._indexOfPosition(key);\n\n    if (existingItemIndex !== -1) {\n      // If change is remote => assign a temporary position to existing child until we get the fix from the backend\n      this._shiftItemPosition(existingItemIndex, key);\n    }\n\n    const { newItem, newIndex } = this._createAttachItemAndSort(op, key);\n\n    // TODO: add move udpate?\n    return {\n      modified: makeUpdate(this, [insertDelta(newIndex, newItem)]),\n      reverse: [],\n    };\n  }\n\n  /** @internal */\n  private _applyInsertAck(op: CreateOp): ApplyResult {\n    const existingItem = this._items.find((item) => item._id === op.id);\n    const key = asPos(op.parentKey);\n\n    const itemIndexAtPosition = this._indexOfPosition(key);\n\n    if (existingItem) {\n      if (existingItem._parentKey === key) {\n        // Normal case, no modification\n        return {\n          modified: false,\n        };\n      } else {\n        const oldPositionIndex = this._items.indexOf(existingItem);\n        if (itemIndexAtPosition !== -1) {\n          this._shiftItemPosition(itemIndexAtPosition, key);\n        }\n\n        existingItem._setParentLink(this, key);\n        this._sortItems();\n\n        const newIndex = this._indexOfPosition(key);\n\n        if (newIndex === oldPositionIndex) {\n          return { modified: false };\n        }\n\n        return {\n          modified: makeUpdate(this, [\n            moveDelta(oldPositionIndex, newIndex, existingItem),\n          ]),\n          reverse: [],\n        };\n      }\n    } else {\n      const orphan = nn(this._pool).getNode(op.id);\n      if (orphan && this._implicitlyDeletedItems.has(orphan)) {\n        // Implicit delete after set\n        orphan._setParentLink(this, key);\n        this._implicitlyDeletedItems.delete(orphan);\n\n        this._insertAndSort(orphan);\n\n        const newIndex = this._indexOfPosition(key);\n\n        return {\n          modified: makeUpdate(this, [insertDelta(newIndex, orphan)]),\n          reverse: [],\n        };\n      } else {\n        if (itemIndexAtPosition !== -1) {\n          this._shiftItemPosition(itemIndexAtPosition, key);\n        }\n\n        const { newItem, newIndex } = this._createAttachItemAndSort(op, key);\n\n        return {\n          modified: makeUpdate(this, [insertDelta(newIndex, newItem)]),\n          reverse: [],\n        };\n      }\n    }\n  }\n\n  /** @internal */\n  private _applyInsertUndoRedo(op: CreateOp): ApplyResult {\n    const { id, parentKey: key } = op;\n    const child = creationOpToLiveNode(op);\n\n    if (this._pool?.getNode(id) !== undefined) {\n      return { modified: false };\n    }\n\n    child._attach(id, nn(this._pool));\n    child._setParentLink(this, key);\n\n    const existingItemIndex = this._indexOfPosition(key);\n\n    let newKey = key;\n\n    if (existingItemIndex !== -1) {\n      const before = this._items[existingItemIndex]?._parentPos;\n      const after = this._items[existingItemIndex + 1]?._parentPos;\n\n      newKey = makePosition(before, after);\n      child._setParentLink(this, newKey);\n    }\n\n    this._insertAndSort(child);\n\n    const newIndex = this._indexOfPosition(newKey);\n\n    return {\n      modified: makeUpdate(this, [insertDelta(newIndex, child)]),\n      reverse: [{ type: OpCode.DELETE_CRDT, id }],\n    };\n  }\n\n  /** @internal */\n  private _applySetUndoRedo(op: CreateOp): ApplyResult {\n    const { id, parentKey: key } = op;\n    const child = creationOpToLiveNode(op);\n\n    if (this._pool?.getNode(id) !== undefined) {\n      return { modified: false };\n    }\n\n    this._unacknowledgedSets.set(key, nn(op.opId));\n\n    const indexOfItemWithSameKey = this._indexOfPosition(key);\n\n    child._attach(id, nn(this._pool));\n    child._setParentLink(this, key);\n\n    const newKey = key;\n\n    // If there is already an item at this position\n    if (indexOfItemWithSameKey !== -1) {\n      // TODO: Should we add this item to implictly deleted item?\n      const existingItem = this._items[indexOfItemWithSameKey];\n      existingItem._detach();\n\n      this._items[indexOfItemWithSameKey] = child;\n\n      const reverse = HACK_addIntentAndDeletedIdToOperation(\n        existingItem._toOps(nn(this._id), key, this._pool),\n        op.id\n      );\n\n      const delta = [setDelta(indexOfItemWithSameKey, child)];\n      const deletedDelta = this._detachItemAssociatedToSetOperation(\n        op.deletedId\n      );\n      if (deletedDelta) {\n        delta.push(deletedDelta);\n      }\n\n      return {\n        modified: makeUpdate(this, delta),\n        reverse,\n      };\n    } else {\n      this._insertAndSort(child);\n\n      // TODO: Use delta\n      this._detachItemAssociatedToSetOperation(op.deletedId);\n\n      const newIndex = this._indexOfPosition(newKey);\n\n      return {\n        reverse: [{ type: OpCode.DELETE_CRDT, id }],\n        modified: makeUpdate(this, [insertDelta(newIndex, child)]),\n      };\n    }\n  }\n\n  /** @internal */\n  _attachChild(op: CreateOp, source: OpSource): ApplyResult {\n    if (this._pool === undefined) {\n      throw new Error(\"Can't attach child if managed pool is not present\");\n    }\n\n    let result: ApplyResult;\n\n    if (op.intent === \"set\") {\n      if (source === OpSource.REMOTE) {\n        result = this._applySetRemote(op);\n      } else if (source === OpSource.ACK) {\n        result = this._applySetAck(op);\n      } else {\n        result = this._applySetUndoRedo(op);\n      }\n    } else {\n      if (source === OpSource.REMOTE) {\n        result = this._applyRemoteInsert(op);\n      } else if (source === OpSource.ACK) {\n        result = this._applyInsertAck(op);\n      } else {\n        result = this._applyInsertUndoRedo(op);\n      }\n    }\n\n    if (result.modified !== false) {\n      this.invalidate();\n    }\n\n    return result;\n  }\n\n  /** @internal */\n  _detachChild(\n    child: LiveNode\n  ): { reverse: Op[]; modified: LiveListUpdates<TItem> } | { modified: false } {\n    if (child) {\n      const parentKey = nn(child._parentKey);\n      const reverse = child._toOps(nn(this._id), parentKey, this._pool);\n\n      const indexToDelete = this._items.indexOf(child);\n\n      if (indexToDelete === -1) {\n        return {\n          modified: false,\n        };\n      }\n\n      this._items.splice(indexToDelete, 1);\n      this.invalidate();\n\n      child._detach();\n\n      return {\n        modified: makeUpdate(this, [deleteDelta(indexToDelete)]),\n        reverse,\n      };\n    }\n\n    return { modified: false };\n  }\n\n  /** @internal */\n  private _applySetChildKeyRemote(newKey: Pos, child: LiveNode): ApplyResult {\n    if (this._implicitlyDeletedItems.has(child)) {\n      this._implicitlyDeletedItems.delete(child);\n\n      child._setParentLink(this, newKey);\n      this._insertAndSort(child);\n\n      const newIndex = this._items.indexOf(child);\n\n      // TODO: Shift existing item?\n\n      return {\n        modified: makeUpdate(this, [insertDelta(newIndex, child)]),\n        reverse: [],\n      };\n    }\n\n    const previousKey = child._parentKey;\n\n    if (newKey === previousKey) {\n      return {\n        modified: false,\n      };\n    }\n\n    // TODO: should we look at orphan\n    const existingItemIndex = this._indexOfPosition(newKey);\n\n    // Normal case\n    if (existingItemIndex === -1) {\n      const previousIndex = this._items.indexOf(child);\n      child._setParentLink(this, newKey);\n      this._sortItems();\n      const newIndex = this._items.indexOf(child);\n\n      if (newIndex === previousIndex) {\n        return {\n          modified: false,\n        };\n      }\n\n      return {\n        modified: makeUpdate(this, [moveDelta(previousIndex, newIndex, child)]),\n        reverse: [],\n      };\n    } else {\n      this._items[existingItemIndex]._setParentLink(\n        this,\n        makePosition(newKey, this._items[existingItemIndex + 1]?._parentPos)\n      );\n\n      const previousIndex = this._items.indexOf(child);\n      child._setParentLink(this, newKey);\n      this._sortItems();\n      const newIndex = this._items.indexOf(child);\n\n      if (newIndex === previousIndex) {\n        return {\n          modified: false,\n        };\n      }\n\n      return {\n        modified: makeUpdate(this, [moveDelta(previousIndex, newIndex, child)]),\n        reverse: [],\n      };\n    }\n  }\n\n  /** @internal */\n  private _applySetChildKeyAck(newKey: Pos, child: LiveNode): ApplyResult {\n    const previousKey = nn(child._parentKey);\n\n    if (this._implicitlyDeletedItems.has(child)) {\n      const existingItemIndex = this._indexOfPosition(newKey);\n\n      this._implicitlyDeletedItems.delete(child);\n\n      if (existingItemIndex !== -1) {\n        this._items[existingItemIndex]._setParentLink(\n          this,\n          makePosition(newKey, this._items[existingItemIndex + 1]?._parentPos)\n        );\n      }\n\n      child._setParentLink(this, newKey);\n      this._insertAndSort(child);\n\n      // TODO\n      return {\n        modified: false,\n      };\n    } else {\n      if (newKey === previousKey) {\n        return {\n          modified: false,\n        };\n      }\n\n      // At this point, it means that the item has been moved before receiving the ack\n      // so we replace it at the right position\n\n      const previousIndex = this._items.indexOf(child);\n\n      const existingItemIndex = this._indexOfPosition(newKey);\n\n      if (existingItemIndex !== -1) {\n        this._items[existingItemIndex]._setParentLink(\n          this,\n          makePosition(newKey, this._items[existingItemIndex + 1]?._parentPos)\n        );\n      }\n\n      child._setParentLink(this, newKey);\n      this._sortItems();\n\n      const newIndex = this._items.indexOf(child);\n\n      if (previousIndex === newIndex) {\n        // parentKey changed but final position in the list didn't\n        return {\n          modified: false,\n        };\n      } else {\n        return {\n          modified: makeUpdate(this, [\n            moveDelta(previousIndex, newIndex, child),\n          ]),\n          reverse: [],\n        };\n      }\n    }\n  }\n\n  /** @internal */\n  private _applySetChildKeyUndoRedo(newKey: Pos, child: LiveNode): ApplyResult {\n    const previousKey = nn(child._parentKey);\n\n    const previousIndex = this._items.indexOf(child);\n    const existingItemIndex = this._indexOfPosition(newKey);\n\n    // Assign a temporary position until we get the fix from the backend\n    if (existingItemIndex !== -1) {\n      this._items[existingItemIndex]._setParentLink(\n        this,\n        makePosition(newKey, this._items[existingItemIndex + 1]?._parentPos)\n      );\n    }\n\n    child._setParentLink(this, newKey);\n\n    this._sortItems();\n\n    const newIndex = this._items.indexOf(child);\n\n    if (previousIndex === newIndex) {\n      return {\n        modified: false,\n      };\n    }\n\n    return {\n      modified: makeUpdate(this, [moveDelta(previousIndex, newIndex, child)]),\n      reverse: [\n        {\n          type: OpCode.SET_PARENT_KEY,\n          id: nn(child._id),\n          parentKey: previousKey,\n        },\n      ],\n    };\n  }\n\n  /** @internal */\n  _setChildKey(newKey: Pos, child: LiveNode, source: OpSource): ApplyResult {\n    if (source === OpSource.REMOTE) {\n      return this._applySetChildKeyRemote(newKey, child);\n    } else if (source === OpSource.ACK) {\n      return this._applySetChildKeyAck(newKey, child);\n    } else {\n      return this._applySetChildKeyUndoRedo(newKey, child);\n    }\n  }\n\n  /** @internal */\n  _apply(op: Op, isLocal: boolean): ApplyResult {\n    return super._apply(op, isLocal);\n  }\n\n  /** @internal */\n  _serialize(): SerializedList {\n    if (this.parent.type !== \"HasParent\") {\n      throw new Error(\"Cannot serialize LiveList if parent is missing\");\n    }\n\n    return {\n      type: CrdtType.LIST,\n      parentId: nn(this.parent.node._id, \"Parent node expected to have ID\"),\n      parentKey: this.parent.key,\n    };\n  }\n\n  /**\n   * Returns the number of elements.\n   */\n  get length(): number {\n    return this._items.length;\n  }\n\n  /**\n   * Adds one element to the end of the LiveList.\n   * @param element The element to add to the end of the LiveList.\n   */\n  push(element: TItem): void {\n    this._pool?.assertStorageIsWritable();\n    return this.insert(element, this.length);\n  }\n\n  /**\n   * Inserts one element at a specified index.\n   * @param element The element to insert.\n   * @param index The index at which you want to insert the element.\n   */\n  insert(element: TItem, index: number): void {\n    this._pool?.assertStorageIsWritable();\n    if (index < 0 || index > this._items.length) {\n      throw new Error(\n        `Cannot insert list item at index \"\u001D${index}\". index should be between 0 and ${this._items.length}`\n      );\n    }\n\n    const before = this._items[index - 1]\n      ? this._items[index - 1]._parentPos\n      : undefined;\n    const after = this._items[index]\n      ? this._items[index]._parentPos\n      : undefined;\n\n    const position = makePosition(before, after);\n\n    const value = lsonToLiveNode(element);\n    value._setParentLink(this, position);\n\n    this._insertAndSort(value);\n\n    if (this._pool && this._id) {\n      const id = this._pool.generateId();\n      value._attach(id, this._pool);\n\n      this._pool.dispatch(\n        value._toOps(this._id, position, this._pool),\n        [{ type: OpCode.DELETE_CRDT, id }],\n        new Map<string, LiveListUpdates<TItem>>([\n          [this._id, makeUpdate(this, [insertDelta(index, value)])],\n        ])\n      );\n    }\n  }\n\n  /**\n   * Move one element from one index to another.\n   * @param index The index of the element to move\n   * @param targetIndex The index where the element should be after moving.\n   */\n  move(index: number, targetIndex: number): void {\n    this._pool?.assertStorageIsWritable();\n    if (targetIndex < 0) {\n      throw new Error(\"targetIndex cannot be less than 0\");\n    }\n\n    if (targetIndex >= this._items.length) {\n      throw new Error(\n        \"targetIndex cannot be greater or equal than the list length\"\n      );\n    }\n\n    if (index < 0) {\n      throw new Error(\"index cannot be less than 0\");\n    }\n\n    if (index >= this._items.length) {\n      throw new Error(\"index cannot be greater or equal than the list length\");\n    }\n\n    let beforePosition = null;\n    let afterPosition = null;\n\n    if (index < targetIndex) {\n      afterPosition =\n        targetIndex === this._items.length - 1\n          ? undefined\n          : this._items[targetIndex + 1]._parentPos;\n      beforePosition = this._items[targetIndex]._parentPos;\n    } else {\n      afterPosition = this._items[targetIndex]._parentPos;\n      beforePosition =\n        targetIndex === 0 ? undefined : this._items[targetIndex - 1]._parentPos;\n    }\n\n    const position = makePosition(beforePosition, afterPosition);\n\n    const item = this._items[index];\n    const previousPosition = item._getParentKeyOrThrow();\n    item._setParentLink(this, position);\n    this._sortItems();\n\n    if (this._pool && this._id) {\n      const storageUpdates = new Map<string, LiveListUpdates<TItem>>([\n        [this._id, makeUpdate(this, [moveDelta(index, targetIndex, item)])],\n      ]);\n\n      this._pool.dispatch(\n        [\n          {\n            type: OpCode.SET_PARENT_KEY,\n            id: nn(item._id),\n            opId: this._pool.generateOpId(),\n            parentKey: position,\n          },\n        ],\n        [\n          {\n            type: OpCode.SET_PARENT_KEY,\n            id: nn(item._id),\n            parentKey: previousPosition,\n          },\n        ],\n        storageUpdates\n      );\n    }\n  }\n\n  /**\n   * Deletes an element at the specified index\n   * @param index The index of the element to delete\n   */\n  delete(index: number): void {\n    this._pool?.assertStorageIsWritable();\n    if (index < 0 || index >= this._items.length) {\n      throw new Error(\n        `Cannot delete list item at index \"${index}\". index should be between 0 and ${\n          this._items.length - 1\n        }`\n      );\n    }\n\n    const item = this._items[index];\n    item._detach();\n    this._items.splice(index, 1);\n    this.invalidate();\n\n    if (this._pool) {\n      const childRecordId = item._id;\n      if (childRecordId) {\n        const storageUpdates = new Map<string, LiveListUpdates<TItem>>();\n        storageUpdates.set(\n          nn(this._id),\n          makeUpdate(this, [deleteDelta(index)])\n        );\n\n        this._pool.dispatch(\n          [\n            {\n              id: childRecordId,\n              opId: this._pool.generateOpId(),\n              type: OpCode.DELETE_CRDT,\n            },\n          ],\n          item._toOps(nn(this._id), item._getParentKeyOrThrow()),\n          storageUpdates\n        );\n      }\n    }\n  }\n\n  clear(): void {\n    this._pool?.assertStorageIsWritable();\n    if (this._pool) {\n      const ops: Op[] = [];\n      const reverseOps: Op[] = [];\n\n      const updateDelta: LiveListUpdateDelta[] = [];\n\n      for (const item of this._items) {\n        item._detach();\n        const childId = item._id;\n        if (childId) {\n          ops.push({\n            type: OpCode.DELETE_CRDT,\n            id: childId,\n            opId: this._pool.generateOpId(),\n          });\n          reverseOps.push(\n            ...item._toOps(nn(this._id), item._getParentKeyOrThrow())\n          );\n\n          // Index is always 0 because updates are applied one after another\n          // when applied on an immutable state\n          updateDelta.push(deleteDelta(0));\n        }\n      }\n\n      this._items = [];\n      this.invalidate();\n\n      const storageUpdates = new Map<string, LiveListUpdates<TItem>>();\n      storageUpdates.set(nn(this._id), makeUpdate(this, updateDelta));\n\n      this._pool.dispatch(ops, reverseOps, storageUpdates);\n    } else {\n      for (const item of this._items) {\n        item._detach();\n      }\n      this._items = [];\n      this.invalidate();\n    }\n  }\n\n  set(index: number, item: TItem): void {\n    this._pool?.assertStorageIsWritable();\n    if (index < 0 || index >= this._items.length) {\n      throw new Error(\n        `Cannot set list item at index \"\u001D${index}\". index should be between 0 and ${\n          this._items.length - 1\n        }`\n      );\n    }\n\n    const existingItem = this._items[index];\n    const position = existingItem._getParentKeyOrThrow();\n\n    const existingId = existingItem._id;\n    existingItem._detach();\n\n    const value = lsonToLiveNode(item);\n    value._setParentLink(this, position);\n    this._items[index] = value;\n    this.invalidate();\n\n    if (this._pool && this._id) {\n      const id = this._pool.generateId();\n      value._attach(id, this._pool);\n\n      const storageUpdates = new Map<string, LiveListUpdates<TItem>>();\n      storageUpdates.set(this._id, makeUpdate(this, [setDelta(index, value)]));\n\n      const ops = HACK_addIntentAndDeletedIdToOperation(\n        value._toOps(this._id, position, this._pool),\n        existingId\n      );\n      this._unacknowledgedSets.set(position, nn(ops[0].opId));\n      const reverseOps = HACK_addIntentAndDeletedIdToOperation(\n        existingItem._toOps(this._id, position, undefined),\n        id\n      );\n\n      this._pool.dispatch(ops, reverseOps, storageUpdates);\n    }\n  }\n\n  /**\n   * Returns an Array of all the elements in the LiveList.\n   */\n  toArray(): TItem[] {\n    return this._items.map(\n      (entry) => liveNodeToLson(entry) as TItem\n      //                               ^^^^^^^^\n      //                               FIXME! This isn't safe.\n    );\n  }\n\n  /**\n   * Tests whether all elements pass the test implemented by the provided function.\n   * @param predicate Function to test for each element, taking two arguments (the element and its index).\n   * @returns true if the predicate function returns a truthy value for every element. Otherwise, false.\n   */\n  every(predicate: (value: TItem, index: number) => unknown): boolean {\n    return this.toArray().every(predicate);\n  }\n\n  /**\n   * Creates an array with all elements that pass the test implemented by the provided function.\n   * @param predicate Function to test each element of the LiveList. Return a value that coerces to true to keep the element, or to false otherwise.\n   * @returns An array with the elements that pass the test.\n   */\n  filter(predicate: (value: TItem, index: number) => unknown): TItem[] {\n    return this.toArray().filter(predicate);\n  }\n\n  /**\n   * Returns the first element that satisfies the provided testing function.\n   * @param predicate Function to execute on each value.\n   * @returns The value of the first element in the LiveList that satisfies the provided testing function. Otherwise, undefined is returned.\n   */\n  find(predicate: (value: TItem, index: number) => unknown): TItem | undefined {\n    return this.toArray().find(predicate);\n  }\n\n  /**\n   * Returns the index of the first element in the LiveList that satisfies the provided testing function.\n   * @param predicate Function to execute on each value until the function returns true, indicating that the satisfying element was found.\n   * @returns The index of the first element in the LiveList that passes the test. Otherwise, -1.\n   */\n  findIndex(predicate: (value: TItem, index: number) => unknown): number {\n    return this.toArray().findIndex(predicate);\n  }\n\n  /**\n   * Executes a provided function once for each element.\n   * @param callbackfn Function to execute on each element.\n   */\n  forEach(callbackfn: (value: TItem, index: number) => void): void {\n    return this.toArray().forEach(callbackfn);\n  }\n\n  /**\n   * Get the element at the specified index.\n   * @param index The index on the element to get.\n   * @returns The element at the specified index or undefined.\n   */\n  get(index: number): TItem | undefined {\n    if (index < 0 || index >= this._items.length) {\n      return undefined;\n    }\n\n    return liveNodeToLson(this._items[index]) as TItem | undefined;\n    //                                           ^^^^^^^^^^^^^^^^^\n    //                                           FIXME! This isn't safe.\n  }\n\n  /**\n   * Returns the first index at which a given element can be found in the LiveList, or -1 if it is not present.\n   * @param searchElement Element to locate.\n   * @param fromIndex The index to start the search at.\n   * @returns The first index of the element in the LiveList; -1 if not found.\n   */\n  indexOf(searchElement: TItem, fromIndex?: number): number {\n    return this.toArray().indexOf(searchElement, fromIndex);\n  }\n\n  /**\n   * Returns the last index at which a given element can be found in the LiveList, or -1 if it is not present. The LiveLsit is searched backwards, starting at fromIndex.\n   * @param searchElement Element to locate.\n   * @param fromIndex The index at which to start searching backwards.\n   * @returns\n   */\n  lastIndexOf(searchElement: TItem, fromIndex?: number): number {\n    return this.toArray().lastIndexOf(searchElement, fromIndex);\n  }\n\n  /**\n   * Creates an array populated with the results of calling a provided function on every element.\n   * @param callback Function that is called for every element.\n   * @returns An array with each element being the result of the callback function.\n   */\n  map<U>(callback: (value: TItem, index: number) => U): U[] {\n    return this._items.map((entry, i) =>\n      callback(\n        liveNodeToLson(entry) as TItem,\n        //                    ^^^^^^^^\n        //                    FIXME! This isn't safe.\n        i\n      )\n    );\n  }\n\n  /**\n   * Tests whether at least one element in the LiveList passes the test implemented by the provided function.\n   * @param predicate Function to test for each element.\n   * @returns true if the callback function returns a truthy value for at least one element. Otherwise, false.\n   */\n  some(predicate: (value: TItem, index: number) => unknown): boolean {\n    return this.toArray().some(predicate);\n  }\n\n  [Symbol.iterator](): IterableIterator<TItem> {\n    return new LiveListIterator(this._items);\n  }\n\n  /** @internal */\n  private _createAttachItemAndSort(\n    op: CreateOp,\n    key: string\n  ): {\n    newItem: LiveNode;\n    newIndex: number;\n  } {\n    const newItem = creationOpToLiveNode(op);\n\n    newItem._attach(op.id, nn(this._pool));\n    newItem._setParentLink(this, key);\n\n    this._insertAndSort(newItem);\n\n    const newIndex = this._indexOfPosition(key);\n\n    return { newItem, newIndex };\n  }\n\n  /** @internal */\n  private _shiftItemPosition(index: number, key: Pos) {\n    const shiftedPosition = makePosition(\n      key,\n      this._items.length > index + 1\n        ? this._items[index + 1]?._parentPos\n        : undefined\n    );\n\n    this._items[index]._setParentLink(this, shiftedPosition);\n  }\n\n  /** @internal */\n  _toTreeNode(key: string): DevTools.LsonTreeNode {\n    return {\n      type: \"LiveList\",\n      id: this._id ?? nanoid(),\n      key,\n      payload: this._items.map((item, index) =>\n        item.toTreeNode(index.toString())\n      ),\n    };\n  }\n\n  toImmutable(): readonly ToImmutable<TItem>[] {\n    // Don't implement actual toJson logic in here. Implement it in ._toImmutable()\n    // instead. This helper merely exists to help TypeScript infer better\n    // return types.\n    return super.toImmutable() as readonly ToImmutable<TItem>[];\n  }\n\n  /** @internal */\n  _toImmutable(): readonly ToImmutable<TItem>[] {\n    const result = this._items.map((node) => node.toImmutable());\n    return (\n      process.env.NODE_ENV === \"production\" ? result : Object.freeze(result)\n    ) as readonly ToImmutable<TItem>[];\n  }\n\n  clone(): LiveList<TItem> {\n    return new LiveList(this._items.map((item) => item.clone() as TItem));\n  }\n}\n\nclass LiveListIterator<T extends Lson> implements IterableIterator<T> {\n  private _innerIterator: IterableIterator<LiveNode>;\n\n  constructor(items: Array<LiveNode>) {\n    this._innerIterator = items[Symbol.iterator]();\n  }\n\n  [Symbol.iterator](): IterableIterator<T> {\n    return this;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this._innerIterator.next();\n\n    if (result.done) {\n      return {\n        done: true,\n        value: undefined,\n      };\n    }\n\n    const value = liveNodeToLson(result.value) as T;\n    //                                         ^^^^\n    //                                         FIXME! This isn't safe.\n    return { value };\n  }\n}\n\nfunction makeUpdate<TItem extends Lson>(\n  liveList: LiveList<TItem>,\n  deltaUpdates: LiveListUpdateDelta[]\n): LiveListUpdates<TItem> {\n  return {\n    node: liveList,\n    type: \"LiveList\",\n    updates: deltaUpdates,\n  };\n}\n\nfunction setDelta(index: number, item: LiveNode): LiveListUpdateDelta {\n  return {\n    index,\n    type: \"set\",\n    item: item instanceof LiveRegister ? item.data : item,\n  };\n}\n\nfunction deleteDelta(index: number): LiveListUpdateDelta {\n  return {\n    index,\n    type: \"delete\",\n  };\n}\n\nfunction insertDelta(index: number, item: LiveNode): LiveListUpdateDelta {\n  return {\n    index,\n    type: \"insert\",\n    item: item instanceof LiveRegister ? item.data : item,\n  };\n}\n\nfunction moveDelta(\n  previousIndex: number,\n  index: number,\n  item: LiveNode\n): LiveListUpdateDelta {\n  return {\n    index,\n    type: \"move\",\n    previousIndex,\n    item: item instanceof LiveRegister ? item.data : item,\n  };\n}\n\n/**\n * This function is only temporary.\n * As soon as we refactor the operations structure,\n * serializing a LiveStructure should not know anything about intent\n */\nfunction HACK_addIntentAndDeletedIdToOperation(\n  ops: CreateOp[],\n  deletedId: string | undefined\n): CreateOp[] {\n  return ops.map((op, index) => {\n    if (index === 0) {\n      // NOTE: Only patch the first Op here\n      const firstOp = op;\n      return {\n        ...firstOp,\n        intent: \"set\",\n        deletedId,\n      };\n    } else {\n      return op;\n    }\n  });\n}\n", "/**\n * Freezes the given argument, but only in development builds. In production\n * builds, this is a no-op for performance reasons.\n */\nexport const freeze: typeof Object.freeze =\n  process.env.NODE_ENV === \"production\"\n    ? /* istanbul ignore next */ (((x: unknown) => x) as typeof Object.freeze)\n    : Object.freeze;\n", "import { nn } from \"../lib/assert\";\nimport { freeze } from \"../lib/freeze\";\nimport { nanoid } from \"../lib/nanoid\";\nimport type { CreateMapOp, CreateOp, Op } from \"../protocol/Op\";\nimport { OpCode } from \"../protocol/Op\";\nimport type { IdTuple, SerializedMap } from \"../protocol/SerializedCrdt\";\nimport { CrdtType } from \"../protocol/SerializedCrdt\";\nimport type * as DevTools from \"../types/DevToolsTreeNode\";\nimport type { ParentToChildNodeMap } from \"../types/NodeMap\";\nimport type { ApplyResult, ManagedPool } from \"./AbstractCrdt\";\nimport { AbstractCrdt, OpSource } from \"./AbstractCrdt\";\nimport {\n  creationOpToLiveNode,\n  deserialize,\n  isLiveNode,\n  liveNodeToLson,\n  lsonToLiveNode,\n} from \"./liveblocks-helpers\";\nimport type { LiveNode, Lson } from \"./Lson\";\nimport type { UpdateDelta } from \"./UpdateDelta\";\nimport type { ToImmutable } from \"./utils\";\n\n/**\n * A LiveMap notification that is sent in-client to any subscribers whenever\n * one or more of the values inside the LiveMap instance have changed.\n */\nexport type LiveMapUpdates<TKey extends string, TValue extends Lson> = {\n  type: \"LiveMap\";\n  node: LiveMap<TKey, TValue>;\n  updates: { [key: string]: UpdateDelta };\n  //               ^^^^^^\n  //               FIXME: `string` is not specific enough here. See if we can\n  //               improve this type to match TKey!\n};\n\n/**\n * The LiveMap class is similar to a JavaScript Map that is synchronized on all clients.\n * Keys should be a string, and values should be serializable to JSON.\n * If multiple clients update the same property simultaneously, the last modification received by the Liveblocks servers is the winner.\n */\nexport class LiveMap<\n  TKey extends string,\n  TValue extends Lson,\n> extends AbstractCrdt {\n  /** @internal */\n  private _map: Map<TKey, LiveNode>;\n  /** @internal */\n  private unacknowledgedSet: Map<TKey, string>;\n\n  constructor(entries?: readonly (readonly [TKey, TValue])[] | undefined) {\n    super();\n    this.unacknowledgedSet = new Map<TKey, string>();\n\n    if (entries) {\n      const mappedEntries: [TKey, LiveNode][] = [];\n      for (const [key, value] of entries) {\n        const node = lsonToLiveNode(value);\n        node._setParentLink(this, key);\n        mappedEntries.push([key, node]);\n      }\n      this._map = new Map(mappedEntries);\n    } else {\n      this._map = new Map();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _toOps(parentId: string, parentKey: string, pool?: ManagedPool): CreateOp[] {\n    if (this._id === undefined) {\n      throw new Error(\"Cannot serialize item is not attached\");\n    }\n\n    const ops: CreateOp[] = [];\n    const op: CreateMapOp = {\n      id: this._id,\n      opId: pool?.generateOpId(),\n      type: OpCode.CREATE_MAP,\n      parentId,\n      parentKey,\n    };\n\n    ops.push(op);\n\n    for (const [key, value] of this._map) {\n      ops.push(...value._toOps(this._id, key, pool));\n    }\n\n    return ops;\n  }\n\n  /**\n   * @internal\n   */\n  static _deserialize(\n    [id, _item]: IdTuple<SerializedMap>,\n    parentToChildren: ParentToChildNodeMap,\n    pool: ManagedPool\n  ): LiveMap<string, Lson> {\n    const map = new LiveMap();\n    map._attach(id, pool);\n\n    const children = parentToChildren.get(id);\n    if (children === undefined) {\n      return map;\n    }\n\n    for (const [id, crdt] of children) {\n      const child = deserialize([id, crdt], parentToChildren, pool);\n      child._setParentLink(map, crdt.parentKey);\n      map._map.set(crdt.parentKey, child);\n      map.invalidate();\n    }\n\n    return map;\n  }\n\n  /**\n   * @internal\n   */\n  _attach(id: string, pool: ManagedPool): void {\n    super._attach(id, pool);\n\n    for (const [_key, value] of this._map) {\n      if (isLiveNode(value)) {\n        value._attach(pool.generateId(), pool);\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _attachChild(op: CreateOp, source: OpSource): ApplyResult {\n    if (this._pool === undefined) {\n      throw new Error(\"Can't attach child if managed pool is not present\");\n    }\n\n    const { id, parentKey, opId } = op;\n\n    const key = parentKey as TKey;\n    //                    ^^^^^^^ TODO: Fix me!\n\n    const child = creationOpToLiveNode(op);\n\n    if (this._pool.getNode(id) !== undefined) {\n      return { modified: false };\n    }\n\n    if (source === OpSource.ACK) {\n      const lastUpdateOpId = this.unacknowledgedSet.get(key);\n      if (lastUpdateOpId === opId) {\n        // Acknowlegment from local operation\n        this.unacknowledgedSet.delete(key);\n        return { modified: false };\n      } else if (lastUpdateOpId !== undefined) {\n        // Another local set has overriden the value, so we do nothing\n        return { modified: false };\n      }\n    } else if (source === OpSource.REMOTE) {\n      // If a remote operation set an item,\n      // delete the unacknowledgedSet associated to the key\n      // to make sure any future ack can override it\n      this.unacknowledgedSet.delete(key);\n    }\n\n    const previousValue = this._map.get(key);\n    let reverse: Op[];\n    if (previousValue) {\n      const thisId = nn(this._id);\n      reverse = previousValue._toOps(thisId, key);\n      previousValue._detach();\n    } else {\n      reverse = [{ type: OpCode.DELETE_CRDT, id }];\n    }\n\n    child._setParentLink(this, key);\n    child._attach(id, this._pool);\n    this._map.set(key, child);\n    this.invalidate();\n\n    return {\n      modified: {\n        node: this,\n        type: \"LiveMap\",\n        updates: { [key]: { type: \"update\" } },\n      },\n      reverse,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  _detach(): void {\n    super._detach();\n\n    for (const item of this._map.values()) {\n      item._detach();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _detachChild(child: LiveNode): ApplyResult {\n    const id = nn(this._id);\n    const parentKey = nn(child._parentKey);\n    const reverse = child._toOps(id, parentKey, this._pool);\n\n    for (const [key, value] of this._map) {\n      if (value === child) {\n        this._map.delete(key);\n        this.invalidate();\n      }\n    }\n\n    child._detach();\n\n    const storageUpdate: LiveMapUpdates<TKey, TValue> = {\n      node: this,\n      type: \"LiveMap\",\n      updates: { [parentKey]: { type: \"delete\" } },\n    };\n\n    return { modified: storageUpdate, reverse };\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(): SerializedMap {\n    if (this.parent.type !== \"HasParent\") {\n      throw new Error(\"Cannot serialize LiveMap if parent is missing\");\n    }\n\n    return {\n      type: CrdtType.MAP,\n      parentId: nn(this.parent.node._id, \"Parent node expected to have ID\"),\n      parentKey: this.parent.key,\n    };\n  }\n\n  /**\n   * Returns a specified element from the LiveMap.\n   * @param key The key of the element to return.\n   * @returns The element associated with the specified key, or undefined if the key can't be found in the LiveMap.\n   */\n  get(key: TKey): TValue | undefined {\n    const value = this._map.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    return liveNodeToLson(value) as TValue | undefined;\n    //                           ^^^^^^^^^^^^^^^^^^^^^\n    //                           FIXME! This isn't safe.\n  }\n\n  /**\n   * Adds or updates an element with a specified key and a value.\n   * @param key The key of the element to add. Should be a string.\n   * @param value The value of the element to add. Should be serializable to JSON.\n   */\n  set(key: TKey, value: TValue): void {\n    this._pool?.assertStorageIsWritable();\n    const oldValue = this._map.get(key);\n\n    if (oldValue) {\n      oldValue._detach();\n    }\n\n    const item = lsonToLiveNode(value);\n    item._setParentLink(this, key);\n\n    this._map.set(key, item);\n    this.invalidate();\n\n    if (this._pool && this._id) {\n      const id = this._pool.generateId();\n      item._attach(id, this._pool);\n\n      const storageUpdates = new Map<string, LiveMapUpdates<TKey, TValue>>();\n      storageUpdates.set(this._id, {\n        node: this,\n        type: \"LiveMap\",\n        updates: { [key]: { type: \"update\" } },\n      });\n\n      const ops = item._toOps(this._id, key, this._pool);\n\n      this.unacknowledgedSet.set(key, nn(ops[0].opId));\n\n      this._pool.dispatch(\n        item._toOps(this._id, key, this._pool),\n        oldValue\n          ? oldValue._toOps(this._id, key)\n          : [{ type: OpCode.DELETE_CRDT, id }],\n        storageUpdates\n      );\n    }\n  }\n\n  /**\n   * Returns the number of elements in the LiveMap.\n   */\n  get size(): number {\n    return this._map.size;\n  }\n\n  /**\n   * Returns a boolean indicating whether an element with the specified key exists or not.\n   * @param key The key of the element to test for presence.\n   */\n  has(key: TKey): boolean {\n    return this._map.has(key);\n  }\n\n  /**\n   * Removes the specified element by key.\n   * @param key The key of the element to remove.\n   * @returns true if an element existed and has been removed, or false if the element does not exist.\n   */\n  delete(key: TKey): boolean {\n    this._pool?.assertStorageIsWritable();\n    const item = this._map.get(key);\n\n    if (item === undefined) {\n      return false;\n    }\n\n    item._detach();\n    this._map.delete(key);\n    this.invalidate();\n\n    if (this._pool && item._id) {\n      const thisId = nn(this._id);\n      const storageUpdates = new Map<string, LiveMapUpdates<TKey, TValue>>();\n      storageUpdates.set(thisId, {\n        node: this,\n        type: \"LiveMap\",\n        updates: { [key]: { type: \"delete\" } },\n      });\n      this._pool.dispatch(\n        [\n          {\n            type: OpCode.DELETE_CRDT,\n            id: item._id,\n            opId: this._pool.generateOpId(),\n          },\n        ],\n        item._toOps(thisId, key),\n        storageUpdates\n      );\n    }\n\n    return true;\n  }\n\n  /**\n   * Returns a new Iterator object that contains the [key, value] pairs for each element.\n   */\n  entries(): IterableIterator<[TKey, TValue]> {\n    const innerIterator = this._map.entries();\n\n    return {\n      [Symbol.iterator]() {\n        return this;\n      },\n      next() {\n        const iteratorValue = innerIterator.next();\n\n        if (iteratorValue.done) {\n          return {\n            done: true,\n            value: undefined,\n          };\n        }\n\n        const entry = iteratorValue.value;\n\n        const key = entry[0];\n        const value = liveNodeToLson(iteratorValue.value[1]) as TValue;\n        //                                                   ^^^^^^^^^\n        //                                                   FIXME! This isn't safe.\n        return {\n          value: [key, value],\n        };\n      },\n    };\n  }\n\n  /**\n   * Same function object as the initial value of the entries method.\n   */\n  [Symbol.iterator](): IterableIterator<[TKey, TValue]> {\n    return this.entries();\n  }\n\n  /**\n   * Returns a new Iterator object that contains the keys for each element.\n   */\n  keys(): IterableIterator<TKey> {\n    return this._map.keys();\n  }\n\n  /**\n   * Returns a new Iterator object that contains the values for each element.\n   */\n  values(): IterableIterator<TValue> {\n    const innerIterator = this._map.values();\n\n    return {\n      [Symbol.iterator]() {\n        return this;\n      },\n      next() {\n        const iteratorValue = innerIterator.next();\n\n        if (iteratorValue.done) {\n          return {\n            done: true,\n            value: undefined,\n          };\n        }\n\n        const value = liveNodeToLson(iteratorValue.value) as TValue;\n        //                                                ^^^^^^^^^\n        //                                                FIXME! This isn't safe.\n\n        return { value };\n      },\n    };\n  }\n\n  /**\n   * Executes a provided function once per each key/value pair in the Map object, in insertion order.\n   * @param callback Function to execute for each entry in the map.\n   */\n  forEach(\n    callback: (value: TValue, key: TKey, map: LiveMap<TKey, TValue>) => void\n  ): void {\n    for (const entry of this) {\n      callback(entry[1], entry[0], this);\n    }\n  }\n\n  /** @internal */\n  _toTreeNode(key: string): DevTools.LsonTreeNode {\n    return {\n      type: \"LiveMap\",\n      id: this._id ?? nanoid(),\n      key,\n      payload: Array.from(this._map.entries()).map(([key, val]) =>\n        val.toTreeNode(key)\n      ),\n    };\n  }\n\n  toImmutable(): ReadonlyMap<TKey, ToImmutable<TValue>> {\n    // Don't implement actual toImmutable logic in here. Implement it in\n    // ._toImmutable() instead. This helper merely exists to help TypeScript\n    // infer better return types.\n    return super.toImmutable() as ReadonlyMap<TKey, ToImmutable<TValue>>;\n  }\n\n  /** @internal */\n  _toImmutable(): ReadonlyMap<TKey, ToImmutable<TValue>> {\n    const result: Map<TKey, ToImmutable<TValue>> = new Map();\n    for (const [key, value] of this._map) {\n      result.set(key, value.toImmutable() as ToImmutable<TValue>);\n    }\n    return freeze(result);\n  }\n\n  clone(): LiveMap<TKey, TValue> {\n    return new LiveMap(\n      Array.from(this._map).map(([key, node]) => [key, node.clone() as TValue])\n    );\n  }\n}\n", "import type { LiveNode, Lson, LsonObject } from \"../crdts/Lson\";\nimport { nn } from \"../lib/assert\";\nimport type { JsonObject } from \"../lib/Json\";\nimport { nanoid } from \"../lib/nanoid\";\nimport { deepClone } from \"../lib/utils\";\nimport type {\n  CreateObjectOp,\n  CreateOp,\n  DeleteObjectKeyOp,\n  Op,\n  UpdateObjectOp,\n} from \"../protocol/Op\";\nimport { OpCode } from \"../protocol/Op\";\nimport type {\n  IdTuple,\n  SerializedChild,\n  SerializedCrdt,\n  SerializedObject,\n  SerializedRootObject,\n} from \"../protocol/SerializedCrdt\";\nimport { CrdtType, isRootCrdt } from \"../protocol/SerializedCrdt\";\nimport type * as DevTools from \"../types/DevToolsTreeNode\";\nimport type { ParentToChildNodeMap } from \"../types/NodeMap\";\nimport type { ApplyResult, ManagedPool } from \"./AbstractCrdt\";\nimport { AbstractCrdt, OpSource } from \"./AbstractCrdt\";\nimport {\n  creationOpToLson,\n  deserializeToLson,\n  isLiveNode,\n  isLiveStructure,\n} from \"./liveblocks-helpers\";\nimport type { UpdateDelta } from \"./UpdateDelta\";\nimport type { ToImmutable } from \"./utils\";\n\nexport type LiveObjectUpdateDelta<O extends { [key: string]: unknown }> = {\n  [K in keyof O]?: UpdateDelta | undefined;\n};\n\n/**\n * A LiveObject notification that is sent in-client to any subscribers whenever\n * one or more of the entries inside the LiveObject instance have changed.\n */\nexport type LiveObjectUpdates<TData extends LsonObject> = {\n  type: \"LiveObject\";\n  node: LiveObject<TData>;\n  updates: LiveObjectUpdateDelta<TData>;\n};\n\n/**\n * The LiveObject class is similar to a JavaScript object that is synchronized on all clients.\n * Keys should be a string, and values should be serializable to JSON.\n * If multiple clients update the same property simultaneously, the last modification received by the Liveblocks servers is the winner.\n */\nexport class LiveObject<O extends LsonObject> extends AbstractCrdt {\n  /** @internal */\n  private _map: Map<string, Lson>;\n\n  /** @internal */\n  private _propToLastUpdate: Map<string, string>;\n\n  /** @internal */\n  private static _buildRootAndParentToChildren(\n    items: IdTuple<SerializedCrdt>[]\n  ): [IdTuple<SerializedRootObject>, ParentToChildNodeMap] {\n    const parentToChildren: ParentToChildNodeMap = new Map();\n    let root: IdTuple<SerializedRootObject> | null = null;\n\n    for (const [id, crdt] of items) {\n      if (isRootCrdt(crdt)) {\n        root = [id, crdt];\n      } else {\n        const tuple: IdTuple<SerializedChild> = [id, crdt];\n        const children = parentToChildren.get(crdt.parentId);\n        if (children !== undefined) {\n          children.push(tuple);\n        } else {\n          parentToChildren.set(crdt.parentId, [tuple]);\n        }\n      }\n    }\n\n    if (root === null) {\n      throw new Error(\"Root can't be null\");\n    }\n\n    return [root, parentToChildren];\n  }\n\n  /** @internal */\n  static _fromItems<O extends LsonObject>(\n    items: IdTuple<SerializedCrdt>[],\n    pool: ManagedPool\n  ): LiveObject<O> {\n    const [root, parentToChildren] =\n      LiveObject._buildRootAndParentToChildren(items);\n    return LiveObject._deserialize(\n      root,\n      parentToChildren,\n      pool\n    ) as LiveObject<O>;\n  }\n\n  constructor(obj: O = {} as O) {\n    super();\n\n    this._propToLastUpdate = new Map<string, string>();\n\n    for (const key in obj) {\n      const value = obj[key];\n      if (value === undefined) {\n        continue;\n      } else if (isLiveNode(value)) {\n        value._setParentLink(this, key);\n      }\n    }\n\n    this._map = new Map(Object.entries(obj)) as Map<string, Lson>;\n  }\n\n  /** @internal */\n  _toOps(parentId: string, parentKey: string, pool?: ManagedPool): CreateOp[] {\n    if (this._id === undefined) {\n      throw new Error(\"Cannot serialize item is not attached\");\n    }\n\n    const opId = pool?.generateOpId();\n\n    const ops: CreateOp[] = [];\n    const op: CreateObjectOp = {\n      type: OpCode.CREATE_OBJECT,\n      id: this._id,\n      opId,\n      parentId,\n      parentKey,\n      data: {},\n    };\n\n    ops.push(op);\n\n    for (const [key, value] of this._map) {\n      if (isLiveNode(value)) {\n        ops.push(...value._toOps(this._id, key, pool));\n      } else {\n        op.data[key] = value;\n      }\n    }\n\n    return ops;\n  }\n\n  /** @internal */\n  static _deserialize(\n    [id, item]: IdTuple<SerializedObject | SerializedRootObject>,\n    parentToChildren: ParentToChildNodeMap,\n    pool: ManagedPool\n  ): LiveObject<LsonObject> {\n    const liveObj = new LiveObject(item.data);\n    liveObj._attach(id, pool);\n    return this._deserializeChildren(liveObj, parentToChildren, pool);\n  }\n\n  /** @internal */\n  static _deserializeChildren(\n    liveObj: LiveObject<JsonObject>,\n    parentToChildren: ParentToChildNodeMap,\n    pool: ManagedPool\n  ): LiveObject<LsonObject> {\n    const children = parentToChildren.get(nn(liveObj._id));\n    if (children === undefined) {\n      return liveObj;\n    }\n\n    for (const [id, crdt] of children) {\n      const child = deserializeToLson([id, crdt], parentToChildren, pool);\n      if (isLiveStructure(child)) {\n        child._setParentLink(liveObj, crdt.parentKey);\n      }\n      liveObj._map.set(crdt.parentKey, child);\n      liveObj.invalidate();\n    }\n\n    return liveObj;\n  }\n\n  /** @internal */\n  _attach(id: string, pool: ManagedPool): void {\n    super._attach(id, pool);\n\n    for (const [_key, value] of this._map) {\n      if (isLiveNode(value)) {\n        value._attach(pool.generateId(), pool);\n      }\n    }\n  }\n\n  /** @internal */\n  _attachChild(op: CreateOp, source: OpSource): ApplyResult {\n    if (this._pool === undefined) {\n      throw new Error(\"Can't attach child if managed pool is not present\");\n    }\n\n    const { id, opId, parentKey: key } = op;\n    const child = creationOpToLson(op);\n\n    if (this._pool.getNode(id) !== undefined) {\n      if (this._propToLastUpdate.get(key) === opId) {\n        // Acknowlegment from local operation\n        this._propToLastUpdate.delete(key);\n      }\n\n      return { modified: false };\n    }\n\n    if (source === OpSource.UNDOREDO_RECONNECT) {\n      this._propToLastUpdate.set(key, nn(opId));\n    } else if (this._propToLastUpdate.get(key) === undefined) {\n      // Remote operation with no local change => apply operation\n    } else if (this._propToLastUpdate.get(key) === opId) {\n      // Acknowlegment from local operation\n      this._propToLastUpdate.delete(key);\n      return { modified: false };\n    } else {\n      // Conflict, ignore remote operation\n      return { modified: false };\n    }\n\n    const thisId = nn(this._id);\n    const previousValue = this._map.get(key);\n    let reverse: Op[];\n    if (isLiveNode(previousValue)) {\n      reverse = previousValue._toOps(thisId, key);\n      previousValue._detach();\n    } else if (previousValue === undefined) {\n      reverse = [{ type: OpCode.DELETE_OBJECT_KEY, id: thisId, key }];\n    } else {\n      reverse = [\n        {\n          type: OpCode.UPDATE_OBJECT,\n          id: thisId,\n          data: { [key]: previousValue },\n        },\n      ];\n    }\n\n    this._map.set(key, child);\n    this.invalidate();\n\n    if (isLiveStructure(child)) {\n      child._setParentLink(this, key);\n      child._attach(id, this._pool);\n    }\n\n    return {\n      reverse,\n      modified: {\n        node: this,\n        type: \"LiveObject\",\n        updates: { [key]: { type: \"update\" } },\n      },\n    };\n  }\n\n  /** @internal */\n  _detachChild(child: LiveNode): ApplyResult {\n    if (child) {\n      const id = nn(this._id);\n      const parentKey = nn(child._parentKey);\n      const reverse = child._toOps(id, parentKey, this._pool);\n\n      for (const [key, value] of this._map) {\n        if (value === child) {\n          this._map.delete(key);\n          this.invalidate();\n        }\n      }\n\n      child._detach();\n\n      const storageUpdate: LiveObjectUpdates<O> = {\n        node: this,\n        type: \"LiveObject\",\n        updates: {\n          [parentKey]: { type: \"delete\" },\n        } as { [K in keyof O]: UpdateDelta },\n      };\n\n      return { modified: storageUpdate, reverse };\n    }\n\n    return { modified: false };\n  }\n\n  /**\n   * @internal\n   */\n  _detach(): void {\n    super._detach();\n\n    for (const value of this._map.values()) {\n      if (isLiveNode(value)) {\n        value._detach();\n      }\n    }\n  }\n\n  /** @internal */\n  _apply(op: Op, isLocal: boolean): ApplyResult {\n    if (op.type === OpCode.UPDATE_OBJECT) {\n      return this._applyUpdate(op, isLocal);\n    } else if (op.type === OpCode.DELETE_OBJECT_KEY) {\n      return this._applyDeleteObjectKey(op, isLocal);\n    }\n\n    return super._apply(op, isLocal);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(): SerializedObject | SerializedRootObject {\n    const data: JsonObject = {};\n\n    // Add only the static Json data fields into the objects\n    for (const [key, value] of this._map) {\n      if (!isLiveNode(value)) {\n        data[key] = value;\n      }\n    }\n\n    if (this.parent.type === \"HasParent\" && this.parent.node._id) {\n      return {\n        type: CrdtType.OBJECT,\n        parentId: this.parent.node._id,\n        parentKey: this.parent.key,\n        data,\n      };\n    } else {\n      // Root object has no parent ID/key\n      return {\n        type: CrdtType.OBJECT,\n        data,\n      };\n    }\n  }\n\n  /** @internal */\n  private _applyUpdate(op: UpdateObjectOp, isLocal: boolean): ApplyResult {\n    let isModified = false;\n    const id = nn(this._id);\n    const reverse: Op[] = [];\n    const reverseUpdate: UpdateObjectOp = {\n      type: OpCode.UPDATE_OBJECT,\n      id,\n      data: {},\n    };\n\n    for (const key in op.data as Partial<O>) {\n      const oldValue = this._map.get(key);\n      if (isLiveNode(oldValue)) {\n        reverse.push(...oldValue._toOps(id, key));\n        oldValue._detach();\n      } else if (oldValue !== undefined) {\n        reverseUpdate.data[key] = oldValue;\n      } else if (oldValue === undefined) {\n        reverse.push({ type: OpCode.DELETE_OBJECT_KEY, id, key });\n      }\n    }\n\n    const updateDelta: LiveObjectUpdateDelta<O> = {};\n    for (const key in op.data as Partial<O>) {\n      const value = op.data[key];\n      if (value === undefined) {\n        continue;\n      }\n\n      if (isLocal) {\n        this._propToLastUpdate.set(key, nn(op.opId));\n      } else if (this._propToLastUpdate.get(key) === undefined) {\n        // Not modified localy so we apply update\n        isModified = true;\n      } else if (this._propToLastUpdate.get(key) === op.opId) {\n        // Acknowlegment from local operation\n        this._propToLastUpdate.delete(key);\n        continue;\n      } else {\n        // Conflict, ignore remote operation\n        continue;\n      }\n\n      const oldValue = this._map.get(key);\n\n      if (isLiveNode(oldValue)) {\n        oldValue._detach();\n      }\n\n      isModified = true;\n      updateDelta[key] = { type: \"update\" };\n      this._map.set(key, value);\n      this.invalidate();\n    }\n\n    if (Object.keys(reverseUpdate.data).length !== 0) {\n      reverse.unshift(reverseUpdate);\n    }\n\n    return isModified\n      ? {\n          modified: {\n            node: this,\n            type: \"LiveObject\",\n            updates: updateDelta,\n          },\n          reverse,\n        }\n      : { modified: false };\n  }\n\n  /** @internal */\n  private _applyDeleteObjectKey(\n    op: DeleteObjectKeyOp,\n    isLocal: boolean\n  ): ApplyResult {\n    const key = op.key;\n\n    // If property does not exist, exit without notifying\n    if (this._map.has(key) === false) {\n      return { modified: false };\n    }\n\n    // If a local operation exists on the same key and we receive a remote\n    // one prevent flickering by not applying delete op.\n    if (!isLocal && this._propToLastUpdate.get(key) !== undefined) {\n      return { modified: false };\n    }\n\n    const oldValue = this._map.get(key);\n\n    const id = nn(this._id);\n    let reverse: Op[] = [];\n    if (isLiveNode(oldValue)) {\n      reverse = oldValue._toOps(id, op.key);\n      oldValue._detach();\n    } else if (oldValue !== undefined) {\n      reverse = [\n        {\n          type: OpCode.UPDATE_OBJECT,\n          id,\n          data: { [key]: oldValue },\n        },\n      ];\n    }\n\n    this._map.delete(key);\n    this.invalidate();\n    return {\n      modified: {\n        node: this,\n        type: \"LiveObject\",\n        updates: { [op.key]: { type: \"delete\" } },\n      },\n      reverse,\n    };\n  }\n\n  /**\n   * Transform the LiveObject into a javascript object\n   */\n  toObject(): O {\n    return Object.fromEntries(this._map) as O;\n  }\n\n  /**\n   * Adds or updates a property with a specified key and a value.\n   * @param key The key of the property to add\n   * @param value The value of the property to add\n   */\n  set<TKey extends keyof O>(key: TKey, value: O[TKey]): void {\n    // TODO: Find out why typescript complains\n    this._pool?.assertStorageIsWritable();\n    this.update({ [key]: value } as unknown as Partial<O>);\n  }\n\n  /**\n   * Returns a specified property from the LiveObject.\n   * @param key The key of the property to get\n   */\n  get<TKey extends keyof O>(key: TKey): O[TKey] {\n    return this._map.get(key as string) as O[TKey];\n  }\n\n  /**\n   * Deletes a key from the LiveObject\n   * @param key The key of the property to delete\n   */\n  delete(key: keyof O): void {\n    this._pool?.assertStorageIsWritable();\n    const keyAsString = key as string;\n    const oldValue = this._map.get(keyAsString);\n\n    if (oldValue === undefined) {\n      return;\n    }\n\n    if (this._pool === undefined || this._id === undefined) {\n      if (isLiveNode(oldValue)) {\n        oldValue._detach();\n      }\n      this._map.delete(keyAsString);\n      this.invalidate();\n      return;\n    }\n\n    let reverse: Op[];\n\n    if (isLiveNode(oldValue)) {\n      oldValue._detach();\n      reverse = oldValue._toOps(this._id, keyAsString);\n    } else {\n      reverse = [\n        {\n          type: OpCode.UPDATE_OBJECT,\n          data: { [keyAsString]: oldValue },\n          id: this._id,\n        },\n      ];\n    }\n\n    this._map.delete(keyAsString);\n    this.invalidate();\n\n    const storageUpdates = new Map<string, LiveObjectUpdates<O>>();\n    storageUpdates.set(this._id, {\n      node: this,\n      type: \"LiveObject\",\n      updates: { [key]: { type: \"delete\" } } as {\n        [K in keyof O]: UpdateDelta;\n      },\n    });\n\n    this._pool.dispatch(\n      [\n        {\n          type: OpCode.DELETE_OBJECT_KEY,\n          key: keyAsString,\n          id: this._id,\n          opId: this._pool.generateOpId(),\n        },\n      ],\n      reverse,\n      storageUpdates\n    );\n  }\n\n  /**\n   * Adds or updates multiple properties at once with an object.\n   * @param patch The object used to overrides properties\n   */\n  update(patch: Partial<O>): void {\n    this._pool?.assertStorageIsWritable();\n    if (this._pool === undefined || this._id === undefined) {\n      for (const key in patch) {\n        const newValue = patch[key];\n        if (newValue === undefined) {\n          continue;\n        }\n\n        const oldValue = this._map.get(key);\n        if (isLiveNode(oldValue)) {\n          oldValue._detach();\n        }\n\n        if (isLiveNode(newValue)) {\n          newValue._setParentLink(this, key);\n        }\n\n        this._map.set(key, newValue);\n        this.invalidate();\n      }\n\n      return;\n    }\n\n    const ops: Op[] = [];\n    const reverseOps: Op[] = [];\n\n    const opId = this._pool.generateOpId();\n    const updatedProps: JsonObject = {};\n\n    const reverseUpdateOp: UpdateObjectOp = {\n      id: this._id,\n      type: OpCode.UPDATE_OBJECT,\n      data: {},\n    };\n\n    const updateDelta: LiveObjectUpdateDelta<O> = {};\n\n    for (const key in patch) {\n      const newValue: Lson | undefined = patch[key];\n      if (newValue === undefined) {\n        continue;\n      }\n\n      const oldValue = this._map.get(key);\n\n      if (isLiveNode(oldValue)) {\n        reverseOps.push(...oldValue._toOps(this._id, key));\n        oldValue._detach();\n      } else if (oldValue === undefined) {\n        reverseOps.push({ type: OpCode.DELETE_OBJECT_KEY, id: this._id, key });\n      } else {\n        reverseUpdateOp.data[key] = oldValue;\n      }\n\n      if (isLiveNode(newValue)) {\n        newValue._setParentLink(this, key);\n        newValue._attach(this._pool.generateId(), this._pool);\n        const newAttachChildOps = newValue._toOps(this._id, key, this._pool);\n\n        const createCrdtOp = newAttachChildOps.find(\n          (op: Op & { parentId?: string }) => op.parentId === this._id\n        );\n        if (createCrdtOp) {\n          this._propToLastUpdate.set(key, nn(createCrdtOp.opId));\n        }\n\n        ops.push(...newAttachChildOps);\n      } else {\n        updatedProps[key] = newValue;\n        this._propToLastUpdate.set(key, opId);\n      }\n\n      this._map.set(key, newValue);\n      this.invalidate();\n      updateDelta[key] = { type: \"update\" };\n    }\n\n    if (Object.keys(reverseUpdateOp.data).length !== 0) {\n      reverseOps.unshift(reverseUpdateOp);\n    }\n\n    if (Object.keys(updatedProps).length !== 0) {\n      ops.unshift({\n        opId,\n        id: this._id,\n        type: OpCode.UPDATE_OBJECT,\n        data: updatedProps,\n      });\n    }\n\n    const storageUpdates = new Map<string, LiveObjectUpdates<O>>();\n    storageUpdates.set(this._id, {\n      node: this,\n      type: \"LiveObject\",\n      updates: updateDelta,\n    });\n    this._pool.dispatch(ops, reverseOps, storageUpdates);\n  }\n\n  toImmutable(): ToImmutable<O> {\n    // Don't implement actual toImmutable logic in here. Implement it in\n    // ._toImmutable() instead. This helper merely exists to help TypeScript\n    // infer better return types.\n    return super.toImmutable() as ToImmutable<O>;\n  }\n\n  /** @internal */\n  toTreeNode(key: string): DevTools.LiveTreeNode<\"LiveObject\"> {\n    // Don't implement actual toTreeNode logic in here. Implement it in\n    // ._toTreeNode() instead. This helper merely exists to help TypeScript\n    // infer better return types.\n    return super.toTreeNode(key) as DevTools.LiveTreeNode<\"LiveObject\">;\n  }\n\n  /** @internal */\n  _toTreeNode(key: string): DevTools.LsonTreeNode {\n    const nodeId = this._id ?? nanoid();\n    return {\n      type: \"LiveObject\",\n      id: nodeId,\n      key,\n      payload: Array.from(this._map.entries()).map(([key, value]) =>\n        isLiveNode(value)\n          ? value.toTreeNode(key)\n          : { type: \"Json\", id: `${nodeId}:${key}`, key, payload: value }\n      ),\n    };\n  }\n\n  /** @internal */\n  _toImmutable(): ToImmutable<O> {\n    const result: { [key: string]: unknown } = {};\n    for (const [key, val] of this._map) {\n      result[key] = isLiveStructure(val) ? val.toImmutable() : val;\n    }\n    return (\n      process.env.NODE_ENV === \"production\" ? result : Object.freeze(result)\n    ) as ToImmutable<O>;\n  }\n\n  clone(): LiveObject<O> {\n    return new LiveObject(\n      Object.fromEntries(\n        Array.from(this._map).map(([key, value]) => [\n          key,\n          isLiveStructure(value) ? value.clone() : deepClone(value),\n        ])\n      ) as O\n    );\n  }\n}\n", "import { assertNever, nn } from \"../lib/assert\";\nimport type { Json } from \"../lib/Json\";\nimport { deepClone, entries, isPlainObject } from \"../lib/utils\";\nimport type { CreateOp, Op } from \"../protocol/Op\";\nimport { OpCode } from \"../protocol/Op\";\nimport type { IdTuple, SerializedCrdt } from \"../protocol/SerializedCrdt\";\nimport { CrdtType } from \"../protocol/SerializedCrdt\";\nimport type { NodeMap, ParentToChildNodeMap } from \"../types/NodeMap\";\nimport type { ManagedPool } from \"./AbstractCrdt\";\nimport { LiveList, type LiveListUpdates } from \"./LiveList\";\nimport { LiveMap, type LiveMapUpdates } from \"./LiveMap\";\nimport { LiveObject, type LiveObjectUpdates } from \"./LiveObject\";\nimport { LiveRegister } from \"./LiveRegister\";\nimport type { LiveNode, LiveStructure, Lson, LsonObject } from \"./Lson\";\nimport type { StorageUpdate } from \"./StorageUpdates\";\n\nexport function creationOpToLiveNode(op: CreateOp): LiveNode {\n  return lsonToLiveNode(creationOpToLson(op));\n}\n\nexport function creationOpToLson(op: CreateOp): Lson {\n  switch (op.type) {\n    case OpCode.CREATE_REGISTER:\n      return op.data;\n    case OpCode.CREATE_OBJECT:\n      return new LiveObject(op.data);\n    case OpCode.CREATE_MAP:\n      return new LiveMap();\n    case OpCode.CREATE_LIST:\n      return new LiveList();\n    default:\n      return assertNever(op, \"Unknown creation Op\");\n  }\n}\n\nexport function isSameNodeOrChildOf(node: LiveNode, parent: LiveNode): boolean {\n  if (node === parent) {\n    return true;\n  }\n  if (node.parent.type === \"HasParent\") {\n    return isSameNodeOrChildOf(node.parent.node, parent);\n  }\n  return false;\n}\n\nexport function deserialize(\n  [id, crdt]: IdTuple<SerializedCrdt>,\n  parentToChildren: ParentToChildNodeMap,\n  pool: ManagedPool\n): LiveNode {\n  switch (crdt.type) {\n    case CrdtType.OBJECT: {\n      return LiveObject._deserialize([id, crdt], parentToChildren, pool);\n    }\n    case CrdtType.LIST: {\n      return LiveList._deserialize([id, crdt], parentToChildren, pool);\n    }\n    case CrdtType.MAP: {\n      return LiveMap._deserialize([id, crdt], parentToChildren, pool);\n    }\n    case CrdtType.REGISTER: {\n      return LiveRegister._deserialize([id, crdt], parentToChildren, pool);\n    }\n    default: {\n      throw new Error(\"Unexpected CRDT type\");\n    }\n  }\n}\n\nexport function deserializeToLson(\n  [id, crdt]: IdTuple<SerializedCrdt>,\n  parentToChildren: ParentToChildNodeMap,\n  pool: ManagedPool\n): Lson {\n  switch (crdt.type) {\n    case CrdtType.OBJECT: {\n      return LiveObject._deserialize([id, crdt], parentToChildren, pool);\n    }\n    case CrdtType.LIST: {\n      return LiveList._deserialize([id, crdt], parentToChildren, pool);\n    }\n    case CrdtType.MAP: {\n      return LiveMap._deserialize([id, crdt], parentToChildren, pool);\n    }\n    case CrdtType.REGISTER: {\n      return crdt.data;\n    }\n    default: {\n      throw new Error(\"Unexpected CRDT type\");\n    }\n  }\n}\n\nexport function isLiveStructure(value: unknown): value is LiveStructure {\n  return isLiveList(value) || isLiveMap(value) || isLiveObject(value);\n}\n\nexport function isLiveNode(value: unknown): value is LiveNode {\n  return isLiveStructure(value) || isLiveRegister(value);\n}\n\nexport function isLiveList(value: unknown): value is LiveList<Lson> {\n  return value instanceof LiveList;\n}\n\nexport function isLiveMap(value: unknown): value is LiveMap<string, Lson> {\n  return value instanceof LiveMap;\n}\n\nexport function isLiveObject(value: unknown): value is LiveObject<LsonObject> {\n  return value instanceof LiveObject;\n}\n\nexport function isLiveRegister(value: unknown): value is LiveRegister<Json> {\n  return value instanceof LiveRegister;\n}\n\nexport function cloneLson<L extends Lson | undefined>(value: L): L {\n  return value === undefined\n    ? (undefined as L)\n    : isLiveStructure(value)\n      ? (value.clone() as L)\n      : (deepClone(value) as L);\n}\n\nexport function liveNodeToLson(obj: LiveNode): Lson {\n  if (obj instanceof LiveRegister) {\n    return obj.data;\n  } else if (\n    obj instanceof LiveList ||\n    obj instanceof LiveMap ||\n    obj instanceof LiveObject\n  ) {\n    return obj;\n  } else {\n    return assertNever(obj, \"Unknown AbstractCrdt\");\n  }\n}\n\nexport function lsonToLiveNode(value: Lson): LiveNode {\n  if (\n    value instanceof LiveObject ||\n    value instanceof LiveMap ||\n    value instanceof LiveList\n  ) {\n    return value;\n  } else {\n    return new LiveRegister(value);\n  }\n}\n\nexport function getTreesDiffOperations(\n  currentItems: NodeMap,\n  newItems: NodeMap\n): Op[] {\n  const ops: Op[] = [];\n\n  currentItems.forEach((_, id) => {\n    if (!newItems.get(id)) {\n      // Delete crdt\n      ops.push({\n        type: OpCode.DELETE_CRDT,\n        id,\n      });\n    }\n  });\n\n  newItems.forEach((crdt, id) => {\n    const currentCrdt = currentItems.get(id);\n    if (currentCrdt) {\n      if (crdt.type === CrdtType.OBJECT) {\n        if (\n          currentCrdt.type !== CrdtType.OBJECT ||\n          JSON.stringify(crdt.data) !== JSON.stringify(currentCrdt.data)\n        ) {\n          ops.push({\n            type: OpCode.UPDATE_OBJECT,\n            id,\n            data: crdt.data,\n          });\n        }\n      }\n      if (crdt.parentKey !== currentCrdt.parentKey) {\n        ops.push({\n          type: OpCode.SET_PARENT_KEY,\n          id,\n          parentKey: nn(crdt.parentKey, \"Parent key must not be missing\"),\n        });\n      }\n    } else {\n      // new Crdt\n      switch (crdt.type) {\n        case CrdtType.REGISTER:\n          ops.push({\n            type: OpCode.CREATE_REGISTER,\n            id,\n            parentId: crdt.parentId,\n            parentKey: crdt.parentKey,\n            data: crdt.data,\n          });\n          break;\n        case CrdtType.LIST:\n          ops.push({\n            type: OpCode.CREATE_LIST,\n            id,\n            parentId: crdt.parentId,\n            parentKey: crdt.parentKey,\n          });\n          break;\n        case CrdtType.OBJECT:\n          if (crdt.parentId === undefined || crdt.parentKey === undefined) {\n            throw new Error(\n              \"Internal error. Cannot serialize storage root into an operation\"\n            );\n          }\n          ops.push({\n            type: OpCode.CREATE_OBJECT,\n            id,\n            parentId: crdt.parentId,\n            parentKey: crdt.parentKey,\n            data: crdt.data,\n          });\n          break;\n        case CrdtType.MAP:\n          ops.push({\n            type: OpCode.CREATE_MAP,\n            id,\n            parentId: crdt.parentId,\n            parentKey: crdt.parentKey,\n          });\n          break;\n      }\n    }\n  });\n\n  return ops;\n}\n\nfunction mergeObjectStorageUpdates<A extends LsonObject, B extends LsonObject>(\n  first: LiveObjectUpdates<A>,\n  second: LiveObjectUpdates<B>\n): LiveObjectUpdates<B> {\n  const updates = first.updates as (typeof second)[\"updates\"];\n  for (const [key, value] of entries(second.updates)) {\n    updates[key] = value;\n  }\n  return {\n    ...second,\n    updates,\n  };\n}\n\nfunction mergeMapStorageUpdates<K2 extends string, V2 extends Lson>(\n  first: LiveMapUpdates<string, Lson>,\n  second: LiveMapUpdates<K2, V2>\n): LiveMapUpdates<K2, V2> {\n  const updates = first.updates;\n  for (const [key, value] of entries(second.updates)) {\n    updates[key] = value;\n  }\n  return {\n    ...second,\n    updates,\n  };\n}\n\nfunction mergeListStorageUpdates<T extends Lson>(\n  first: LiveListUpdates<Lson>,\n  second: LiveListUpdates<T>\n): LiveListUpdates<T> {\n  const updates = first.updates;\n  return {\n    ...second,\n    updates: updates.concat(second.updates),\n  };\n}\n\nexport function mergeStorageUpdates(\n  first: StorageUpdate | undefined,\n  second: StorageUpdate\n): StorageUpdate {\n  if (first === undefined) {\n    return second;\n  }\n\n  if (first.type === \"LiveObject\" && second.type === \"LiveObject\") {\n    return mergeObjectStorageUpdates(first, second);\n  } else if (first.type === \"LiveMap\" && second.type === \"LiveMap\") {\n    return mergeMapStorageUpdates(first, second);\n  } else if (first.type === \"LiveList\" && second.type === \"LiveList\") {\n    return mergeListStorageUpdates(first, second);\n  } else {\n    /* Mismatching merge types. Throw an error here? */\n  }\n\n  return second;\n}\n\nfunction isPlain(\n  value: unknown\n): value is\n  | undefined\n  | null\n  | string\n  | boolean\n  | number\n  | unknown[]\n  | { [key: string]: unknown } {\n  const type = typeof value;\n  return (\n    value === undefined ||\n    value === null ||\n    type === \"string\" ||\n    type === \"boolean\" ||\n    type === \"number\" ||\n    Array.isArray(value) ||\n    isPlainObject(value)\n  );\n}\n\nexport function findNonSerializableValue(\n  value: unknown,\n  path: string = \"\"\n): { path: string; value: unknown } | false {\n  if (!isPlain) {\n    return {\n      path: path || \"root\",\n      value,\n    };\n  }\n\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n\n  for (const [key, nestedValue] of Object.entries(value)) {\n    const nestedPath = path ? path + \".\" + key : key;\n\n    if (!isPlain(nestedValue)) {\n      return {\n        path: nestedPath,\n        value: nestedValue,\n      };\n    }\n\n    if (typeof nestedValue === \"object\") {\n      const nonSerializableNestedValue = findNonSerializableValue(\n        nestedValue,\n        nestedPath\n      );\n\n      if (nonSerializableNestedValue) {\n        return nonSerializableNestedValue;\n      }\n    }\n  }\n\n  return false;\n}\n", "export function captureStackTrace(\n  msg: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  traceRoot?: Function\n): string | undefined {\n  // Hack: Normally browsers will add the name of the error before the stack trace (default Error).\n  // To customize this, we set the name of the error to the message we want to display.\n  const errorLike: { name: string; stack?: string } = { name: msg };\n\n  // Error.captureStackTrace is non-standard and only available in certain browsers/runtimes.\n  if (typeof Error.captureStackTrace !== \"function\") {\n    return undefined;\n  }\n\n  Error.captureStackTrace(errorLike, traceRoot);\n  return errorLike.stack;\n}\n", "/**\n * Represents an indefinitely deep arbitrary JSON data structure. There are\n * four types that make up the Json family:\n *\n * - Json         any legal JSON value\n * - JsonScalar   any legal JSON leaf value (no lists or objects)\n * - JsonArray    a JSON value whose outer type is an array\n * - JsonObject   a JSON value whose outer type is an object\n *\n */\nexport type Json = JsonScalar | JsonArray | JsonObject;\nexport type JsonScalar = string | number | boolean | null;\nexport type JsonArray = Json[];\nexport type JsonObject = { [key: string]: Json | undefined };\n\nexport function isJsonScalar(data: Json): data is JsonScalar {\n  return (\n    data === null ||\n    typeof data === \"string\" ||\n    typeof data === \"number\" ||\n    typeof data === \"boolean\"\n  );\n}\n\nexport function isJsonArray(data: Json): data is JsonArray {\n  return Array.isArray(data);\n}\n\nexport function isJsonObject(data: Json): data is JsonObject {\n  return !isJsonScalar(data) && !isJsonArray(data);\n}\n", "import type { Json, JsonObject } from \"../lib/Json\";\nimport type { Op } from \"./Op\";\n\nexport enum ClientMsgCode {\n  // For Presence\n  UPDATE_PRESENCE = 100,\n  BROADCAST_EVENT = 103,\n\n  // For Storage\n  FETCH_STORAGE = 200,\n  UPDATE_STORAGE = 201,\n\n  // For Yjs support\n  FETCH_YDOC = 300,\n  UPDATE_YDOC = 301,\n}\n\n/**\n * Messages that can be sent from the client to the server.\n */\nexport type ClientMsg<TPresence extends JsonObject, TRoomEvent extends Json> =\n  // For Presence\n  | BroadcastEventClientMsg<TRoomEvent>\n  | UpdatePresenceClientMsg<TPresence>\n\n  // For Storage\n  | UpdateStorageClientMsg\n  | FetchStorageClientMsg\n\n  // For Yjs support\n  | FetchYDocClientMsg\n  | UpdateYDocClientMsg;\n\nexport type BroadcastEventClientMsg<TRoomEvent extends Json> = {\n  type: ClientMsgCode.BROADCAST_EVENT;\n  event: TRoomEvent;\n};\n\nexport type UpdatePresenceClientMsg<TPresence extends JsonObject> =\n  //\n  // Full Presence™ message\n  //\n  | {\n      readonly type: ClientMsgCode.UPDATE_PRESENCE;\n      /**\n       * Set this to any number to signify that this is a Full Presence™\n       * update, not a patch.\n       *\n       * The numeric value itself no longer has specific meaning. Historically,\n       * this field was intended so that clients could ignore these broadcasted\n       * full presence messages, but it turned out that getting a full presence\n       * \"keyframe\" from time to time was useful.\n       *\n       * So nowadays, the presence (pun intended) of this `targetActor` field\n       * is a backward-compatible way of expressing that the `data` contains\n       * all presence fields, and isn't a partial \"patch\".\n       */\n      readonly targetActor: number;\n      readonly data: TPresence;\n    }\n\n  //\n  // Partial Presence™ message\n  //\n  | {\n      readonly type: ClientMsgCode.UPDATE_PRESENCE;\n      /**\n       * Absence of the `targetActor` field signifies that this is a Partial\n       * Presence™ \"patch\".\n       */\n      readonly targetActor?: undefined;\n      readonly data: Partial<TPresence>;\n    };\n\nexport type UpdateStorageClientMsg = {\n  readonly type: ClientMsgCode.UPDATE_STORAGE;\n  readonly ops: Op[];\n};\n\nexport type FetchStorageClientMsg = {\n  readonly type: ClientMsgCode.FETCH_STORAGE;\n};\n\nexport type FetchYDocClientMsg = {\n  readonly type: ClientMsgCode.FETCH_YDOC;\n  readonly vector: string; // base64 encoded stateVector a from yjs doc\n  readonly guid?: string; // an optional guid to identify a subdoc\n};\n\nexport type UpdateYDocClientMsg = {\n  readonly type: ClientMsgCode.UPDATE_YDOC;\n  readonly update: string; // base64 encoded update from a yjs doc\n  readonly guid?: string; // an optional guid to identify a subdoc\n};\n", "import type { EventSource, Observable } from \"../lib/EventSource\";\nimport { makeEventSource } from \"../lib/EventSource\";\n\n/**\n * Patches a target object by \"merging in\" the provided fields. Patch\n * fields that are explicitly-undefined will delete keys from the target\n * object. Will return a new object.\n *\n * Important guarantee:\n * If the patch effectively did not mutate the target object because the\n * patch fields have the same value as the original, then the original\n * object reference will be returned.\n */\nexport function merge<T>(target: T, patch: Partial<T>): T {\n  let updated = false;\n  const newValue = { ...target };\n\n  Object.keys(patch).forEach((k) => {\n    const key = k as keyof T;\n    const val = patch[key];\n    if (newValue[key] !== val) {\n      if (val === undefined) {\n        delete newValue[key];\n      } else {\n        newValue[key] = val as T[keyof T];\n      }\n      updated = true;\n    }\n  });\n\n  return updated ? newValue : target;\n}\n\n/**\n * Base class that implements an immutable cache.\n *\n * TODO: Document usage.\n */\nexport abstract class ImmutableRef<T> {\n  /** @internal */\n  private _cache: Readonly<T> | undefined;\n\n  /** @internal */\n  private _ev: EventSource<void>;\n\n  constructor() {\n    this._ev = makeEventSource<void>();\n  }\n\n  get didInvalidate(): Observable<void> {\n    return this._ev.observable;\n  }\n\n  /** @internal */\n  protected abstract _toImmutable(): Readonly<T>;\n\n  protected invalidate(): void {\n    if (this._cache !== undefined) {\n      this._cache = undefined;\n      this._ev.notify();\n    }\n  }\n\n  get current(): Readonly<T> {\n    return this._cache ?? (this._cache = this._toImmutable());\n  }\n}\n", "import { freeze } from \"../lib/freeze\";\nimport type { JsonObject } from \"../lib/Json\";\nimport { compact, compactObject } from \"../lib/utils\";\nimport { canComment, canWriteStorage } from \"../protocol/AuthToken\";\nimport type { BaseUserMeta } from \"../protocol/BaseUserMeta\";\nimport type { User } from \"../types/User\";\nimport { ImmutableRef, merge } from \"./ImmutableRef\";\n\ntype Connection<TUserMeta extends BaseUserMeta> = {\n  readonly connectionId: number;\n  readonly scopes: string[];\n  readonly id: TUserMeta[\"id\"];\n  readonly info: TUserMeta[\"info\"];\n};\n\nfunction makeUser<TPresence extends JsonObject, TUserMeta extends BaseUserMeta>(\n  conn: Connection<TUserMeta>,\n  presence: TPresence\n): User<TPresence, TUserMeta> {\n  const { connectionId, id, info } = conn;\n  const canWrite = canWriteStorage(conn.scopes);\n  return freeze(\n    compactObject({\n      connectionId,\n      id,\n      info,\n      canWrite,\n      canComment: canComment(conn.scopes),\n      isReadOnly: !canWrite, // Deprecated, kept for backward-compatibility\n      presence,\n    })\n  );\n}\n\nexport class OthersRef<\n  TPresence extends JsonObject,\n  TUserMeta extends BaseUserMeta,\n> extends ImmutableRef<readonly User<TPresence, TUserMeta>[]> {\n  // To track \"others\"\n  private _connections: Map</* connectionId */ number, Connection<TUserMeta>>;\n  private _presences: Map</* connectionId */ number, TPresence>;\n\n  //\n  // --------------------------------------------------------------\n  //\n  // CACHES\n  // All of these are derived/cached data. Never set these directly.\n  //\n  // TODO Refactor this internal cache away using the ImmutableRef\n  // abstraction/helper. Manually maintaining these caches should no longer be\n  // necessary.\n  //\n  private _users: Map</* connectionId */ number, User<TPresence, TUserMeta>>;\n  //\n  // --------------------------------------------------------------\n  //\n\n  constructor() {\n    super();\n\n    // Others\n    this._connections = new Map();\n    this._presences = new Map();\n    this._users = new Map();\n  }\n\n  public connectionIds(): IterableIterator<number> {\n    return this._connections.keys();\n  }\n\n  /** @internal */\n  _toImmutable(): readonly User<TPresence, TUserMeta>[] {\n    const users = compact(\n      Array.from(this._presences.keys()).map((connectionId) =>\n        this.getUser(Number(connectionId))\n      )\n    );\n\n    return users;\n  }\n\n  clearOthers(): void {\n    this._connections = new Map();\n    this._presences = new Map();\n    this._users = new Map();\n    this.invalidate();\n  }\n\n  /** @internal */\n  _getUser(connectionId: number): User<TPresence, TUserMeta> | undefined {\n    const conn = this._connections.get(connectionId);\n    const presence = this._presences.get(connectionId);\n    if (conn !== undefined && presence !== undefined) {\n      return makeUser(conn, presence);\n    }\n\n    return undefined;\n  }\n\n  getUser(connectionId: number): User<TPresence, TUserMeta> | undefined {\n    const cachedUser = this._users.get(connectionId);\n    if (cachedUser) {\n      return cachedUser;\n    }\n\n    const computedUser = this._getUser(connectionId);\n    if (computedUser) {\n      this._users.set(connectionId, computedUser);\n      return computedUser;\n    }\n\n    return undefined;\n  }\n\n  /** @internal */\n  _invalidateUser(connectionId: number): void {\n    if (this._users.has(connectionId)) {\n      this._users.delete(connectionId);\n    }\n    this.invalidate();\n  }\n\n  /**\n   * Records a known connection. This records the connection ID and the\n   * associated metadata.\n   */\n  setConnection(\n    connectionId: number,\n    metaUserId: TUserMeta[\"id\"],\n    metaUserInfo: TUserMeta[\"info\"],\n    scopes: string[]\n  ): void {\n    this._connections.set(\n      connectionId,\n      freeze({\n        connectionId,\n        id: metaUserId,\n        info: metaUserInfo,\n        scopes,\n      })\n    );\n    if (this._presences.has(connectionId)) {\n      this._invalidateUser(connectionId);\n    }\n  }\n\n  /**\n   * Removes a known connectionId. Removes both the connection's metadata and\n   * the presence information.\n   */\n  removeConnection(connectionId: number): void {\n    this._connections.delete(connectionId);\n    this._presences.delete(connectionId);\n    this._invalidateUser(connectionId);\n  }\n\n  /**\n   * Stores a new user from a full presence update. If the user already exists,\n   * its known presence data is overwritten.\n   */\n  setOther(connectionId: number, presence: TPresence): void {\n    this._presences.set(connectionId, freeze(compactObject(presence)));\n    if (this._connections.has(connectionId)) {\n      this._invalidateUser(connectionId);\n    }\n  }\n\n  /**\n   * Patches the presence data for an existing \"other\". If we don't know the\n   * initial presence data for this user yet, discard this patch and await the\n   * full .setOther() call first.\n   */\n  patchOther(connectionId: number, patch: Partial<TPresence>): void {\n    const oldPresence = this._presences.get(connectionId);\n    if (oldPresence === undefined) {\n      return;\n    }\n\n    const newPresence = merge(oldPresence, patch);\n    if (oldPresence !== newPresence) {\n      this._presences.set(connectionId, freeze(newPresence));\n      this._invalidateUser(connectionId);\n    }\n  }\n}\n", "import { freeze } from \"../lib/freeze\";\nimport type { JsonObject } from \"../lib/Json\";\nimport { compactObject } from \"../lib/utils\";\nimport { ImmutableRef, merge } from \"./ImmutableRef\";\n\n/**\n * Managed immutable cache for read-only-accessing an object that can be\n * patched.\n */\nexport class PatchableRef<T extends JsonObject> extends ImmutableRef<T> {\n  /** @internal */\n  private _data: Readonly<T>;\n\n  constructor(data: T) {\n    super();\n    this._data = freeze(compactObject(data));\n  }\n\n  /** @internal */\n  _toImmutable(): Readonly<T> {\n    return this._data;\n  }\n\n  /**\n   * Patches the current object.\n   */\n  patch(patch: Partial<T>): void {\n    const oldData = this._data;\n    const newData = merge(oldData, patch);\n    if (oldData !== newData) {\n      this._data = freeze(newData);\n      this.invalidate();\n    }\n  }\n}\n", "import { freeze } from \"../lib/freeze\";\nimport { ImmutableRef } from \"./ImmutableRef\";\n\nexport class ValueRef<T> extends ImmutableRef<T> {\n  /** @internal */\n  private _value: Readonly<T>;\n\n  constructor(initialValue: T) {\n    super();\n    this._value = freeze(initialValue);\n  }\n\n  /** @internal */\n  _toImmutable(): Readonly<T> {\n    return this._value;\n  }\n\n  set(newValue: T): void {\n    this._value = freeze(newValue);\n    this.invalidate();\n  }\n}\n\nexport class DerivedRef<\n  T,\n  Is extends readonly [ImmutableRef<unknown>, ...ImmutableRef<unknown>[]],\n  Vs extends readonly [unknown, ...unknown[]] = {\n    [K in keyof Is]: Is[K] extends ImmutableRef<unknown>\n      ? Is[K][\"current\"]\n      : never;\n  },\n> extends ImmutableRef<T> {\n  /** @internal */\n  private _refs: Is;\n  private _transform: (...values: Vs) => T;\n\n  constructor(...args: [...otherRefs: Is, transformFn: (...values: Vs) => T]) {\n    super();\n\n    const transformFn = args.pop() as (...values: Vs) => T;\n    const otherRefs = args as unknown as Is;\n\n    this._refs = otherRefs;\n    this._refs.forEach((ref) => {\n      // TODO: We should also _unsubscribe_ these at some point... how? Require an explicit .destroy() call?\n      ref.didInvalidate.subscribe(() => this.invalidate());\n    });\n\n    this._transform = transformFn;\n  }\n\n  /** @internal */\n  _toImmutable(): Readonly<T> {\n    return this._transform(\n      ...(this._refs.map((ref) => ref.current) as unknown as Vs)\n    );\n  }\n}\n", "import type { AuthManager, AuthValue } from \"./auth-manager\";\nimport {\n  getAuthBearerHeaderFromAuthValue,\n  NotificationsApiError,\n} from \"./client\";\nimport type {\n  Delegates,\n  LegacyConnectionStatus,\n  LiveblocksError,\n  LostConnectionEvent,\n  Status,\n} from \"./connection\";\nimport { ManagedSocket, newToLegacyStatus, StopRetrying } from \"./connection\";\nimport {\n  convertToCommentData,\n  convertToCommentUserReaction,\n  convertToInboxNotificationData,\n  convertToInboxNotificationDeleteInfo,\n  convertToThreadData,\n  convertToThreadDeleteInfo,\n} from \"./convert-plain-data\";\nimport type { ApplyResult, ManagedPool } from \"./crdts/AbstractCrdt\";\nimport { OpSource } from \"./crdts/AbstractCrdt\";\nimport {\n  cloneLson,\n  getTreesDiffOperations,\n  isLiveList,\n  isLiveNode,\n  isSameNodeOrChildOf,\n  mergeStorageUpdates,\n} from \"./crdts/liveblocks-helpers\";\nimport { LiveObject } from \"./crdts/LiveObject\";\nimport type { LiveNode, LiveStructure, LsonObject } from \"./crdts/Lson\";\nimport type { StorageCallback, StorageUpdate } from \"./crdts/StorageUpdates\";\nimport { kInternal } from \"./internal\";\nimport { assertNever, nn } from \"./lib/assert\";\nimport { Batch } from \"./lib/batch\";\nimport { captureStackTrace } from \"./lib/debug\";\nimport type { Callback, Observable } from \"./lib/EventSource\";\nimport { makeEventSource } from \"./lib/EventSource\";\nimport * as console from \"./lib/fancy-console\";\nimport type { Json, JsonObject } from \"./lib/Json\";\nimport { isJsonArray, isJsonObject } from \"./lib/Json\";\nimport { asPos } from \"./lib/position\";\nimport type { Resolve } from \"./lib/Resolve\";\nimport type { QueryParams } from \"./lib/url\";\nimport { urljoin } from \"./lib/url\";\nimport { compact, deepClone, tryParseJson } from \"./lib/utils\";\nimport { canComment, canWriteStorage, TokenKind } from \"./protocol/AuthToken\";\nimport type { BaseUserMeta, IUserInfo } from \"./protocol/BaseUserMeta\";\nimport type { ClientMsg, UpdateYDocClientMsg } from \"./protocol/ClientMsg\";\nimport { ClientMsgCode } from \"./protocol/ClientMsg\";\nimport type { Op } from \"./protocol/Op\";\nimport { isAckOp, OpCode } from \"./protocol/Op\";\nimport type { IdTuple, SerializedCrdt } from \"./protocol/SerializedCrdt\";\nimport type {\n  CommentsEventServerMsg,\n  InitialDocumentStateServerMsg,\n  RoomStateServerMsg,\n  ServerMsg,\n  UpdatePresenceServerMsg,\n  UserJoinServerMsg,\n  UserLeftServerMsg,\n  YDocUpdateServerMsg,\n} from \"./protocol/ServerMsg\";\nimport { ServerMsgCode } from \"./protocol/ServerMsg\";\nimport type { ImmutableRef } from \"./refs/ImmutableRef\";\nimport { OthersRef } from \"./refs/OthersRef\";\nimport { PatchableRef } from \"./refs/PatchableRef\";\nimport { DerivedRef, ValueRef } from \"./refs/ValueRef\";\nimport type { BaseMetadata } from \"./types/BaseMetadata\";\nimport type { CommentBody } from \"./types/CommentBody\";\nimport type { CommentData, CommentDataPlain } from \"./types/CommentData\";\nimport type {\n  CommentUserReaction,\n  CommentUserReactionPlain,\n} from \"./types/CommentReaction\";\nimport type * as DevTools from \"./types/DevToolsTreeNode\";\nimport type {\n  InboxNotificationData,\n  InboxNotificationDataPlain,\n} from \"./types/InboxNotificationData\";\nimport type {\n  InboxNotificationDeleteInfo,\n  InboxNotificationDeleteInfoPlain,\n} from \"./types/InboxNotificationDeleteInfo\";\nimport type {\n  IWebSocket,\n  IWebSocketCloseEvent,\n  IWebSocketInstance,\n  IWebSocketMessageEvent,\n} from \"./types/IWebSocket\";\nimport type { NodeMap } from \"./types/NodeMap\";\nimport type { InternalOthersEvent, OthersEvent } from \"./types/Others\";\nimport type { PartialNullable } from \"./types/PartialNullable\";\nimport type { RoomNotificationSettings } from \"./types/RoomNotificationSettings\";\nimport type { ThreadData, ThreadDataPlain } from \"./types/ThreadData\";\nimport type {\n  ThreadDeleteInfo,\n  ThreadDeleteInfoPlain,\n} from \"./types/ThreadDeleteInfo\";\nimport type { User } from \"./types/User\";\nimport { PKG_VERSION } from \"./version\";\n\ntype TimeoutID = ReturnType<typeof setTimeout>;\n\n//\n// NOTE:\n// This type looks an awful lot like InternalOthersEvent, but don't change this\n// type definition or DRY this up!\n// The type LegacyOthersEvent is used in the signature of some public APIs, and\n// as such should remain backward compatible.\n//\ntype LegacyOthersEvent<\n  TPresence extends JsonObject,\n  TUserMeta extends BaseUserMeta,\n> =\n  | { type: \"leave\"; user: User<TPresence, TUserMeta> }\n  | { type: \"enter\"; user: User<TPresence, TUserMeta> }\n  | {\n      type: \"update\";\n      user: User<TPresence, TUserMeta>;\n      updates: Partial<TPresence>;\n    }\n  | { type: \"reset\" };\n\ntype LegacyOthersEventCallback<\n  TPresence extends JsonObject,\n  TUserMeta extends BaseUserMeta,\n> = (\n  others: readonly User<TPresence, TUserMeta>[],\n  event: LegacyOthersEvent<TPresence, TUserMeta>\n) => void;\n\nexport type RoomEventMessage<\n  TPresence extends JsonObject,\n  TUserMeta extends BaseUserMeta,\n  TRoomEvent extends Json,\n> = {\n  /**\n   * The connection ID of the client that sent the event.\n   * If this message was broadcast from the server (via the REST API), then\n   * this value will be -1.\n   */\n  connectionId: number;\n  /**\n   * The User (from the others list) that sent the event.\n   * If this message was broadcast from the server (via the REST API), then\n   * this value will be null.\n   */\n  user: User<TPresence, TUserMeta> | null;\n  event: TRoomEvent;\n};\n\nexport type StorageStatus =\n  /* The storage is not loaded and has not been requested. */\n  | \"not-loaded\"\n  /* The storage is loading from Liveblocks servers */\n  | \"loading\"\n  /* Some storage modifications has not been acknowledged yet by the server */\n  | \"synchronizing\"\n  /* The storage is sync with Liveblocks servers */\n  | \"synchronized\";\n\ntype RoomEventCallbackMap<\n  TPresence extends JsonObject,\n  TUserMeta extends BaseUserMeta,\n  TRoomEvent extends Json,\n> = {\n  connection: Callback<LegacyConnectionStatus>; // Old/deprecated API\n  status: Callback<Status>; // New/recommended API\n  \"lost-connection\": Callback<LostConnectionEvent>;\n  event: Callback<RoomEventMessage<TPresence, TUserMeta, TRoomEvent>>;\n  \"my-presence\": Callback<TPresence>;\n  //\n  // NOTE: LegacyOthersEventCallback is the only one not taking a Callback<T>\n  // shape, since this API historically has taken _two_ callback arguments\n  // instead of just one.\n  others: LegacyOthersEventCallback<TPresence, TUserMeta>;\n  error: Callback<Error>;\n  history: Callback<HistoryEvent>;\n  \"storage-status\": Callback<StorageStatus>;\n};\n\nexport interface History {\n  /**\n   * Undoes the last operation executed by the current client.\n   * It does not impact operations made by other clients.\n   *\n   * @example\n   * room.updatePresence({ selectedId: \"xx\" }, { addToHistory: true });\n   * room.updatePresence({ selectedId: \"yy\" }, { addToHistory: true });\n   * room.history.undo();\n   * // room.getPresence() equals { selectedId: \"xx\" }\n   */\n  undo: () => void;\n\n  /**\n   * Redoes the last operation executed by the current client.\n   * It does not impact operations made by other clients.\n   *\n   * @example\n   * room.updatePresence({ selectedId: \"xx\" }, { addToHistory: true });\n   * room.updatePresence({ selectedId: \"yy\" }, { addToHistory: true });\n   * room.history.undo();\n   * // room.getPresence() equals { selectedId: \"xx\" }\n   * room.history.redo();\n   * // room.getPresence() equals { selectedId: \"yy\" }\n   */\n  redo: () => void;\n\n  /**\n   * Returns whether there are any operations to undo.\n   *\n   * @example\n   * room.updatePresence({ selectedId: \"xx\" }, { addToHistory: true });\n   * // room.history.canUndo() is true\n   * room.history.undo();\n   * // room.history.canUndo() is false\n   */\n  canUndo: () => boolean;\n\n  /**\n   * Returns whether there are any operations to redo.\n   *\n   * @example\n   * room.updatePresence({ selectedId: \"xx\" }, { addToHistory: true });\n   * room.history.undo();\n   * // room.history.canRedo() is true\n   * room.history.redo();\n   * // room.history.canRedo() is false\n   */\n  canRedo: () => boolean;\n\n  /**\n   * Clears the undo and redo stacks. This operation cannot be undone ;)\n   */\n  clear: () => void;\n\n  /**\n   * All future modifications made on the Room will be merged together to create a single history item until resume is called.\n   *\n   * @example\n   * room.updatePresence({ cursor: { x: 0, y: 0 } }, { addToHistory: true });\n   * room.history.pause();\n   * room.updatePresence({ cursor: { x: 1, y: 1 } }, { addToHistory: true });\n   * room.updatePresence({ cursor: { x: 2, y: 2 } }, { addToHistory: true });\n   * room.history.resume();\n   * room.history.undo();\n   * // room.getPresence() equals { cursor: { x: 0, y: 0 } }\n   */\n  pause: () => void;\n\n  /**\n   * Resumes history. Modifications made on the Room are not merged into a single history item anymore.\n   *\n   * @example\n   * room.updatePresence({ cursor: { x: 0, y: 0 } }, { addToHistory: true });\n   * room.history.pause();\n   * room.updatePresence({ cursor: { x: 1, y: 1 } }, { addToHistory: true });\n   * room.updatePresence({ cursor: { x: 2, y: 2 } }, { addToHistory: true });\n   * room.history.resume();\n   * room.history.undo();\n   * // room.getPresence() equals { cursor: { x: 0, y: 0 } }\n   */\n  resume: () => void;\n}\n\nexport type HistoryEvent = {\n  canUndo: boolean;\n  canRedo: boolean;\n};\n\nexport type RoomEventName = Extract<\n  keyof RoomEventCallbackMap<never, never, never>,\n  string\n>;\n\nexport type RoomEventCallbackFor<\n  E extends RoomEventName,\n  TPresence extends JsonObject,\n  TUserMeta extends BaseUserMeta,\n  TRoomEvent extends Json,\n> = RoomEventCallbackMap<TPresence, TUserMeta, TRoomEvent>[E];\n\nexport type RoomEventCallback = RoomEventCallbackFor<\n  RoomEventName,\n  JsonObject,\n  BaseUserMeta,\n  Json\n>;\n\nexport type BroadcastOptions = {\n  /**\n   * Whether or not event is queued if the connection is currently closed.\n   *\n   * ❗ We are not sure if we want to support this option in the future so it might be deprecated to be replaced by something else\n   */\n  shouldQueueEventIfNotReady: boolean;\n};\n\ntype SubscribeFn<\n  TPresence extends JsonObject,\n  _TStorage extends LsonObject,\n  TUserMeta extends BaseUserMeta,\n  TRoomEvent extends Json,\n> = {\n  /**\n   * Subscribes to changes made on any Live structure. Returns an unsubscribe function.\n   *\n   * @internal This legacy API works, but was never documented publicly.\n   */\n  (callback: StorageCallback): () => void;\n\n  /**\n   * Subscribe to the current user presence updates.\n   *\n   * @param listener the callback that is called every time the current user presence is updated with {@link Room.updatePresence}.\n   *\n   * @returns Unsubscribe function.\n   *\n   * @example\n   * room.subscribe(\"my-presence\", (presence) => {\n   *   // Do something\n   * });\n   */\n  (type: \"my-presence\", listener: Callback<TPresence>): () => void;\n\n  /**\n   * Subscribe to the other users updates.\n   *\n   * @param listener the callback that is called when a user enters or leaves the room or when a user update its presence.\n   *\n   * @returns Unsubscribe function.\n   *\n   * @example\n   * room.subscribe(\"others\", (others) => {\n   *   // Do something\n   * });\n   *\n   */\n  (\n    type: \"others\",\n    listener: LegacyOthersEventCallback<TPresence, TUserMeta>\n  ): () => void;\n\n  /**\n   * Subscribe to events broadcasted by {@link Room.broadcastEvent}\n   *\n   * @param listener the callback that is called when a user calls {@link Room.broadcastEvent}\n   *\n   * @returns Unsubscribe function.\n   *\n   * @example\n   * room.subscribe(\"event\", ({ event, connectionId }) => {\n   *   // Do something\n   * });\n   *\n   */\n  (\n    type: \"event\",\n    listener: Callback<RoomEventMessage<TPresence, TUserMeta, TRoomEvent>>\n  ): () => void;\n\n  /**\n   * Subscribe to errors thrown in the room.\n   *\n   * @returns Unsubscribe function.\n   *\n   */\n  (type: \"error\", listener: Callback<LiveblocksError>): () => void;\n\n  /**\n   * @deprecated This API will be removed in a future version of Liveblocks.\n   * Prefer using the newer `.subscribe('status')` API.\n   *\n   * We recommend making the following changes if you use these APIs:\n   *\n   *     OLD APIs                       NEW APIs\n   *     .getConnectionState()     -->  .getStatus()\n   *     .subscribe('connection')  -->  .subscribe('status')\n   *\n   *     OLD STATUSES         NEW STATUSES\n   *     closed          -->  initial\n   *     authenticating  -->  connecting\n   *     connecting      -->  connecting\n   *     open            -->  connected\n   *     unavailable     -->  reconnecting\n   *     failed          -->  disconnected\n   *\n   * Subscribe to legacy connection status updates.\n   *\n   * @returns Unsubscribe function.\n   *\n   */\n  (type: \"connection\", listener: Callback<LegacyConnectionStatus>): () => void;\n\n  /**\n   * Subscribe to connection status updates. The callback will be called any\n   * time the status changes.\n   *\n   * @returns Unsubscribe function.\n   *\n   */\n  (type: \"status\", listener: Callback<Status>): () => void;\n\n  /**\n   * Subscribe to the exceptional event where reconnecting to the Liveblocks\n   * servers is taking longer than usual. This typically is a sign of a client\n   * that has lost internet connectivity.\n   *\n   * This isn't problematic (because the Liveblocks client is still trying to\n   * reconnect), but it's typically a good idea to inform users about it if\n   * the connection takes too long to recover.\n   */\n  (\n    type: \"lost-connection\",\n    listener: Callback<LostConnectionEvent>\n  ): () => void;\n\n  /**\n   * Subscribes to changes made on a Live structure. Returns an unsubscribe function.\n   * In a future version, we will also expose what exactly changed in the Live structure.\n   *\n   * @param callback The callback this called when the Live structure changes.\n   *\n   * @returns Unsubscribe function.\n   *\n   * @example\n   * const liveMap = new LiveMap();  // Could also be LiveList or LiveObject\n   * const unsubscribe = room.subscribe(liveMap, (liveMap) => { });\n   * unsubscribe();\n   */\n  <L extends LiveStructure>(\n    liveStructure: L,\n    callback: (node: L) => void\n  ): () => void;\n\n  /**\n   * Subscribes to changes made on a Live structure and all the nested data\n   * structures. Returns an unsubscribe function. In a future version, we\n   * will also expose what exactly changed in the Live structure.\n   *\n   * @param callback The callback this called when the Live structure, or any\n   * of its nested values, changes.\n   *\n   * @returns Unsubscribe function.\n   *\n   * @example\n   * const liveMap = new LiveMap();  // Could also be LiveList or LiveObject\n   * const unsubscribe = room.subscribe(liveMap, (updates) => { }, { isDeep: true });\n   * unsubscribe();\n   */\n  <L extends LiveStructure>(\n    liveStructure: L,\n    callback: StorageCallback,\n    options: { isDeep: true }\n  ): () => void;\n\n  /**\n   * Subscribe to the current user's history changes.\n   *\n   * @returns Unsubscribe function.\n   *\n   * @example\n   * room.subscribe(\"history\", ({ canUndo, canRedo }) => {\n   *   // Do something\n   * });\n   */\n  (type: \"history\", listener: Callback<HistoryEvent>): () => void;\n\n  /**\n   * Subscribe to storage status changes.\n   *\n   * @returns Unsubscribe function.\n   *\n   * @example\n   * room.subscribe(\"storage-status\", (status) => {\n   *   switch(status) {\n   *      case \"not-loaded\":\n   *        break;\n   *      case \"loading\":\n   *        break;\n   *      case \"synchronizing\":\n   *        break;\n   *      case \"synchronized\":\n   *        break;\n   *      default:\n   *        break;\n   *   }\n   * });\n   */\n  (type: \"storage-status\", listener: Callback<StorageStatus>): () => void;\n};\n\nexport type GetThreadsOptions<TThreadMetadata extends BaseMetadata> = {\n  query?: {\n    metadata?: Partial<TThreadMetadata>;\n  };\n  since?: Date;\n};\n\ntype CommentsApi = {\n  getThreads<TThreadMetadata extends BaseMetadata = never>(\n    options?: GetThreadsOptions<TThreadMetadata>\n  ): Promise<{\n    threads: ThreadData<TThreadMetadata>[];\n    inboxNotifications: InboxNotificationData[];\n    deletedThreads: ThreadDeleteInfo[];\n    deletedInboxNotifications: InboxNotificationDeleteInfo[];\n    meta: {\n      requestedAt: Date;\n    };\n  }>;\n  getThread<TThreadMetadata extends BaseMetadata = never>(options: {\n    threadId: string;\n  }): Promise<\n    | {\n        thread: ThreadData<TThreadMetadata>;\n        inboxNotification?: InboxNotificationData;\n      }\n    | undefined\n  >;\n  createThread<TThreadMetadata extends BaseMetadata = never>(options: {\n    threadId: string;\n    commentId: string;\n    metadata: TThreadMetadata | undefined;\n    body: CommentBody;\n  }): Promise<ThreadData<TThreadMetadata>>;\n  editThreadMetadata<TThreadMetadata extends BaseMetadata = never>(options: {\n    metadata: PartialNullable<TThreadMetadata>;\n    threadId: string;\n  }): Promise<TThreadMetadata>;\n  createComment(options: {\n    threadId: string;\n    commentId: string;\n    body: CommentBody;\n  }): Promise<CommentData>;\n  editComment(options: {\n    threadId: string;\n    commentId: string;\n    body: CommentBody;\n  }): Promise<CommentData>;\n  deleteComment(options: {\n    threadId: string;\n    commentId: string;\n  }): Promise<void>;\n  addReaction(options: {\n    threadId: string;\n    commentId: string;\n    emoji: string;\n  }): Promise<CommentUserReaction>;\n  removeReaction(options: {\n    threadId: string;\n    commentId: string;\n    emoji: string;\n  }): Promise<void>;\n};\n\n// TODO: Add TThreadMetadata\nexport type Room<\n  TPresence extends JsonObject,\n  TStorage extends LsonObject,\n  TUserMeta extends BaseUserMeta,\n  TRoomEvent extends Json,\n> = {\n  /**\n   * @private\n   *\n   * Private methods and variables used in the core internals, but as a user\n   * of Liveblocks, NEVER USE ANY OF THESE DIRECTLY, because bad things\n   * will probably happen if you do.\n   */\n  readonly [kInternal]: PrivateRoomApi;\n\n  /**\n   * The id of the room.\n   */\n  readonly id: string;\n\n  /**\n   * @deprecated This API will be removed in a future version of Liveblocks.\n   * Prefer using `.getStatus()` instead.\n   *\n   * We recommend making the following changes if you use these APIs:\n   *\n   *     OLD APIs                       NEW APIs\n   *     .getConnectionState()     -->  .getStatus()\n   *     .subscribe('connection')  -->  .subscribe('status')\n   *\n   *     OLD STATUSES         NEW STATUSES\n   *     closed          -->  initial\n   *     authenticating  -->  connecting\n   *     connecting      -->  connecting\n   *     open            -->  connected\n   *     unavailable     -->  reconnecting\n   *     failed          -->  disconnected\n   */\n  getConnectionState(): LegacyConnectionStatus;\n\n  /**\n   * Return the current connection status for this room. Can be used to display\n   * a status badge for your Liveblocks connection.\n   */\n  getStatus(): Status;\n  readonly subscribe: SubscribeFn<TPresence, TStorage, TUserMeta, TRoomEvent>;\n\n  /**\n   * Room's history contains functions that let you undo and redo operation made on by the current client on the presence and storage.\n   */\n  readonly history: History;\n\n  /**\n   * Gets the current user.\n   * Returns null if not it is not yet connected to the room.\n   *\n   * @example\n   * const user = room.getSelf();\n   */\n  getSelf(): User<TPresence, TUserMeta> | null;\n\n  /**\n   * Gets the presence of the current user.\n   *\n   * @example\n   * const presence = room.getPresence();\n   */\n  getPresence(): TPresence;\n\n  /**\n   * Gets all the other users in the room.\n   *\n   * @example\n   * const others = room.getOthers();\n   */\n  getOthers(): readonly User<TPresence, TUserMeta>[];\n\n  /**\n   * Updates the presence of the current user. Only pass the properties you want to update. No need to send the full presence.\n   * @param patch A partial object that contains the properties you want to update.\n   * @param options Optional object to configure the behavior of updatePresence.\n   *\n   * @example\n   * room.updatePresence({ x: 0 });\n   * room.updatePresence({ y: 0 });\n   *\n   * const presence = room.getPresence();\n   * // presence is equivalent to { x: 0, y: 0 }\n   */\n  updatePresence(\n    patch: Partial<TPresence>,\n    options?: {\n      /**\n       * Whether or not the presence should have an impact on the undo/redo history.\n       */\n      addToHistory: boolean;\n    }\n  ): void;\n\n  /**\n   * Sends Yjs document updates to Liveblocks server.\n   *\n   * @param {string} data the doc update to send to the server, base64 encoded uint8array\n   */\n  updateYDoc(data: string, guid?: string): void;\n\n  /**\n   * Sends a request for the current document from liveblocks server\n   */\n  fetchYDoc(stateVector: string, guid?: string): void;\n\n  /**\n   * Broadcasts an event to other users in the room. Event broadcasted to the room can be listened with {@link Room.subscribe}(\"event\").\n   * @param {any} event the event to broadcast. Should be serializable to JSON\n   *\n   * @example\n   * // On client A\n   * room.broadcastEvent({ type: \"EMOJI\", emoji: \"🔥\" });\n   *\n   * // On client B\n   * room.subscribe(\"event\", ({ event }) => {\n   *   if(event.type === \"EMOJI\") {\n   *     // Do something\n   *   }\n   * });\n   */\n  broadcastEvent(event: TRoomEvent, options?: BroadcastOptions): void;\n\n  /**\n   * Get the room's storage asynchronously.\n   * The storage's root is a {@link LiveObject}.\n   *\n   * @example\n   * const { root } = await room.getStorage();\n   */\n  getStorage(): Promise<{\n    root: LiveObject<TStorage>;\n  }>;\n\n  /**\n   * Get the room's storage synchronously.\n   * The storage's root is a {@link LiveObject}.\n   *\n   * @example\n   * const root = room.getStorageSnapshot();\n   */\n  getStorageSnapshot(): LiveObject<TStorage> | null;\n\n  readonly events: {\n    readonly status: Observable<Status>;\n    readonly lostConnection: Observable<LostConnectionEvent>;\n\n    readonly customEvent: Observable<RoomEventMessage<TPresence, TUserMeta, TRoomEvent>>; // prettier-ignore\n    readonly self: Observable<User<TPresence, TUserMeta>>;\n    readonly myPresence: Observable<TPresence>;\n    readonly others: Observable<OthersEvent<TPresence, TUserMeta>>;\n    readonly error: Observable<LiveblocksError>;\n    readonly storage: Observable<StorageUpdate[]>;\n    readonly history: Observable<HistoryEvent>;\n\n    /**\n     * Subscribe to the storage loaded event. Will fire any time a full Storage\n     * copy is downloaded. (This happens after the initial connect, and on\n     * every reconnect.)\n     */\n    readonly storageDidLoad: Observable<void>;\n\n    readonly storageStatus: Observable<StorageStatus>;\n    readonly ydoc: Observable<YDocUpdateServerMsg | UpdateYDocClientMsg>;\n    readonly comments: Observable<CommentsEventServerMsg>;\n  };\n\n  /**\n   * Batches modifications made during the given function.\n   * All the modifications are sent to other clients in a single message.\n   * All the subscribers are called only after the batch is over.\n   * All the modifications are merged in a single history item (undo/redo).\n   *\n   * @example\n   * const { root } = await room.getStorage();\n   * room.batch(() => {\n   *   root.set(\"x\", 0);\n   *   room.updatePresence({ cursor: { x: 100, y: 100 }});\n   * });\n   */\n  batch<T>(fn: () => T): T;\n\n  /**\n   * Get the storage status.\n   *\n   * - `not-loaded`: Initial state when entering the room.\n   * - `loading`: Once the storage has been requested via room.getStorage().\n   * - `synchronizing`: When some local updates have not been acknowledged by Liveblocks servers.\n   * - `synchronized`: Storage is in sync with Liveblocks servers.\n   */\n  getStorageStatus(): StorageStatus;\n\n  /**\n   * Start an attempt to connect the room (aka \"enter\" it). Calling\n   * `.connect()` only has an effect if the room is still in its idle initial\n   * state, or the room was explicitly disconnected, or reconnection attempts\n   * were stopped (for example, because the user isn't authorized to enter the\n   * room). Will be a no-op otherwise.\n   */\n  connect(): void;\n\n  /**\n   * Disconnect the room's connection to the Liveblocks server, if any. Puts\n   * the room back into an idle state. It will not do anything until either\n   * `.connect()` or `.reconnect()` is called.\n   *\n   * Only use this API if you wish to connect the room again at a later time.\n   * If you want to disconnect the room because you no longer need it, call\n   * `.destroy()` instead.\n   */\n  disconnect(): void;\n\n  /**\n   * @internal (for now)\n   *\n   * Disconnect the room's connection to the Liveblocks server, if any. Runs\n   * cleanup functions. The room instance can no longer be used to (re)connect.\n   */\n  destroy(): void;\n\n  /**\n   * Reconnect the room to the Liveblocks server by re-establishing a fresh\n   * connection. If the room is not connected yet, initiate it.\n   */\n  reconnect(): void;\n};\n\n/**\n * @private\n *\n * Private methods to directly control the underlying state machine for this\n * room. Used in the core internals and for unit testing, but as a user of\n * Liveblocks, NEVER USE ANY OF THESE METHODS DIRECTLY, because bad things\n * will probably happen if you do.\n */\ntype PrivateRoomApi = {\n  // For introspection in unit tests only\n  presenceBuffer: Json | undefined;\n  undoStack: readonly (readonly Readonly<HistoryOp<JsonObject>>[])[];\n  nodeCount: number;\n\n  // For DevTools support (Liveblocks browser extension)\n  getSelf_forDevTools(): DevTools.UserTreeNode | null;\n  getOthers_forDevTools(): readonly DevTools.UserTreeNode[];\n\n  // NOTE: These are only used in our e2e test app!\n  simulate: {\n    explicitClose(event: IWebSocketCloseEvent): void;\n    rawSend(data: string): void;\n  };\n\n  comments: CommentsApi;\n\n  notifications: {\n    getRoomNotificationSettings(): Promise<RoomNotificationSettings>;\n    updateRoomNotificationSettings(\n      settings: Partial<RoomNotificationSettings>\n    ): Promise<RoomNotificationSettings>;\n    markInboxNotificationAsRead(notificationId: string): Promise<void>;\n  };\n};\n\n// The maximum message size on websockets is 1MB. We'll set the threshold\n// slightly lower (1kB) to trigger sending over HTTP, to account for messaging\n// overhead, so we're not right at the limit.\n// NOTE: this only works with the unstable_fallbackToHTTP option enabled\nconst MAX_SOCKET_MESSAGE_SIZE = 1024 * 1024 - 1024;\n\nfunction makeIdFactory(connectionId: number): IdFactory {\n  let count = 0;\n  return () => `${connectionId}:${count++}`;\n}\n\ntype HistoryOp<TPresence extends JsonObject> =\n  | Op\n  | {\n      readonly type: \"presence\";\n      readonly data: TPresence;\n    };\n\ntype IdFactory = () => string;\n\ntype StaticSessionInfo = {\n  readonly userId?: string;\n  readonly userInfo?: IUserInfo;\n};\n\ntype DynamicSessionInfo = {\n  readonly actor: number;\n  readonly nonce: string;\n  readonly scopes: string[];\n};\n\ntype RoomState<\n  TPresence extends JsonObject,\n  TStorage extends LsonObject,\n  TUserMeta extends BaseUserMeta,\n  TRoomEvent extends Json,\n> = {\n  /**\n   * All pending changes that yet need to be synced.\n   */\n  buffer: {\n    flushTimerID: TimeoutID | undefined;\n\n    // When the last flush happened. Together with config.throttleDelay, this\n    // will control whether the next flush will be sent out immediately, or if\n    // a flush will get scheduled for a few milliseconds into the future.\n    readonly lastFlushedAt: number;\n\n    // Queued-up \"my presence\" updates to be flushed at the earliest convenience\n    presenceUpdates:\n      | { type: \"partial\"; data: Partial<TPresence> }\n      | { type: \"full\"; data: TPresence }\n      | null;\n    messages: ClientMsg<TPresence, TRoomEvent>[];\n    storageOperations: Op[];\n  };\n\n  //\n  // The \"self\" User takes assembly of three sources-of-truth:\n  // - The JWT token provides the userId and userInfo metadata (static)\n  // - The server, in its initial ROOM_STATE message, will provide the actor ID\n  //   and the scopes (dynamic)\n  // - The presence is provided by the client's initialPresence configuration (presence)\n  //\n  readonly staticSessionInfo: ValueRef<StaticSessionInfo | null>;\n  readonly dynamicSessionInfo: ValueRef<DynamicSessionInfo | null>;\n  readonly myPresence: PatchableRef<TPresence>;\n  readonly others: OthersRef<TPresence, TUserMeta>;\n\n  idFactory: IdFactory | null;\n  initialStorage?: TStorage;\n\n  clock: number;\n  opClock: number;\n  readonly nodes: Map<string, LiveNode>;\n  root: LiveObject<TStorage> | undefined;\n\n  readonly undoStack: HistoryOp<TPresence>[][];\n  readonly redoStack: HistoryOp<TPresence>[][];\n\n  /**\n   * When history is paused, all operations will get queued up here. When\n   * history is resumed, these operations get \"committed\" to the undo stack.\n   */\n  pausedHistory: null | HistoryOp<TPresence>[];\n\n  /**\n   * Place to collect all mutations during a batch. Ops will be sent over the\n   * wire after the batch is ended.\n   */\n  activeBatch: {\n    ops: Op[];\n    reverseOps: HistoryOp<TPresence>[];\n    updates: {\n      others: [];\n      presence: boolean;\n      storageUpdates: Map<string, StorageUpdate>;\n    };\n  } | null;\n\n  // A registry of yet-unacknowledged Ops. These Ops have already been\n  // submitted to the server, but have not yet been acknowledged.\n  readonly unacknowledgedOps: Map<string, Op>;\n\n  // Stack traces of all pending Ops. Used for debugging in non-production builds\n  readonly opStackTraces?: Map<string, string>;\n};\n\nexport type Polyfills = {\n  atob?: (data: string) => string;\n  fetch?: typeof fetch;\n  WebSocket?: IWebSocket;\n};\n\nexport type RoomInitializers<\n  TPresence extends JsonObject,\n  TStorage extends LsonObject,\n> = Resolve<{\n  /**\n   * The initial Presence to use and announce when you enter the Room. The\n   * Presence is available on all users in the Room (me & others).\n   */\n  initialPresence: TPresence | ((roomId: string) => TPresence);\n  /**\n   * The initial Storage to use when entering a new Room.\n   */\n  initialStorage?: TStorage | ((roomId: string) => TStorage);\n  /**\n   * Whether or not the room automatically connects to Liveblock servers.\n   * Default is true.\n   *\n   * Usually set to false when the client is used from the server to not call\n   * the authentication endpoint or connect via WebSocket.\n   */\n  autoConnect?: boolean;\n  /** @deprecated Renamed to `autoConnect` */\n  shouldInitiallyConnect?: boolean;\n}>;\n\nexport type RoomDelegates = Omit<Delegates<AuthValue>, \"canZombie\">;\n\n/** @internal */\nexport type RoomConfig = {\n  delegates: RoomDelegates;\n\n  roomId: string;\n  throttleDelay: number;\n  lostConnectionTimeout: number;\n  backgroundKeepAliveTimeout?: number;\n\n  unstable_fallbackToHTTP?: boolean;\n  unstable_streamData?: boolean;\n\n  polyfills?: Polyfills;\n\n  /**\n   * Only necessary when you’re using Liveblocks with React v17 or lower.\n   *\n   * If so, pass in a reference to `ReactDOM.unstable_batchedUpdates` here.\n   * This will allow Liveblocks to circumvent the so-called \"zombie child\n   * problem\". To learn more, see\n   * https://liveblocks.io/docs/guides/troubleshooting#stale-props-zombie-child\n   */\n  unstable_batchedUpdates?: (cb: () => void) => void;\n\n  baseUrl: string;\n  enableDebugLogging?: boolean;\n};\n\nfunction userToTreeNode(\n  key: string,\n  user: User<JsonObject, BaseUserMeta>\n): DevTools.UserTreeNode {\n  return {\n    type: \"User\",\n    id: `${user.connectionId}`,\n    key,\n    payload: user,\n  };\n}\n\n/**\n * Returns a ref to access if, and if so, how long the current tab is in the\n * background and an unsubscribe function.\n *\n * The `inBackgroundSince` value will either be a JS timestamp indicating the\n * moment the tab was put into the background, or `null` in case the tab isn't\n * currently in the background. In non-DOM environments, this will always\n * return `null`.\n */\nfunction installBackgroundTabSpy(): [\n  inBackgroundSince: { readonly current: number | null },\n  unsub: () => void,\n] {\n  const doc = typeof document !== \"undefined\" ? document : undefined;\n  const inBackgroundSince: { current: number | null } = { current: null };\n\n  function onVisibilityChange() {\n    if (doc?.visibilityState === \"hidden\") {\n      inBackgroundSince.current = inBackgroundSince.current ?? Date.now();\n    } else {\n      inBackgroundSince.current = null;\n    }\n  }\n\n  doc?.addEventListener(\"visibilitychange\", onVisibilityChange);\n  const unsub = () => {\n    doc?.removeEventListener(\"visibilitychange\", onVisibilityChange);\n  };\n\n  return [inBackgroundSince, unsub];\n}\n\nexport class CommentsApiError extends Error {\n  constructor(\n    public message: string,\n    public status: number,\n    public details?: JsonObject\n  ) {\n    super(message);\n  }\n}\n\n/**\n * Handles all Comments-related API calls.\n */\nfunction createCommentsApi(\n  roomId: string,\n  getAuthValue: () => Promise<AuthValue>,\n  fetchClientApi: (\n    roomId: string,\n    endpoint: string,\n    authValue: AuthValue,\n    options?: RequestInit,\n    params?: QueryParams\n  ) => Promise<Response>\n): CommentsApi {\n  async function fetchCommentsApi(\n    endpoint: string,\n    params?: QueryParams,\n    options?: RequestInit\n  ): Promise<Response> {\n    // TODO: Use the right scope\n    const authValue = await getAuthValue();\n\n    return fetchClientApi(roomId, endpoint, authValue, options, params);\n  }\n\n  async function fetchJson<T>(\n    endpoint: string,\n    options?: RequestInit,\n    params?: QueryParams\n  ): Promise<T> {\n    const response = await fetchCommentsApi(endpoint, params, options);\n\n    if (!response.ok) {\n      if (response.status >= 400 && response.status < 600) {\n        let error: CommentsApiError;\n\n        try {\n          const errorBody = (await response.json()) as { message: string };\n\n          error = new CommentsApiError(\n            errorBody.message,\n            response.status,\n            errorBody\n          );\n        } catch {\n          error = new CommentsApiError(response.statusText, response.status);\n        }\n\n        throw error;\n      }\n    }\n\n    let body;\n\n    try {\n      body = (await response.json()) as T;\n    } catch {\n      body = {} as T;\n    }\n\n    return body;\n  }\n\n  async function getThreads<TThreadMetadata extends BaseMetadata = never>(\n    options?: GetThreadsOptions<TThreadMetadata>\n  ) {\n    const response = await fetchCommentsApi(\n      \"/threads/search\",\n      {\n        since: options?.since?.toISOString(),\n      },\n      {\n        body: JSON.stringify({\n          ...(options?.query?.metadata && { metadata: options.query.metadata }),\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n      }\n    );\n\n    if (response.ok) {\n      const json = await (response.json() as Promise<{\n        data: ThreadDataPlain<TThreadMetadata>[];\n        inboxNotifications: InboxNotificationDataPlain[];\n        deletedThreads: ThreadDeleteInfoPlain[];\n        deletedInboxNotifications: InboxNotificationDeleteInfoPlain[];\n        meta: {\n          requestedAt: string;\n        };\n      }>);\n\n      return {\n        threads: json.data.map((thread) => convertToThreadData(thread)),\n        inboxNotifications: json.inboxNotifications.map((notification) =>\n          convertToInboxNotificationData(notification)\n        ),\n        deletedThreads: json.deletedThreads.map((info) =>\n          convertToThreadDeleteInfo(info)\n        ),\n        deletedInboxNotifications: json.deletedInboxNotifications.map((info) =>\n          convertToInboxNotificationDeleteInfo(info)\n        ),\n        meta: {\n          requestedAt: new Date(json.meta.requestedAt),\n        },\n      };\n    } else if (response.status === 404) {\n      return {\n        threads: [],\n        inboxNotifications: [],\n        deletedThreads: [],\n        deletedInboxNotifications: [],\n        meta: {\n          requestedAt: new Date(),\n        },\n      };\n    } else {\n      throw new Error(\"There was an error while getting threads.\");\n    }\n  }\n\n  async function getThread({ threadId }: { threadId: string }) {\n    const response = await fetchCommentsApi(\n      `/thread-with-notification/${threadId}`\n    );\n\n    if (response.ok) {\n      const json = (await response.json()) as {\n        thread: ThreadDataPlain;\n        inboxNotification?: InboxNotificationDataPlain;\n      };\n\n      return {\n        thread: convertToThreadData(json.thread),\n        inboxNotification: json.inboxNotification\n          ? convertToInboxNotificationData(json.inboxNotification)\n          : undefined,\n      };\n    } else if (response.status === 404) {\n      return;\n    } else {\n      throw new Error(`There was an error while getting thread ${threadId}.`);\n    }\n  }\n\n  async function createThread<TThreadMetadata extends BaseMetadata = never>({\n    metadata,\n    body,\n    commentId,\n    threadId,\n  }: {\n    roomId: string;\n    threadId: string;\n    commentId: string;\n    metadata: TThreadMetadata | undefined;\n    body: CommentBody;\n  }) {\n    const thread = await fetchJson<ThreadDataPlain<TThreadMetadata>>(\n      \"/threads\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: threadId,\n          comment: {\n            id: commentId,\n            body,\n          },\n          metadata,\n        }),\n      }\n    );\n\n    return convertToThreadData(thread);\n  }\n\n  async function editThreadMetadata<\n    TThreadMetadata extends BaseMetadata = never,\n  >({\n    metadata,\n    threadId,\n  }: {\n    roomId: string;\n    metadata: PartialNullable<TThreadMetadata>;\n    threadId: string;\n  }) {\n    return await fetchJson<TThreadMetadata>(\n      `/threads/${encodeURIComponent(threadId)}/metadata`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(metadata),\n      }\n    );\n  }\n\n  async function createComment({\n    threadId,\n    commentId,\n    body,\n  }: {\n    threadId: string;\n    commentId: string;\n    body: CommentBody;\n  }) {\n    const comment = await fetchJson<CommentDataPlain>(\n      `/threads/${encodeURIComponent(threadId)}/comments`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: commentId,\n          body,\n        }),\n      }\n    );\n\n    return convertToCommentData(comment);\n  }\n\n  async function editComment({\n    threadId,\n    commentId,\n    body,\n  }: {\n    threadId: string;\n    commentId: string;\n    body: CommentBody;\n  }) {\n    const comment = await fetchJson<CommentDataPlain>(\n      `/threads/${encodeURIComponent(threadId)}/comments/${encodeURIComponent(\n        commentId\n      )}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          body,\n        }),\n      }\n    );\n\n    return convertToCommentData(comment);\n  }\n\n  async function deleteComment({\n    threadId,\n    commentId,\n  }: {\n    roomId: string;\n    threadId: string;\n    commentId: string;\n  }) {\n    await fetchJson(\n      `/threads/${encodeURIComponent(threadId)}/comments/${encodeURIComponent(\n        commentId\n      )}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n  }\n\n  async function addReaction({\n    threadId,\n    commentId,\n    emoji,\n  }: {\n    threadId: string;\n    commentId: string;\n    emoji: string;\n  }) {\n    const reaction = await fetchJson<CommentUserReactionPlain>(\n      `/threads/${encodeURIComponent(threadId)}/comments/${encodeURIComponent(\n        commentId\n      )}/reactions`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ emoji }),\n      }\n    );\n\n    return convertToCommentUserReaction(reaction);\n  }\n\n  async function removeReaction({\n    threadId,\n    commentId,\n    emoji,\n  }: {\n    threadId: string;\n    commentId: string;\n    emoji: string;\n  }) {\n    await fetchJson<CommentData>(\n      `/threads/${encodeURIComponent(threadId)}/comments/${encodeURIComponent(\n        commentId\n      )}/reactions/${encodeURIComponent(emoji)}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n  }\n\n  return {\n    getThreads,\n    getThread,\n    createThread,\n    editThreadMetadata,\n    createComment,\n    editComment,\n    deleteComment,\n    addReaction,\n    removeReaction,\n  };\n}\n\nconst MARK_INBOX_NOTIFICATIONS_AS_READ_BATCH_DELAY = 50;\n\n/**\n * @internal\n * Initializes a new Room, and returns its public API.\n */\nexport function createRoom<\n  TPresence extends JsonObject,\n  TStorage extends LsonObject,\n  TUserMeta extends BaseUserMeta,\n  TRoomEvent extends Json,\n>(\n  options: Omit<\n    RoomInitializers<TPresence, TStorage>,\n    \"autoConnect\" | \"shouldInitiallyConnect\"\n  >,\n  config: RoomConfig\n): Room<TPresence, TStorage, TUserMeta, TRoomEvent> {\n  const initialPresence =\n    typeof options.initialPresence === \"function\"\n      ? options.initialPresence(config.roomId)\n      : options.initialPresence;\n  const initialStorage =\n    typeof options.initialStorage === \"function\"\n      ? options.initialStorage(config.roomId)\n      : options.initialStorage;\n\n  const [inBackgroundSince, uninstallBgTabSpy] = installBackgroundTabSpy();\n\n  // Create a delegate pair for (a specific) Live Room socket connection(s)\n  const delegates = {\n    ...config.delegates,\n\n    // A connection is allowed to go into \"zombie state\" only if all of the\n    // following conditions apply:\n    //\n    // - The `backgroundKeepAliveTimeout` client option is configured\n    // - The browser window has been in the background for at least\n    //   `backgroundKeepAliveTimeout` milliseconds\n    // - There are no pending changes\n    //\n    canZombie() {\n      return (\n        config.backgroundKeepAliveTimeout !== undefined &&\n        inBackgroundSince.current !== null &&\n        Date.now() >\n          inBackgroundSince.current + config.backgroundKeepAliveTimeout &&\n        getStorageStatus() !== \"synchronizing\"\n      );\n    },\n  };\n\n  const managedSocket: ManagedSocket<AuthValue> = new ManagedSocket(\n    delegates,\n    config.enableDebugLogging\n  );\n\n  // The room's internal stateful context\n  const context: RoomState<TPresence, TStorage, TUserMeta, TRoomEvent> = {\n    buffer: {\n      flushTimerID: undefined,\n      lastFlushedAt: 0,\n      presenceUpdates:\n        // Queue up the initial presence message as a Full Presence™ update\n        {\n          type: \"full\",\n          data: initialPresence,\n        },\n      messages: [],\n      storageOperations: [],\n    },\n\n    staticSessionInfo: new ValueRef(null),\n    dynamicSessionInfo: new ValueRef(null),\n    myPresence: new PatchableRef(initialPresence),\n    others: new OthersRef<TPresence, TUserMeta>(),\n\n    initialStorage,\n    idFactory: null,\n\n    // Storage\n    clock: 0,\n    opClock: 0,\n    nodes: new Map<string, LiveNode>(),\n    root: undefined,\n\n    undoStack: [],\n    redoStack: [],\n    pausedHistory: null,\n\n    activeBatch: null,\n    unacknowledgedOps: new Map<string, Op>(),\n\n    // Debug\n    opStackTraces:\n      process.env.NODE_ENV !== \"production\"\n        ? new Map<string, string>()\n        : undefined,\n  };\n\n  const doNotBatchUpdates = (cb: () => void): void => cb();\n  const batchUpdates = config.unstable_batchedUpdates ?? doNotBatchUpdates;\n\n  let lastTokenKey: string | undefined;\n  function onStatusDidChange(newStatus: Status) {\n    const authValue = managedSocket.authValue;\n    if (authValue !== null) {\n      const tokenKey = getAuthBearerHeaderFromAuthValue(authValue);\n\n      if (tokenKey !== lastTokenKey) {\n        lastTokenKey = tokenKey;\n\n        if (authValue.type === \"secret\") {\n          const token = authValue.token.parsed;\n          context.staticSessionInfo.set({\n            userId: token.k === TokenKind.SECRET_LEGACY ? token.id : token.uid,\n            userInfo:\n              token.k === TokenKind.SECRET_LEGACY ? token.info : token.ui,\n          });\n        } else {\n          context.staticSessionInfo.set({\n            userId: undefined,\n            userInfo: undefined,\n          });\n        }\n      }\n    }\n\n    // Forward to the outside world\n    batchUpdates(() => {\n      eventHub.status.notify(newStatus);\n      notifySelfChanged(doNotBatchUpdates);\n    });\n  }\n\n  let _connectionLossTimerId: TimeoutID | undefined;\n  let _hasLostConnection = false;\n\n  function handleConnectionLossEvent(newStatus: Status) {\n    if (newStatus === \"reconnecting\") {\n      _connectionLossTimerId = setTimeout(() => {\n        batchUpdates(() => {\n          eventHub.lostConnection.notify(\"lost\");\n          _hasLostConnection = true;\n\n          // Clear the others\n          context.others.clearOthers();\n          notify({ others: [{ type: \"reset\" }] }, doNotBatchUpdates);\n        });\n      }, config.lostConnectionTimeout);\n    } else {\n      clearTimeout(_connectionLossTimerId);\n\n      if (_hasLostConnection) {\n        if (newStatus === \"disconnected\") {\n          batchUpdates(() => {\n            eventHub.lostConnection.notify(\"failed\");\n          });\n        } else {\n          // Typically the case when going back to \"connected\", but really take\n          // *any* other state change as a recovery sign\n          batchUpdates(() => {\n            eventHub.lostConnection.notify(\"restored\");\n          });\n        }\n\n        _hasLostConnection = false;\n      }\n    }\n  }\n\n  function onDidConnect() {\n    // Re-broadcast the full user presence as soon as we (re)connect\n    context.buffer.presenceUpdates = {\n      type: \"full\",\n      data:\n        // Because context.me.current is a readonly object, we'll have to\n        // make a copy here. Otherwise, type errors happen later when\n        // \"patching\" my presence.\n        { ...context.myPresence.current },\n    };\n\n    // NOTE: There was a flush here before, but I don't think it's really\n    // needed anymore. We're now combining this flush with the one below, to\n    // combine them in a single batch.\n    // tryFlushing();\n\n    // If a storage fetch has ever been initiated, we assume the client is\n    // interested in storage, so we will refresh it after a reconnection.\n    if (_getStorage$ !== null) {\n      refreshStorage({ flush: false });\n    }\n    flushNowOrSoon();\n  }\n\n  function onDidDisconnect() {\n    clearTimeout(context.buffer.flushTimerID);\n  }\n\n  // Register events handlers for events coming from the socket\n  // We never have to unsubscribe, because the Room and the Connection Manager\n  // will have the same life-time.\n  managedSocket.events.onMessage.subscribe(handleServerMessage);\n  managedSocket.events.statusDidChange.subscribe(onStatusDidChange);\n  managedSocket.events.statusDidChange.subscribe(handleConnectionLossEvent);\n  managedSocket.events.didConnect.subscribe(onDidConnect);\n  managedSocket.events.didDisconnect.subscribe(onDidDisconnect);\n  managedSocket.events.onLiveblocksError.subscribe((err) => {\n    batchUpdates(() => {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\n          `Connection to websocket server closed. Reason: ${err.message} (code: ${err.code}).`\n        );\n      }\n      eventHub.error.notify(err);\n    });\n  });\n\n  const pool: ManagedPool = {\n    roomId: config.roomId,\n\n    getNode: (id: string) => context.nodes.get(id),\n    addNode: (id: string, node: LiveNode) => void context.nodes.set(id, node),\n    deleteNode: (id: string) => void context.nodes.delete(id),\n\n    generateId: () => `${getConnectionId()}:${context.clock++}`,\n    generateOpId: () => `${getConnectionId()}:${context.opClock++}`,\n\n    dispatch(\n      ops: Op[],\n      reverse: Op[],\n      storageUpdates: Map<string, StorageUpdate>\n    ) {\n      const activeBatch = context.activeBatch;\n\n      if (process.env.NODE_ENV !== \"production\") {\n        const stackTrace = captureStackTrace(\"Storage mutation\", this.dispatch);\n        if (stackTrace) {\n          for (const op of ops) {\n            if (op.opId) {\n              nn(context.opStackTraces).set(op.opId, stackTrace);\n            }\n          }\n        }\n      }\n\n      if (activeBatch) {\n        activeBatch.ops.push(...ops);\n        for (const [key, value] of storageUpdates) {\n          activeBatch.updates.storageUpdates.set(\n            key,\n            mergeStorageUpdates(\n              activeBatch.updates.storageUpdates.get(key),\n              value\n            )\n          );\n        }\n        activeBatch.reverseOps.unshift(...reverse);\n      } else {\n        batchUpdates(() => {\n          addToUndoStack(reverse, doNotBatchUpdates);\n          context.redoStack.length = 0;\n          dispatchOps(ops);\n          notify({ storageUpdates }, doNotBatchUpdates);\n        });\n      }\n    },\n\n    assertStorageIsWritable: () => {\n      const scopes = context.dynamicSessionInfo.current?.scopes;\n      if (scopes === undefined) {\n        // If we aren't connected yet, assume we can write\n        return;\n      }\n\n      const canWrite = canWriteStorage(scopes);\n      if (!canWrite) {\n        throw new Error(\n          \"Cannot write to storage with a read only user, please ensure the user has write permissions\"\n        );\n      }\n    },\n  };\n\n  const eventHub = {\n    connection: makeEventSource<LegacyConnectionStatus>(), // Old/deprecated API\n    status: makeEventSource<Status>(), // New/recommended API\n    lostConnection: makeEventSource<LostConnectionEvent>(),\n\n    customEvent:\n      makeEventSource<RoomEventMessage<TPresence, TUserMeta, TRoomEvent>>(),\n    self: makeEventSource<User<TPresence, TUserMeta>>(),\n    myPresence: makeEventSource<TPresence>(),\n    others: makeEventSource<OthersEvent<TPresence, TUserMeta>>(),\n    error: makeEventSource<LiveblocksError>(),\n    storage: makeEventSource<StorageUpdate[]>(),\n    history: makeEventSource<HistoryEvent>(),\n    storageDidLoad: makeEventSource<void>(),\n    storageStatus: makeEventSource<StorageStatus>(),\n    ydoc: makeEventSource<YDocUpdateServerMsg | UpdateYDocClientMsg>(),\n\n    comments: makeEventSource<CommentsEventServerMsg>(),\n  };\n\n  async function fetchClientApi(\n    roomId: string,\n    endpoint: string,\n    authValue: AuthValue,\n    options?: RequestInit,\n    params?: QueryParams\n  ) {\n    const url = urljoin(\n      config.baseUrl,\n      `/v2/c/rooms/${encodeURIComponent(roomId)}${endpoint}`,\n      params\n    );\n    const fetcher = config.polyfills?.fetch || /* istanbul ignore next */ fetch;\n    return await fetcher(url, {\n      ...options,\n      headers: {\n        ...options?.headers,\n        Authorization: `Bearer ${getAuthBearerHeaderFromAuthValue(authValue)}`,\n      },\n    });\n  }\n\n  async function streamFetch(authValue: AuthValue, roomId: string) {\n    return fetchClientApi(roomId, \"/storage\", authValue, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n\n  async function httpPostToRoom(endpoint: \"/send-message\", body: JsonObject) {\n    if (!managedSocket.authValue) {\n      throw new Error(\"Not authorized\");\n    }\n\n    return fetchClientApi(config.roomId, endpoint, managedSocket.authValue, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  function sendMessages(messages: ClientMsg<TPresence, TRoomEvent>[]) {\n    const serializedPayload = JSON.stringify(messages);\n    const nonce = context.dynamicSessionInfo.current?.nonce;\n    if (config.unstable_fallbackToHTTP && nonce) {\n      // if our message contains UTF-8, we can't simply use length. See: https://stackoverflow.com/questions/23318037/size-of-json-object-in-kbs-mbs\n      // if this turns out to be expensive, we could just guess with a lower value.\n      const size = new TextEncoder().encode(serializedPayload).length;\n      if (size > MAX_SOCKET_MESSAGE_SIZE) {\n        void httpPostToRoom(\"/send-message\", { nonce, messages }).then(\n          (resp) => {\n            if (!resp.ok && resp.status === 403) {\n              managedSocket.reconnect();\n            }\n          }\n        );\n        console.warn(\n          \"Message was too large for websockets and sent over HTTP instead\"\n        );\n        return;\n      }\n    }\n    managedSocket.send(serializedPayload);\n  }\n\n  const self = new DerivedRef(\n    context.staticSessionInfo as ImmutableRef<StaticSessionInfo | null>,\n    context.dynamicSessionInfo as ImmutableRef<DynamicSessionInfo | null>,\n    context.myPresence,\n    (\n      staticSession,\n      dynamicSession,\n      myPresence\n    ): User<TPresence, TUserMeta> | null => {\n      if (staticSession === null || dynamicSession === null) {\n        return null;\n      } else {\n        const canWrite = canWriteStorage(dynamicSession.scopes);\n        return {\n          connectionId: dynamicSession.actor,\n          id: staticSession.userId,\n          info: staticSession.userInfo,\n          presence: myPresence,\n          canWrite,\n          canComment: canComment(dynamicSession.scopes),\n          isReadOnly: !canWrite, // Deprecated, kept for backward-compatibility\n        };\n      }\n    }\n  );\n\n  let _lastSelf: Readonly<User<TPresence, TUserMeta>> | undefined;\n  function notifySelfChanged(batchedUpdatesWrapper: (cb: () => void) => void) {\n    const currSelf = self.current;\n    if (currSelf !== null && currSelf !== _lastSelf) {\n      batchedUpdatesWrapper(() => {\n        eventHub.self.notify(currSelf);\n      });\n      _lastSelf = currSelf;\n    }\n  }\n\n  // For use in DevTools\n  const selfAsTreeNode = new DerivedRef(\n    self as ImmutableRef<User<TPresence, TUserMeta> | null>,\n    (me) => (me !== null ? userToTreeNode(\"Me\", me) : null)\n  );\n\n  function createOrUpdateRootFromMessage(\n    message: InitialDocumentStateServerMsg,\n    batchedUpdatesWrapper: (cb: () => void) => void\n  ) {\n    if (message.items.length === 0) {\n      throw new Error(\"Internal error: cannot load storage without items\");\n    }\n\n    if (context.root !== undefined) {\n      updateRoot(message.items, batchedUpdatesWrapper);\n    } else {\n      context.root = LiveObject._fromItems<TStorage>(message.items, pool);\n    }\n\n    // Populate missing top-level keys using `initialStorage`\n    const stackSizeBefore = context.undoStack.length;\n    for (const key in context.initialStorage) {\n      if (context.root.get(key) === undefined) {\n        context.root.set(key, cloneLson(context.initialStorage[key]));\n      }\n    }\n\n    // Initial storage is populated using normal \"set\" operations in the loop\n    // above, those updates can end up in the undo stack, so let's prune it.\n    context.undoStack.length = stackSizeBefore;\n  }\n\n  function updateRoot(\n    items: IdTuple<SerializedCrdt>[],\n    batchedUpdatesWrapper: (cb: () => void) => void\n  ) {\n    if (context.root === undefined) {\n      return;\n    }\n\n    const currentItems: NodeMap = new Map();\n    for (const [id, node] of context.nodes) {\n      currentItems.set(id, node._serialize());\n    }\n\n    // Get operations that represent the diff between 2 states.\n    const ops = getTreesDiffOperations(currentItems, new Map(items));\n\n    const result = applyOps(ops, false);\n\n    notify(result.updates, batchedUpdatesWrapper);\n  }\n\n  function _addToRealUndoStack(\n    historyOps: HistoryOp<TPresence>[],\n    batchedUpdatesWrapper: (cb: () => void) => void\n  ) {\n    // If undo stack is too large, we remove the older item\n    if (context.undoStack.length >= 50) {\n      context.undoStack.shift();\n    }\n\n    context.undoStack.push(historyOps);\n    onHistoryChange(batchedUpdatesWrapper);\n  }\n\n  function addToUndoStack(\n    historyOps: HistoryOp<TPresence>[],\n    batchedUpdatesWrapper: (cb: () => void) => void\n  ) {\n    if (context.pausedHistory !== null) {\n      context.pausedHistory.unshift(...historyOps);\n    } else {\n      _addToRealUndoStack(historyOps, batchedUpdatesWrapper);\n    }\n  }\n\n  type NotifyUpdates = {\n    storageUpdates?: Map<string, StorageUpdate>;\n    presence?: boolean;\n    others?: InternalOthersEvent<TPresence, TUserMeta>[];\n  };\n\n  function notify(\n    updates: NotifyUpdates,\n    batchedUpdatesWrapper: (cb: () => void) => void\n  ) {\n    const storageUpdates = updates.storageUpdates;\n    const othersUpdates = updates.others;\n\n    batchedUpdatesWrapper(() => {\n      if (othersUpdates !== undefined && othersUpdates.length > 0) {\n        const others = context.others.current;\n        for (const event of othersUpdates) {\n          eventHub.others.notify({ ...event, others });\n        }\n      }\n\n      if (updates.presence ?? false) {\n        notifySelfChanged(doNotBatchUpdates);\n        eventHub.myPresence.notify(context.myPresence.current);\n      }\n\n      if (storageUpdates !== undefined && storageUpdates.size > 0) {\n        const updates = Array.from(storageUpdates.values());\n        eventHub.storage.notify(updates);\n      }\n      notifyStorageStatus();\n    });\n  }\n\n  function getConnectionId() {\n    const info = context.dynamicSessionInfo.current;\n    if (info) {\n      return info.actor;\n    }\n\n    throw new Error(\n      \"Internal. Tried to get connection id but connection was never open\"\n    );\n  }\n\n  function applyOps<O extends HistoryOp<TPresence>>(\n    rawOps: readonly O[],\n    isLocal: boolean\n  ): {\n    // Input Ops can get opIds assigned during application.\n    ops: O[];\n    reverse: O[];\n    updates: {\n      storageUpdates: Map<string, StorageUpdate>;\n      presence: boolean;\n    };\n  } {\n    const output = {\n      reverse: [] as O[],\n      storageUpdates: new Map<string, StorageUpdate>(),\n      presence: false,\n    };\n\n    const createdNodeIds = new Set<string>();\n\n    // Ops applied after undo/redo won't have opIds assigned, yet. Let's do\n    // that right now first.\n    const ops = rawOps.map((op) => {\n      if (op.type !== \"presence\" && !op.opId) {\n        return { ...op, opId: pool.generateOpId() };\n      } else {\n        return op;\n      }\n    });\n\n    for (const op of ops) {\n      if (op.type === \"presence\") {\n        const reverse = {\n          type: \"presence\" as const,\n          data: {} as TPresence,\n        };\n\n        for (const key in op.data) {\n          reverse.data[key] = context.myPresence.current[key];\n        }\n\n        context.myPresence.patch(op.data);\n\n        if (context.buffer.presenceUpdates === null) {\n          context.buffer.presenceUpdates = { type: \"partial\", data: op.data };\n        } else {\n          // Merge the new fields with whatever is already queued up (doesn't\n          // matter whether its a partial or full update)\n          for (const key in op.data) {\n            context.buffer.presenceUpdates.data[key] = op.data[key];\n          }\n        }\n\n        output.reverse.unshift(reverse as O);\n        output.presence = true;\n      } else {\n        let source: OpSource;\n\n        if (isLocal) {\n          source = OpSource.UNDOREDO_RECONNECT;\n        } else {\n          const opId = nn(op.opId);\n          if (process.env.NODE_ENV !== \"production\") {\n            nn(context.opStackTraces).delete(opId);\n          }\n\n          const deleted = context.unacknowledgedOps.delete(opId);\n          source = deleted ? OpSource.ACK : OpSource.REMOTE;\n        }\n\n        const applyOpResult = applyOp(op, source);\n        if (applyOpResult.modified) {\n          const nodeId = applyOpResult.modified.node._id;\n\n          // If the modified node is not the root (undefined) and was created in the same batch, we don't want to notify\n          // storage updates for the children.\n          if (!(nodeId && createdNodeIds.has(nodeId))) {\n            output.storageUpdates.set(\n              nn(applyOpResult.modified.node._id),\n              mergeStorageUpdates(\n                output.storageUpdates.get(nn(applyOpResult.modified.node._id)),\n                applyOpResult.modified\n              )\n            );\n            output.reverse.unshift(...(applyOpResult.reverse as O[]));\n          }\n\n          if (\n            op.type === OpCode.CREATE_LIST ||\n            op.type === OpCode.CREATE_MAP ||\n            op.type === OpCode.CREATE_OBJECT\n          ) {\n            createdNodeIds.add(nn(op.id));\n          }\n        }\n      }\n    }\n\n    return {\n      ops,\n      reverse: output.reverse,\n      updates: {\n        storageUpdates: output.storageUpdates,\n        presence: output.presence,\n      },\n    };\n  }\n\n  function applyOp(op: Op, source: OpSource): ApplyResult {\n    // Explicit case to handle incoming \"AckOp\"s, which are supposed to be\n    // no-ops.\n    if (isAckOp(op)) {\n      return { modified: false };\n    }\n\n    switch (op.type) {\n      case OpCode.DELETE_OBJECT_KEY:\n      case OpCode.UPDATE_OBJECT:\n      case OpCode.DELETE_CRDT: {\n        const node = context.nodes.get(op.id);\n        if (node === undefined) {\n          return { modified: false };\n        }\n\n        return node._apply(op, source === OpSource.UNDOREDO_RECONNECT);\n      }\n\n      case OpCode.SET_PARENT_KEY: {\n        const node = context.nodes.get(op.id);\n        if (node === undefined) {\n          return { modified: false };\n        }\n\n        if (node.parent.type === \"HasParent\" && isLiveList(node.parent.node)) {\n          return node.parent.node._setChildKey(\n            asPos(op.parentKey),\n            node,\n            source\n          );\n        }\n        return { modified: false };\n      }\n      case OpCode.CREATE_OBJECT:\n      case OpCode.CREATE_LIST:\n      case OpCode.CREATE_MAP:\n      case OpCode.CREATE_REGISTER: {\n        if (op.parentId === undefined) {\n          return { modified: false };\n        }\n\n        const parentNode = context.nodes.get(op.parentId);\n        if (parentNode === undefined) {\n          return { modified: false };\n        }\n\n        return parentNode._attachChild(op, source);\n      }\n    }\n  }\n\n  function updatePresence(\n    patch: Partial<TPresence>,\n    options?: { addToHistory: boolean }\n  ) {\n    const oldValues = {} as TPresence;\n\n    if (context.buffer.presenceUpdates === null) {\n      // try {\n      context.buffer.presenceUpdates = {\n        type: \"partial\",\n        data: {},\n      };\n      // } catch (err) {\n      //   window.console.log({ context, patch, err });\n      //   throw err;\n      // }\n    }\n\n    for (const key in patch) {\n      type K = typeof key;\n      const overrideValue: TPresence[K] | undefined = patch[key];\n      if (overrideValue === undefined) {\n        continue;\n      }\n      context.buffer.presenceUpdates.data[key] = overrideValue;\n      oldValues[key] = context.myPresence.current[key];\n    }\n\n    context.myPresence.patch(patch);\n\n    if (context.activeBatch) {\n      if (options?.addToHistory) {\n        context.activeBatch.reverseOps.unshift({\n          type: \"presence\",\n          data: oldValues,\n        });\n      }\n      context.activeBatch.updates.presence = true;\n    } else {\n      flushNowOrSoon();\n      batchUpdates(() => {\n        if (options?.addToHistory) {\n          addToUndoStack(\n            [{ type: \"presence\", data: oldValues }],\n            doNotBatchUpdates\n          );\n        }\n        notify({ presence: true }, doNotBatchUpdates);\n      });\n    }\n  }\n\n  function onUpdatePresenceMessage(\n    message: UpdatePresenceServerMsg<TPresence>\n  ): InternalOthersEvent<TPresence, TUserMeta> | undefined {\n    if (message.targetActor !== undefined) {\n      // The incoming message is a full presence update. We are obliged to\n      // handle it if `targetActor` matches our own connection ID, but we can\n      // use the opportunity to effectively reset the known presence as\n      // a \"keyframe\" update, while we have free access to it.\n      const oldUser = context.others.getUser(message.actor);\n      context.others.setOther(message.actor, message.data);\n\n      const newUser = context.others.getUser(message.actor);\n      if (oldUser === undefined && newUser !== undefined) {\n        // The user just became \"visible\" due to this update, so fire the\n        // \"enter\" event\n        return { type: \"enter\", user: newUser };\n      }\n    } else {\n      // The incoming message is a partial presence update\n      context.others.patchOther(message.actor, message.data), message;\n    }\n\n    const user = context.others.getUser(message.actor);\n    if (user) {\n      return {\n        type: \"update\",\n        updates: message.data,\n        user,\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n  function onUserLeftMessage(\n    message: UserLeftServerMsg\n  ): InternalOthersEvent<TPresence, TUserMeta> | null {\n    const user = context.others.getUser(message.actor);\n    if (user) {\n      context.others.removeConnection(message.actor);\n      return { type: \"leave\", user };\n    }\n    return null;\n  }\n\n  function onRoomStateMessage(\n    message: RoomStateServerMsg<TUserMeta>,\n    batchedUpdatesWrapper: (cb: () => void) => void\n  ): InternalOthersEvent<TPresence, TUserMeta> {\n    // The server will inform the client about its assigned actor ID and scopes\n    context.dynamicSessionInfo.set({\n      actor: message.actor,\n      nonce: message.nonce,\n      scopes: message.scopes,\n    });\n    context.idFactory = makeIdFactory(message.actor);\n    notifySelfChanged(batchedUpdatesWrapper);\n\n    for (const connectionId of context.others.connectionIds()) {\n      const user = message.users[connectionId];\n      if (user === undefined) {\n        context.others.removeConnection(connectionId);\n      }\n    }\n\n    for (const key in message.users) {\n      const user = message.users[key];\n      const connectionId = Number(key);\n      context.others.setConnection(\n        connectionId,\n        user.id,\n        user.info,\n        user.scopes\n      );\n    }\n\n    // NOTE: We could be notifying the \"others\" event here, but the reality is\n    // that ROOM_STATE is often the first message to be received from the\n    // server, and it won't contain all the information needed to update the\n    // other views yet. Instead, we'll let the others' presences trickle in,\n    // and notify each time that happens.\n    return { type: \"reset\" };\n  }\n\n  function canUndo() { return context.undoStack.length > 0; } // prettier-ignore\n  function canRedo() { return context.redoStack.length > 0; } // prettier-ignore\n  function onHistoryChange(batchedUpdatesWrapper: (cb: () => void) => void) {\n    batchedUpdatesWrapper(() => {\n      eventHub.history.notify({ canUndo: canUndo(), canRedo: canRedo() });\n    });\n  }\n\n  function onUserJoinedMessage(\n    message: UserJoinServerMsg<TUserMeta>\n  ): InternalOthersEvent<TPresence, TUserMeta> | undefined {\n    context.others.setConnection(\n      message.actor,\n      message.id,\n      message.info,\n      message.scopes\n    );\n    // Send current presence to new user\n    // TODO: Consider storing it on the backend\n    context.buffer.messages.push({\n      type: ClientMsgCode.UPDATE_PRESENCE,\n      data: context.myPresence.current,\n      targetActor: message.actor,\n    });\n    flushNowOrSoon();\n\n    // We recorded the connection, but we won't make the new user visible\n    // unless we also know their initial presence data at this point.\n    const user = context.others.getUser(message.actor);\n    return user ? { type: \"enter\", user } : undefined;\n  }\n\n  function parseServerMessage(\n    data: Json\n  ): ServerMsg<TPresence, TUserMeta, TRoomEvent> | null {\n    if (!isJsonObject(data)) {\n      return null;\n    }\n\n    return data as ServerMsg<TPresence, TUserMeta, TRoomEvent>;\n    //             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ FIXME: Properly validate incoming external data instead!\n  }\n\n  function parseServerMessages(\n    text: string\n  ): ServerMsg<TPresence, TUserMeta, TRoomEvent>[] | null {\n    const data: Json | undefined = tryParseJson(text);\n    if (data === undefined) {\n      return null;\n    } else if (isJsonArray(data)) {\n      return compact(data.map((item) => parseServerMessage(item)));\n    } else {\n      return compact([parseServerMessage(data)]);\n    }\n  }\n\n  function applyAndSendOps(\n    offlineOps: Map<string, Op>,\n    batchedUpdatesWrapper: (cb: () => void) => void\n  ) {\n    if (offlineOps.size === 0) {\n      return;\n    }\n\n    const messages: ClientMsg<TPresence, TRoomEvent>[] = [];\n\n    const ops = Array.from(offlineOps.values());\n\n    const result = applyOps(ops, true);\n\n    messages.push({\n      type: ClientMsgCode.UPDATE_STORAGE,\n      ops: result.ops,\n    });\n\n    notify(result.updates, batchedUpdatesWrapper);\n\n    sendMessages(messages);\n  }\n\n  /**\n   * Handles a message received on the WebSocket. Will never be a \"pong\". The\n   * \"pong\" is handled at the connection manager level.\n   */\n  function handleServerMessage(event: IWebSocketMessageEvent) {\n    if (typeof event.data !== \"string\") {\n      // istanbul ignore next: Unknown incoming message\n      return;\n    }\n\n    const messages = parseServerMessages(event.data);\n    if (messages === null || messages.length === 0) {\n      // istanbul ignore next: Unknown incoming message\n      return;\n    }\n\n    const updates = {\n      storageUpdates: new Map<string, StorageUpdate>(),\n      others: [] as InternalOthersEvent<TPresence, TUserMeta>[],\n    };\n\n    batchUpdates(() => {\n      for (const message of messages) {\n        switch (message.type) {\n          case ServerMsgCode.USER_JOINED: {\n            const userJoinedUpdate = onUserJoinedMessage(message);\n            if (userJoinedUpdate) {\n              updates.others.push(userJoinedUpdate);\n            }\n            break;\n          }\n\n          case ServerMsgCode.UPDATE_PRESENCE: {\n            const othersPresenceUpdate = onUpdatePresenceMessage(message);\n            if (othersPresenceUpdate) {\n              updates.others.push(othersPresenceUpdate);\n            }\n            break;\n          }\n\n          case ServerMsgCode.BROADCASTED_EVENT: {\n            const others = context.others.current;\n            eventHub.customEvent.notify({\n              connectionId: message.actor,\n              user:\n                message.actor < 0\n                  ? null\n                  : others.find((u) => u.connectionId === message.actor) ??\n                    null,\n              event: message.event,\n            });\n            break;\n          }\n\n          case ServerMsgCode.USER_LEFT: {\n            const event = onUserLeftMessage(message);\n            if (event) {\n              updates.others.push(event);\n            }\n            break;\n          }\n\n          case ServerMsgCode.UPDATE_YDOC: {\n            eventHub.ydoc.notify(message);\n            break;\n          }\n\n          case ServerMsgCode.ROOM_STATE: {\n            updates.others.push(onRoomStateMessage(message, doNotBatchUpdates));\n            break;\n          }\n\n          case ServerMsgCode.INITIAL_STORAGE_STATE: {\n            // createOrUpdateRootFromMessage function could add ops to offlineOperations.\n            // Client shouldn't resend these ops as part of the offline ops sending after reconnect.\n            processInitialStorage(message);\n            break;\n          }\n          // Write event\n          case ServerMsgCode.UPDATE_STORAGE: {\n            const applyResult = applyOps(message.ops, false);\n            for (const [key, value] of applyResult.updates.storageUpdates) {\n              updates.storageUpdates.set(\n                key,\n                mergeStorageUpdates(updates.storageUpdates.get(key), value)\n              );\n            }\n            break;\n          }\n\n          // Receiving a RejectedOps message in the client means that the server is no\n          // longer in sync with the client. Trying to synchronize the client again by\n          // rolling back particular Ops may be hard/impossible. It's fine to not try and\n          // accept the out-of-sync reality and throw an error. We look at this kind of bug\n          // as a developer-owned bug. In production, these errors are not expected to happen.\n          case ServerMsgCode.REJECT_STORAGE_OP: {\n            console.errorWithTitle(\n              \"Storage mutation rejection error\",\n              message.reason\n            );\n\n            if (process.env.NODE_ENV !== \"production\") {\n              const traces: Set<string> = new Set();\n              for (const opId of message.opIds) {\n                const trace = context.opStackTraces?.get(opId);\n                if (trace) {\n                  traces.add(trace);\n                }\n              }\n\n              if (traces.size > 0) {\n                console.warnWithTitle(\n                  \"The following function calls caused the rejected storage mutations:\",\n                  `\\n\\n${Array.from(traces).join(\"\\n\\n\")}`\n                );\n              }\n\n              throw new Error(\n                `Storage mutations rejected by server: ${message.reason}`\n              );\n            }\n\n            break;\n          }\n\n          case ServerMsgCode.THREAD_CREATED:\n          case ServerMsgCode.THREAD_METADATA_UPDATED:\n          case ServerMsgCode.COMMENT_REACTION_ADDED:\n          case ServerMsgCode.COMMENT_REACTION_REMOVED:\n          case ServerMsgCode.COMMENT_CREATED:\n          case ServerMsgCode.COMMENT_EDITED:\n          case ServerMsgCode.COMMENT_DELETED: {\n            eventHub.comments.notify(message);\n            break;\n          }\n        }\n      }\n\n      notify(updates, doNotBatchUpdates);\n    });\n  }\n\n  function flushNowOrSoon() {\n    const storageOps = context.buffer.storageOperations;\n    if (storageOps.length > 0) {\n      for (const op of storageOps) {\n        context.unacknowledgedOps.set(nn(op.opId), op);\n      }\n      notifyStorageStatus();\n    }\n\n    if (managedSocket.getStatus() !== \"connected\") {\n      context.buffer.storageOperations = [];\n      return;\n    }\n\n    const now = Date.now();\n    const elapsedMillis = now - context.buffer.lastFlushedAt;\n\n    if (elapsedMillis >= config.throttleDelay) {\n      // Flush the buffer right now\n      const messagesToFlush = serializeBuffer();\n      if (messagesToFlush.length === 0) {\n        return;\n      }\n\n      sendMessages(messagesToFlush);\n      context.buffer = {\n        flushTimerID: undefined,\n        lastFlushedAt: now,\n        messages: [],\n        storageOperations: [],\n        presenceUpdates: null,\n      };\n    } else {\n      // Or schedule the flush a few millis into the future\n      clearTimeout(context.buffer.flushTimerID);\n      context.buffer.flushTimerID = setTimeout(\n        flushNowOrSoon,\n        config.throttleDelay - elapsedMillis\n      );\n    }\n  }\n\n  /**\n   * Returns a list of ClientMsgs to flush to the network, computed from all\n   * pending changes in the buffer. Has no side effects.\n   */\n  function serializeBuffer() {\n    const messages: ClientMsg<TPresence, TRoomEvent>[] = [];\n    if (context.buffer.presenceUpdates) {\n      messages.push(\n        context.buffer.presenceUpdates.type === \"full\"\n          ? {\n              type: ClientMsgCode.UPDATE_PRESENCE,\n              // Populating the `targetActor` field turns this message into\n              // a Full Presence™ update message (not a patch), which will get\n              // interpreted by other clients as such.\n              targetActor: -1,\n              data: context.buffer.presenceUpdates.data,\n            }\n          : {\n              type: ClientMsgCode.UPDATE_PRESENCE,\n              data: context.buffer.presenceUpdates.data,\n            }\n      );\n    }\n    for (const event of context.buffer.messages) {\n      messages.push(event);\n    }\n    if (context.buffer.storageOperations.length > 0) {\n      messages.push({\n        type: ClientMsgCode.UPDATE_STORAGE,\n        ops: context.buffer.storageOperations,\n      });\n    }\n    return messages;\n  }\n\n  function updateYDoc(update: string, guid?: string) {\n    const clientMsg: UpdateYDocClientMsg = {\n      type: ClientMsgCode.UPDATE_YDOC,\n      update,\n      guid,\n    };\n    context.buffer.messages.push(clientMsg);\n    eventHub.ydoc.notify(clientMsg);\n    flushNowOrSoon();\n  }\n\n  function broadcastEvent(\n    event: TRoomEvent,\n    options: BroadcastOptions = {\n      shouldQueueEventIfNotReady: false,\n    }\n  ) {\n    if (\n      managedSocket.getStatus() !== \"connected\" &&\n      !options.shouldQueueEventIfNotReady\n    ) {\n      return;\n    }\n\n    context.buffer.messages.push({\n      type: ClientMsgCode.BROADCAST_EVENT,\n      event,\n    });\n    flushNowOrSoon();\n  }\n\n  function dispatchOps(ops: Op[]) {\n    context.buffer.storageOperations.push(...ops);\n    flushNowOrSoon();\n  }\n\n  let _getStorage$: Promise<void> | null = null;\n  let _resolveStoragePromise: (() => void) | null = null;\n\n  function processInitialStorage(message: InitialDocumentStateServerMsg) {\n    const unacknowledgedOps = new Map(context.unacknowledgedOps);\n    createOrUpdateRootFromMessage(message, doNotBatchUpdates);\n    applyAndSendOps(unacknowledgedOps, doNotBatchUpdates);\n    _resolveStoragePromise?.();\n    notifyStorageStatus();\n    eventHub.storageDidLoad.notify();\n  }\n\n  async function streamStorage() {\n    if (!managedSocket.authValue) {\n      return;\n    }\n    // TODO: Handle potential race conditions where the room get disconnected while the request is pending\n    const result = await streamFetch(managedSocket.authValue, config.roomId);\n    const items = (await result.json()) as IdTuple<SerializedCrdt>[];\n    processInitialStorage({ type: ServerMsgCode.INITIAL_STORAGE_STATE, items });\n  }\n\n  function refreshStorage(options: { flush: boolean }) {\n    const messages = context.buffer.messages;\n    if (config.unstable_streamData) {\n      // instead of sending a fetch message over WS, stream over HTTP\n      void streamStorage();\n    } else if (\n      !messages.some((msg) => msg.type === ClientMsgCode.FETCH_STORAGE)\n    ) {\n      // Only add the fetch message to the outgoing message queue if it isn't\n      // already there\n      messages.push({ type: ClientMsgCode.FETCH_STORAGE });\n    }\n\n    if (options.flush) {\n      flushNowOrSoon();\n    }\n  }\n\n  function startLoadingStorage(): Promise<void> {\n    if (_getStorage$ === null) {\n      refreshStorage({ flush: true });\n      _getStorage$ = new Promise((resolve) => {\n        _resolveStoragePromise = resolve;\n      });\n      notifyStorageStatus();\n    }\n    return _getStorage$;\n  }\n\n  /**\n   * Closely related to .getStorage(), but synchronously. Will be `null`\n   * initially. When requested for the first time, will kick off the loading of\n   * Storage if it hasn't happened yet.\n   *\n   * Once Storage is loaded, will return a stable reference to the storage\n   * root.\n   */\n  function getStorageSnapshot(): LiveObject<TStorage> | null {\n    const root = context.root;\n    if (root !== undefined) {\n      // Done loading\n      return root;\n    } else {\n      // Not done loading, kick off the loading (will not do anything if already kicked off)\n      void startLoadingStorage();\n      return null;\n    }\n  }\n\n  async function getStorage(): Promise<{\n    root: LiveObject<TStorage>;\n  }> {\n    if (context.root !== undefined) {\n      // Store has already loaded, so we can resolve it directly\n      return Promise.resolve({\n        root: context.root,\n      });\n    }\n\n    await startLoadingStorage();\n    return {\n      root: nn(context.root) as LiveObject<TStorage>,\n    };\n  }\n\n  function fetchYDoc(vector: string, guid?: string): void {\n    // don't allow multiple fetches in the same buffer with the same vector\n    // dev tools may also call with a different vector (if its opened later), and that's okay\n    // because the updates will be ignored by the provider\n    if (\n      !context.buffer.messages.find((m) => {\n        return (\n          m.type === ClientMsgCode.FETCH_YDOC &&\n          m.vector === vector &&\n          m.guid === guid\n        );\n      })\n    ) {\n      context.buffer.messages.push({\n        type: ClientMsgCode.FETCH_YDOC,\n        vector,\n        guid,\n      });\n    }\n\n    flushNowOrSoon();\n  }\n\n  function undo() {\n    if (context.activeBatch) {\n      throw new Error(\"undo is not allowed during a batch\");\n    }\n    const historyOps = context.undoStack.pop();\n    if (historyOps === undefined) {\n      return;\n    }\n\n    context.pausedHistory = null;\n    const result = applyOps(historyOps, true);\n\n    batchUpdates(() => {\n      notify(result.updates, doNotBatchUpdates);\n      context.redoStack.push(result.reverse);\n      onHistoryChange(doNotBatchUpdates);\n    });\n\n    for (const op of result.ops) {\n      if (op.type !== \"presence\") {\n        context.buffer.storageOperations.push(op);\n      }\n    }\n    flushNowOrSoon();\n  }\n\n  function redo() {\n    if (context.activeBatch) {\n      throw new Error(\"redo is not allowed during a batch\");\n    }\n\n    const historyOps = context.redoStack.pop();\n    if (historyOps === undefined) {\n      return;\n    }\n\n    context.pausedHistory = null;\n    const result = applyOps(historyOps, true);\n\n    batchUpdates(() => {\n      notify(result.updates, doNotBatchUpdates);\n      context.undoStack.push(result.reverse);\n      onHistoryChange(doNotBatchUpdates);\n    });\n\n    for (const op of result.ops) {\n      if (op.type !== \"presence\") {\n        context.buffer.storageOperations.push(op);\n      }\n    }\n    flushNowOrSoon();\n  }\n\n  function clear() {\n    context.undoStack.length = 0;\n    context.redoStack.length = 0;\n  }\n\n  function batch<T>(callback: () => T): T {\n    if (context.activeBatch) {\n      // If there already is an active batch, we don't have to handle this in\n      // any special way. That outer active batch will handle the batch. This\n      // nested call can be a no-op.\n      return callback();\n    }\n\n    let returnValue: T = undefined as unknown as T;\n\n    batchUpdates(() => {\n      context.activeBatch = {\n        ops: [],\n        updates: {\n          storageUpdates: new Map(),\n          presence: false,\n          others: [],\n        },\n        reverseOps: [],\n      };\n      try {\n        returnValue = callback();\n      } finally {\n        // \"Pop\" the current batch of the state, closing the active batch, but\n        // handling it separately here\n        const currentBatch = context.activeBatch;\n        context.activeBatch = null;\n\n        if (currentBatch.reverseOps.length > 0) {\n          addToUndoStack(currentBatch.reverseOps, doNotBatchUpdates);\n        }\n\n        if (currentBatch.ops.length > 0) {\n          // Only clear the redo stack if something has changed during a batch\n          // Clear the redo stack because batch is always called from a local operation\n          context.redoStack.length = 0;\n        }\n\n        if (currentBatch.ops.length > 0) {\n          dispatchOps(currentBatch.ops);\n        }\n\n        notify(currentBatch.updates, doNotBatchUpdates);\n        flushNowOrSoon();\n      }\n    });\n\n    return returnValue;\n  }\n\n  function pauseHistory() {\n    if (context.pausedHistory === null) {\n      context.pausedHistory = [];\n    }\n  }\n\n  function resumeHistory() {\n    const historyOps = context.pausedHistory;\n    context.pausedHistory = null;\n    if (historyOps !== null && historyOps.length > 0) {\n      _addToRealUndoStack(historyOps, batchUpdates);\n    }\n  }\n\n  function getStorageStatus(): StorageStatus {\n    if (context.root === undefined) {\n      return _getStorage$ === null ? \"not-loaded\" : \"loading\";\n    } else {\n      return context.unacknowledgedOps.size === 0\n        ? \"synchronized\"\n        : \"synchronizing\";\n    }\n  }\n\n  /**\n   * Storage status is a computed value based other internal states so we need to keep a reference to the previous computed value to avoid triggering events when it does not change\n   * This is far from ideal because we need to call this function whenever we update our internal states.\n   *\n   * TODO: Encapsulate our internal state differently to make sure this event is triggered whenever necessary.\n   * Currently okay because we only have 4 callers and shielded by tests.\n   */\n  let _lastStorageStatus = getStorageStatus();\n  function notifyStorageStatus() {\n    const storageStatus = getStorageStatus();\n    if (_lastStorageStatus !== storageStatus) {\n      _lastStorageStatus = storageStatus;\n      eventHub.storageStatus.notify(storageStatus);\n    }\n  }\n\n  // Derived cached state for use in DevTools\n  const others_forDevTools = new DerivedRef(context.others, (others) =>\n    others.map((other, index) => userToTreeNode(`Other ${index}`, other))\n  );\n\n  const events = {\n    status: eventHub.status.observable,\n    lostConnection: eventHub.lostConnection.observable,\n\n    customEvent: eventHub.customEvent.observable,\n    others: eventHub.others.observable,\n    self: eventHub.self.observable,\n    myPresence: eventHub.myPresence.observable,\n    error: eventHub.error.observable,\n    storage: eventHub.storage.observable,\n    history: eventHub.history.observable,\n    storageDidLoad: eventHub.storageDidLoad.observable,\n    storageStatus: eventHub.storageStatus.observable,\n    ydoc: eventHub.ydoc.observable,\n\n    comments: eventHub.comments.observable,\n  };\n\n  const commentsApi = createCommentsApi(\n    config.roomId,\n    delegates.authenticate,\n    fetchClientApi\n  );\n\n  async function fetchNotificationsJson<T>(\n    endpoint: string,\n    options?: RequestInit\n  ): Promise<T> {\n    const authValue = await delegates.authenticate();\n    const response = await fetchClientApi(\n      config.roomId,\n      endpoint,\n      authValue,\n      options\n    );\n\n    if (!response.ok) {\n      if (response.status >= 400 && response.status < 600) {\n        let error: NotificationsApiError;\n\n        try {\n          const errorBody = (await response.json()) as { message: string };\n\n          error = new NotificationsApiError(\n            errorBody.message,\n            response.status,\n            errorBody\n          );\n        } catch {\n          error = new NotificationsApiError(\n            response.statusText,\n            response.status\n          );\n        }\n\n        throw error;\n      }\n    }\n\n    let body;\n\n    try {\n      body = (await response.json()) as T;\n    } catch {\n      body = {} as T;\n    }\n\n    return body;\n  }\n\n  function getRoomNotificationSettings(): Promise<RoomNotificationSettings> {\n    return fetchNotificationsJson<RoomNotificationSettings>(\n      \"/notification-settings\"\n    );\n  }\n\n  function updateRoomNotificationSettings(\n    settings: Partial<RoomNotificationSettings>\n  ): Promise<RoomNotificationSettings> {\n    return fetchNotificationsJson<RoomNotificationSettings>(\n      \"/notification-settings\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(settings),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  }\n\n  async function markInboxNotificationsAsRead(inboxNotificationIds: string[]) {\n    await fetchNotificationsJson(\"/inbox-notifications/read\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ inboxNotificationIds }),\n    });\n  }\n\n  const batchedMarkInboxNotificationsAsRead = new Batch(\n    async (batchedInboxNotificationIds: [string][]) => {\n      const inboxNotificationIds = batchedInboxNotificationIds.flat();\n\n      await markInboxNotificationsAsRead(inboxNotificationIds);\n\n      return inboxNotificationIds;\n    },\n    { delay: MARK_INBOX_NOTIFICATIONS_AS_READ_BATCH_DELAY }\n  );\n\n  async function markInboxNotificationAsRead(inboxNotificationId: string) {\n    await batchedMarkInboxNotificationsAsRead.get(inboxNotificationId);\n  }\n\n  return Object.defineProperty(\n    {\n      [kInternal]: {\n        get presenceBuffer() { return deepClone(context.buffer.presenceUpdates?.data ?? null) }, // prettier-ignore\n        get undoStack() { return deepClone(context.undoStack) }, // prettier-ignore\n        get nodeCount() { return context.nodes.size }, // prettier-ignore\n\n        // Support for the Liveblocks browser extension\n        getSelf_forDevTools: () => selfAsTreeNode.current,\n        getOthers_forDevTools: (): readonly DevTools.UserTreeNode[] =>\n          others_forDevTools.current,\n\n        // prettier-ignore\n        simulate: {\n          // These exist only for our E2E testing app\n          explicitClose: (event) => managedSocket._privateSendMachineEvent({ type: \"EXPLICIT_SOCKET_CLOSE\", event }),\n          rawSend: (data) => managedSocket.send(data),\n        },\n\n        comments: {\n          ...commentsApi,\n        },\n\n        notifications: {\n          getRoomNotificationSettings,\n          updateRoomNotificationSettings,\n          markInboxNotificationAsRead,\n        },\n      },\n\n      id: config.roomId,\n      subscribe: makeClassicSubscribeFn(events),\n\n      connect: () => managedSocket.connect(),\n      reconnect: () => managedSocket.reconnect(),\n      disconnect: () => managedSocket.disconnect(),\n      destroy: () => {\n        uninstallBgTabSpy();\n        managedSocket.destroy();\n      },\n\n      // Presence\n      updatePresence,\n      updateYDoc,\n      broadcastEvent,\n\n      // Storage\n      batch,\n      history: {\n        undo,\n        redo,\n        canUndo,\n        canRedo,\n        clear,\n        pause: pauseHistory,\n        resume: resumeHistory,\n      },\n\n      fetchYDoc,\n      getStorage,\n      getStorageSnapshot,\n      getStorageStatus,\n\n      events,\n\n      // Core\n      getStatus: () => managedSocket.getStatus(),\n      getConnectionState: () => managedSocket.getLegacyStatus(),\n      getSelf: () => self.current,\n\n      // Presence\n      getPresence: () => context.myPresence.current,\n      getOthers: () => context.others.current,\n    },\n\n    // Explictly make the internal field non-enumerable, to avoid aggressive\n    // freezing when used with Immer\n    kInternal,\n    { enumerable: false }\n  );\n}\n\n/**\n * @internal\n * This recreates the classic single `.subscribe()` method for the Room API, as\n * documented here https://liveblocks.io/docs/api-reference/liveblocks-client#Room.subscribe(storageItem)\n */\nfunction makeClassicSubscribeFn<\n  TPresence extends JsonObject,\n  TStorage extends LsonObject,\n  TUserMeta extends BaseUserMeta,\n  TRoomEvent extends Json,\n>(\n  events: Omit<\n    Room<TPresence, TStorage, TUserMeta, TRoomEvent>[\"events\"],\n    \"comments\" // comments is an internal events so we omit it from the subscribe method\n  >\n): SubscribeFn<TPresence, TStorage, TUserMeta, TRoomEvent> {\n  // Set up the \"subscribe\" wrapper API\n  function subscribeToLiveStructureDeeply<L extends LiveStructure>(\n    node: L,\n    callback: (updates: StorageUpdate[]) => void\n  ): () => void {\n    return events.storage.subscribe((updates) => {\n      const relatedUpdates = updates.filter((update) =>\n        isSameNodeOrChildOf(update.node, node)\n      );\n      if (relatedUpdates.length > 0) {\n        callback(relatedUpdates);\n      }\n    });\n  }\n\n  function subscribeToLiveStructureShallowly<L extends LiveStructure>(\n    node: L,\n    callback: (node: L) => void\n  ): () => void {\n    return events.storage.subscribe((updates) => {\n      for (const update of updates) {\n        if (update.node._id === node._id) {\n          callback(update.node as L);\n        }\n      }\n    });\n  }\n\n  // Generic storage callbacks\n  function subscribe(callback: StorageCallback): () => void; // prettier-ignore\n  // Storage callbacks filtered by Live structure\n  function subscribe<L extends LiveStructure>(liveStructure: L, callback: (node: L) => void): () => void; // prettier-ignore\n  function subscribe(node: LiveStructure, callback: StorageCallback, options: { isDeep: true }): () => void; // prettier-ignore\n  // Room event callbacks\n  function subscribe<E extends RoomEventName>(type: E, listener: RoomEventCallbackFor<E, TPresence, TUserMeta, TRoomEvent>): () => void; // prettier-ignore\n\n  function subscribe<L extends LiveStructure, E extends RoomEventName>(\n    first: StorageCallback | L | E,\n    second?: ((node: L) => void) | StorageCallback | RoomEventCallback,\n    options?: { isDeep: boolean }\n  ): () => void {\n    if (typeof first === \"string\" && isRoomEventName(first)) {\n      if (typeof second !== \"function\") {\n        throw new Error(\"Second argument must be a callback function\");\n      }\n      const callback = second;\n      switch (first) {\n        case \"event\":\n          return events.customEvent.subscribe(\n            callback as Callback<\n              RoomEventMessage<TPresence, TUserMeta, TRoomEvent>\n            >\n          );\n\n        case \"my-presence\":\n          return events.myPresence.subscribe(callback as Callback<TPresence>);\n\n        case \"others\": {\n          // NOTE: Others have a different callback structure, where the API\n          // exposed on the outside takes _two_ callback arguments!\n          const cb = callback as LegacyOthersEventCallback<\n            TPresence,\n            TUserMeta\n          >;\n          return events.others.subscribe((event) => {\n            const { others, ...internalEvent } = event;\n            return cb(others, internalEvent);\n          });\n        }\n\n        case \"error\":\n          return events.error.subscribe(callback as Callback<Error>);\n\n        case \"connection\": {\n          const cb = callback as Callback<LegacyConnectionStatus>;\n          return events.status.subscribe((status) =>\n            cb(newToLegacyStatus(status))\n          );\n        }\n\n        case \"status\":\n          return events.status.subscribe(callback as Callback<Status>);\n\n        case \"lost-connection\":\n          return events.lostConnection.subscribe(\n            callback as Callback<LostConnectionEvent>\n          );\n\n        case \"history\":\n          return events.history.subscribe(callback as Callback<HistoryEvent>);\n\n        case \"storage-status\":\n          return events.storageStatus.subscribe(\n            callback as Callback<StorageStatus>\n          );\n\n        // istanbul ignore next\n        default:\n          return assertNever(\n            first,\n            `\"${String(first)}\" is not a valid event name`\n          );\n      }\n    }\n\n    if (second === undefined || typeof first === \"function\") {\n      if (typeof first === \"function\") {\n        const storageCallback = first;\n        return events.storage.subscribe(storageCallback);\n      } else {\n        // istanbul ignore next\n        throw new Error(\"Please specify a listener callback\");\n      }\n    }\n\n    if (isLiveNode(first)) {\n      const node = first;\n      if (options?.isDeep) {\n        const storageCallback = second as StorageCallback;\n        return subscribeToLiveStructureDeeply(node, storageCallback);\n      } else {\n        const nodeCallback = second as (node: L) => void;\n        return subscribeToLiveStructureShallowly(node, nodeCallback);\n      }\n    }\n\n    throw new Error(\n      `${String(first)} is not a value that can be subscribed to.`\n    );\n  }\n\n  return subscribe;\n}\n\nfunction isRoomEventName(value: string): value is RoomEventName {\n  return (\n    value === \"my-presence\" ||\n    value === \"others\" ||\n    value === \"event\" ||\n    value === \"error\" ||\n    value === \"history\" ||\n    value === \"status\" ||\n    value === \"storage-status\" ||\n    value === \"lost-connection\" ||\n    value === \"connection\"\n  );\n}\n\nexport function makeAuthDelegateForRoom(\n  roomId: string,\n  authManager: AuthManager\n): () => Promise<AuthValue> {\n  return async () => {\n    return authManager.getAuthValue({ requestedScope: \"room:read\", roomId });\n  };\n}\n\nexport function makeCreateSocketDelegateForRoom(\n  roomId: string,\n  baseUrl: string,\n  WebSocketPolyfill?: IWebSocket\n) {\n  return (authValue: AuthValue): IWebSocketInstance => {\n    const ws: IWebSocket | undefined =\n      WebSocketPolyfill ??\n      (typeof WebSocket === \"undefined\" ? undefined : WebSocket);\n\n    if (ws === undefined) {\n      throw new StopRetrying(\n        \"To use Liveblocks client in a non-DOM environment, you need to provide a WebSocket polyfill.\"\n      );\n    }\n\n    const url = new URL(baseUrl);\n    url.protocol = url.protocol === \"http:\" ? \"ws\" : \"wss\";\n    url.pathname = \"/v7\";\n    url.searchParams.set(\"roomId\", roomId);\n    if (authValue.type === \"secret\") {\n      url.searchParams.set(\"tok\", authValue.token.raw);\n    } else if (authValue.type === \"public\") {\n      url.searchParams.set(\"pubkey\", authValue.publicApiKey);\n    } else {\n      return assertNever(authValue, \"Unhandled case\");\n    }\n    url.searchParams.set(\"version\", PKG_VERSION || \"dev\");\n    return new ws(url.toString());\n  };\n}\n", "import type { Store } from \"./lib/create-store\";\nimport { createStore } from \"./lib/create-store\";\nimport * as console from \"./lib/fancy-console\";\nimport type { Resolve } from \"./lib/Resolve\";\nimport type { BaseMetadata } from \"./types/BaseMetadata\";\nimport type { CommentData, CommentReaction } from \"./types/CommentData\";\nimport type { CommentUserReaction } from \"./types/CommentReaction\";\nimport type { InboxNotificationData } from \"./types/InboxNotificationData\";\nimport type { InboxNotificationDeleteInfo } from \"./types/InboxNotificationDeleteInfo\";\nimport type { PartialNullable } from \"./types/PartialNullable\";\nimport type { RoomNotificationSettings } from \"./types/RoomNotificationSettings\";\nimport type { ThreadData, ThreadDataWithDeleteInfo } from \"./types/ThreadData\";\nimport type { ThreadDeleteInfo } from \"./types/ThreadDeleteInfo\";\n\ntype OptimisticUpdate<TThreadMetadata extends BaseMetadata> =\n  | CreateThreadOptimisticUpdate<TThreadMetadata>\n  | EditThreadMetadataOptimisticUpdate<TThreadMetadata>\n  | CreateCommentOptimisticUpdate\n  | EditCommentOptimisticUpdate\n  | DeleteCommentOptimisticUpdate\n  | AddReactionOptimisticUpdate\n  | RemoveReactionOptimisticUpdate\n  | MarkInboxNotificationAsReadOptimisticUpdate\n  | MarkAllInboxNotificationsAsReadOptimisticUpdate\n  | UpdateNotificationSettingsOptimisticUpdate;\n\ntype CreateThreadOptimisticUpdate<TThreadMetadata extends BaseMetadata> = {\n  type: \"create-thread\";\n  id: string;\n  thread: ThreadData<TThreadMetadata>;\n};\n\ntype EditThreadMetadataOptimisticUpdate<TThreadMetadata extends BaseMetadata> =\n  {\n    type: \"edit-thread-metadata\";\n    id: string;\n    threadId: string;\n    metadata: Resolve<PartialNullable<TThreadMetadata>>;\n    updatedAt: Date;\n  };\n\ntype CreateCommentOptimisticUpdate = {\n  type: \"create-comment\";\n  id: string;\n  comment: CommentData;\n};\n\ntype EditCommentOptimisticUpdate = {\n  type: \"edit-comment\";\n  id: string;\n  comment: CommentData;\n};\n\ntype DeleteCommentOptimisticUpdate = {\n  type: \"delete-comment\";\n  id: string;\n  threadId: string;\n  deletedAt: Date;\n  commentId: string;\n};\n\ntype AddReactionOptimisticUpdate = {\n  type: \"add-reaction\";\n  id: string;\n  threadId: string;\n  commentId: string;\n  reaction: CommentUserReaction;\n};\n\ntype RemoveReactionOptimisticUpdate = {\n  type: \"remove-reaction\";\n  id: string;\n  threadId: string;\n  commentId: string;\n  emoji: string;\n  userId: string;\n  removedAt: Date;\n};\n\ntype MarkInboxNotificationAsReadOptimisticUpdate = {\n  type: \"mark-inbox-notification-as-read\";\n  id: string;\n  inboxNotificationId: string;\n  readAt: Date;\n};\n\ntype MarkAllInboxNotificationsAsReadOptimisticUpdate = {\n  type: \"mark-inbox-notifications-as-read\";\n  id: string;\n  readAt: Date;\n};\n\ntype UpdateNotificationSettingsOptimisticUpdate = {\n  type: \"update-notification-settings\";\n  id: string;\n  roomId: string;\n  settings: Partial<RoomNotificationSettings>;\n};\n\ntype QueryState =\n  | { isLoading: true; error?: never }\n  | { isLoading: false; error?: Error };\n\nexport type CacheState<TThreadMetadata extends BaseMetadata> = {\n  /**\n   * Threads by ID.\n   */\n  threads: Record<string, ThreadDataWithDeleteInfo<TThreadMetadata>>;\n  /**\n   * Keep track of loading and error status of all the queries made by the client.\n   */\n  queries: Record<string, QueryState>;\n  /**\n   * Optimistic updates that have not been acknowledged by the server yet.\n   * They are applied on top of the threads in selectors.\n   */\n  optimisticUpdates: OptimisticUpdate<TThreadMetadata>[];\n  /**\n   * Inbox notifications by ID.\n   */\n  inboxNotifications: Record<string, InboxNotificationData>;\n  /**\n   * Notification settings per room id\n   */\n  notificationSettings: Record<string, RoomNotificationSettings>;\n};\n\nexport interface CacheStore<TThreadMetadata extends BaseMetadata>\n  extends Store<CacheState<TThreadMetadata>> {\n  deleteThread(threadId: string): void;\n  updateThreadAndNotification(\n    thread: ThreadData<TThreadMetadata>,\n    inboxNotification?: InboxNotificationData\n  ): void;\n  updateThreadsAndNotifications(\n    threads: ThreadData<TThreadMetadata>[],\n    inboxNotifications: InboxNotificationData[],\n    deletedThreads: ThreadDeleteInfo[],\n    deletedInboxNotifications: InboxNotificationDeleteInfo[],\n    queryKey?: string\n  ): void;\n  updateRoomInboxNotificationSettings(\n    roomId: string,\n    settings: RoomNotificationSettings,\n    queryKey: string\n  ): void;\n  pushOptimisticUpdate(\n    optimisticUpdate: OptimisticUpdate<TThreadMetadata>\n  ): void;\n  setQueryState(queryKey: string, queryState: QueryState): void;\n}\n\n/**\n * Create internal immutable store for comments and notifications.\n * Keep all the state required to return data from our hooks.\n */\nexport function createClientStore<\n  TThreadMetadata extends BaseMetadata,\n>(): CacheStore<TThreadMetadata> {\n  const store = createStore<CacheState<TThreadMetadata>>({\n    threads: {},\n    queries: {},\n    optimisticUpdates: [],\n    inboxNotifications: {},\n    notificationSettings: {},\n  });\n\n  return {\n    ...store,\n\n    deleteThread(threadId: string) {\n      store.set((state) => {\n        return {\n          ...state,\n          threads: deleteKeyImmutable(state.threads, threadId),\n          inboxNotifications: Object.fromEntries(\n            Object.entries(state.inboxNotifications).filter(\n              ([_id, notification]) => notification.threadId !== threadId\n            )\n          ),\n        };\n      });\n    },\n\n    updateThreadAndNotification(\n      thread: ThreadData<TThreadMetadata>,\n      inboxNotification?: InboxNotificationData\n    ) {\n      store.set((state) => {\n        const existingThread = state.threads[thread.id];\n\n        return {\n          ...state,\n          threads:\n            existingThread === undefined ||\n            compareThreads(thread, existingThread) === 1\n              ? { ...state.threads, [thread.id]: thread }\n              : state.threads,\n          inboxNotifications:\n            inboxNotification === undefined // TODO: Compare notification dates to make sure it's not stale\n              ? state.inboxNotifications\n              : {\n                  ...state.inboxNotifications,\n                  [inboxNotification.id]: inboxNotification,\n                },\n        };\n      });\n    },\n\n    updateThreadsAndNotifications(\n      threads: ThreadData<TThreadMetadata>[],\n      inboxNotifications: InboxNotificationData[],\n      deletedThreads: ThreadDeleteInfo[],\n      deletedInboxNotifications: InboxNotificationDeleteInfo[],\n      queryKey?: string\n    ) {\n      store.set((state) => ({\n        ...state,\n        threads: applyThreadUpdates(state.threads, {\n          newThreads: threads,\n          deletedThreads,\n        }),\n        inboxNotifications: applyNotificationsUpdates(\n          state.inboxNotifications,\n          {\n            newInboxNotifications: inboxNotifications,\n            deletedNotifications: deletedInboxNotifications,\n          }\n        ),\n        queries:\n          queryKey !== undefined\n            ? {\n                ...state.queries,\n                [queryKey]: {\n                  isLoading: false,\n                },\n              }\n            : state.queries,\n      }));\n    },\n\n    updateRoomInboxNotificationSettings(\n      roomId: string,\n      settings: RoomNotificationSettings,\n      queryKey: string\n    ) {\n      store.set((state) => ({\n        ...state,\n        notificationSettings: {\n          ...state.notificationSettings,\n          [roomId]: settings,\n        },\n        queries: {\n          ...state.queries,\n          [queryKey]: {\n            isLoading: false,\n          },\n        },\n      }));\n    },\n\n    pushOptimisticUpdate(optimisticUpdate: OptimisticUpdate<TThreadMetadata>) {\n      store.set((state) => ({\n        ...state,\n        optimisticUpdates: [...state.optimisticUpdates, optimisticUpdate],\n      }));\n    },\n\n    setQueryState(queryKey: string, queryState: QueryState) {\n      store.set((state) => ({\n        ...state,\n        queries: {\n          ...state.queries,\n          [queryKey]: queryState,\n        },\n      }));\n    },\n  };\n}\n\nfunction deleteKeyImmutable<TKey extends string | number | symbol, TValue>(\n  record: Record<TKey, TValue>,\n  key: TKey\n) {\n  if (Object.prototype.hasOwnProperty.call(record, key)) {\n    const { [key]: _toDelete, ...rest } = record;\n    return rest;\n  }\n\n  return record;\n}\n\n/**\n * Compares two threads to determine which one is newer.\n * @param threadA The first thread to compare.\n * @param threadB The second thread to compare.\n * @returns 1 if threadA is newer, -1 if threadB is newer, or 0 if they are the same age or can't be compared.\n */\nexport function compareThreads<TThreadMetadata extends BaseMetadata>(\n  thread1: ThreadData<TThreadMetadata>,\n  thread2: ThreadData<TThreadMetadata>\n): number {\n  // Compare updatedAt if available\n  if (thread1.updatedAt && thread2.updatedAt) {\n    return thread1.updatedAt > thread2.updatedAt\n      ? 1\n      : thread1.updatedAt < thread2.updatedAt\n        ? -1\n        : 0;\n  } else if (thread1.updatedAt || thread2.updatedAt) {\n    return thread1.updatedAt ? 1 : -1;\n  }\n\n  // Finally, compare createdAt\n  if (thread1.createdAt > thread2.createdAt) {\n    return 1;\n  } else if (thread1.createdAt < thread2.createdAt) {\n    return -1;\n  }\n\n  // If all dates are equal, return 0\n  return 0;\n}\n\nexport function applyOptimisticUpdates<TThreadMetadata extends BaseMetadata>(\n  state: CacheState<TThreadMetadata>\n): Pick<\n  CacheState<TThreadMetadata>,\n  \"threads\" | \"inboxNotifications\" | \"notificationSettings\"\n> {\n  const result = {\n    threads: {\n      ...state.threads,\n    },\n    inboxNotifications: {\n      ...state.inboxNotifications,\n    },\n    notificationSettings: {\n      ...state.notificationSettings,\n    },\n  };\n\n  for (const optimisticUpdate of state.optimisticUpdates) {\n    switch (optimisticUpdate.type) {\n      case \"create-thread\": {\n        result.threads[optimisticUpdate.thread.id] = optimisticUpdate.thread;\n        break;\n      }\n      case \"edit-thread-metadata\": {\n        const thread = result.threads[optimisticUpdate.threadId];\n        // If the thread doesn't exist in the cache, we do not apply the update\n        if (thread === undefined) {\n          break;\n        }\n\n        // If the thread has been deleted, we do not apply the update\n        if (thread.deletedAt !== undefined) {\n          break;\n        }\n\n        // If the thread has been updated since the optimistic update, we do not apply the update\n        if (\n          thread.updatedAt !== undefined &&\n          thread.updatedAt > optimisticUpdate.updatedAt\n        ) {\n          break;\n        }\n\n        result.threads[thread.id] = {\n          ...thread,\n          updatedAt: optimisticUpdate.updatedAt,\n          metadata: {\n            ...thread.metadata,\n            ...optimisticUpdate.metadata,\n          },\n        };\n\n        break;\n      }\n      case \"create-comment\": {\n        const thread = result.threads[optimisticUpdate.comment.threadId];\n        // If the thread doesn't exist in the cache, we do not apply the update\n        if (thread === undefined) {\n          break;\n        }\n\n        result.threads[thread.id] = upsertComment(\n          thread,\n          optimisticUpdate.comment\n        );\n\n        const inboxNotification = Object.values(result.inboxNotifications).find(\n          (notification) => notification.threadId === thread.id\n        );\n\n        if (inboxNotification === undefined) {\n          break;\n        }\n\n        result.inboxNotifications[inboxNotification.id] = {\n          ...inboxNotification,\n          notifiedAt: optimisticUpdate.comment.createdAt,\n          readAt: optimisticUpdate.comment.createdAt,\n        };\n\n        break;\n      }\n      case \"edit-comment\": {\n        const thread = result.threads[optimisticUpdate.comment.threadId];\n        // If the thread doesn't exist in the cache, we do not apply the update\n        if (thread === undefined) {\n          break;\n        }\n\n        result.threads[thread.id] = upsertComment(\n          thread,\n          optimisticUpdate.comment\n        );\n\n        break;\n      }\n      case \"delete-comment\": {\n        const thread = result.threads[optimisticUpdate.threadId];\n        // If the thread doesn't exist in the cache, we do not apply the update\n        if (thread === undefined) {\n          break;\n        }\n\n        result.threads[thread.id] = deleteComment(\n          thread,\n          optimisticUpdate.commentId,\n          optimisticUpdate.deletedAt\n        );\n\n        break;\n      }\n      case \"add-reaction\": {\n        const thread = result.threads[optimisticUpdate.threadId];\n        // If the thread doesn't exist in the cache, we do not apply the update\n        if (thread === undefined) {\n          break;\n        }\n\n        result.threads[thread.id] = addReaction(\n          thread,\n          optimisticUpdate.commentId,\n          optimisticUpdate.reaction\n        );\n\n        break;\n      }\n      case \"remove-reaction\": {\n        const thread = result.threads[optimisticUpdate.threadId];\n        // If the thread doesn't exist in the cache, we do not apply the update\n        if (thread === undefined) {\n          break;\n        }\n\n        result.threads[thread.id] = removeReaction(\n          thread,\n          optimisticUpdate.commentId,\n          optimisticUpdate.emoji,\n          optimisticUpdate.userId,\n          optimisticUpdate.removedAt\n        );\n\n        break;\n      }\n      case \"mark-inbox-notification-as-read\": {\n        result.inboxNotifications[optimisticUpdate.inboxNotificationId] = {\n          ...state.inboxNotifications[optimisticUpdate.inboxNotificationId],\n          readAt: optimisticUpdate.readAt,\n        };\n        break;\n      }\n      case \"mark-inbox-notifications-as-read\": {\n        for (const id in result.inboxNotifications) {\n          result.inboxNotifications[id] = {\n            ...result.inboxNotifications[id],\n            readAt: optimisticUpdate.readAt,\n          };\n        }\n        break;\n      }\n      case \"update-notification-settings\": {\n        result.notificationSettings[optimisticUpdate.roomId] = {\n          ...result.notificationSettings[optimisticUpdate.roomId],\n          ...optimisticUpdate.settings,\n        };\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function applyThreadUpdates<TThreadMetadata extends BaseMetadata>(\n  existingThreads: Record<string, ThreadDataWithDeleteInfo<TThreadMetadata>>,\n  updates: {\n    newThreads: ThreadData<TThreadMetadata>[];\n    deletedThreads: ThreadDeleteInfo[];\n  }\n): Record<string, ThreadData<TThreadMetadata>> {\n  const updatedThreads = { ...existingThreads };\n\n  // Add new threads or update existing threads if the existing thread is older than the new thread.\n  updates.newThreads.forEach((thread) => {\n    const existingThread = updatedThreads[thread.id];\n\n    // If the thread already exists, we need to compare the two threads to determine which one is newer.\n    if (existingThread) {\n      const result = compareThreads(existingThread, thread);\n      // If the existing thread is newer than the new thread, we do not update the existing thread.\n      if (result === 1) return;\n    }\n    updatedThreads[thread.id] = thread;\n  });\n\n  // Mark threads in the deletedThreads list as deleted\n  updates.deletedThreads.forEach(({ id, deletedAt }) => {\n    const existingThread = updatedThreads[id];\n    if (existingThread === undefined) return;\n\n    existingThread.deletedAt = deletedAt;\n    existingThread.updatedAt = deletedAt;\n    existingThread.comments = [];\n  });\n\n  return updatedThreads;\n}\n\nexport function applyNotificationsUpdates(\n  existingInboxNotifications: Record<string, InboxNotificationData>,\n  updates: {\n    newInboxNotifications: InboxNotificationData[];\n    deletedNotifications: InboxNotificationDeleteInfo[];\n  }\n): Record<string, InboxNotificationData> {\n  const updatedInboxNotifications = { ...existingInboxNotifications };\n\n  // Add new notifications or update existing notifications if the existing notification is older than the new notification.\n  updates.newInboxNotifications.forEach((notification) => {\n    const existingNotification = updatedInboxNotifications[notification.id];\n    // If the notification already exists, we need to compare the two notifications to determine which one is newer.\n    if (existingNotification) {\n      const result = compareInboxNotifications(\n        existingNotification,\n        notification\n      );\n\n      // If the existing notification is newer than the new notification, we do not update the existing notification.\n      if (result === 1) return;\n    }\n\n    // If the new notification is newer than the existing notification, we update the existing notification.\n    updatedInboxNotifications[notification.id] = notification;\n  });\n\n  updates.deletedNotifications.forEach(\n    ({ id }) => delete updatedInboxNotifications[id]\n  );\n\n  return updatedInboxNotifications;\n}\n\n/**\n * Compares two inbox notifications to determine which one is newer.\n * @param inboxNotificationA The first inbox notification to compare.\n * @param inboxNotificationB The second inbox notification to compare.\n * @returns 1 if inboxNotificationA is newer, -1 if inboxNotificationB is newer, or 0 if they are the same age or can't be compared.\n */\nexport function compareInboxNotifications(\n  inboxNotificationA: InboxNotificationData,\n  inboxNotificationB: InboxNotificationData\n): number {\n  if (inboxNotificationA.notifiedAt > inboxNotificationB.notifiedAt) {\n    return 1;\n  } else if (inboxNotificationA.notifiedAt < inboxNotificationB.notifiedAt) {\n    return -1;\n  }\n\n  // notifiedAt times are the same, compare readAt times if both are not null\n  if (inboxNotificationA.readAt && inboxNotificationB.readAt) {\n    return inboxNotificationA.readAt > inboxNotificationB.readAt\n      ? 1\n      : inboxNotificationA.readAt < inboxNotificationB.readAt\n        ? -1\n        : 0;\n  } else if (inboxNotificationA.readAt || inboxNotificationB.readAt) {\n    return inboxNotificationA.readAt ? 1 : -1;\n  }\n\n  // If all dates are equal, return 0\n  return 0;\n}\n\nexport function upsertComment<TThreadMetadata extends BaseMetadata>(\n  thread: ThreadDataWithDeleteInfo<TThreadMetadata>,\n  comment: CommentData\n): ThreadDataWithDeleteInfo<TThreadMetadata> {\n  // If the thread has been deleted, we do not apply the update\n  if (thread.deletedAt !== undefined) {\n    return thread;\n  }\n\n  // Validate that the comment belongs to the thread\n  if (comment.threadId !== thread.id) {\n    console.warn(\n      `Comment ${comment.id} does not belong to thread ${thread.id}`\n    );\n    return thread;\n  }\n\n  const existingComment = thread.comments.find(\n    (existingComment) => existingComment.id === comment.id\n  );\n\n  // If the comment doesn't exist in the thread, add the comment\n  if (existingComment === undefined) {\n    const updatedAt = new Date(\n      Math.max(thread.updatedAt?.getTime() || 0, comment.createdAt.getTime())\n    );\n\n    const updatedThread = {\n      ...thread,\n      updatedAt,\n      comments: [...thread.comments, comment],\n    };\n\n    return updatedThread;\n  }\n\n  // If the comment exists in the thread and has been deleted, do not apply the update\n  if (existingComment.deletedAt !== undefined) {\n    return thread;\n  }\n\n  // Proceed to update the comment if:\n  // 1. The existing comment has not been edited\n  // 2. The incoming comment has not been edited (i.e. it's a new comment)\n  // 3. The incoming comment has been edited more recently than the existing comment\n  if (\n    existingComment.editedAt === undefined ||\n    comment.editedAt === undefined ||\n    existingComment.editedAt <= comment.editedAt\n  ) {\n    const updatedComments = thread.comments.map((existingComment) =>\n      existingComment.id === comment.id ? comment : existingComment\n    );\n\n    const updatedThread = {\n      ...thread,\n      updatedAt: new Date(\n        Math.max(\n          thread.updatedAt?.getTime() || 0,\n          comment.editedAt?.getTime() || comment.createdAt.getTime()\n        )\n      ),\n      comments: updatedComments,\n    };\n    return updatedThread;\n  }\n\n  return thread;\n}\n\nexport function deleteComment<TThreadMetadata extends BaseMetadata>(\n  thread: ThreadDataWithDeleteInfo<TThreadMetadata>,\n  commentId: string,\n  deletedAt: Date\n): ThreadDataWithDeleteInfo<TThreadMetadata> {\n  // If the thread has been deleted, we do not delete the comment\n  if (thread.deletedAt !== undefined) {\n    return thread;\n  }\n\n  const existingComment = thread.comments.find(\n    (comment) => comment.id === commentId\n  );\n\n  // If the comment doesn't exist in the thread, we cannot perform the deletion\n  if (existingComment === undefined) {\n    return thread;\n  }\n\n  // If the comment has been deleted since the deletion request, we do not delete the comment\n  if (existingComment.deletedAt !== undefined) {\n    return thread;\n  }\n\n  const updatedComments = thread.comments.map((comment) =>\n    comment.id === commentId\n      ? {\n          ...comment,\n          deletedAt,\n          body: undefined,\n        }\n      : comment\n  );\n\n  // If all comments have been deleted, we mark the thread as deleted\n  if (!updatedComments.some((comment) => comment.deletedAt === undefined)) {\n    return {\n      ...thread,\n      deletedAt,\n      updatedAt: deletedAt,\n      comments: [],\n    };\n  }\n\n  return {\n    ...thread,\n    updatedAt: deletedAt,\n    comments: updatedComments,\n  };\n}\n\nexport function addReaction<TThreadMetadata extends BaseMetadata>(\n  thread: ThreadDataWithDeleteInfo<TThreadMetadata>,\n  commentId: string,\n  reaction: CommentUserReaction\n): ThreadDataWithDeleteInfo<TThreadMetadata> {\n  // If the thread has been deleted, we do not add the reaction\n  if (thread.deletedAt !== undefined) {\n    return thread;\n  }\n\n  const existingComment = thread.comments.find(\n    (comment) => comment.id === commentId\n  );\n\n  // If the comment doesn't exist in the thread, we do not add the reaction\n  if (existingComment === undefined) {\n    return thread;\n  }\n\n  // If the comment has been deleted since the reaction addition request, we do not add the reaction\n  if (existingComment.deletedAt !== undefined) {\n    return thread;\n  }\n\n  const updatedComments = thread.comments.map((comment) =>\n    comment.id === commentId\n      ? {\n          ...comment,\n          reactions: upsertReaction(comment.reactions, reaction),\n        }\n      : comment\n  );\n\n  return {\n    ...thread,\n    updatedAt: new Date(\n      Math.max(reaction.createdAt.getTime(), thread.updatedAt?.getTime() || 0)\n    ),\n    comments: updatedComments,\n  };\n}\n\nexport function removeReaction<TThreadMetadata extends BaseMetadata>(\n  thread: ThreadDataWithDeleteInfo<TThreadMetadata>,\n  commentId: string,\n  emoji: string,\n  userId: string,\n  removedAt: Date\n): ThreadDataWithDeleteInfo<TThreadMetadata> {\n  // If the thread has been deleted, we do not remove the reaction\n  if (thread.deletedAt !== undefined) {\n    return thread;\n  }\n\n  const existingComment = thread.comments.find(\n    (comment) => comment.id === commentId\n  );\n\n  // If the comment doesn't exist in the thread, we do not remove the reaction\n  if (existingComment === undefined) {\n    return thread;\n  }\n\n  // If the comment has been deleted since the reaction removal request, we do not remove the reaction\n  if (existingComment.deletedAt !== undefined) {\n    return thread;\n  }\n\n  const updatedComments = thread.comments.map((comment) =>\n    comment.id === commentId\n      ? {\n          ...comment,\n          reactions: comment.reactions\n            .map((reaction) =>\n              reaction.emoji === emoji\n                ? {\n                    ...reaction,\n                    users: reaction.users.filter((user) => user.id !== userId),\n                  }\n                : reaction\n            )\n            .filter((reaction) => reaction.users.length > 0), // Remove reactions with no users left\n        }\n      : comment\n  );\n\n  return {\n    ...thread,\n    updatedAt: new Date(\n      Math.max(removedAt.getTime(), thread.updatedAt?.getTime() || 0)\n    ),\n    comments: updatedComments,\n  };\n}\n\nfunction upsertReaction(\n  reactions: CommentReaction[],\n  reaction: CommentUserReaction\n): CommentReaction[] {\n  const existingReaction = reactions.find(\n    (existingReaction) => existingReaction.emoji === reaction.emoji\n  );\n\n  // If the reaction doesn't exist in the comment, we add it\n  if (existingReaction === undefined) {\n    return [\n      ...reactions,\n      {\n        emoji: reaction.emoji,\n        createdAt: reaction.createdAt,\n        users: [{ id: reaction.userId }],\n      },\n    ];\n  }\n\n  // If the reaction exists in the comment, we add the user to the reaction if they are not already in it\n  if (\n    existingReaction.users.some((user) => user.id === reaction.userId) === false\n  ) {\n    return reactions.map((existingReaction) =>\n      existingReaction.emoji === reaction.emoji\n        ? {\n            ...existingReaction,\n            users: [...existingReaction.users, { id: reaction.userId }],\n          }\n        : existingReaction\n    );\n  }\n\n  return reactions;\n}\n", "import type { AuthValue } from \"./auth-manager\";\nimport { createAuthManager } from \"./auth-manager\";\nimport { isIdle } from \"./connection\";\nimport { DEFAULT_BASE_URL } from \"./constants\";\nimport type { LsonObject } from \"./crdts/Lson\";\nimport { linkDevTools, setupDevTools, unlinkDevTools } from \"./devtools\";\nimport { kInternal } from \"./internal\";\nimport type { BatchStore } from \"./lib/batch\";\nimport { createBatchStore } from \"./lib/batch\";\nimport type { Store } from \"./lib/create-store\";\nimport { createStore } from \"./lib/create-store\";\nimport { deprecateIf } from \"./lib/deprecation\";\nimport * as console from \"./lib/fancy-console\";\nimport type { Json, JsonObject } from \"./lib/Json\";\nimport type { Resolve } from \"./lib/Resolve\";\nimport type { GetInboxNotificationsOptions } from \"./notifications\";\nimport { createNotificationsApi } from \"./notifications\";\nimport type { CustomAuthenticationResult } from \"./protocol/Authentication\";\nimport type { BaseUserMeta } from \"./protocol/BaseUserMeta\";\nimport type { Polyfills, Room, RoomDelegates, RoomInitializers } from \"./room\";\nimport {\n  createRoom,\n  makeAuthDelegateForRoom,\n  makeCreateSocketDelegateForRoom,\n} from \"./room\";\nimport type { CacheStore } from \"./store\";\nimport { createClientStore } from \"./store\";\nimport type { BaseMetadata } from \"./types/BaseMetadata\";\nimport type { InboxNotificationData } from \"./types/InboxNotificationData\";\nimport type { InboxNotificationDeleteInfo } from \"./types/InboxNotificationDeleteInfo\";\nimport type { OptionalPromise } from \"./types/OptionalPromise\";\nimport type { RoomInfo } from \"./types/RoomInfo\";\nimport type { ThreadData } from \"./types/ThreadData\";\nimport type { ThreadDeleteInfo } from \"./types/ThreadDeleteInfo\";\n\nconst MIN_THROTTLE = 16;\nconst MAX_THROTTLE = 1_000;\nconst DEFAULT_THROTTLE = 100;\n\nconst MIN_BACKGROUND_KEEP_ALIVE_TIMEOUT = 15_000;\nconst MIN_LOST_CONNECTION_TIMEOUT = 200;\nconst RECOMMENDED_MIN_LOST_CONNECTION_TIMEOUT = 1_000;\nconst MAX_LOST_CONNECTION_TIMEOUT = 30_000;\nconst DEFAULT_LOST_CONNECTION_TIMEOUT = 5_000;\n\nconst RESOLVE_USERS_BATCH_DELAY = 50;\nconst RESOLVE_ROOMS_INFO_BATCH_DELAY = 50;\n\nexport type ResolveMentionSuggestionsArgs = {\n  /**\n   * The ID of the current room.\n   */\n  roomId: string;\n\n  /**\n   * The text to search for.\n   */\n  text: string;\n};\n\nexport type ResolveUsersArgs = {\n  /**\n   * The IDs of the users to resolve.\n   */\n  userIds: string[];\n};\n\nexport type ResolveRoomsInfoArgs = {\n  /**\n   * The IDs of the rooms to resolve.\n   */\n  roomIds: string[];\n};\n\nexport type EnterOptions<\n  TPresence extends JsonObject,\n  TStorage extends LsonObject,\n> = Resolve<\n  // Enter options are just room initializers, plus an internal option\n  RoomInitializers<TPresence, TStorage> & {\n    /**\n     * Only necessary when you’re using Liveblocks with React v17 or lower.\n     *\n     * If so, pass in a reference to `ReactDOM.unstable_batchedUpdates` here.\n     * This will allow Liveblocks to circumvent the so-called \"zombie child\n     * problem\". To learn more, see\n     * https://liveblocks.io/docs/guides/troubleshooting#stale-props-zombie-child\n     */\n    unstable_batchedUpdates?: (cb: () => void) => void;\n  }\n>;\n\n/**\n * @private\n *\n * Private methods and variables used in the core internals, but as a user\n * of Liveblocks, NEVER USE ANY OF THESE DIRECTLY, because bad things\n * will probably happen if you do.\n */\ntype PrivateClientApi<TUserMeta extends BaseUserMeta> = {\n  notifications: NotificationsApi;\n  currentUserIdStore: Store<string | null>;\n  resolveMentionSuggestions: ClientOptions[\"resolveMentionSuggestions\"];\n  cacheStore: CacheStore<BaseMetadata>;\n  usersStore: BatchStore<TUserMeta[\"info\"] | undefined, [string]>;\n  roomsInfoStore: BatchStore<RoomInfo | undefined, [string]>;\n  getRoomIds: () => string[];\n};\n\nexport type NotificationsApi<TThreadMetadata extends BaseMetadata = never> = {\n  getInboxNotifications(options?: GetInboxNotificationsOptions): Promise<{\n    inboxNotifications: InboxNotificationData[];\n    threads: ThreadData<TThreadMetadata>[];\n    deletedThreads: ThreadDeleteInfo[];\n    deletedInboxNotifications: InboxNotificationDeleteInfo[];\n    meta: {\n      requestedAt: Date;\n    };\n  }>;\n  getUnreadInboxNotificationsCount(): Promise<number>;\n  markAllInboxNotificationsAsRead(): Promise<void>;\n  markInboxNotificationAsRead(inboxNotificationId: string): Promise<void>;\n};\n\nexport type Client<TUserMeta extends BaseUserMeta = BaseUserMeta> = {\n  /**\n   * Gets a room. Returns null if {@link Client.enter} has not been called previously.\n   *\n   * @param roomId The id of the room\n   */\n  getRoom<\n    TPresence extends JsonObject,\n    TStorage extends LsonObject = LsonObject,\n    TUserMeta extends BaseUserMeta = BaseUserMeta,\n    TRoomEvent extends Json = never,\n  >(\n    roomId: string\n  ): Room<TPresence, TStorage, TUserMeta, TRoomEvent> | null;\n\n  /**\n   * Enter a room.\n   * @param roomId The id of the room\n   * @param options Optional. You can provide initializers for the Presence or Storage when entering the Room.\n   * @returns The room and a leave function. Call the returned leave() function when you no longer need the room.\n   */\n  enterRoom<\n    TPresence extends JsonObject,\n    TStorage extends LsonObject = LsonObject,\n    TUserMeta extends BaseUserMeta = BaseUserMeta,\n    TRoomEvent extends Json = never,\n  >(\n    roomId: string,\n    options: EnterOptions<TPresence, TStorage>\n  ): {\n    room: Room<TPresence, TStorage, TUserMeta, TRoomEvent>;\n    leave: () => void;\n  };\n\n  /**\n   * @deprecated - Prefer using {@link Client.enterRoom} instead.\n   *\n   * Enters a room and returns it.\n   * @param roomId The id of the room\n   * @param options Optional. You can provide initializers for the Presence or Storage when entering the Room.\n   */\n  enter<\n    TPresence extends JsonObject,\n    TStorage extends LsonObject = LsonObject,\n    TUserMeta extends BaseUserMeta = BaseUserMeta,\n    TRoomEvent extends Json = never,\n  >(\n    roomId: string,\n    options: EnterOptions<TPresence, TStorage>\n  ): Room<TPresence, TStorage, TUserMeta, TRoomEvent>;\n\n  /**\n   * @deprecated - Prefer using {@link Client.enterRoom} and calling the returned leave function instead, which is safer.\n   *\n   * Forcefully leaves a room.\n   *\n   * Only call this if you know for sure there are no other \"instances\" of this\n   * room used elsewhere in your application. Force-leaving can trigger\n   * unexpected conditions in other parts of your application that may not\n   * expect this.\n   *\n   * @param roomId The id of the room\n   */\n  leave(roomId: string): void;\n\n  /**\n   * Purges all cached auth tokens and reconnects all rooms that are still\n   * connected, if any.\n   *\n   * Call this whenever you log out a user in your application.\n   */\n  logout(): void;\n\n  /**\n   * @private\n   *\n   * Private methods and variables used in the core internals, but as a user\n   * of Liveblocks, NEVER USE ANY OF THESE DIRECTLY, because bad things\n   * will probably happen if you do.\n   */\n  readonly [kInternal]: PrivateClientApi<TUserMeta>;\n};\n\nexport type AuthEndpoint =\n  | string\n  | ((room?: string) => Promise<CustomAuthenticationResult>);\n\n/**\n * The authentication endpoint that is called to ensure that the current user has access to a room.\n * Can be an url or a callback if you need to add additional headers.\n */\nexport type ClientOptions<TUserMeta extends BaseUserMeta = BaseUserMeta> = {\n  throttle?: number; // in milliseconds\n  lostConnectionTimeout?: number; // in milliseconds\n  backgroundKeepAliveTimeout?: number; // in milliseconds\n  polyfills?: Polyfills;\n  unstable_fallbackToHTTP?: boolean;\n  unstable_streamData?: boolean;\n\n  /**\n   * @deprecated Use `polyfills: { fetch: ... }` instead.\n   * This option will be removed in a future release.\n   */\n  fetchPolyfill?: Polyfills[\"fetch\"];\n\n  /**\n   * @deprecated Use `polyfills: { WebSocket: ... }` instead.\n   * This option will be removed in a future release.\n   */\n  WebSocketPolyfill?: Polyfills[\"WebSocket\"];\n\n  /**\n   * @beta\n   *\n   * A function that returns a list of user IDs matching a string.\n   */\n  resolveMentionSuggestions?: (\n    args: ResolveMentionSuggestionsArgs\n  ) => OptionalPromise<string[]>;\n\n  /**\n   * @beta\n   *\n   * A function that returns user info from user IDs.\n   */\n  resolveUsers?: (\n    args: ResolveUsersArgs\n  ) => OptionalPromise<(TUserMeta[\"info\"] | undefined)[] | undefined>;\n\n  /**\n   * @beta\n   *\n   * A function that returns room info from room IDs.\n   */\n  resolveRoomsInfo?: (\n    args: ResolveRoomsInfoArgs\n  ) => OptionalPromise<(RoomInfo | undefined)[] | undefined>;\n\n  /**\n   * @internal To point the client to a different Liveblocks server. Only\n   * useful for Liveblocks developers. Not for end users.\n   */\n  baseUrl?: string;\n\n  /** @internal */\n  mockedDelegates?: RoomDelegates;\n\n  /** @internal */\n  enableDebugLogging?: boolean;\n} & (\n  | { publicApiKey: string; authEndpoint?: never }\n  | { publicApiKey?: never; authEndpoint: AuthEndpoint }\n);\n// ^^^^^^^^^^^^^^^\n// NOTE: Potential upgrade path by introducing a new property:\n//\n//   | { publicApiKey: string; authEndpoint?: never; authUrl?: never }\n//   | { publicApiKey?: never; authEndpoint: AuthEndpoint; authUrl?: never }\n//   | { publicApiKey?: never; authEndpoint?: never; authUrl?: AuthUrl }\n//\n// Where:\n//\n//   export type AuthUrl =\n//     | string\n//     | ((room: string) => Promise<{ token: string }>);\n//\n\nfunction getBaseUrlFromClientOptions(clientOptions: ClientOptions) {\n  if (\"liveblocksServer\" in clientOptions) {\n    throw new Error(\"Client option no longer supported\");\n  }\n  if (\n    typeof clientOptions.baseUrl === \"string\" &&\n    clientOptions.baseUrl.startsWith(\"http\") // Must be http or https URL\n  ) {\n    return clientOptions.baseUrl;\n  } else {\n    return DEFAULT_BASE_URL;\n  }\n}\n\nexport function getAuthBearerHeaderFromAuthValue(authValue: AuthValue): string {\n  if (authValue.type === \"public\") {\n    return authValue.publicApiKey;\n  } else {\n    return authValue.token.raw;\n  }\n}\n\n/**\n * Create a client that will be responsible to communicate with liveblocks servers.\n *\n * @example\n * const client = createClient({\n *   authEndpoint: \"/api/auth\"\n * });\n *\n * // It's also possible to use a function to call your authentication endpoint.\n * // Useful to add additional headers or use an API wrapper (like Firebase functions)\n * const client = createClient({\n *   authEndpoint: async (room?) => {\n *     const response = await fetch(\"/api/auth\", {\n *       method: \"POST\",\n *       headers: {\n *          Authentication: \"token\",\n *          \"Content-Type\": \"application/json\"\n *       },\n *       body: JSON.stringify({ room })\n *     });\n *\n *     return await response.json(); // should be: { token: \"...\" }\n *   }\n * });\n */\nexport function createClient<TUserMeta extends BaseUserMeta = BaseUserMeta>(\n  options: ClientOptions<TUserMeta>\n): Client<TUserMeta> {\n  type OpaqueRoom = Room<JsonObject, LsonObject, BaseUserMeta, Json>;\n\n  const clientOptions = options;\n  const throttleDelay = getThrottle(clientOptions.throttle ?? DEFAULT_THROTTLE);\n  const lostConnectionTimeout = getLostConnectionTimeout(\n    clientOptions.lostConnectionTimeout ?? DEFAULT_LOST_CONNECTION_TIMEOUT\n  );\n  const backgroundKeepAliveTimeout = getBackgroundKeepAliveTimeout(\n    clientOptions.backgroundKeepAliveTimeout\n  );\n  const baseUrl = getBaseUrlFromClientOptions(clientOptions);\n\n  const authManager = createAuthManager(options);\n\n  type RoomInfo = {\n    room: OpaqueRoom;\n    unsubs: Set<() => void>;\n  };\n\n  const roomsById = new Map<string, RoomInfo>();\n\n  function teardownRoom(room: OpaqueRoom) {\n    unlinkDevTools(room.id);\n    roomsById.delete(room.id);\n    room.destroy();\n  }\n\n  function leaseRoom<\n    TPresence extends JsonObject,\n    TStorage extends LsonObject,\n    TUserMeta extends BaseUserMeta,\n    TRoomEvent extends Json,\n  >(\n    info: RoomInfo\n  ): {\n    room: Room<TPresence, TStorage, TUserMeta, TRoomEvent>;\n    leave: () => void;\n  } {\n    // Create a new self-destructing leave function\n    const leave = () => {\n      const self = leave; // A reference to the currently executing function itself\n\n      if (!info.unsubs.delete(self)) {\n        console.warn(\n          \"This leave function was already called. Calling it more than once has no effect.\"\n        );\n      } else {\n        // Was this the last room lease? If so, tear down the room\n        if (info.unsubs.size === 0) {\n          teardownRoom(info.room);\n        }\n      }\n    };\n\n    info.unsubs.add(leave);\n    return {\n      room: info.room as Room<TPresence, TStorage, TUserMeta, TRoomEvent>,\n      leave,\n    };\n  }\n\n  function enterRoom<\n    TPresence extends JsonObject,\n    TStorage extends LsonObject = LsonObject,\n    TUserMeta extends BaseUserMeta = BaseUserMeta,\n    TRoomEvent extends Json = never,\n  >(\n    roomId: string,\n    options: EnterOptions<TPresence, TStorage>\n  ): {\n    room: Room<TPresence, TStorage, TUserMeta, TRoomEvent>;\n    leave: () => void;\n  } {\n    const existing = roomsById.get(roomId);\n    if (existing !== undefined) {\n      return leaseRoom(existing);\n    }\n\n    deprecateIf(\n      options.initialPresence === null || options.initialPresence === undefined,\n      \"Please provide an initial presence value for the current user when entering the room.\"\n    );\n\n    const newRoom = createRoom<TPresence, TStorage, TUserMeta, TRoomEvent>(\n      {\n        initialPresence: options.initialPresence ?? {},\n        initialStorage: options.initialStorage,\n      },\n      {\n        roomId,\n        throttleDelay,\n        lostConnectionTimeout,\n        backgroundKeepAliveTimeout,\n        polyfills: clientOptions.polyfills,\n        delegates: clientOptions.mockedDelegates ?? {\n          createSocket: makeCreateSocketDelegateForRoom(\n            roomId,\n            baseUrl,\n            clientOptions.polyfills?.WebSocket\n          ),\n          authenticate: makeAuthDelegateForRoom(roomId, authManager),\n        },\n        enableDebugLogging: clientOptions.enableDebugLogging,\n        unstable_batchedUpdates: options?.unstable_batchedUpdates,\n        baseUrl,\n        unstable_fallbackToHTTP: !!clientOptions.unstable_fallbackToHTTP,\n        unstable_streamData: !!clientOptions.unstable_streamData,\n      }\n    );\n\n    const newRoomInfo: RoomInfo = {\n      room: newRoom,\n      unsubs: new Set(),\n    };\n    roomsById.set(roomId, newRoomInfo);\n\n    setupDevTools(() => Array.from(roomsById.keys()));\n    linkDevTools(roomId, newRoom);\n\n    const shouldConnect =\n      options.autoConnect ?? options.shouldInitiallyConnect ?? true;\n    if (shouldConnect) {\n      // we need to check here because nextjs would fail earlier with Node < 16\n      if (typeof atob === \"undefined\") {\n        if (clientOptions.polyfills?.atob === undefined) {\n          throw new Error(\n            \"You need to polyfill atob to use the client in your environment. Please follow the instructions at https://liveblocks.io/docs/errors/liveblocks-client/atob-polyfill\"\n          );\n        }\n        // At this point, atob does not exist so we are either on React Native or on Node < 16, hence global is available.\n        global.atob = clientOptions.polyfills.atob;\n      }\n\n      newRoom.connect();\n    }\n\n    return leaseRoom(newRoomInfo);\n  }\n\n  function enter<\n    TPresence extends JsonObject,\n    TStorage extends LsonObject = LsonObject,\n    TUserMeta extends BaseUserMeta = BaseUserMeta,\n    TRoomEvent extends Json = never,\n  >(\n    roomId: string,\n    options: EnterOptions<TPresence, TStorage>\n  ): Room<TPresence, TStorage, TUserMeta, TRoomEvent> {\n    const { room, leave: _ } = enterRoom<\n      TPresence,\n      TStorage,\n      TUserMeta,\n      TRoomEvent\n    >(roomId, options);\n    return room;\n  }\n\n  function getRoom<\n    TPresence extends JsonObject,\n    TStorage extends LsonObject = LsonObject,\n    TUserMeta extends BaseUserMeta = BaseUserMeta,\n    TRoomEvent extends Json = never,\n  >(roomId: string): Room<TPresence, TStorage, TUserMeta, TRoomEvent> | null {\n    const room = roomsById.get(roomId)?.room;\n    return room\n      ? (room as Room<TPresence, TStorage, TUserMeta, TRoomEvent>)\n      : null;\n  }\n\n  function forceLeave(roomId: string) {\n    const unsubs = roomsById.get(roomId)?.unsubs ?? new Set();\n    for (const unsub of unsubs) {\n      unsub();\n    }\n  }\n\n  function logout() {\n    authManager.reset();\n\n    // Reconnect all rooms that aren't idle, if any. This ensures that those\n    // rooms will get reauthorized now that the auth cache is reset. If that\n    // fails, they might disconnect.\n    for (const { room } of roomsById.values()) {\n      if (!isIdle(room.getStatus())) {\n        room.reconnect();\n      }\n    }\n  }\n\n  const currentUserIdStore = createStore<string | null>(null);\n\n  const {\n    getInboxNotifications,\n    getUnreadInboxNotificationsCount,\n    markAllInboxNotificationsAsRead,\n    markInboxNotificationAsRead,\n  } = createNotificationsApi({\n    baseUrl,\n    fetcher: clientOptions.polyfills?.fetch || /* istanbul ignore next */ fetch,\n    authManager,\n    currentUserIdStore,\n  });\n\n  const cacheStore = createClientStore();\n\n  const resolveUsers = clientOptions.resolveUsers;\n  const warnIfNoResolveUsers = createDevelopmentWarning(\n    () => !resolveUsers,\n    \"Set the resolveUsers option in createClient to specify user info.\"\n  );\n\n  const usersStore = createBatchStore(\n    async (batchedUserIds: [string][]) => {\n      const userIds = batchedUserIds.flat();\n      const users = await resolveUsers?.({ userIds });\n\n      warnIfNoResolveUsers();\n\n      return users ?? userIds.map(() => undefined);\n    },\n    { delay: RESOLVE_USERS_BATCH_DELAY }\n  );\n\n  const resolveRoomsInfo = clientOptions.resolveRoomsInfo;\n  const warnIfNoResolveRoomsInfo = createDevelopmentWarning(\n    () => !resolveRoomsInfo,\n    \"Set the resolveRoomsInfo option in createClient to specify room info.\"\n  );\n\n  const roomsInfoStore = createBatchStore(\n    async (batchedRoomIds: [string][]) => {\n      const roomIds = batchedRoomIds.flat();\n      const roomsInfo = await resolveRoomsInfo?.({ roomIds });\n\n      warnIfNoResolveRoomsInfo();\n\n      return roomsInfo ?? roomIds.map(() => undefined);\n    },\n    { delay: RESOLVE_ROOMS_INFO_BATCH_DELAY }\n  );\n\n  return Object.defineProperty(\n    {\n      logout,\n\n      // Old, deprecated APIs\n      enter,\n      getRoom,\n      leave: forceLeave,\n\n      // New, preferred API\n      enterRoom,\n\n      // Internal\n      [kInternal]: {\n        notifications: {\n          getInboxNotifications,\n          getUnreadInboxNotificationsCount,\n          markAllInboxNotificationsAsRead,\n          markInboxNotificationAsRead,\n        },\n        currentUserIdStore,\n        resolveMentionSuggestions: clientOptions.resolveMentionSuggestions,\n        cacheStore,\n        usersStore,\n        roomsInfoStore,\n        getRoomIds() {\n          return Array.from(roomsById.keys());\n        },\n      },\n    },\n    kInternal,\n    {\n      enumerable: false,\n    }\n  );\n}\n\nexport class NotificationsApiError extends Error {\n  constructor(\n    public message: string,\n    public status: number,\n    public details?: JsonObject\n  ) {\n    super(message);\n  }\n}\n\nfunction checkBounds(\n  option: string,\n  value: unknown,\n  min: number,\n  max?: number,\n  recommendedMin?: number\n): number {\n  if (\n    typeof value !== \"number\" ||\n    value < min ||\n    (max !== undefined && value > max)\n  ) {\n    throw new Error(\n      max !== undefined\n        ? `${option} should be between ${recommendedMin ?? min} and ${max}.`\n        : `${option} should be at least ${recommendedMin ?? min}.`\n    );\n  }\n  return value;\n}\n\nfunction getBackgroundKeepAliveTimeout(\n  value: number | undefined\n): number | undefined {\n  if (value === undefined) return undefined;\n  return checkBounds(\n    \"backgroundKeepAliveTimeout\",\n    value,\n    MIN_BACKGROUND_KEEP_ALIVE_TIMEOUT\n  );\n}\n\nfunction getThrottle(value: number): number {\n  return checkBounds(\"throttle\", value, MIN_THROTTLE, MAX_THROTTLE);\n}\n\nfunction getLostConnectionTimeout(value: number): number {\n  return checkBounds(\n    \"lostConnectionTimeout\",\n    value,\n    MIN_LOST_CONNECTION_TIMEOUT,\n    MAX_LOST_CONNECTION_TIMEOUT,\n    RECOMMENDED_MIN_LOST_CONNECTION_TIMEOUT\n  );\n}\n\n/**\n * Emit a warning only once if a condition is met, in development only.\n */\nfunction createDevelopmentWarning(\n  condition: boolean | (() => boolean),\n  ...args: Parameters<typeof console.warn>\n) {\n  let hasWarned = false;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    return () => {\n      if (\n        !hasWarned &&\n        (typeof condition === \"function\" ? condition() : condition)\n      ) {\n        console.warn(...args);\n\n        hasWarned = true;\n      }\n    };\n  } else {\n    return () => {};\n  }\n}\n", "import type { ResolveUsersArgs } from \"../client\";\nimport { nn } from \"../lib/assert\";\nimport type { BaseUserMeta } from \"../protocol/BaseUserMeta\";\nimport type {\n  CommentBody,\n  CommentBodyBlockElement,\n  CommentBodyElement,\n  CommentBodyInlineElement,\n  CommentBodyLink,\n  CommentBodyMention,\n  CommentBodyParagraph,\n  CommentBodyText,\n} from \"../types/CommentBody\";\nimport type { OptionalPromise } from \"../types/OptionalPromise\";\n\ntype CommentBodyBlockElementName = Exclude<\n  CommentBodyBlockElement,\n  CommentBodyText\n>[\"type\"];\n\ntype CommentBodyInlineElementName =\n  | Exclude<CommentBodyInlineElement, CommentBodyText>[\"type\"]\n  | \"text\";\n\ntype CommentBodyElementName =\n  | CommentBodyBlockElementName\n  | CommentBodyInlineElementName;\n\ntype CommentBodyBlockElements = {\n  paragraph: CommentBodyParagraph;\n};\n\ntype CommentBodyInlineElements = {\n  text: CommentBodyText;\n  link: CommentBodyLink;\n  mention: CommentBodyMention;\n};\n\ntype CommentBodyElements = CommentBodyBlockElements & CommentBodyInlineElements;\n\ntype CommentBodyVisitor<T extends CommentBodyElement = CommentBodyElement> = (\n  element: T\n) => void;\n\nexport type CommentBodyParagraphElementArgs = {\n  /**\n   * The paragraph element.\n   */\n  element: CommentBodyParagraph;\n\n  /**\n   * The text content of the paragraph.\n   */\n  children: string;\n};\n\nexport type CommentBodyTextElementArgs = {\n  /**\n   * The text element.\n   */\n  element: CommentBodyText;\n};\n\nexport type CommentBodyLinkElementArgs = {\n  /**\n   * The link element.\n   */\n  element: CommentBodyLink;\n\n  /**\n   * The absolute URL of the link.\n   */\n  href: string;\n};\n\nexport type CommentBodyMentionElementArgs<\n  TUserMeta extends BaseUserMeta = BaseUserMeta,\n> = {\n  /**\n   * The mention element.\n   */\n  element: CommentBodyMention;\n\n  /**\n   * The mention's user info, if the `resolvedUsers` option was provided.\n   */\n  user?: TUserMeta[\"info\"];\n};\n\nexport type StringifyCommentBodyElements<\n  TUserMeta extends BaseUserMeta = BaseUserMeta,\n> = {\n  /**\n   * The element used to display paragraphs.\n   */\n  paragraph: (args: CommentBodyParagraphElementArgs, index: number) => string;\n\n  /**\n   * The element used to display text elements.\n   */\n  text: (args: CommentBodyTextElementArgs, index: number) => string;\n\n  /**\n   * The element used to display links.\n   */\n  link: (args: CommentBodyLinkElementArgs, index: number) => string;\n\n  /**\n   * The element used to display mentions.\n   */\n  mention: (\n    args: CommentBodyMentionElementArgs<TUserMeta>,\n    index: number\n  ) => string;\n};\n\nexport type StringifyCommentBodyOptions<\n  TUserMeta extends BaseUserMeta = BaseUserMeta,\n> = {\n  /**\n   * Which format to convert the comment to.\n   */\n  format?: \"plain\" | \"html\" | \"markdown\";\n\n  /**\n   * The elements used to customize the resulting string. Each element has\n   * priority over the defaults inherited from the `format` option.\n   */\n  elements?: Partial<StringifyCommentBodyElements<TUserMeta>>;\n\n  /**\n   * The separator used between paragraphs.\n   */\n  separator?: string;\n\n  /**\n   * A function that returns user info from user IDs.\n   */\n  resolveUsers?: (\n    args: ResolveUsersArgs\n  ) => OptionalPromise<(TUserMeta[\"info\"] | undefined)[] | undefined>;\n};\n\nfunction isCommentBodyParagraph(\n  element: CommentBodyElement\n): element is CommentBodyParagraph {\n  return \"type\" in element && element.type === \"mention\";\n}\n\nfunction isCommentBodyText(\n  element: CommentBodyElement\n): element is CommentBodyText {\n  return \"text\" in element && typeof element.text === \"string\";\n}\n\nfunction isCommentBodyMention(\n  element: CommentBodyElement\n): element is CommentBodyMention {\n  return \"type\" in element && element.type === \"mention\";\n}\n\nfunction isCommentBodyLink(\n  element: CommentBodyElement\n): element is CommentBodyLink {\n  return \"type\" in element && element.type === \"link\";\n}\n\nconst commentBodyElementsGuards = {\n  paragraph: isCommentBodyParagraph,\n  text: isCommentBodyText,\n  link: isCommentBodyLink,\n  mention: isCommentBodyMention,\n};\n\nconst commentBodyElementsTypes: Record<\n  CommentBodyElementName,\n  \"block\" | \"inline\"\n> = {\n  paragraph: \"block\",\n  text: \"inline\",\n  link: \"inline\",\n  mention: \"inline\",\n};\n\nfunction traverseCommentBody(\n  body: CommentBody,\n  visitor: CommentBodyVisitor\n): void;\nfunction traverseCommentBody<T extends CommentBodyElementName>(\n  body: CommentBody,\n  element: T,\n  visitor: CommentBodyVisitor<CommentBodyElements[T]>\n): void;\nfunction traverseCommentBody(\n  body: CommentBody,\n  elementOrVisitor: CommentBodyElementName | CommentBodyVisitor,\n  possiblyVisitor?: CommentBodyVisitor\n): void {\n  if (!body || !body?.content) {\n    return;\n  }\n\n  const element =\n    typeof elementOrVisitor === \"string\" ? elementOrVisitor : undefined;\n  const type = element ? commentBodyElementsTypes[element] : \"all\";\n  const guard = element ? commentBodyElementsGuards[element] : () => true;\n  const visitor =\n    typeof elementOrVisitor === \"function\" ? elementOrVisitor : possiblyVisitor;\n\n  for (const block of body.content) {\n    if (type === \"all\" || type === \"block\") {\n      if (guard(block)) {\n        visitor?.(block);\n      }\n    }\n\n    if (type === \"all\" || type === \"inline\") {\n      for (const inline of block.children) {\n        if (guard(inline)) {\n          visitor?.(inline);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Get an array of each user's ID that has been mentioned in a `CommentBody`.\n */\nexport function getMentionedIdsFromCommentBody(body: CommentBody): string[] {\n  const mentionedIds = new Set<string>();\n\n  traverseCommentBody(body, \"mention\", (mention) =>\n    mentionedIds.add(mention.id)\n  );\n\n  return Array.from(mentionedIds);\n}\n\nasync function resolveUsersInCommentBody<TUserMeta extends BaseUserMeta>(\n  body: CommentBody,\n  resolveUsers?: (\n    args: ResolveUsersArgs\n  ) => OptionalPromise<(TUserMeta[\"info\"] | undefined)[] | undefined>\n) {\n  const resolvedUsers = new Map<string, TUserMeta[\"info\"]>();\n\n  if (!resolveUsers) {\n    return resolvedUsers;\n  }\n\n  const userIds = getMentionedIdsFromCommentBody(body);\n  const users = await resolveUsers({\n    userIds,\n  });\n\n  for (const [index, userId] of userIds.entries()) {\n    const user = users?.[index];\n\n    if (user) {\n      resolvedUsers.set(userId, user);\n    }\n  }\n\n  return resolvedUsers;\n}\n\nconst htmlEscapables = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\",\n};\n\nconst htmlEscapablesRegex = new RegExp(\n  Object.keys(htmlEscapables)\n    .map((entity) => `\\\\${entity}`)\n    .join(\"|\"),\n  \"g\"\n);\n\nfunction htmlSafe(value: string) {\n  return new HtmlSafeString([String(value)], []);\n}\n\nfunction joinHtml(strings: (string | HtmlSafeString)[]) {\n  if (strings.length <= 0) {\n    return new HtmlSafeString([\"\"], []);\n  }\n\n  return new HtmlSafeString(\n    [\"\", ...(Array(strings.length - 1).fill(\"\") as string[]), \"\"],\n    strings\n  );\n}\n\nfunction escapeHtml(\n  value: string | string[] | HtmlSafeString | HtmlSafeString[]\n) {\n  if (value instanceof HtmlSafeString) {\n    return value.toString();\n  }\n\n  if (Array.isArray(value)) {\n    return joinHtml(value).toString();\n  }\n\n  return String(value).replace(\n    htmlEscapablesRegex,\n    (character) => htmlEscapables[character as keyof typeof htmlEscapables]\n  );\n}\n\n// Adapted from https://github.com/Janpot/escape-html-template-tag\nexport class HtmlSafeString {\n  private _strings: readonly string[];\n  private _values: readonly (\n    | string\n    | string[]\n    | HtmlSafeString\n    | HtmlSafeString[]\n  )[];\n\n  constructor(\n    strings: readonly string[],\n    values: readonly (string | string[] | HtmlSafeString | HtmlSafeString[])[]\n  ) {\n    this._strings = strings;\n    this._values = values;\n  }\n\n  toString(): string {\n    return this._strings.reduce((result, str, i) => {\n      return result + escapeHtml(nn(this._values[i - 1])) + str;\n    });\n  }\n}\n\n/**\n * Build an HTML string from a template literal where the values are escaped.\n * Nested calls are supported and won't be escaped.\n */\nfunction html(\n  strings: TemplateStringsArray,\n  ...values: (string | string[] | HtmlSafeString | HtmlSafeString[])[]\n) {\n  return new HtmlSafeString(strings, values) as unknown as string;\n}\n\nconst markdownEscapables = {\n  _: \"\\\\_\",\n  \"*\": \"\\\\*\",\n  \"#\": \"\\\\#\",\n  \"`\": \"\\\\`\",\n  \"~\": \"\\\\~\",\n  \"!\": \"\\\\!\",\n  \"|\": \"\\\\|\",\n  \"(\": \"\\\\(\",\n  \")\": \"\\\\)\",\n  \"{\": \"\\\\{\",\n  \"}\": \"\\\\}\",\n  \"[\": \"\\\\[\",\n  \"]\": \"\\\\]\",\n};\n\nconst markdownEscapablesRegex = new RegExp(\n  Object.keys(markdownEscapables)\n    .map((entity) => `\\\\${entity}`)\n    .join(\"|\"),\n  \"g\"\n);\n\nfunction joinMarkdown(strings: (string | MarkdownSafeString)[]) {\n  if (strings.length <= 0) {\n    return new MarkdownSafeString([\"\"], []);\n  }\n\n  return new MarkdownSafeString(\n    [\"\", ...(Array(strings.length - 1).fill(\"\") as string[]), \"\"],\n    strings\n  );\n}\n\nfunction escapeMarkdown(\n  value: string | string[] | MarkdownSafeString | MarkdownSafeString[]\n) {\n  if (value instanceof MarkdownSafeString) {\n    return value.toString();\n  }\n\n  if (Array.isArray(value)) {\n    return joinMarkdown(value).toString();\n  }\n\n  return String(value).replace(\n    markdownEscapablesRegex,\n    (character) =>\n      markdownEscapables[character as keyof typeof markdownEscapables]\n  );\n}\n\n// Adapted from https://github.com/Janpot/escape-html-template-tag\nexport class MarkdownSafeString {\n  private _strings: readonly string[];\n  private _values: readonly (\n    | string\n    | string[]\n    | MarkdownSafeString\n    | MarkdownSafeString[]\n  )[];\n\n  constructor(\n    strings: readonly string[],\n    values: readonly (\n      | string\n      | string[]\n      | MarkdownSafeString\n      | MarkdownSafeString[]\n    )[]\n  ) {\n    this._strings = strings;\n    this._values = values;\n  }\n\n  toString(): string {\n    return this._strings.reduce((result, str, i) => {\n      return result + escapeMarkdown(nn(this._values[i - 1])) + str;\n    });\n  }\n}\n\n/**\n * Build a Markdown string from a template literal where the values are escaped.\n * Nested calls are supported and won't be escaped.\n */\nfunction markdown(\n  strings: TemplateStringsArray,\n  ...values: (string | string[] | MarkdownSafeString | MarkdownSafeString[])[]\n) {\n  return new MarkdownSafeString(strings, values) as unknown as string;\n}\n\n/**\n * Helper function to convert a URL (relative or absolute) to an absolute URL.\n *\n * @param url The URL to convert to an absolute URL (relative or absolute).\n * @returns The absolute URL or undefined if the URL is invalid.\n */\nfunction toAbsoluteUrl(url: string): string | undefined {\n  // Check if the URL already contains a scheme\n  if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n    return url;\n  } else if (url.startsWith(\"www.\")) {\n    // If the URL starts with \"www.\", prepend \"https://\"\n    return \"https://\" + url;\n  }\n\n  return;\n}\n\nconst stringifyCommentBodyPlainElements: StringifyCommentBodyElements = {\n  paragraph: ({ children }) => children,\n  text: ({ element }) => element.text,\n  link: ({ element }) => element.url,\n  mention: ({ element, user }) => {\n    return `@${user?.name ?? element.id}`;\n  },\n};\n\nconst stringifyCommentBodyHtmlElements: StringifyCommentBodyElements = {\n  paragraph: ({ children }) => {\n    // prettier-ignore\n    return children ? html`<p>${htmlSafe(children)}</p>` : children;\n  },\n  text: ({ element }) => {\n    // <code><s><em><strong>text</strong></s></em></code>\n    let children = element.text;\n\n    if (!children) {\n      return children;\n    }\n\n    if (element.bold) {\n      // prettier-ignore\n      children = html`<strong>${children}</strong>`;\n    }\n\n    if (element.italic) {\n      // prettier-ignore\n      children = html`<em>${children}</em>`;\n    }\n\n    if (element.strikethrough) {\n      // prettier-ignore\n      children = html`<s>${children}</s>`;\n    }\n\n    if (element.code) {\n      // prettier-ignore\n      children = html`<code>${children}</code>`;\n    }\n\n    return children;\n  },\n  link: ({ element, href }) => {\n    // prettier-ignore\n    return html`<a href=\"${href}\" target=\"_blank\" rel=\"noopener noreferrer\">${element.url}</a>`;\n  },\n  mention: ({ element, user }) => {\n    // prettier-ignore\n    return html`<span data-mention>@${user?.name ?? element.id}</span>`;\n  },\n};\n\nconst stringifyCommentBodyMarkdownElements: StringifyCommentBodyElements = {\n  paragraph: ({ children }) => {\n    return children;\n  },\n  text: ({ element }) => {\n    // <code><s><em><strong>text</strong></s></em></code>\n    let children = element.text;\n\n    if (!children) {\n      return children;\n    }\n\n    if (element.bold) {\n      // prettier-ignore\n      children = markdown`**${children}**`;\n    }\n\n    if (element.italic) {\n      // prettier-ignore\n      children = markdown`_${children}_`;\n    }\n\n    if (element.strikethrough) {\n      // prettier-ignore\n      children = markdown`~~${children}~~`;\n    }\n\n    if (element.code) {\n      // prettier-ignore\n      children = markdown`\\`${children}\\``;\n    }\n\n    return children;\n  },\n  link: ({ element, href }) => {\n    // prettier-ignore\n    return markdown`[${element.url}](${href})`;\n  },\n  mention: ({ element, user }) => {\n    // prettier-ignore\n    return markdown`@${user?.name ?? element.id}`;\n  },\n};\n\n/**\n * Convert a `CommentBody` into either a plain string,\n * Markdown, HTML, or a custom format.\n */\nexport async function stringifyCommentBody<\n  TUserMeta extends BaseUserMeta = BaseUserMeta,\n>(\n  body: CommentBody,\n  options?: StringifyCommentBodyOptions<TUserMeta>\n): Promise<string> {\n  const format = options?.format ?? \"plain\";\n  const separator =\n    options?.separator ?? (format === \"markdown\" ? \"\\n\\n\" : \"\\n\");\n  const elements = {\n    ...(format === \"html\"\n      ? stringifyCommentBodyHtmlElements\n      : format === \"markdown\"\n        ? stringifyCommentBodyMarkdownElements\n        : stringifyCommentBodyPlainElements),\n    ...options?.elements,\n  };\n  const resolvedUsers = await resolveUsersInCommentBody(\n    body,\n    options?.resolveUsers\n  );\n\n  const blocks = body.content.flatMap((block, blockIndex) => {\n    switch (block.type) {\n      case \"paragraph\": {\n        const inlines = block.children.flatMap((inline, inlineIndex) => {\n          if (isCommentBodyMention(inline)) {\n            return inline.id\n              ? [\n                  elements.mention(\n                    {\n                      element: inline,\n                      user: resolvedUsers.get(inline.id),\n                    },\n                    inlineIndex\n                  ),\n                ]\n              : [];\n          }\n\n          if (isCommentBodyLink(inline)) {\n            return [\n              elements.link(\n                {\n                  element: inline,\n                  href: toAbsoluteUrl(inline.url) ?? inline.url,\n                },\n                inlineIndex\n              ),\n            ];\n          }\n\n          if (isCommentBodyText(inline)) {\n            return [elements.text({ element: inline }, inlineIndex)];\n          }\n\n          return [];\n        });\n\n        return [\n          elements.paragraph(\n            { element: block, children: inlines.join(\"\") },\n            blockIndex\n          ),\n        ];\n      }\n\n      default:\n        return [];\n    }\n  });\n\n  return blocks.join(separator);\n}\n", "import type { Json } from \"../lib/Json\";\nimport type { PlainLson } from \"../types/PlainLson\";\nimport { LiveList } from \"./LiveList\";\nimport { LiveMap } from \"./LiveMap\";\nimport { LiveObject } from \"./LiveObject\";\nimport type { Lson, LsonObject } from \"./Lson\";\n\n/**\n * Helper type to convert any valid Lson type to the equivalent Json type.\n *\n * Examples:\n *\n *   ToImmutable<42>                         // 42\n *   ToImmutable<'hi'>                       // 'hi'\n *   ToImmutable<number>                     // number\n *   ToImmutable<string>                     // string\n *   ToImmutable<string | LiveList<number>>  // string | readonly number[]\n *   ToImmutable<LiveMap<string, LiveList<number>>>\n *                                           // ReadonlyMap<string, readonly number[]>\n *   ToImmutable<LiveObject<{ a: number, b: LiveList<string>, c?: number }>>\n *                                           // { readonly a: null, readonly b: readonly string[], readonly c?: number }\n *\n */\n// prettier-ignore\nexport type ToImmutable<L extends Lson | LsonObject> =\n  // A LiveList serializes to an equivalent JSON array\n  L extends LiveList<infer I> ? readonly ToImmutable<I>[] :\n\n  // A LiveObject serializes to an equivalent JSON object\n  L extends LiveObject<infer O> ? ToImmutable<O> :\n\n  // A LiveMap serializes to a JSON object with string-V pairs\n  L extends LiveMap<infer K, infer V> ? ReadonlyMap<K, ToImmutable<V>> :\n\n  // Any LsonObject recursively becomes a JsonObject\n  L extends LsonObject ?\n    { readonly [K in keyof L]: ToImmutable<Exclude<L[K], undefined>>\n                                 | (undefined extends L[K] ? undefined : never) } :\n\n  // Any Json value already is a legal Json value\n  L extends Json ? L :\n\n  // Otherwise, this is not possible\n  never;\n\n/**\n * Returns PlainLson for a given Json or LiveStructure, suitable for calling the storage init api\n */\nexport function toPlainLson(lson: Lson): PlainLson {\n  if (lson instanceof LiveObject) {\n    return {\n      liveblocksType: \"LiveObject\",\n      data: Object.fromEntries(\n        Object.entries(lson.toObject()).flatMap(([key, value]) =>\n          value !== undefined ? [[key, toPlainLson(value)]] : []\n        )\n      ),\n    };\n  } else if (lson instanceof LiveMap) {\n    return {\n      liveblocksType: \"LiveMap\",\n      data: Object.fromEntries(\n        [...lson].map(([key, value]) => [key, toPlainLson(value)])\n      ),\n    };\n  } else if (lson instanceof LiveList) {\n    return {\n      liveblocksType: \"LiveList\",\n      data: [...lson].map((item) => toPlainLson(item)),\n    };\n  } else {\n    return lson;\n  }\n}\n", "import {\n  findNonSerializableValue,\n  isLiveList,\n  isLiveObject,\n} from \"./crdts/liveblocks-helpers\";\nimport { LiveList } from \"./crdts/LiveList\";\nimport { LiveMap } from \"./crdts/LiveMap\";\nimport { LiveObject } from \"./crdts/LiveObject\";\nimport { LiveRegister } from \"./crdts/LiveRegister\";\nimport type { LiveNode, Lson, LsonObject, ToJson } from \"./crdts/Lson\";\nimport type { StorageUpdate } from \"./crdts/StorageUpdates\";\nimport * as console from \"./lib/fancy-console\";\nimport type { Json, JsonObject } from \"./lib/Json\";\nimport { isJsonObject } from \"./lib/Json\";\nimport { isPlainObject } from \"./lib/utils\";\n\nfunction lsonObjectToJson<O extends LsonObject>(\n  obj: O\n): { [K in keyof O]: Json } {\n  const result = {} as { [K in keyof O]: Json };\n  for (const key in obj) {\n    const val = obj[key];\n    if (val !== undefined) {\n      result[key] = lsonToJson(val);\n    }\n  }\n  return result;\n}\n\nexport function liveObjectToJson<O extends LsonObject>(\n  liveObject: LiveObject<O>\n): { [K in keyof O]: Json } {\n  return lsonObjectToJson(liveObject.toObject());\n}\n\nfunction liveMapToJson<TKey extends string>(\n  map: LiveMap<TKey, Lson>\n): { [K in TKey]: Json } {\n  const result = {} as { [K in TKey]: Json };\n  for (const [key, value] of map.entries()) {\n    result[key] = lsonToJson(value);\n  }\n  return result;\n}\n\nfunction lsonListToJson(value: Lson[]): Json[] {\n  return value.map(lsonToJson);\n}\n\nfunction liveListToJson(value: LiveList<Lson>): Json[] {\n  return lsonListToJson(value.toArray());\n}\n\nexport function lsonToJson(value: Lson): Json {\n  // Check for LiveStructure datastructures first\n  if (value instanceof LiveObject) {\n    return liveObjectToJson(value);\n  } else if (value instanceof LiveList) {\n    return liveListToJson(value);\n  } else if (value instanceof LiveMap) {\n    return liveMapToJson(value);\n  } else if (value instanceof LiveRegister) {\n    // NOTE: This branch should never be taken, because LiveRegister isn't a valid Lson value\n    return value.data as Json;\n  }\n\n  // Then for composite Lson values\n  if (Array.isArray(value)) {\n    return lsonListToJson(value);\n  } else if (isPlainObject(value)) {\n    return lsonObjectToJson(value);\n  }\n\n  // Finally, if value is an LsonScalar, then it's also a valid JsonScalar\n  return value;\n}\n\n/**\n * Deeply converts all nested lists to LiveLists, and all nested objects to\n * LiveObjects.\n *\n * As such, the returned result will not contain any Json arrays or Json\n * objects anymore.\n */\nfunction deepLiveify(value: Lson | LsonObject): Lson {\n  if (Array.isArray(value)) {\n    return new LiveList(value.map(deepLiveify));\n  } else if (isPlainObject(value)) {\n    const init: LsonObject = {};\n    for (const key in value) {\n      const val = value[key];\n      if (val === undefined) {\n        continue;\n      }\n      init[key] = deepLiveify(val);\n    }\n    return new LiveObject(init);\n  } else {\n    return value;\n  }\n}\n\nexport function patchLiveList<T extends Lson>(\n  liveList: LiveList<T>,\n  prev: Array<T>,\n  next: Array<T>\n): void {\n  let i = 0;\n  let prevEnd = prev.length - 1;\n  let nextEnd = next.length - 1;\n\n  let prevNode = prev[0];\n  let nextNode = next[0];\n\n  /**\n   * For A,B,C => A,B,C,D\n   * i = 3, prevEnd = 2, nextEnd = 3\n   *\n   * For A,B,C => B,C\n   * i = 2, prevEnd = 2, nextEnd = 1\n   *\n   * For B,C => A,B,C\n   * i = 0, pre\n   */\n\n  outer: {\n    while (prevNode === nextNode) {\n      ++i;\n      if (i > prevEnd || i > nextEnd) {\n        break outer;\n      }\n      prevNode = prev[i];\n      nextNode = next[i];\n    }\n\n    prevNode = prev[prevEnd];\n    nextNode = next[nextEnd];\n\n    while (prevNode === nextNode) {\n      prevEnd--;\n      nextEnd--;\n\n      if (i > prevEnd || i > nextEnd) {\n        break outer;\n      }\n\n      prevNode = prev[prevEnd];\n      nextNode = next[nextEnd];\n    }\n  }\n\n  if (i > prevEnd) {\n    if (i <= nextEnd) {\n      while (i <= nextEnd) {\n        liveList.insert(deepLiveify(next[i]) as T, i);\n        //                                   ^^^^ FIXME Not entirely true\n        i++;\n      }\n    }\n  } else if (i > nextEnd) {\n    let localI = i;\n    while (localI <= prevEnd) {\n      liveList.delete(i);\n      localI++;\n    }\n  } else {\n    while (i <= prevEnd && i <= nextEnd) {\n      prevNode = prev[i];\n      nextNode = next[i];\n      const liveListNode = liveList.get(i);\n\n      if (\n        isLiveObject(liveListNode) &&\n        isPlainObject(prevNode) &&\n        isPlainObject(nextNode)\n      ) {\n        patchLiveObject(liveListNode, prevNode, nextNode);\n      } else {\n        liveList.set(i, deepLiveify(nextNode) as T);\n        //                                    ^^^^ FIXME Not entirely true\n      }\n\n      i++;\n    }\n    while (i <= nextEnd) {\n      liveList.insert(deepLiveify(next[i]) as T, i);\n      //                                   ^^^^ FIXME Not entirely true\n      i++;\n    }\n    let localI = i;\n    while (localI <= prevEnd) {\n      liveList.delete(i);\n      localI++;\n    }\n  }\n}\n\nexport function patchLiveObjectKey<\n  O extends LsonObject,\n  K extends keyof O,\n  V extends Json,\n>(liveObject: LiveObject<O>, key: K, prev?: V, next?: V): void {\n  if (process.env.NODE_ENV !== \"production\") {\n    const nonSerializableValue = findNonSerializableValue(next);\n    if (nonSerializableValue) {\n      console.error(\n        `New state path: '${nonSerializableValue.path}' value: '${String(\n          nonSerializableValue.value\n        )}' is not serializable.\\nOnly serializable value can be synced with Liveblocks.`\n      );\n      return;\n    }\n  }\n\n  const value = liveObject.get(key);\n\n  if (next === undefined) {\n    liveObject.delete(key);\n  } else if (value === undefined) {\n    liveObject.set(key, deepLiveify(next) as O[K]);\n    //                                    ^^^^^^^ FIXME Not entirely true\n  } else if (prev === next) {\n    return;\n  } else if (isLiveList(value) && Array.isArray(prev) && Array.isArray(next)) {\n    patchLiveList(value, prev, next);\n  } else if (\n    isLiveObject(value) &&\n    isPlainObject(prev) &&\n    isPlainObject(next)\n  ) {\n    patchLiveObject(value, prev, next);\n  } else {\n    liveObject.set(key, deepLiveify(next) as O[K]);\n    //                                    ^^^^^^^ FIXME Not entirely true\n  }\n}\n\nexport function patchLiveObject<O extends LsonObject>(\n  root: LiveObject<O>,\n  prev: ToJson<O>,\n  next: ToJson<O>\n): void {\n  const updates: Partial<O> = {};\n\n  for (const key in next) {\n    patchLiveObjectKey(root, key, prev[key], next[key]);\n  }\n\n  for (const key in prev) {\n    if (next[key] === undefined) {\n      root.delete(key);\n    }\n  }\n\n  if (Object.keys(updates).length > 0) {\n    root.update(updates);\n  }\n}\n\nfunction getParentsPath(node: LiveNode): Array<string | number> {\n  const path = [];\n  while (node.parent.type === \"HasParent\") {\n    if (isLiveList(node.parent.node)) {\n      path.push(node.parent.node._indexOfPosition(node.parent.key));\n    } else {\n      path.push(node.parent.key);\n    }\n    node = node.parent.node;\n  }\n  return path;\n}\n\n//\n// TODO: Remove `patchImmutableObject`!\n//\n// This helper is now only used internally, to support our Zustand and\n// Redux packages. We should be able to reimplement those using the new\n// `.toImmutable()` APIs.\n//\nexport function legacy_patchImmutableObject<S extends JsonObject>(\n  state: S,\n  updates: StorageUpdate[]\n): S {\n  return updates.reduce(\n    (state, update) => legacy_patchImmutableObjectWithUpdate(state, update),\n    state\n  );\n}\n\nfunction legacy_patchImmutableObjectWithUpdate<S extends JsonObject>(\n  state: S,\n  update: StorageUpdate\n): S {\n  const path = getParentsPath(update.node);\n  return legacy_patchImmutableNode(state, path, update);\n}\n\nfunction legacy_patchImmutableNode<S extends Json>(\n  state: S,\n  path: Array<string | number>,\n  update: StorageUpdate\n): S {\n  // FIXME: Split this function up into a few smaller ones! In each of them,\n  // the types can be define much more narrowly and correctly, and there will\n  // be less type shoehorning necessary.\n\n  const pathItem = path.pop();\n  if (pathItem === undefined) {\n    switch (update.type) {\n      case \"LiveObject\": {\n        if (!isJsonObject(state)) {\n          throw new Error(\n            \"Internal: received update on LiveObject but state was not an object\"\n          );\n        }\n\n        const newState: JsonObject = Object.assign({}, state);\n\n        for (const key in update.updates) {\n          if (update.updates[key]?.type === \"update\") {\n            const val = update.node.get(key);\n            if (val !== undefined) {\n              newState[key] = lsonToJson(val);\n            }\n          } else if (update.updates[key]?.type === \"delete\") {\n            delete newState[key];\n          }\n        }\n\n        return newState as S;\n        //              ^^^^\n        //              FIXME Not completely true, because we could have been\n        //              updating keys from StorageUpdate here that aren't in S,\n        //              technically.\n      }\n\n      case \"LiveList\": {\n        if (!Array.isArray(state)) {\n          throw new Error(\n            \"Internal: received update on LiveList but state was not an array\"\n          );\n        }\n\n        let newState: Json[] = state.map((x: Json) => x);\n\n        for (const listUpdate of update.updates) {\n          if (listUpdate.type === \"set\") {\n            newState = newState.map((item, index) =>\n              index === listUpdate.index ? lsonToJson(listUpdate.item) : item\n            );\n          } else if (listUpdate.type === \"insert\") {\n            if (listUpdate.index === newState.length) {\n              newState.push(lsonToJson(listUpdate.item));\n            } else {\n              newState = [\n                ...newState.slice(0, listUpdate.index),\n                lsonToJson(listUpdate.item),\n                ...newState.slice(listUpdate.index),\n              ];\n            }\n          } else if (listUpdate.type === \"delete\") {\n            newState.splice(listUpdate.index, 1);\n          } else if (listUpdate.type === \"move\") {\n            if (listUpdate.previousIndex > listUpdate.index) {\n              newState = [\n                ...newState.slice(0, listUpdate.index),\n                lsonToJson(listUpdate.item),\n                ...newState.slice(listUpdate.index, listUpdate.previousIndex),\n                ...newState.slice(listUpdate.previousIndex + 1),\n              ];\n            } else {\n              newState = [\n                ...newState.slice(0, listUpdate.previousIndex),\n                ...newState.slice(\n                  listUpdate.previousIndex + 1,\n                  listUpdate.index + 1\n                ),\n                lsonToJson(listUpdate.item),\n                ...newState.slice(listUpdate.index + 1),\n              ];\n            }\n          }\n        }\n\n        return newState as S;\n        //              ^^^^\n        //              FIXME Not completely true, because we could have been\n        //              updating keys from StorageUpdate here that aren't in S,\n        //              technically.\n      }\n\n      case \"LiveMap\": {\n        if (!isJsonObject(state)) {\n          throw new Error(\n            \"Internal: received update on LiveMap but state was not an object\"\n          );\n        }\n        const newState: JsonObject = Object.assign({}, state);\n\n        for (const key in update.updates) {\n          if (update.updates[key]?.type === \"update\") {\n            const value = update.node.get(key);\n            if (value !== undefined) {\n              newState[key] = lsonToJson(value);\n            }\n          } else if (update.updates[key]?.type === \"delete\") {\n            delete newState[key];\n          }\n        }\n\n        return newState as S;\n        //              ^^^^\n        //              FIXME Not completely true, because we could have been\n        //              updating keys from StorageUpdate here that aren't in S,\n        //              technically.\n      }\n    }\n  }\n\n  if (Array.isArray(state)) {\n    const newArray: Json[] = [...state];\n    newArray[pathItem as number] = legacy_patchImmutableNode(\n      state[pathItem as number],\n      path,\n      update\n    );\n    return newArray as S;\n    //              ^^^^\n    //              FIXME Not completely true, because we could have been\n    //              updating indexes from StorageUpdate here that aren't in S,\n    //              technically.\n  } else if (isJsonObject(state)) {\n    const node = state[pathItem];\n    if (node === undefined) {\n      return state;\n    } else {\n      const stateAsObj: JsonObject = state;\n      return {\n        ...stateAsObj,\n        [pathItem]: legacy_patchImmutableNode(node, path, update),\n      } as S;\n      //   ^\n      //   FIXME Not completely true, because we could have been updating\n      //   indexes from StorageUpdate here that aren't in S, technically.\n    }\n  } else {\n    return state;\n  }\n}\n", "type Poller = {\n  start(interval: number): void;\n  restart(interval: number): void;\n  pause(): void;\n  resume(): void;\n  stop(): void;\n};\n\ntype Context =\n  | {\n      state: \"stopped\";\n      timeoutHandle: null;\n      interval: null;\n      lastScheduledAt: null;\n      remainingInterval: null;\n    }\n  | {\n      state: \"running\";\n      timeoutHandle: ReturnType<typeof setTimeout>;\n      interval: number;\n      lastScheduledAt: number;\n      remainingInterval: null;\n    }\n  | {\n      state: \"paused\";\n      timeoutHandle: null;\n      interval: number;\n      lastScheduledAt: number;\n      remainingInterval: number;\n    };\n\nexport function makePoller(callback: () => Promise<void> | void): Poller {\n  let context: Context = {\n    state: \"stopped\",\n    timeoutHandle: null,\n    interval: null,\n    lastScheduledAt: null,\n    remainingInterval: null,\n  };\n\n  function poll() {\n    if (context.state === \"running\") {\n      schedule(context.interval);\n    }\n\n    void callback();\n  }\n\n  function schedule(interval: number) {\n    context = {\n      state: \"running\",\n      interval: context.state !== \"stopped\" ? context.interval : interval,\n      lastScheduledAt: performance.now(),\n      timeoutHandle: setTimeout(poll, interval),\n      remainingInterval: null,\n    };\n  }\n\n  function scheduleRemaining(remaining: number) {\n    if (context.state !== \"paused\") {\n      return;\n    }\n\n    context = {\n      state: \"running\",\n      interval: context.interval,\n      lastScheduledAt: context.lastScheduledAt,\n      timeoutHandle: setTimeout(poll, remaining),\n      remainingInterval: null,\n    };\n  }\n\n  function start(interval: number) {\n    if (context.state === \"running\") {\n      return;\n    }\n\n    schedule(interval);\n  }\n\n  function restart(interval: number) {\n    stop();\n    start(interval);\n  }\n\n  function pause() {\n    if (context.state !== \"running\") {\n      return;\n    }\n\n    clearTimeout(context.timeoutHandle);\n\n    context = {\n      state: \"paused\",\n      interval: context.interval,\n      lastScheduledAt: context.lastScheduledAt,\n      timeoutHandle: null,\n      remainingInterval:\n        context.interval - (performance.now() - context.lastScheduledAt),\n    };\n  }\n\n  function resume() {\n    if (context.state !== \"paused\") {\n      return;\n    }\n\n    scheduleRemaining(context.remainingInterval);\n  }\n\n  function stop() {\n    if (context.state === \"stopped\") {\n      return;\n    }\n\n    if (context.timeoutHandle) {\n      clearTimeout(context.timeoutHandle);\n    }\n\n    context = {\n      state: \"stopped\",\n      interval: null,\n      lastScheduledAt: null,\n      timeoutHandle: null,\n      remainingInterval: null,\n    };\n  }\n\n  return {\n    start,\n    restart,\n    pause,\n    resume,\n    stop,\n  };\n}\n", "function shallowArray(xs: unknown[], ys: unknown[]): boolean {\n  if (xs.length !== ys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < xs.length; i++) {\n    if (!Object.is(xs[i], ys[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowObj<T, U>(objA: T, objB: U): boolean {\n  // Only try to compare keys/values if these objects are both \"pojos\" (plain\n  // old JavaScript objects)\n  if (\n    typeof objA !== \"object\" ||\n    objA === null ||\n    typeof objB !== \"object\" ||\n    objB === null ||\n    Object.prototype.toString.call(objA) !== \"[object Object]\" ||\n    Object.prototype.toString.call(objB) !== \"[object Object]\"\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n\n  return keysA.every(\n    (key) =>\n      Object.prototype.hasOwnProperty.call(objB, key) &&\n      Object.is(objA[key as keyof T], objB[key as keyof U])\n  );\n}\n\n/**\n * Shallowly compares two given values.\n *\n * - Two simple values are considered equal if they're strictly equal\n * - Two arrays are considered equal if their members are strictly equal\n * - Two objects are considered equal if their values are strictly equal\n *\n * Testing goes one level deep.\n */\nexport function shallow(a: unknown, b: unknown): boolean {\n  if (Object.is(a, b)) {\n    return true;\n  }\n\n  const isArrayA = Array.isArray(a);\n  const isArrayB = Array.isArray(b);\n  if (isArrayA || isArrayB) {\n    if (!isArrayA || !isArrayB) {\n      return false;\n    }\n\n    return shallowArray(a, b);\n  }\n\n  return shallowObj(a, b);\n}\n", "import { detectDupes } from \"./dupe-detection\";\nimport { PKG_FORMAT, PKG_NAME, PKG_VERSION } from \"./version\";\n\ndetectDupes(PKG_NAME, PKG_VERSION, PKG_FORMAT);\n\n/**\n * PRIVATE / INTERNAL APIS\n * -----------------------\n *\n * This module is intended for internal use only, PLEASE DO NOT RELY ON ANY OF\n * THE EXPORTS IN HERE. These are implementation details that can change at any\n * time and without announcement. This module purely exists to share code\n * between the several Liveblocks packages.\n *\n * But since you're so deep inside Liveblocks code... we're hiring!\n * https://join.team/liveblocks ;)\n */\n\nexport type {\n  Client,\n  ClientOptions,\n  EnterOptions,\n  ResolveMentionSuggestionsArgs,\n  ResolveRoomsInfoArgs,\n  ResolveUsersArgs,\n} from \"./client\";\nexport { createClient, NotificationsApiError } from \"./client\";\nexport type {\n  CommentBodyLinkElementArgs,\n  CommentBodyMentionElementArgs,\n  CommentBodyParagraphElementArgs,\n  CommentBodyTextElementArgs,\n  StringifyCommentBodyElements,\n  StringifyCommentBodyOptions,\n} from \"./comments/comment-body\";\nexport {\n  getMentionedIdsFromCommentBody,\n  stringifyCommentBody,\n} from \"./comments/comment-body\";\nexport type { BaseAuthResult, Delegates, LiveblocksError } from \"./connection\";\nexport type {\n  LegacyConnectionStatus,\n  LostConnectionEvent,\n  Status,\n} from \"./connection\";\nexport {\n  convertToCommentData,\n  convertToCommentUserReaction,\n  convertToThreadData,\n} from \"./convert-plain-data\";\nexport { cloneLson, isLiveNode } from \"./crdts/liveblocks-helpers\";\nexport { LiveList } from \"./crdts/LiveList\";\nexport { LiveMap } from \"./crdts/LiveMap\";\nexport { LiveObject } from \"./crdts/LiveObject\";\nexport type {\n  LiveNode,\n  LiveStructure,\n  Lson,\n  LsonObject,\n  ToJson,\n} from \"./crdts/Lson\";\nexport type {\n  LiveListUpdate,\n  LiveMapUpdate,\n  LiveObjectUpdate,\n  StorageUpdate,\n} from \"./crdts/StorageUpdates\";\nexport type { ToImmutable } from \"./crdts/utils\";\nexport { toPlainLson } from \"./crdts/utils\";\nexport {\n  legacy_patchImmutableObject,\n  lsonToJson,\n  patchLiveObjectKey,\n} from \"./immutable\";\nexport { kInternal } from \"./internal\";\nexport { assert, assertNever, nn } from \"./lib/assert\";\nexport {\n  deprecate,\n  deprecateIf,\n  errorIf,\n  throwUsageError,\n} from \"./lib/deprecation\";\nexport type { EventSource, UnsubscribeCallback } from \"./lib/EventSource\";\nexport { makeEventSource } from \"./lib/EventSource\";\nexport * as console from \"./lib/fancy-console\";\nexport { freeze } from \"./lib/freeze\";\nexport type { Json, JsonArray, JsonObject, JsonScalar } from \"./lib/Json\";\nexport { isJsonArray, isJsonObject, isJsonScalar } from \"./lib/Json\";\nexport { makePoller } from \"./lib/Poller\";\nexport { asPos, makePosition } from \"./lib/position\";\nexport type { Resolve } from \"./lib/Resolve\";\nexport { shallow } from \"./lib/shallow\";\nexport { stringify } from \"./lib/stringify\";\nexport type { Brand } from \"./lib/utils\";\nexport {\n  b64decode,\n  isPlainObject,\n  raise,\n  tryParseJson,\n  withTimeout,\n} from \"./lib/utils\";\nexport type { CustomAuthenticationResult } from \"./protocol/Authentication\";\nexport type { BaseUserMeta, IUserInfo } from \"./protocol/BaseUserMeta\";\nexport type {\n  BroadcastEventClientMsg,\n  ClientMsg,\n  FetchStorageClientMsg,\n  FetchYDocClientMsg,\n  UpdatePresenceClientMsg,\n  UpdateStorageClientMsg,\n  UpdateYDocClientMsg,\n} from \"./protocol/ClientMsg\";\nexport { ClientMsgCode } from \"./protocol/ClientMsg\";\nexport type {\n  AckOp,\n  CreateListOp,\n  CreateMapOp,\n  CreateObjectOp,\n  CreateOp,\n  CreateRegisterOp,\n  DeleteCrdtOp,\n  DeleteObjectKeyOp,\n  Op,\n  SetParentKeyOp,\n  UpdateObjectOp,\n} from \"./protocol/Op\";\nexport { ackOp, OpCode } from \"./protocol/Op\";\nexport type {\n  IdTuple,\n  SerializedChild,\n  SerializedCrdt,\n  SerializedList,\n  SerializedMap,\n  SerializedObject,\n  SerializedRegister,\n  SerializedRootObject,\n} from \"./protocol/SerializedCrdt\";\nexport { CrdtType } from \"./protocol/SerializedCrdt\";\nexport { isChildCrdt, isRootCrdt } from \"./protocol/SerializedCrdt\";\nexport type {\n  BroadcastedEventServerMsg,\n  CommentsEventServerMsg,\n  InitialDocumentStateServerMsg,\n  RejectedStorageOpServerMsg,\n  RoomStateServerMsg,\n  ServerMsg,\n  UpdatePresenceServerMsg,\n  UpdateStorageServerMsg,\n  UserJoinServerMsg,\n  UserLeftServerMsg,\n  YDocUpdateServerMsg,\n} from \"./protocol/ServerMsg\";\nexport { ServerMsgCode } from \"./protocol/ServerMsg\";\nexport type {\n  BroadcastOptions,\n  History,\n  Room,\n  RoomEventMessage,\n  RoomInitializers,\n  StorageStatus,\n} from \"./room\";\nexport type { GetThreadsOptions } from \"./room\";\nexport { CommentsApiError } from \"./room\";\nexport type { BaseMetadata } from \"./types/BaseMetadata\";\nexport type {\n  CommentBody,\n  CommentBodyBlockElement,\n  CommentBodyElement,\n  CommentBodyInlineElement,\n  CommentBodyLink,\n  CommentBodyMention,\n  CommentBodyParagraph,\n  CommentBodyText,\n} from \"./types/CommentBody\";\nexport type {\n  CommentData,\n  CommentDataPlain,\n  CommentReaction,\n} from \"./types/CommentData\";\nexport type {\n  CommentUserReaction,\n  CommentUserReactionPlain,\n} from \"./types/CommentReaction\";\nexport type { Immutable } from \"./types/Immutable\";\nexport type {\n  InboxNotificationData,\n  InboxNotificationDataPlain,\n  InboxNotificationThreadData,\n} from \"./types/InboxNotificationData\";\nexport type { InboxNotificationDeleteInfo } from \"./types/InboxNotificationDeleteInfo\";\nexport type {\n  IWebSocket,\n  IWebSocketCloseEvent,\n  IWebSocketEvent,\n  IWebSocketInstance,\n  IWebSocketMessageEvent,\n} from \"./types/IWebSocket\";\nexport { WebsocketCloseCodes } from \"./types/IWebSocket\";\nexport type { NodeMap, ParentToChildNodeMap } from \"./types/NodeMap\";\nexport type { OptionalPromise } from \"./types/OptionalPromise\";\nexport type { Others, OthersEvent } from \"./types/Others\";\nexport type { PartialNullable } from \"./types/PartialNullable\";\nexport type {\n  PlainLson,\n  PlainLsonFields,\n  PlainLsonList,\n  PlainLsonMap,\n  PlainLsonObject,\n} from \"./types/PlainLson\";\nexport type { RoomInfo } from \"./types/RoomInfo\";\nexport type { RoomNotificationSettings } from \"./types/RoomNotificationSettings\";\nexport type { ThreadData, ThreadDataPlain } from \"./types/ThreadData\";\nexport type { ThreadDeleteInfo } from \"./types/ThreadDeleteInfo\";\nexport type { User } from \"./types/User\";\nexport { detectDupes };\n\n/**\n * Helper type to help users adopt to Lson types from interface definitions.\n * You should only use this to wrap interfaces you don't control. For more\n * information, see\n * https://liveblocks.io/docs/guides/limits#lson-constraint-and-interfaces\n */\n// prettier-ignore\nexport type EnsureJson<T> =\n  // Retain `unknown` fields\n  [unknown] extends [T] ? T :\n  // Retain functions\n  T extends (...args: unknown[]) => unknown ? T :\n  // Resolve all other values explicitly\n  { [K in keyof T]: EnsureJson<T[K]> };\n\n// Support for DevTools\nimport type * as DevToolsMsg from \"./devtools/protocol\";\nexport type { DevToolsMsg };\nimport type * as DevTools from \"./types/DevToolsTreeNode\";\nexport type { DevTools };\n\n// Store\nexport type { Store } from \"./lib/create-store\";\nexport {\n  addReaction,\n  applyOptimisticUpdates,\n  type CacheState,\n  type CacheStore,\n  deleteComment,\n  removeReaction,\n  upsertComment,\n} from \"./store\";\n", "import { detectDupes } from \"@liveblocks/core\";\n\nimport { PKG_FORMAT, PKG_NAME, PKG_VERSION } from \"./version\";\n\ndetectDupes(PKG_NAME, PKG_VERSION, PKG_FORMAT);\n\nexport type {\n  BaseMetadata,\n  BaseUserMeta,\n  BroadcastOptions,\n  Client,\n  ClientOptions,\n  CommentBody,\n  CommentBodyBlockElement,\n  CommentBodyElement,\n  CommentBodyInlineElement,\n  CommentBodyLink,\n  CommentBodyLinkElementArgs,\n  CommentBodyMention,\n  CommentBodyMentionElementArgs,\n  CommentBodyParagraph,\n  CommentBodyParagraphElementArgs,\n  CommentBodyText,\n  CommentBodyTextElementArgs,\n  CommentData,\n  History,\n  Immutable,\n  InboxNotificationData,\n  IUserInfo,\n  Json,\n  JsonArray,\n  JsonObject,\n  JsonScalar,\n  LiveListUpdate,\n  LiveMapUpdate,\n  LiveObjectUpdate,\n  LiveStructure,\n  LostConnectionEvent,\n  Lson,\n  LsonObject,\n  Others,\n  OthersEvent,\n  PlainLsonObject,\n  ResolveMentionSuggestionsArgs,\n  ResolveRoomsInfoArgs,\n  ResolveUsersArgs,\n  Room,\n  RoomNotificationSettings,\n  Status,\n  StorageStatus,\n  StorageUpdate,\n  StringifyCommentBodyElements,\n  StringifyCommentBodyOptions,\n  ThreadData,\n  User,\n} from \"@liveblocks/core\";\nexport {\n  createClient,\n  getMentionedIdsFromCommentBody,\n  LiveList,\n  LiveMap,\n  LiveObject,\n  shallow,\n  stringifyCommentBody,\n  toPlainLson,\n} from \"@liveblocks/core\";\n\n/**\n * Helper type to help users adopt to Lson types from interface definitions.\n * You should only use this to wrap interfaces you don't control. For more\n * information, see\n * https://liveblocks.io/docs/guides/limits#lson-constraint-and-interfaces\n */\n// prettier-ignore\nexport type EnsureJson<T> =\n  // Retain `unknown` fields\n  [unknown] extends [T] ? T :\n  // Retain functions\n  T extends (...args: unknown[]) => unknown ? T :\n  // Resolve all other values explicitly\n  { [K in keyof T]: EnsureJson<T[K]> };\n", "declare const __VERSION__: string;\ndeclare const TSUP_FORMAT: string;\n\nexport const PKG_NAME = \"@liveblocks/client\";\nexport const PKG_VERSION = typeof __VERSION__ === \"string\" && __VERSION__;\nexport const PKG_FORMAT = typeof TSUP_FORMAT === \"string\" && TSUP_FORMAT;\n", "/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.7';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = typeof btoa === 'function' ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 \u00A75\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 \u00A75.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = typeof atob === 'function' ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n", "import type {\n  BaseUserMeta,\n  Json,\n  JsonObject,\n  LsonObject,\n  Room,\n} from \"@liveblocks/client\";\nimport { ClientMsgCode, detectDupes } from \"@liveblocks/core\";\nimport { Observable } from \"lib0/observable\";\nimport type * as Y from \"yjs\";\n\nimport { Awareness } from \"./awareness\";\nimport yDocHandler from \"./doc\";\nimport { PKG_FORMAT, PKG_NAME, PKG_VERSION } from \"./version\";\n\ndetectDupes(PKG_NAME, PKG_VERSION, PKG_FORMAT);\n\ntype ProviderOptions = {\n  autoloadSubdocs: boolean;\n};\n\nconst DefaultOptions: ProviderOptions = {\n  autoloadSubdocs: false,\n};\n\nexport default class LiveblocksProvider<\n  P extends JsonObject,\n  S extends LsonObject,\n  U extends BaseUserMeta,\n  E extends Json,\n> extends Observable<unknown> {\n  private room: Room<P, S, U, E>;\n  private rootDoc: Y.Doc;\n  private options: ProviderOptions;\n\n  private unsubscribers: Array<() => void> = [];\n\n  public awareness: Awareness;\n\n  public rootDocHandler: yDocHandler;\n  public subdocHandlers: Map<string, yDocHandler> = new Map();\n\n  constructor(\n    room: Room<P, S, U, E>,\n    doc: Y.Doc,\n    options: ProviderOptions | undefined = DefaultOptions\n  ) {\n    super();\n    this.rootDoc = doc;\n    this.room = room;\n    this.options = options;\n    this.rootDocHandler = new yDocHandler({\n      doc,\n      isRoot: true,\n      updateDoc: this.updateDoc,\n      fetchDoc: this.fetchDoc,\n    });\n    // if we have a connectionId already during construction, use that\n    const connectionId = this.room.getSelf()?.connectionId;\n    if (connectionId) {\n      this.rootDoc.clientID = connectionId;\n    }\n    this.awareness = new Awareness(this.rootDoc, this.room);\n\n    this.unsubscribers.push(\n      this.room.events.status.subscribe((status) => {\n        if (status === \"connected\") {\n          this.rootDocHandler.syncDoc();\n        } else {\n          this.rootDocHandler.synced = false;\n        }\n      })\n    );\n\n    this.unsubscribers.push(\n      this.room.events.ydoc.subscribe((message) => {\n        const { type } = message;\n        if (type === ClientMsgCode.UPDATE_YDOC) {\n          // don't apply updates that came from the client\n          return;\n        }\n        const { stateVector, update, guid } = message;\n        // find the right doc and update\n        if (guid !== undefined) {\n          this.subdocHandlers\n            .get(guid)\n            ?.handleServerUpdate({ update, stateVector });\n        } else {\n          this.rootDocHandler.handleServerUpdate({ update, stateVector });\n        }\n      })\n    );\n\n    this.rootDocHandler.on(\"synced\", () => {\n      const state = this.rootDocHandler.synced;\n      for (const [_, handler] of this.subdocHandlers) {\n        handler.syncDoc();\n      }\n      this.emit(\"synced\", [state]);\n      this.emit(\"sync\", [state]);\n    });\n    this.rootDoc.on(\"subdocs\", this.handleSubdocs);\n    this.syncDoc();\n  }\n\n  private handleSubdocs = ({\n    loaded,\n    removed,\n    added,\n  }: {\n    loaded: Y.Doc[];\n    removed: Y.Doc[];\n    added: Y.Doc[];\n  }) => {\n    loaded.forEach(this.createSubdocHandler);\n    if (this.options.autoloadSubdocs) {\n      for (const subdoc of added) {\n        if (!this.subdocHandlers.has(subdoc.guid)) {\n          subdoc.load();\n        }\n      }\n    }\n    for (const subdoc of removed) {\n      if (this.subdocHandlers.has(subdoc.guid)) {\n        this.subdocHandlers.get(subdoc.guid)?.destroy();\n        this.subdocHandlers.delete(subdoc.guid);\n      }\n    }\n  };\n\n  private updateDoc = (update: string, guid?: string) => {\n    this.room.updateYDoc(update, guid);\n  };\n\n  private fetchDoc = (vector: string, guid?: string) => {\n    this.room.fetchYDoc(vector, guid);\n  };\n\n  private createSubdocHandler = (subdoc: Y.Doc): void => {\n    if (this.subdocHandlers.has(subdoc.guid)) {\n      // if we already handle this subdoc, just fetch it again\n      this.subdocHandlers.get(subdoc.guid)?.syncDoc();\n      return;\n    }\n    const handler = new yDocHandler({\n      doc: subdoc,\n      isRoot: false,\n      updateDoc: this.updateDoc,\n      fetchDoc: this.fetchDoc,\n    });\n    this.subdocHandlers.set(subdoc.guid, handler);\n  };\n\n  // attempt to load a subdoc of a given guid\n  public loadSubdoc = (guid: string): boolean => {\n    for (const subdoc of this.rootDoc.subdocs) {\n      if (subdoc.guid === guid) {\n        subdoc.load();\n        return true;\n      }\n    }\n    // should we throw instead?\n    return false;\n  };\n\n  private syncDoc = () => {\n    /**\n     * If the connection changes, set the new id, this is used by awareness.\n     * yjs' only requirement for clientID is that it's truly unique and a number.\n     * Liveblock's connectionID satisfies those constraints\n     *  */\n    this.rootDoc.clientID =\n      this.room.getSelf()?.connectionId || this.rootDoc.clientID;\n    this.awareness.clientID = this.rootDoc.clientID; // tell our awareness provider the new ID\n\n    this.rootDocHandler.syncDoc();\n    for (const [_, handler] of this.subdocHandlers) {\n      handler.syncDoc();\n    }\n  };\n\n  // The sync'd property is required by some provider implementations\n  get synced(): boolean {\n    return this.rootDocHandler.synced;\n  }\n\n  destroy(): void {\n    this.unsubscribers.forEach((unsub) => unsub());\n    this.awareness.destroy();\n    this.rootDocHandler.destroy();\n    this._observers = new Map();\n    for (const [_, handler] of this.subdocHandlers) {\n      handler.destroy();\n    }\n    this.subdocHandlers.clear();\n    super.destroy();\n  }\n\n  // Some provider implementations expect to be able to call connect/disconnect, implement as noop\n  disconnect(): void {\n    // This is a noop for liveblocks as connections are managed by the room\n  }\n\n  connect(): void {\n    // This is a noop for liveblocks as connections are managed by the room\n  }\n}\n", "/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template V,K\n * @template {Map<K,V>} MAP\n * @param {MAP} map\n * @param {K} key\n * @param {function():V} createT\n * @return {V}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n", "/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n", "/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n", "/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n", "// TODO: apparently Yjs is full of anys or something, see if we can fix this\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport type {\n  BaseUserMeta,\n  Json,\n  JsonObject,\n  LsonObject,\n  Room,\n} from \"@liveblocks/client\";\nimport { Observable } from \"lib0/observable\";\nimport type * as Y from \"yjs\";\n\nconst Y_PRESENCE_KEY = \"__yjs\";\n\ntype MetaClientState = {\n  clock: number;\n  lastUpdated: number;\n};\n\n/**\n * This class will store Yjs awareness in Liveblock's presence under the __yjs key\n * IMPORTANT: The Yjs awareness protocol uses ydoc.clientId to reference users\n * to their respective documents. To avoid mapping Yjs clientIds to liveblock's connectionId,\n * we simply set the clientId of the doc to the connectionId. Then no further mapping is required\n */\nexport class Awareness extends Observable<unknown> {\n  private room: Room<JsonObject, LsonObject, BaseUserMeta, Json>;\n  public doc: Y.Doc;\n  public clientID: number;\n  public states: Map<number, unknown> = new Map();\n  // Meta is used to keep track and timeout users who disconnect. Liveblocks provides this for us, so we don't need to\n  // manage it here. Unfortunately, it's expected to exist by various integrations, so it's an empty map.\n  public meta: Map<number, MetaClientState> = new Map();\n  // _checkInterval this would hold a timer to remove users, but Liveblock's presence already handles this\n  // unfortunately it's typed by various integrations\n  public _checkInterval: number = 0;\n\n  private othersUnsub: () => void;\n  constructor(\n    doc: Y.Doc,\n    room: Room<JsonObject, LsonObject, BaseUserMeta, Json>\n  ) {\n    super();\n    this.doc = doc;\n    this.room = room;\n    this.clientID = doc.clientID;\n    this.othersUnsub = this.room.events.others.subscribe((event) => {\n      // When others are changed, we emit an event that contains arrays added/updated/removed.\n      if (event.type === \"leave\") {\n        // REMOVED\n        this.emit(\"change\", [\n          { added: [], updated: [], removed: [event.user.connectionId] },\n          \"presence\",\n        ]);\n        this.emit(\"update\", [\n          { added: [], updated: [], removed: [event.user.connectionId] },\n          \"presence\",\n        ]);\n      }\n\n      if (event.type === \"enter\") {\n        // ADDED\n        this.emit(\"change\", [\n          { added: [event.user.connectionId], updated: [], removed: [] },\n          \"presence\",\n        ]);\n        this.emit(\"update\", [\n          { added: [event.user.connectionId], updated: [], removed: [] },\n          \"presence\",\n        ]);\n      }\n\n      if (event.type === \"update\") {\n        // UPDATED\n        this.emit(\"change\", [\n          { added: [], updated: [event.user.connectionId], removed: [] },\n          \"presence\",\n        ]);\n        this.emit(\"update\", [\n          { added: [], updated: [event.user.connectionId], removed: [] },\n          \"presence\",\n        ]);\n      }\n    });\n  }\n\n  destroy(): void {\n    this.emit(\"destroy\", [this]);\n    this.othersUnsub();\n    this.setLocalState(null);\n    super.destroy();\n  }\n\n  getLocalState(): JsonObject | null {\n    const presence = this.room.getPresence();\n    if (\n      Object.keys(presence).length === 0 ||\n      typeof presence[Y_PRESENCE_KEY] === \"undefined\"\n    ) {\n      return null;\n    }\n    return presence[Y_PRESENCE_KEY] as JsonObject | null;\n  }\n\n  setLocalState(state: Partial<JsonObject> | null): void {\n    const presence = this.room.getSelf()?.presence;\n    if (state === null) {\n      if (presence === undefined) {\n        // if presence is already undefined, we don't need to change anything here\n        return;\n      }\n      this.room.updatePresence({ ...presence, [Y_PRESENCE_KEY]: null });\n      this.emit(\"update\", [\n        { added: [], updated: [], removed: [this.clientID] },\n        \"local\",\n      ]);\n      return;\n    }\n    // if presence was undefined, it's added, if not, it's updated\n    const yPresence = presence?.[Y_PRESENCE_KEY];\n    const added = yPresence === undefined ? [this.clientID] : [];\n    const updated = yPresence === undefined ? [] : [this.clientID];\n    this.room.updatePresence({\n      [Y_PRESENCE_KEY]: {\n        ...((yPresence as JsonObject) || {}),\n        ...(state || {}),\n      },\n    });\n    this.emit(\"update\", [{ added, updated, removed: [] }, \"local\"]);\n  }\n\n  setLocalStateField(field: string, value: JsonObject | null): void {\n    const presence = this.room.getSelf()?.presence[Y_PRESENCE_KEY];\n    const update = { [field]: value } as Partial<JsonObject>;\n    this.room.updatePresence({\n      [Y_PRESENCE_KEY]: { ...((presence as JsonObject) || {}), ...update },\n    });\n  }\n\n  // Translate liveblocks presence to yjs awareness\n  getStates(): Map<number, unknown> {\n    const others = this.room.getOthers();\n    const presence = this.room.getSelf()?.presence[Y_PRESENCE_KEY];\n    const states = others.reduce((acc: Map<number, unknown>, currentValue) => {\n      if (\n        currentValue.connectionId &&\n        currentValue.presence[Y_PRESENCE_KEY] !== undefined\n      ) {\n        // connectionId == actorId == yjs.clientId\n        acc.set(\n          currentValue.connectionId,\n          currentValue.presence[Y_PRESENCE_KEY] || {}\n        );\n      }\n      return acc;\n    }, new Map());\n    if (presence !== undefined) {\n      states.set(this.clientID, presence);\n    }\n    return states;\n  }\n}\n", "import { Base64 } from \"js-base64\";\nimport { Observable } from \"lib0/observable\";\nimport * as Y from \"yjs\";\n\nexport default class yDocHandler extends Observable<unknown> {\n  private unsubscribers: Array<() => void> = [];\n\n  private _synced = false;\n  private doc: Y.Doc;\n  private updateRoomDoc: (update: string) => void;\n  private fetchRoomDoc: (vector: string) => void;\n\n  constructor({\n    doc,\n    isRoot,\n    updateDoc,\n    fetchDoc,\n  }: {\n    doc: Y.Doc;\n    isRoot: boolean;\n    updateDoc: (update: string, guid?: string) => void;\n    fetchDoc: (vector: string, guid?: string) => void;\n  }) {\n    super();\n    this.doc = doc;\n    // this.doc.load(); // this just emits a load event, it doesn't actually load anything\n    this.doc.on(\"update\", this.updateHandler);\n    this.updateRoomDoc = (update: string) => {\n      updateDoc(update, isRoot ? undefined : this.doc.guid);\n    };\n    this.fetchRoomDoc = (vector: string) => {\n      fetchDoc(vector, isRoot ? undefined : this.doc.guid);\n    };\n\n    this.syncDoc();\n  }\n\n  public handleServerUpdate = ({\n    update,\n    stateVector,\n  }: {\n    update: string;\n    stateVector: string | null;\n  }): void => {\n    // apply update from the server\n    Y.applyUpdate(this.doc, Base64.toUint8Array(update), \"backend\");\n    // if this update is the result of a fetch, the state vector is included\n    if (stateVector) {\n      // Use server state to calculate a diff and send it\n      try {\n        const localUpdate = Y.encodeStateAsUpdate(\n          this.doc,\n          Base64.toUint8Array(stateVector)\n        );\n        this.updateRoomDoc(Base64.fromUint8Array(localUpdate));\n      } catch (e) {\n        // something went wrong encoding local state to send to the server\n        console.warn(e);\n      }\n      // now that we've sent our local  and received from server, we're in sync\n      // calling `syncDoc` again will sync up the documents\n      this.synced = true;\n    }\n  };\n\n  public syncDoc = (): void => {\n    this.synced = false;\n\n    // The state vector is sent to the server so it knows what to send back\n    // if you don't send it, it returns everything\n    const encodedVector = Base64.fromUint8Array(Y.encodeStateVector(this.doc));\n    this.fetchRoomDoc(encodedVector);\n  };\n\n  // The sync'd property is required by some provider implementations\n  get synced(): boolean {\n    return this._synced;\n  }\n\n  set synced(state: boolean) {\n    if (this._synced !== state) {\n      this._synced = state;\n      this.emit(\"synced\", [state]);\n      this.emit(\"sync\", [state]);\n    }\n  }\n\n  private updateHandler = (update: Uint8Array, origin: string) => {\n    if (origin !== \"backend\") {\n      const encodedUpdate = Base64.fromUint8Array(update);\n      this.updateRoomDoc(encodedUpdate);\n    }\n  };\n\n  destroy(): void {\n    this.doc.off(\"update\", this.updateHandler);\n    this.unsubscribers.forEach((unsub) => unsub());\n    this._observers = new Map();\n    this.doc.destroy();\n  }\n}\n", "declare const __VERSION__: string;\ndeclare const TSUP_FORMAT: string;\n\nexport const PKG_NAME = \"@liveblocks/yjs\";\nexport const PKG_VERSION = typeof __VERSION__ === \"string\" && __VERSION__;\nexport const PKG_FORMAT = typeof TSUP_FORMAT === \"string\" && TSUP_FORMAT;\n", "import { Editor } from \"@tiptap/core\";\nwindow.tiptapEditor = Editor;\n\n// import StarterKit from '@tiptap/starter-kit'\n// window.tiptapStarterKit = StarterKit;\n\nimport Document from \"@tiptap/extension-document\";\nwindow.tiptapDocument = Document;\n\nimport HardBreak from \"@tiptap/extension-hard-break\";\nwindow.tiptapHardBreak = HardBreak;\n\nimport Paragraph from \"@tiptap/extension-paragraph\";\nwindow.tiptapParagraph = Paragraph;\n\nimport Text from \"@tiptap/extension-text\";\nwindow.tiptapText = Text;\n\nimport Heading from \"@tiptap/extension-heading\";\nwindow.tiptapHeading = Heading;\n\nimport Bold from \"@tiptap/extension-bold\";\nwindow.tiptapBold = Bold;\n\nimport Code from \"@tiptap/extension-code\";\nwindow.tiptapCode = Code;\n\nimport CodeBlockLowlight from \"@tiptap/extension-code-block-lowlight\";\nwindow.tiptapCodeBlockLowlight = CodeBlockLowlight;\n\n// import { lowlight } from 'lowlight';\n// window.tiptapLowlight = lowlight;\n\nimport Italic from \"@tiptap/extension-italic\";\nwindow.tiptapItalic = Italic;\n\nimport Strike from \"@tiptap/extension-strike\";\nwindow.tiptapStrike = Strike;\n\nimport Dropcursor from \"@tiptap/extension-dropcursor\";\nwindow.tiptapDropcursor = Dropcursor;\n\nimport Gapcursor from \"@tiptap/extension-gapcursor\";\nwindow.tiptapGapcursor = Gapcursor;\n\nimport History from \"@tiptap/extension-history\";\nwindow.tiptapHistory = History;\n\nimport Blockquote from \"@tiptap/extension-blockquote\";\nwindow.tiptapBlockquote = Blockquote;\n\nimport BulletList from \"@tiptap/extension-bullet-list\";\nwindow.tiptapBulletList = BulletList;\n\nimport CodeBlock from \"@tiptap/extension-code-block\";\nwindow.tiptapCodeBlock = CodeBlock;\n\nimport HorizontalRule from \"@tiptap/extension-horizontal-rule\";\nwindow.tiptapHorizontalRule = HorizontalRule;\n\nimport ListItem from \"@tiptap/extension-list-item\";\nwindow.tiptapListItem = ListItem;\n\nimport OrderedList from \"@tiptap/extension-ordered-list\";\nwindow.tiptapOrderedList = OrderedList;\n\nimport CharacterCount from \"@tiptap/extension-character-count\";\nwindow.tiptapCharacterCount = CharacterCount;\n\nimport Youtube from \"@tiptap/extension-youtube\";\nwindow.tiptapYoutube = Youtube;\n\nimport Underline from \"@tiptap/extension-underline\";\nwindow.tiptapUnderline = Underline;\n\nimport Table from \"@tiptap/extension-table\";\nwindow.tiptapTable = Table;\n\nimport TableCell from \"@tiptap/extension-table-cell\";\nwindow.tiptapTableCell = TableCell;\n\nimport TableHeader from \"@tiptap/extension-table-header\";\nwindow.tiptapTableHeader = TableHeader;\n\nimport TableRow from \"@tiptap/extension-table-row\";\nwindow.tiptapTableRow = TableRow;\n\nimport Image from \"@tiptap/extension-image\";\nwindow.tiptapImage = Image;\n\nimport Link from \"@tiptap/extension-link\";\nwindow.tiptapLink = Link;\n\nimport TaskList from \"@tiptap/extension-task-list\";\nwindow.tiptapTaskList = TaskList;\n\nimport TaskItem from \"@tiptap/extension-task-item\";\nwindow.tiptapTaskItem = TaskItem;\n\nimport Placeholder from \"@tiptap/extension-placeholder\";\nwindow.tiptapPlaceholder = Placeholder;\n\nimport BubbleMenu from \"@tiptap/extension-bubble-menu\";\nwindow.tiptapBubbleMenu = BubbleMenu;\n\nimport FloatingMenu from \"@tiptap/extension-floating-menu\";\nwindow.tiptapFloatingMenu = FloatingMenu;\n\nimport TextAlign from \"@tiptap/extension-text-align\";\nwindow.tiptapTextAlign = TextAlign;\n\nimport Highlight from \"@tiptap/extension-highlight\";\nwindow.tiptapHighlight = Highlight;\n\nimport { generateHTML } from \"@tiptap/html\";\nwindow.tiptapgenerateHTML = generateHTML;\n\nimport Collaboration from \"@tiptap/extension-collaboration\";\nwindow.tiptapCollaboration = Collaboration;\n\nimport CollaborationCursor from \"@tiptap/extension-collaboration-cursor\";\nwindow.tiptapCollaborationCursor = CollaborationCursor;\n\nimport { TiptapCollabProvider } from \"@hocuspocus/provider\";\nwindow.tiptapCollabProvider = TiptapCollabProvider;\n\nimport * as Y from \"yjs\";\nwindow.tiptapY = Y;\n\nimport { createClient } from \"@liveblocks/client\";\nwindow.tiptapCreateClient = createClient;\n\nimport LiveblocksProvider from \"@liveblocks/yjs\";\nwindow.tiptapLiveblocksProvider = LiveblocksProvider;\n"],
  "mappings": "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R,OAAQ,QACR,IAAK,KACL,SAAU,MACV,UAAW,OACX,IAAK,SACL,SAAU,KACV,UAAW,MACX,SAAU,QACV,IAAK,KACL,SAAU,MACV,UAAW,OACX,OAAQ,MACR,IAAK,OACL,OAAQ,SACR,SAAU,QACV,SAAU,KACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,OACV,SAAU,QACV,SAAU,QACV,SAAU,MACV,eAAgB,OAChB,SAAU,SACV,SAAU,SACV,SAAU,MACV,SAAU,OACV,SAAU,MACV,SAAU,OACV,SAAU,MACV,SAAU,KACV,SAAU,MACV,eAAgB,OAChB,SAAU,MACV,eAAgB,OAChB,SAAU,MACV,SAAU,MACV,SAAU,OACV,SAAU,OACV,SAAU,OACV,SAAU,SACV,SAAU,UACV,SAAU,QACV,SAAU,WACV,SAAU,WACV,SAAU,SACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,SAAU,SACV,SAAU,QACV,SAAU,SACV,SAAU,MACV,SAAU,OACV,eAAgB,QAChB,SAAU,OACV,eAAgB,OAChB,SAAU,KACV,eAAgB,MAChB,SAAU,MACV,SAAU,KACV,SAAU,OACV,eAAgB,QAChB,SAAU,OACV,SAAU,QACV,SAAU,OACV,SAAU,QACV,SAAU,QACV,SAAU,KACV,SAAU,MACV,SAAU,MACV,SAAU,OACV,eAAgB,QAChB,SAAU,QACV,SAAU,SACV,SAAU,YACV,eAAgB,OAChB,SAAU,OACV,eAAgB,QAChB,SAAU,QACV,eAAgB,SAChB,SAAU,QACV,eAAgB,QAChB,SAAU,OACV,SAAU,QACV,SAAU,QACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,OACV,SAAU,SACV,SAAU,QACV,SAAU,OACV,SAAU,SACV,SAAU,QACV,SAAU,SACV,eAAgB,UAChB,SAAU,KACV,SAAU,MACV,eAAgB,OAChB,SAAU,KACV,SAAU,MACV,eAAgB,OAChB,SAAU,KACV,eAAgB,MAChB,SAAU,KACV,eAAgB,MAChB,eAAgB,OAChB,SAAU,MACV,SAAU,MACV,eAAgB,OAChB,SAAU,KACV,eAAgB,OAChB,eAAgB,MAChB,SAAU,KACV,eAAgB,OAChB,eAAgB,MAChB,SAAU,QACV,SAAU,OACV,SAAU,QACV,SAAU,OACV,SAAU,QACV,SAAU,KACV,SAAU,OACV,SAAU,KACV,SAAU,OACV,SAAU,KACV,SAAU,MACV,SAAU,KACV,SAAU,MACV,SAAU,QACV,SAAU,SACV,SAAU,QACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,eAAgB,mBAChB,SAAU,MACV,SAAU,OACV,eAAgB,QAChB,SAAU,MACV,SAAU,OACV,eAAgB,QAChB,SAAU,OACV,SAAU,QACV,SAAU,OACV,SAAU,QACV,eAAgB,SAChB,SAAU,QACV,eAAgB,SAChB,SAAU,QACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,eAAgB,kBAChB,SAAU,QACV,eAAgB,oBAChB,SAAU,SACV,SAAU,UACV,SAAU,SACV,SAAU,UACV,SAAU,QACV,eAAgB,SAChB,SAAU,QACV,eAAgB,SAChB,SAAU,QACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,OACV,SAAU,OACV,SAAU,OACV,SAAU,QACV,SAAU,QACV,SAAU,SACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,SAAU,SACV,SAAU,QACV,SAAU,MACV,SAAU,MACV,SAAU,SACV,SAAU,QACV,SAAU,SACV,SAAU,QACV,SAAU,SACV,SAAU,SACV,SAAU,QACV,SAAU,SACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,SACV,eAAgB,UAChB,SAAU,QACV,SAAU,SACV,eAAgB,UAChB,SAAU,SACV,SAAU,OACV,SAAU,QACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,UACV,SAAU,QACV,SAAU,QACV,SAAU,MACV,SAAU,OACV,SAAU,OACV,SAAU,OACV,SAAU,OACV,SAAU,OACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,OACV,SAAU,OACV,SAAU,QACV,SAAU,QACV,SAAU,KACV,eAAgB,MAChB,SAAU,KACV,eAAgB,MAChB,eAAgB,OAChB,SAAU,MACV,SAAU,MACV,eAAgB,OAChB,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,SACV,SAAU,QACV,SAAU,UACV,eAAgB,WAChB,SAAU,UACV,SAAU,UACV,SAAU,QACV,eAAgB,SAChB,SAAU,OACV,SAAU,OACV,SAAU,MACV,SAAU,UACV,SAAU,UACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,WACV,SAAU,WACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,SAAU,SACV,SAAU,WACV,SAAU,SACV,SAAU,QACV,SAAU,SACV,SAAU,UACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,OACV,SAAU,WACV,SAAU,kBACV,SAAU,mBACV,SAAU,YACV,SAAU,auBACV,SAAU,OACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,OACV,SAAU,QACV,SAAU,OACV,SAAU,QACV,SAAU,QACV,SAAU,OACV,SAAU,QACV,SAAU,OACV,SAAU,MACV,SAAU,MACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,mBACV,SAAU,oBACV,SAAU,QACV,SAAU,OACV,SAAU,QACV,SAAU,SACV,SAAU,OACV,SAAU,SACV,SAAU,QACV,SAAU,SACV,SAAU,QACV,SAAU,OACV,SAAU,QACV,SAAU,QACV,SAAU,OACV,SAAU,OACV,SAAU,oBACV,SAAU,WACV,SAAU,UACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,OACV,SAAU,WACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,MACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,QACV,SAAU,WACV,SAAU,aACV,SAAU,eACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,UACV,SAAU,UACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,OACV,SAAU,SACV,SAAU,QACV,eAAgB,SAChB,SAAU,UACV,SAAU,OACV,SAAU,OACV,SAAU,UACV,SAAU,SACV,SAAU,UACV,SAAU,UACV,SAAU,SACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,kBACV,SAAU,oBACV,SAAU,sBACV,SAAU,mBACV,SAAU,gBACV,SAAU,iBACV,SAAU,mBACV,SAAU,qBACV,SAAU,oBACV,SAAU,qBACV,SAAU,kBACV,SAAU,oBACV,SAAU,gBACV,SAAU,iBACV,SAAU,mBACV,SAAU,qBACV,SAAU,oBACV,SAAU,qBACV,SAAU,kBACV,SAAU,oBACV,SAAU,OACV,SAAU,OACV,SAAU,OACV,SAAU,OACV,SAAU,UACV,SAAU,UACV,SAAU,UACV,SAAU,UACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,QACV,SAAU,QACV,SAAU,ekBACV,eAAgB,qBAChB,SAAU,mBACV,eAAgB,sBAChB,SAAU,SACV,SAAU,WACV,SAAU,UACV,SAAU,SACV,SAAU,WACV,SAAU,WACV,SAAU,OACV,SAAU,ceAAgB,WAChB,SAAU,SACV,SAAU,SACV,SAAU,MACV,eAAgB,OAChB,SAAU,QACV,SAAU,QACV,SAAU,OACV,SAAU,QACV,SAAU,UACV,SAAU,QACV,SAAU,QACV,SAAU,UACV,SAAU,UACV,SAAU,MACV,eAAgB,OAChB,SAAU,MACV,eAAgB,OAChB,SAAU,SACV,SAAU,SACV,SAAU,UACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,OACV,SAA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AgB,OAChB,YAAgB,OAChB,YAAgB,OAChB,YAAgB,MAChB,YAAgB,OAChB,YAAgB,MAChB,YAAgB,OAChB,YAAgB,OAChB,YAAgB,OAChB,YAAgB,MAChB,YAAgB,OAChB,OAAQ,SACR,OAAQ,SACR,OAAU,QACV,OAAU,QACV,OAAQ,OACR,OAAU,OACV,YAAgB,OAChB,YAAgB,MAChB,YAAgB,OAChB,OAAU,MACV,OAAU,OACV,YAAgB,OAChB,OAAU,SACV,OAAU,SACV,OAAU,SACV,OAAU,SACV,OAAU,OACV,OAAU,OACV,OAAU,QACV,OAAQ,QACR,OAAQ,QACR,OAAU,QACV,OAAU,QACV,OAAU,QACV,OAAU,OACV,OAAU,OACV,OAAU,QACV,OAAU,QACV,OAAU,QACV,OAAU,QACV,OAAU,OACV,SAAU,QACV,OAAU,UACV,OAAU,SACV,OAAU,SACV,OAAU,OACV,OAAU,OACV,OAAU,MACV,OAAU,MACV,OAAU,QACV,OAAU,SACV,OAAU,QACV,OAAU,OACV,OAAU,OACV,OAAU,QACV,OAAU,SACV,OAAU,QACV,OAAU,SACV,OAAU,SACV,OAAU,KACV,OAAQ,QACR,OAAU,KACV,OAAU,KACV,OAAU,KACV,OAAU,KACV,OAAU,KACV,OAAU,UACV,OAAU,UACV,OAAU,KACV,OAAU,MACV,OAAU,KACV,OAAU,MACV,OAAU,OACV,OAAU,MACV,OAAU,QACV,OAAU,QACV,OAAU,SACV,OAAU,MACV,OAAU,MACV,OAAU,OACV,OAAU,UACV,OAAU,OACV,OAAU,MACV,OAAU,OACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,QACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,OACV,OAAU,OACV,OAAU,MACV,OAAU,MACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,QACV,OAAU,QACV,OAAU,OACV,OAAU,OACV,OAAU,MACV,OAAU,MACV,OAAU,OACV,OAAU,OACV,OAAU,MACV,OAAU,MACV,OAAU,QACV,OAAU,QACV,OAAU,OACV,OAAU,OACV,OAAU,MACV,OAAU,MACV,OAAU,SACV,OAAU,SACV,OAAU,MACV,OAAU,MACV,OAAU,OACV,OAAU,OACV,OAAU,MACV,OAAU,MACV,OAAU,OACV,OAAU,OACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,OACV,OAAU,OACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,MACV,OAAU,QACV,OAAU,QACV,OAAU,MACV,OAAU,MACV,OAAU,QACV,OAAU,QACV,OAAU,MACV,OAAU,MACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,SACV,OAAU,SACV,OAAU,SACV,OAAU,SACV,OAAU,MACV,OAAU,MACV,OAAU,SACV,OAAU,SACV,OAAU,MACV,OAAU,MACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,QACV,OAAU,OACV,OAAU,QACV,OAAU,QACZ,EAEMC,GAAc,YAkBdC,GAAqB,kCAErBC,GAA2B,qPAC3BC,GAAc,i8gBACdC,GAAY,CAChB,OAAQ,OACR,OAAQ,OACR,OAAQ,SACR,OAAQ,SACR,GAAI,SACJ,IAAK,SACL,IAAK,eACL,MAAO,OACP,MAAO,OACP,MAAO,OACP,IAAK,SACL,IAAK,SACL,MAAO,OACP,MAAO,OACP,GAAI,SACJ,IAAK,YACL,IAAK,YACL,OAAQ,OACR,OAAQ,OACR,QAAS,SACT,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,IAAK,IACL,IAAK,IACL,IAAK,SACL,IAAK,SACL,OAAQ,SACR,KAAM,SACN,SAAU,SACV,KAAM,SACN,IAAK,SACL,KAAM,SACN,MAAO,SACP,OAAQ,SACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,MAAO,SACP,QAAS,SACT,SAAU,SACV,OAAQ,SACR,MAAO,OACP,QAAS,SACT,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,YACN,GAAI,SACJ,OAAQ,SACR,IAAK,SACL,IAAK,SACL,KAAM,SACN,KAAM,IACN,cAAe,SACf,OAAQ,SACR,SAAU,SACV,MAAO,OACP,MAAO,OACP,KAAM,YACN,KAAM,YACN,OAAQ,SACR,IAAK,IACL,MAAO,SACP,QAAS,SACT,OAAQ,OACR,OAAQ,OACR,KAAM,OACN,KAAM,OACN,SAAU,SACV,MAAO,SACP,SAAU,SACV,YAAa,SACb,UAAW,SACX,QAAS,SACT,UAAW,SACX,UAAW,SACX,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,SAAU,SACV,KAAM,SACN,SAAU,SACV,MAAO,SACP,IAAK,SACL,IAAK,SACL,MAAO,SACP,OAAQ,SACR,QAAS,SACT,QAAS,SACT,QAAS,SACT,MAAO,SACP,OAAQ,SACR,WAAY,SACZ,KAAM,SACN,KAAM,SACN,KAAM,SACN,QAAS,SACT,IAAK,YACL,IAAK,YACL,OAAQ,SACR,QAAS,SACT,OAAQ,SACR,QAAS,SACT,SAAU,SACV,UAAW,SACX,SAAU,SACV,QAAS,SACT,gBAAiB,SACjB,cAAe,SACf,SAAU,SACV,OAAQ,SACR,SAAU,SACV,OAAQ,SACR,aAAc,SACd,YAAa,SACb,cAAe,SACf,kBAAmB,SACnB,kBAAmB,SACnB,mBAAoB,SACpB,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,IAAK,UACL,QAAS,eACT,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,IAAK,SACL,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,KAAM,SACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,SAAU,SACV,QAAS,SACT,SAAU,SACV,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,KAAM,SACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,MAAO,SACP,MAAO,SACP,OAAQ,OACR,KAAM,YACN,KAAM,SACN,MAAO,SACP,KAAM,SACN,MAAO,SACP,KAAM,KACN,MAAO,SACP,SAAU,SACV,KAAM,SACN,OAAQ,SACR,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,IAAK,SACL,IAAK,SACL,OAAQ,SACR,SAAU,SACV,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,qBAAsB,SACtB,KAAM,eACN,MAAO,SACP,MAAO,SACP,QAAS,SACT,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,OACR,OAAQ,OACR,MAAO,SACP,MAAO,SACP,QAAS,SACT,MAAO,SACP,QAAS,SACT,KAAM,SACN,KAAM,SACN,MAAO,OACP,QAAS,OACT,QAAS,SACT,KAAM,OACN,UAAW,OACX,UAAW,OACX,IAAK,YACL,IAAK,SACL,KAAM,SACN,KAAM,SACN,MAAO,SACP,UAAW,SACX,IAAK,SACL,IAAK,SACL,IAAK,SACL,KAAM,SACN,OAAQ,SACR,gBAAiB,SACjB,iBAAkB,SAClB,WAAY,SACZ,YAAa,SACb,YAAa,SACb,UAAW,SACX,SAAU,OACV,SAAU,SACV,YAAa,SACb,WAAY,SACZ,YAAa,SACb,KAAM,SACN,KAAM,SACN,SAAU,SACV,OAAQ,SACR,QAAS,SACT,yBAA0B,SAC1B,sBAAuB,SACvB,gBAAiB,SACjB,MAAO,SACP,SAAU,SACV,MAAO,IACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,QAAS,SACT,MAAO,IACP,OAAQ,IACR,KAAM,SACN,OAAQ,SACR,WAAY,SACZ,UAAW,SACX,KAAM,SACN,QAAS,SACT,UAAW,SACX,OAAQ,SACR,OAAQ,SACR,gBAAiB,SACjB,KAAM,YACN,KAAM,SACN,OAAQ,SACR,UAAW,SACX,KAAM,OACN,KAAM,OACN,OAAQ,SACR,gCAAiC,SACjC,MAAO,SACP,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,YACN,KAAM,SACN,MAAO,SACP,KAAM,SACN,MAAO,SACP,MAAO,SACP,QAAS,SACT,QAAS,SACT,MAAO,SACP,MAAO,SACP,OAAQ,SACR,QAAS,SACT,IAAK,SACL,IAAK,SACL,SAAU,SACV,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,KAAM,eACN,OAAQ,SACR,QAAS,SACT,YAAa,SACb,YAAa,SACb,SAAU,SACV,WAAY,SACZ,OAAQ,OACR,eAAgB,SAChB,gBAAiB,SACjB,MAAO,SACP,MAAO,SACP,SAAU,SACV,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,QAAS,SACT,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,IAAK,SACL,IAAK,SACL,GAAI,SACJ,GAAI,SACJ,QAAS,SACT,MAAO,SACP,SAAU,SACV,QAAS,SACT,IAAK,OACL,IAAK,SACL,MAAO,SACP,MAAO,SACP,QAAS,SACT,OAAQ,SACR,IAAK,YACL,IAAK,YACL,KAAM,SACN,MAAO,SACP,MAAO,SACP,iBAAkB,OAClB,eAAgB,SAChB,uBAAwB,SACxB,iBAAkB,IAClB,iBAAkB,SAClB,KAAM,SACN,QAAS,SACT,QAAS,SACT,YAAa,SACb,MAAO,SACP,IAAK,OACL,cAAe,SACf,QAAS,SACT,MAAO,SACP,IAAK,OACL,OAAQ,OACR,cAAe,SACf,OAAQ,SACR,KAAM,SACN,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,OAAQ,IACR,KAAM,YACN,KAAM,YACN,IAAK,SACL,IAAK,OACL,OAAQ,SACR,MAAO,SACP,SAAU,SACV,SAAU,SACV,SAAU,SACV,QAAS,SACT,UAAW,SACX,eAAgB,SAChB,sBAAuB,SACvB,UAAW,OACX,gBAAiB,SACjB,gBAAiB,SACjB,qBAAsB,SACtB,cAAe,SACf,oBAAqB,SACrB,yBAA0B,SAC1B,qBAAsB,SACtB,iBAAkB,SAClB,eAAgB,SAChB,cAAe,SACf,kBAAmB,SACnB,kBAAmB,SACnB,UAAW,SACX,UAAW,SACX,UAAW,SACX,aAAc,SACd,iBAAkB,SAClB,UAAW,SACX,eAAgB,SAChB,gBAAiB,SACjB,iBAAkB,SAClB,oBAAqB,SACrB,kBAAmB,SACnB,eAAgB,SAChB,kBAAmB,SACnB,mBAAoB,SACpB,gBAAiB,SACjB,mBAAoB,SACpB,QAAS,SACT,aAAc,SACd,SAAU,SACV,OAAQ,SACR,OAAQ,SACR,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,KAAM,SACN,MAAO,SACP,MAAO,SACP,MAAO,SACP,QAAS,SACT,KAAM,SACN,KAAM,SACN,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,MAAO,OACP,MAAO,OACP,OAAQ,SACR,IAAK,SACL,IAAK,SACL,MAAO,SACP,KAAM,SACN,KAAM,SACN,KAAM,SACN,GAAI,SACJ,MAAO,SACP,IAAK,YACL,IAAK,YACL,GAAI,SACJ,OAAQ,OACR,OAAQ,OACR,IAAK,SACL,OAAQ,SACR,GAAI,SACJ,QAAS,SACT,SAAU,SACV,IAAK,SACL,IAAK,SACL,OAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,SAAU,SACV,iBAAkB,SAClB,OAAQ,SACR,qBAAsB,SACtB,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,IAAK,SACL,IAAK,SACL,KAAM,SACN,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,YACN,KAAM,SACN,OAAQ,SACR,MAAO,SACP,KAAM,SACN,QAAS,SACT,QAAS,SACT,MAAO,SACP,OAAQ,SACR,QAAS,SACT,MAAO,SACP,WAAY,SACZ,YAAa,SACb,MAAO,SACP,OAAQ,IACR,WAAY,SACZ,OAAQ,SACR,YAAa,SACb,MAAO,SACP,QAAS,SACT,SAAU,SACV,MAAO,SACP,MAAO,SACP,KAAM,SACN,KAAM,SACN,MAAO,SACP,KAAM,SACN,KAAM,SACN,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,OACL,KAAM,OACN,KAAM,OACN,KAAM,SACN,KAAM,IACN,MAAO,SACP,OAAQ,SACR,YAAa,SACb,aAAc,SACd,aAAc,SACd,cAAe,SACf,IAAK,SACL,IAAK,SACL,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,OAAQ,SACR,IAAK,YACL,IAAK,YACL,MAAO,SACP,kBAAmB,SACnB,sBAAuB,SACvB,MAAO,KACP,KAAM,SACN,MAAO,SACP,MAAO,SACP,KAAM,SACN,KAAM,YACN,KAAM,YACN,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,MAAO,SACP,WAAY,SACZ,SAAU,SACV,OAAQ,OACR,OAAQ,SACR,OAAQ,OACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,OACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,SACN,OAAQ,SACR,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,IAAK,SACL,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,IAAK,SACL,IAAK,SACL,KAAM,SACN,KAAM,SACN,GAAI,SACJ,GAAI,SACJ,IAAK,SACL,IAAK,SACL,IAAK,SACL,KAAM,SACN,SAAU,SACV,IAAK,SACL,MAAO,SACP,OAAQ,SACR,QAAS,SACT,SAAU,SACV,KAAM,eACN,OAAQ,SACR,IAAK,YACL,IAAK,YACL,GAAI,SACJ,GAAI,SACJ,IAAK,SACL,MAAO,SACP,KAAM,SACN,KAAM,SACN,GAAI,SACJ,IAAK,SACL,IAAK,SACL,IAAK,SACL,KAAM,SACN,SAAU,SACV,IAAK,SACL,IAAK,SACL,KAAM,SACN,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,YACN,MAAO,IACP,aAAc,SACd,iBAAkB,SAClB,iBAAkB,SAClB,eAAgB,SAChB,YAAa,SACb,kBAAmB,SACnB,aAAc,SACd,KAAM,SACN,KAAM,YACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,GAAI,IACJ,GAAI,SACJ,GAAI,IACJ,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,QAAS,SACT,UAAW,SACX,OAAQ,SACR,OAAQ,SACR,UAAW,SACX,WAAY,SACZ,QAAS,SACT,OAAQ,SACR,UAAW,eACX,KAAM,eACN,MAAO,SACP,OAAQ,SACR,KAAM,OACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,KAAM,SACN,QAAS,SACT,MAAO,SACP,IAAK,IACL,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,UAAW,SACX,OAAQ,SACR,OAAQ,SACR,IAAK,YACL,IAAK,SACL,aAAc,SACd,SAAU,SACV,SAAU,SACV,MAAO,SACP,OAAQ,SACR,cAAe,SACf,eAAgB,SAChB,KAAM,YACN,KAAM,SACN,OAAQ,SACR,eAAgB,SAChB,KAAM,YACN,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,aAAc,SACd,UAAW,SACX,OAAQ,SACR,OAAQ,SACR,OAAQ,OACR,OAAQ,OACR,GAAI,SACJ,MAAO,OACP,MAAO,OACP,IAAK,SACL,IAAK,SACL,KAAM,SACN,KAAM,SACN,KAAM,SACN,MAAO,OACP,IAAK,SACL,IAAK,YACL,IAAK,SACL,OAAQ,OACR,OAAQ,OACR,GAAI,SACJ,OAAQ,SACR,MAAO,SACP,OAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,GAAI,SACJ,MAAO,SACP,MAAO,SACP,MAAO,SACP,WAAY,SACZ,SAAU,SACV,SAAU,SACV,MAAO,SACP,KAAM,SACN,MAAO,SACP,QAAS,SACT,GAAI,SACJ,OAAQ,SACR,MAAO,SACP,SAAU,SACV,OAAQ,SACR,IAAK,SACL,IAAK,SACL,OAAQ,SACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,aAAc,SACd,SAAU,SACV,QAAS,SACT,eAAgB,SAChB,eAAgB,SAChB,KAAM,SACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,MAAO,SACP,OAAQ,OACR,KAAM,YACN,KAAM,SACN,KAAM,SACN,QAAS,SACT,MAAO,SACP,MAAO,SACP,OAAQ,SACR,MAAO,SACP,GAAI,SACJ,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,KAAM,OACN,KAAM,OACN,MAAO,SACP,MAAO,SACP,IAAK,SACL,IAAK,SACL,IAAK,YACL,IAAK,YACL,MAAO,SACP,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,IAAK,SACL,IAAK,SACL,IAAK,YACL,IAAK,YACL,OAAQ,SACR,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,SAAU,SACV,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,KAAM,SACN,MAAO,SACP,OAAQ,SACR,IAAK,SACL,WAAY,SACZ,MAAO,OACP,KAAM,SACN,KAAM,SACN,KAAM,SACN,MAAO,SACP,QAAS,SACT,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,QAAS,SACT,OAAQ,SACR,IAAK,SACL,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,MAAO,eACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,IACR,OAAQ,IACR,MAAO,SACP,QAAS,SACT,QAAS,SACT,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,KAAM,IACN,IAAK,SACL,IAAK,SACL,KAAM,SACN,MAAO,SACP,OAAQ,SACR,QAAS,SACT,SAAU,SACV,KAAM,SACN,GAAI,SACJ,GAAI,SACJ,iBAAkB,SAClB,UAAW,SACX,UAAW,SACX,UAAW,SACX,aAAc,SACd,oBAAqB,SACrB,cAAe,SACf,YAAa,SACb,kBAAmB,SACnB,kBAAmB,SACnB,eAAgB,SAChB,kBAAmB,SACnB,UAAW,SACX,gBAAiB,SACjB,cAAe,SACf,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,gBAAiB,SACjB,kBAAmB,SACnB,oBAAqB,SACrB,gBAAiB,SACjB,QAAS,SACT,aAAc,SACd,cAAe,SACf,eAAgB,SAChB,aAAc,SACd,gBAAiB,SACjB,kBAAmB,SACnB,iBAAkB,SAClB,gBAAiB,SACjB,aAAc,SACd,gBAAiB,SACjB,WAAY,SACZ,cAAe,SACf,IAAK,SACL,IAAK,SACL,IAAK,SACL,KAAM,SACN,SAAU,SACV,IAAK,SACL,MAAO,SACP,OAAQ,SACR,QAAS,SACT,SAAU,SACV,KAAM,eACN,OAAQ,SACR,WAAY,SACZ,QAAS,SACT,UAAW,SACX,WAAY,SACZ,iBAAkB,SAClB,cAAe,SACf,YAAa,SACb,QAAS,SACT,SAAU,SACV,QAAS,SACT,eAAgB,SAChB,UAAW,SACX,OAAQ,SACR,OAAQ,SACR,IAAK,YACL,IAAK,YACL,GAAI,SACJ,IAAK,SACL,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,MAAO,SACP,KAAM,SACN,KAAM,SACN,GAAI,SACJ,GAAI,SACJ,MAAO,SACP,SAAU,SACV,WAAY,SACZ,OAAQ,SACR,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,WAAY,SACZ,KAAM,SACN,SAAU,SACV,IAAK,SACL,IAAK,SACL,KAAM,SACN,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,cAAe,SACf,cAAe,SACf,cAAe,SACf,mBAAoB,SACpB,mBAAoB,SACpB,mBAAoB,SACpB,WAAY,SACZ,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,cAAe,SACf,eAAgB,SAChB,MAAO,SACP,KAAM,YACN,KAAM,YACN,OAAQ,SACR,QAAS,SACT,OAAQ,SACR,OAAQ,IACR,eAAgB,SAChB,gBAAiB,SACjB,IAAK,SACL,QAAS,SACT,KAAM,SACN,KAAM,IACN,OAAQ,SACR,MAAO,SACP,SAAU,SACV,MAAO,SACP,OAAQ,SACR,IAAK,SACL,MAAO,SACP,OAAQ,SACR,KAAM,YACN,KAAM,SACN,IAAK,SACL,IAAK,SACL,KAAM,SACN,MAAO,SACP,MAAO,SACP,KAAM,IACN,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,GAAI,IACJ,GAAI,SACJ,GAAI,IACJ,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,QAAS,SACT,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,SAAU,SACV,QAAS,SACT,UAAW,eACX,KAAM,eACN,KAAM,OACN,KAAM,SACN,KAAM,SACN,QAAS,SACT,IAAK,SACL,IAAK,SACL,OAAQ,SACR,WAAY,SACZ,WAAY,SACZ,SAAU,SACV,OAAQ,SACR,OAAQ,SACR,IAAK,SACL,IAAK,SACL,MAAO,SACP,MAAO,SACP,cAAe,SACf,YAAa,SACb,UAAW,SACX,IAAK,YACL,IAAK,YACL,IAAK,SACL,MAAO,OACP,IAAK,SACL,OAAQ,IACR,OAAQ,SACR,OAAQ,OACR,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,QAAS,SACT,UAAW,SACX,KAAM,SACN,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,KAAM,YACN,KAAM,YACN,GAAI,SACJ,KAAM,YACN,KAAM,SACN,OAAQ,SACR,GAAI,SACJ,GAAI,SACJ,SAAU,SACV,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,KAAM,eACN,IAAK,SACL,KAAM,eACN,MAAO,eACP,MAAO,SACP,QAAS,SACT,MAAO,SACP,QAAS,SACT,SAAU,SACV,KAAM,OACN,MAAO,eACP,OAAQ,eACR,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,SAAU,eACV,KAAM,SACN,IAAK,SACL,IAAK,SACL,MAAO,SACP,GAAI,SACJ,OAAQ,SACR,MAAO,SACP,MAAO,SACP,QAAS,SACT,MAAO,eACP,oBAAqB,SACrB,mBAAoB,SACpB,kBAAmB,SACnB,sBAAuB,SACvB,OAAQ,SACR,OAAQ,SACR,MAAO,eACP,qBAAsB,SACtB,eAAgB,SAChB,QAAS;EACT,OAAQ,SACR,QAAS,SACT,IAAK,YACL,IAAK,YACL,IAAK,SACL,IAAK,eACL,KAAM,SACN,MAAO,eACP,UAAW,eACX,KAAM,eACN,IAAK,eACL,MAAO,SACP,IAAK,SACL,IAAK,eACL,KAAM,SACN,KAAM,eACN,MAAO,SACP,MAAO,SACP,MAAO,SACP,GAAI,SACJ,IAAK,SACL,KAAM,SACN,IAAK,SACL,KAAM,SACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,KAAM,SACN,IAAK,SACL,IAAK,eACL,WAAY,SACZ,WAAY,SACZ,gBAAiB,SACjB,gBAAiB,SACjB,KAAM,SACN,MAAO,eACP,UAAW,eACX,KAAM,eACN,MAAO,SACP,IAAK,eACL,MAAO,SACP,IAAK,SACL,IAAK,eACL,MAAO,SACP,OAAQ,SACR,KAAM,eACN,KAAM,SACN,QAAS,SACT,iBAAkB,OAClB,KAAM,YACN,KAAM,SACN,IAAK,OACL,IAAK,SACL,aAAc,SACd,UAAW,SACX,qBAAsB,SACtB,WAAY,SACZ,SAAU,SACV,cAAe,eACf,UAAW,SACX,WAAY,SACZ,gBAAiB,SACjB,oBAAqB,eACrB,kBAAmB,eACnB,eAAgB,SAChB,qBAAsB,eACtB,gBAAiB,SACjB,gBAAiB,eACjB,aAAc,eACd,MAAO,SACP,SAAU,eACV,OAAQ,eACR,QAAS,SACT,QAAS,SACT,QAAS,SACT,gBAAiB,SACjB,mBAAoB,eACpB,qBAAsB,SACtB,QAAS,SACT,aAAc,SACd,eAAgB,SAChB,YAAa,eACb,kBAAmB,eACnB,aAAc,SACd,wBAAyB,eACzB,kBAAmB,eACnB,MAAO,SACP,QAAS,SACT,QAAS,SACT,QAAS,SACT,YAAa,SACb,iBAAkB,eAClB,sBAAuB,SACvB,kBAAmB,SACnB,iBAAkB,SAClB,oBAAqB,eACrB,sBAAuB,SACvB,gBAAiB,eACjB,qBAAsB,SACtB,kBAAmB,eACnB,uBAAwB,SACxB,UAAW,eACX,eAAgB,SAChB,YAAa,SACb,iBAAkB,eAClB,sBAAuB,SACvB,iBAAkB,eAClB,YAAa,eACb,iBAAkB,SAClB,SAAU,SACV,cAAe,SACf,kBAAmB,SACnB,cAAe,SACf,eAAgB,SAChB,KAAM,SACN,UAAW,SACX,OAAQ,eACR,MAAO,eACP,QAAS,SACT,IAAK,SACL,OAAQ,SACR,KAAM,eACN,MAAO,SACP,QAAS,eACT,MAAO,SACP,MAAO,SACP,OAAQ,eACR,OAAQ,eACR,YAAa,SACb,YAAa,SACb,MAAO,SACP,OAAQ,SACR,IAAK,SACL,OAAQ,SACR,KAAM,eACN,KAAM,YACN,KAAM,YACN,UAAW,SACX,eAAgB,SAChB,KAAM,SACN,MAAO,SACP,OAAQ,SACR,MAAO,SACP,MAAO,SACP,QAAS,SACT,QAAS,SACT,KAAM,SACN,MAAO,SACP,MAAO,eACP,QAAS,eACT,UAAW,SACX,WAAY,eACZ,MAAO,SACP,QAAS,eACT,KAAM,SACN,MAAO,SACP,MAAO,eACP,QAAS,eACT,UAAW,SACX,WAAY,eACZ,KAAM,SACN,OAAQ,OACR,OAAQ,OACR,KAAM,SACN,cAAe,SACf,gBAAiB,SACjB,eAAgB,SAChB,iBAAkB,SAClB,GAAI,SACJ,GAAI,SACJ,IAAK,IACL,OAAQ,SACR,MAAO,SACP,KAAM,eACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,eACN,KAAM,UACN,OAAQ,SACR,QAAS,SACT,OAAQ,SACR,KAAM,eACN,KAAM,UACN,QAAS,eACT,OAAQ,SACR,QAAS,eACT,MAAO,eACP,OAAQ,SACR,MAAO,SACP,MAAO,SACP,QAAS,SACT,OAAQ,SACR,OAAQ,OACR,OAAQ,OACR,KAAM,SACN,KAAM,SACN,MAAO,OACP,MAAO,OACP,IAAK,SACL,IAAK,SACL,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,KAAM,SACN,OAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,IAAK,YACL,IAAK,YACL,KAAM,SACN,OAAQ,OACR,OAAQ,OACR,IAAK,SACL,MAAO,SACP,IAAK,SACL,KAAM,SACN,MAAO,SACP,MAAO,SACP,QAAS,SACT,MAAO,SACP,IAAK,SACL,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,QAAS,SACT,QAAS,SACT,KAAM,SACN,OAAQ,SACR,KAAM,YACN,KAAM,YACN,KAAM,SACN,qBAAsB,SACtB,eAAgB,SAChB,MAAO,SACP,MAAO,SACP,GAAI,SACJ,GAAI,SACJ,MAAO,SACP,IAAK,SACL,MAAO,SACP,QAAS,SACT,KAAM,OACN,KAAM,OACN,OAAQ,SACR,KAAM,SACN,QAAS,SACT,IAAK,SACL,GAAI,SACJ,KAAM,SACN,KAAM,YACN,OAAQ,OACR,OAAQ,OACR,KAAM,SACN,OAAQ,OACR,OAAQ,OACR,OAAQ,SACR,OAAQ,SACR,SAAU,SACV,KAAM,OACN,KAAM,OACN,MAAO,SACP,QAAS,SACT,UAAW,SACX,YAAa,SACb,gBAAiB,SACjB,IAAK,SACL,KAAM,OACN,SAAU,SACV,OAAQ,SACR,MAAO,SACP,KAAM,SACN,SAAU,SACV,IAAK,SACL,IAAK,SACL,OAAQ,IACR,OAAQ,IACR,OAAQ,SACR,KAAM,SACN,QAAS,SACT,IAAK,YACL,IAAK,YACL,IAAK,SACL,IAAK,SACL,KAAM,SACN,OAAQ,SACR,MAAO,SACP,GAAI,SACJ,GAAI,SACJ,UAAW,SACX,IAAK,SACL,OAAQ,SACR,QAAS,SACT,OAAQ,SACR,KAAM,IACN,SAAU,SACV,MAAO,SACP,QAAS,SACT,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,UAAW,OACX,OAAQ,OACR,QAAS,SACT,QAAS,SACT,GAAI,OACJ,cAAe,SACf,SAAU,SACV,KAAM,YACN,KAAM,SACN,MAAO,OACP,GAAI,SACJ,GAAI,SACJ,KAAM,SACN,MAAO,SACP,IAAK,SACL,IAAK,SACL,KAAM,SACN,WAAY,SACZ,YAAa,SACb,SAAU,SACV,cAAe,SACf,mBAAoB,SACpB,cAAe,SACf,OAAQ,SACR,YAAa,SACb,SAAU,SACV,SAAU,SACV,QAAS,SACT,MAAO,SACP,MAAO,SACP,OAAQ,SACR,MAAO,SACP,KAAM,SACN,OAAQ,SACR,KAAM,SACN,QAAS,SACT,SAAU,SACV,SAAU,SACV,SAAU,SACV,KAAM,SACN,WAAY,SACZ,aAAc,SACd,OAAQ,SACR,MAAO,SACP,OAAQ,SACR,KAAM,YACN,KAAM,YACN,IAAK,SACL,IAAK,SACL,OAAQ,SACR,IAAK,YACL,IAAK,YACL,KAAM,SACN,KAAM,YACN,KAAM,SACN,OAAQ,SACR,KAAM,YACN,KAAM,YACN,YAAa,SACb,QAAS,SACT,MAAO,IACP,QAAS,SACT,KAAM,IACN,KAAM,IACN,MAAO,SACP,KAAM,eACN,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,SAAU,SACV,KAAM,SACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,MAAO,OACP,KAAM,SACN,KAAM,SACN,KAAM,SACN,OAAQ,SACR,MAAO,SACP,QAAS,SACT,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,QAAS,SACT,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,UAAW,SACX,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,IACR,OAAQ,IACR,MAAO,SACP,QAAS,SACT,QAAS,SACT,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,KAAM,IACN,IAAK,SACL,IAAK,SACL,KAAM,SACN,QAAS,SACT,MAAO,SACP,OAAQ,SACR,KAAM,SACN,GAAI,SACJ,KAAM,SACN,QAAS,SACT,SAAU,SACV,MAAO,SACP,KAAM,SACN,IAAK,OACL,IAAK,OACL,eAAgB,SAChB,mBAAoB,SACpB,qBAAsB,SACtB,OAAQ,SACR,OAAQ,SACR,IAAK,YACL,IAAK,SACL,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,IAAK,SACL,IAAK,SACL,KAAM,SACN,kBAAmB,SACnB,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,cAAe,SACf,oBAAqB,SACrB,eAAgB,SAChB,aAAc,SACd,mBAAoB,SACpB,mBAAoB,SACpB,gBAAiB,SACjB,mBAAoB,SACpB,WAAY,SACZ,iBAAkB,SAClB,eAAgB,SAChB,gBAAiB,SACjB,kBAAmB,SACnB,iBAAkB,SAClB,gBAAiB,SACjB,SAAU,SACV,cAAe,SACf,eAAgB,SAChB,gBAAiB,SACjB,cAAe,SACf,iBAAkB,SAClB,mBAAoB,SACpB,kBAAmB,SACnB,iBAAkB,SAClB,cAAe,SACf,iBAAkB,SAClB,YAAa,SACb,eAAgB,SAChB,KAAM,SACN,aAAc,SACd,MAAO,SACP,MAAO,SACP,IAAK,SACL,OAAQ,SACR,WAAY,SACZ,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,SACN,OAAQ,SACR,QAAS,SACT,aAAc,SACd,KAAM,IACN,OAAQ,SACR,SAAU,SACV,MAAO,SACP,YAAa,SACb,OAAQ,SACR,KAAM,YACN,KAAM,SACN,IAAK,SACL,IAAK,SACL,KAAM,IACN,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,MAAO,SACP,MAAO,SACP,SAAU,SACV,YAAa,SACb,QAAS,SACT,GAAI,SACJ,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,GAAI,SACJ,GAAI,SACJ,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,IAAK,SACL,IAAK,SACL,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,KAAM,SACN,OAAQ,SACR,SAAU,SACV,MAAO,SACP,IAAK,SACL,IAAK,SACL,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,MAAO,SACP,MAAO,SACP,QAAS,SACT,KAAM,OACN,KAAM,IACN,OAAQ,SACR,SAAU,SACV,MAAO,SACP,KAAM,SACN,IAAK,YACL,IAAK,YACL,OAAQ,SACR,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,KAAM,SACN,eAAgB,SAChB,eAAgB,SAChB,SAAU,SACV,cAAe,SACf,gBAAiB,SACjB,aAAc,SACd,IAAK,OACL,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,IAAK,SACL,OAAQ,SACR,KAAM,SACN,MAAO,SACP,KAAM,SACN,MAAO,SACP,KAAM,SACN,MAAO,SACP,MAAO,SACP,QAAS,SACT,QAAS,SACT,MAAO,SACP,YAAa,SACb,cAAe,SACf,OAAQ,SACR,SAAU,SACV,KAAM,SACN,MAAO,SACP,IAAK,SACL,KAAM,SACN,MAAO,eACP,OAAQ,SACR,OAAQ,SACR,IAAK,IACL,KAAM,SACN,OAAQ,SACR,KAAM,YACN,KAAM,YACN,OAAQ,SACR,UAAW,SACX,KAAM,SACN,MAAO,SACP,OAAQ,eACR,MAAO,SACP,OAAQ,eACR,KAAM,SACN,MAAO,SACP,OAAQ,SACR,SAAU,SACV,WAAY,SACZ,MAAO,SACP,OAAQ,SACR,SAAU,SACV,WAAY,SACZ,IAAK,SACL,OAAQ,SACR,OAAQ,SACR,mBAAoB,SACpB,aAAc,SACd,kBAAmB,SACnB,eAAgB,SAChB,oBAAqB,SACrB,YAAa,SACb,OAAQ,SACR,KAAM,SACN,MAAO,SACP,KAAM,YACN,KAAM,YACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,KAAM,SACN,MAAO,SACP,gBAAiB,SACjB,YAAa,SACb,MAAO,OACP,IAAK,SACL,IAAK,SACL,OAAQ,SACR,KAAM,SACN,KAAM,SACN,QAAS,SACT,QAAS,SACT,MAAO,SACP,MAAO,SACP,QAAS,SACT,QAAS,SACT,OAAQ,SACR,OAAQ,SACR,SAAU,SACV,UAAW,SACX,YAAa,SACb,UAAW,SACX,WAAY,SACZ,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,WAAY,SACZ,YAAa,SACb,SAAU,SACV,cAAe,SACf,mBAAoB,SACpB,cAAe,SACf,OAAQ,SACR,YAAa,SACb,SAAU,SACV,SAAU,SACV,QAAS,SACT,SAAU,SACV,IAAK,SACL,IAAK,SACL,KAAM,SACN,IAAK,SACL,IAAK,SACL,KAAM,OACN,KAAM,OACN,KAAM,OACN,OAAQ,SACR,QAAS,SACT,KAAM,SACN,KAAM,SACN,QAAS,SACT,SAAU,SACV,cAAe,SACf,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,MAAO,SACP,MAAO,SACP,QAAS,SACT,OAAQ,SACR,OAAQ,SACR,SAAU,SACV,UAAW,SACX,UAAW,SACX,WAAY,SACZ,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,QAAS,SACT,OAAQ,SACR,MAAO,OACP,IAAK,IACL,OAAQ,SACR,IAAK,SACL,IAAK,SACL,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,IAAK,SACL,IAAK,SACL,KAAM,SACN,OAAQ,SACR,IAAK,YACL,IAAK,YACL,OAAQ,SACR,UAAW,SACX,UAAW,SACX,MAAO,SACP,MAAO,SACP,SAAU,SACV,OAAQ,SACR,YAAa,SACb,SAAU,SACV,WAAY,eACZ,OAAQ,SACR,UAAW,SACX,MAAO,SACP,OAAQ,SACR,MAAO,OACP,MAAO,OACP,MAAO,SACP,MAAO,SACP,WAAY,SACZ,eAAgB,SAChB,WAAY,SACZ,MAAO,OACP,OAAQ,SACR,SAAU,SACV,OAAQ,SACR,KAAM,SACN,KAAM,SACN,IAAK,SACL,OAAQ,SACR,OAAQ,SACR,KAAM,YACN,KAAM,YACN,QAAS,SACT,KAAM,SACN,OAAQ,SACR,MAAO,SACP,MAAO,SACP,SAAU,SACV,aAAc,SACd,aAAc,SACd,eAAgB,SAChB,UAAW,SACX,cAAe,SACf,gBAAiB,SACjB,OAAQ,SACR,KAAM,SACN,SAAU,SACV,UAAW,SACX,QAAS,SACT,MAAO,SACP,QAAS,SACT,SAAU,SACV,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,iBAAkB,SAClB,kBAAmB,SACnB,OAAQ,OACR,OAAQ,OACR,KAAM,SACN,KAAM,SACN,KAAM,SACN,SAAU,SACV,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,MAAO,OACP,MAAO,OACP,IAAK,SACL,IAAK,SACL,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,OAAQ,SACR,IAAK,YACL,IAAK,YACL,OAAQ,OACR,OAAQ,OACR,KAAM,SACN,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,SAAU,SACV,OAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,IAAK,OACL,SAAU,IACV,WAAY,SACZ,aAAc,SACd,iBAAkB,SAClB,MAAO,SACP,UAAW,SACX,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,YACN,QAAS,SACT,QAAS,SACT,QAAS,SACT,WAAY,SACZ,iBAAkB,SAClB,YAAa,SACb,YAAa,SACb,YAAa,SACb,cAAe,SACf,cAAe,SACf,eAAgB,SAChB,MAAO,SACP,eAAgB,SAChB,gBAAiB,SACjB,KAAM,SACN,KAAM,SACN,MAAO,SACP,QAAS,SACT,QAAS,SACT,MAAO,SACP,WAAY,SACZ,WAAY,SACZ,OAAQ,SACR,SAAU,SACV,OAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,YACN,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,MAAO,SACP,MAAO,SACP,KAAM,OACN,KAAM,OACN,QAAS,SACT,OAAQ,SACR,WAAY,SACZ,SAAU,SACV,WAAY,SACZ,OAAQ,SACR,MAAO,SACP,UAAW,SACX,KAAM,SACN,KAAM,SACN,OAAQ,SACR,SAAU,SACV,aAAc,eACd,cAAe,eACf,aAAc,eACd,cAAe,eACf,SAAU,SACV,gBAAiB,SACjB,iBAAkB,SAClB,KAAM,SACN,KAAM,SACN,MAAO,SACP,IAAK,SACL,IAAK,SACL,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,IAAK,SACL,IAAK,SACL,OAAQ,SACR,MAAO,SACP,OAAQ,SACR,OAAQ,IACR,OAAQ,SACR,KAAM,IACN,KAAM,SACN,YAAa,SACb,aAAc,IACd,kBAAmB,SACnB,cAAe,SACf,cAAe,SACf,IAAK,YACL,IAAK,YACL,MAAO,SACP,MAAO,eACP,MAAO,eACP,KAAM,YACN,KAAM,YACN,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,YACN,OAAQ,eACR,OAAQ,eACR,OAAQ,eACR,OAAQ,eACR,OAAQ,SACR,QAAS,SACT,MAAO,SACP,MAAO,SACP,OAAQ,SACR,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,IAAK,YACL,IAAK,YACL,KAAM,YACN,KAAM,YACN,GAAI,SACJ,GAAI,SACJ,OAAQ,SACR,KAAM,YACN,KAAM,YACN,KAAM,SACN,MAAO,SACP,KAAM,SACN,MAAO,SACP,IAAK,YACL,IAAK,YACL,MAAO,SACP,MAAO,SACP,GAAI,SACJ,GAAI,SACJ,MAAO,SACP,MAAO,SACP,KAAM,SACN,KAAM,SACN,MAAO,SACP,KAAM,YACN,KAAM,YACN,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,KAAM,YACN,KAAM,YACN,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,KAAM,SACN,OAAQ,SACR,OAAQ,OACR,OAAQ,OACR,KAAM,SACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,YACL,IAAK,YACL,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,OACN,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,IAAK,SACL,IAAK,SACL,KAAM,SACN,KAAM,SACN,OAAQ,SACR,eAAgB,SAChB,KAAM,SACN,KAAM,SACN,IAAK,YACL,IAAK,SACL,KAAM,SACN,KAAM,SACN,QAAS,SACT,KAAM,YACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,IAAK,SACL,KAAM,QACR,EACMC,GAAkB,CACtB,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,IAAK,IACL,IAAK,IACL,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,KAAM,OACN,KAAM,OACN,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,KAAM,OACN,KAAM,OACN,OAAQ,OACR,IAAK,OACL,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,IAAK,OACL,IAAK,OACL,KAAM,OACN,KAAM,OACN,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,GAAI,IACJ,GAAI,IACJ,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,KAAM,OACN,KAAM,OACN,MAAO,OACP,GAAI,IACJ,GAAI,IACJ,KAAM,OACN,MAAO,OACP,OAAQ,OACR,KAAM,OACN,IAAK,OACL,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,KAAM,OACN,KAAM,OACN,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,KAAM,OACN,KAAM,OACN,KAAM,OACN,OAAQ,OACR,MAAO,OACP,KAAM,IACN,KAAM,IACN,MAAO,OACP,IAAK,OACL,IAAK,OACL,KAAM,OACN,IAAK,OACL,KAAM,OACN,KAAM,OACN,KAAM,OACN,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,IAAK,OACL,KAAM,OACN,KAAM,OACN,OAAQ,OACR,OAAQ,OACR,IAAK,OACL,KAAM,MACR,EACMC,GAAmB,CACvB,EAAG,SACH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,QACP,EACMC,GAA6B,CACjC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,MAAO,MAAO,MAAO,MACpE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OACjE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QACjE,QAAS,OACX,EAIMC,GAAqB,OAAO,aAE5BC,GAAW,SAAUC,EAAOC,EAAO,CACvC,IAAIC,EAAQ,GACNC,EAASH,EAAM,OACrB,KAAO,EAAEE,EAAQC,GACf,GAAIH,EAAME,CAAK,IAAMD,EACnB,MAAO,GAEX,MAAO,EACT,EAEA,SAASG,GAAMC,EAASC,EAAU,CAChC,GAAI,CAACD,EACH,OAAOC,EAET,IAAMC,EAAS,CAAC,EACZC,EACJ,IAAKA,KAAOF,EAGVC,EAAOC,CAAG,EAAIC,GAAOJ,EAASG,CAAG,EAAIH,EAAQG,CAAG,EAAIF,EAASE,CAAG,EAElE,OAAOD,CACT,CAGA,IAAMG,GAAoB,SAAUC,EAAWC,EAAQ,CACrD,IAAIC,EAAS,GACb,OAAKF,GAAa,OAAUA,GAAa,OAAWA,EAAY,SAK1DC,GACFE,GAAW,2DAA2D,EAEjE,UAELL,GAAOb,GAAkBe,CAAS,GAChCC,GACFE,GAAW,gCAAgC,EAEtClB,GAAiBe,CAAS,IAE/BC,GAAUb,GAASF,GAA4Bc,CAAS,GAC1DG,GAAW,gCAAgC,EAEzCH,EAAY,QACdA,GAAa,MACbE,GAAUf,GAAqBa,IAAc,GAAM,KAAS,KAAM,EAClEA,EAAY,MAAUA,EAAY,MAEpCE,GAAUf,GAAmBa,CAAS,EAC/BE,EACT,EAEME,GAAY,SAAUJ,EAAW,CACrC,MAAO,MAAMA,EAAU,SAAS,EAAE,EAAE,YAAY,CAAC,GACnD,EAEMK,GAAY,SAAUL,EAAW,CACrC,MAAO,KAAKA,CAAS,GACvB,EAEA,SAASG,GAAWG,EAAS,CAC3B,MAAM,IAAI,MAAM,gBAAgBA,CAAO,EAAE,CAC3C,CAIA,IAAMC,GAAS,SAAUC,EAAQd,EAAS,CACxCA,EAAUD,GAAMC,EAASa,GAAO,OAAO,EACxBb,EAAQ,QACTb,GAAyB,KAAK2B,CAAM,GAChDL,GAAW,sBAAsB,EAEnC,IAAMM,EAAmBf,EAAQ,iBAC3BgB,EAAqBhB,EAAQ,mBAC7BiB,EAAqBjB,EAAQ,mBAC7BkB,EAAkBlB,EAAQ,QAAUW,GAAYD,GAEhDS,EAAkB,SAAUC,EAAQ,CACxC,OAAOF,EAAgBE,EAAO,WAAW,CAAC,CAAC,CAC7C,EAEA,OAAIL,GAEFD,EAASA,EAAO,QAAQjC,GAAsBuC,GAExCJ,GAAsBZ,GAAOpB,GAAWoC,CAAM,EACzC,IAAIpC,GAAUoC,CAAM,CAAC,IAEvBD,EAAgBC,CAAM,CAC9B,EAGGJ,IACFF,EAASA,EACN,QAAQ,cAAe,QAAQ,EAC/B,QAAQ,cAAe,QAAQ,EAC/B,QAAQ,gBAAiB,SAAS,GAGnCE,IAEFF,EAASA,EAAO,QAAQ/B,GAAsB+B,GAErC,IAAI9B,GAAU8B,CAAM,CAAC,GAC7B,IAIIE,GAGFC,IACHH,EAASA,EAAO,QAAQ7B,GAAc6B,GAC7B,IAAI9B,GAAU8B,CAAM,CAAC,GAC7B,GAIHA,EAASA,EACN,QAAQ,cAAe,QAAQ,EAC/B,QAAQ,cAAe,QAAQ,EAElCA,EAASA,EAAO,QAAQ/B,GAAsB+B,GAErC,IAAI9B,GAAU8B,CAAM,CAAC,GAC7B,GAEOG,IAGRH,EAASA,EAAO,QAAQ7B,GAAakC,CAAe,GAGpDL,EAEG,QAAQlC,GAAqByC,GAAO,CAEnC,IAAMC,EAAOD,EAAG,WAAW,CAAC,EACtBE,EAAMF,EAAG,WAAW,CAAC,EACrBf,GAAagB,EAAO,OAAU,KAAQC,EAAM,MAAS,MAC3D,OAAOL,EAAgBZ,CAAS,CAClC,CAAC,EAGA,QAAQxB,GAAmBqC,CAAe,CAEjD,EAEAN,GAAO,QAAU,CACf,mBAAoB,GACpB,iBAAkB,GAClB,OAAQ,GACR,mBAAoB,GACpB,QAAS,EACX,EAEO,SAASW,GAAOC,EAAczB,EAAe,CAClDA,EAAUD,GAAMC,EAASwB,GAAO,OAAO,EACvC,IAAMjB,EAASP,EAAQ,OACvB,OAAIO,GAAUrB,GAAmB,KAAKuC,CAAI,GACxChB,GAAW,+BAA+B,EAErCgB,EAAK,QACVrC,GACA,CAACiC,EAAIK,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,IAAQ,CACvC,IAAI3B,EACA4B,EACAC,EACAC,EACAC,EACAC,EAEJ,OAAIZ,GACFW,EAAYX,EAELrC,GAAUgD,CAAS,GAGxBV,GAIFU,EAAYV,EACZW,EAAOV,EACHU,GAAQtC,EAAQ,kBACdO,GAAU+B,IAAS,KACrB7B,GAAW,yCAAyC,EAE/CY,IAGHd,GACFE,GACE,6DACF,EAGKnB,GAAgB+C,CAAS,GAAKC,GAAQ,MAI7CT,GAEFM,EAAYN,EACZK,EAAYJ,EACRvB,GAAU,CAAC2B,GACbzB,GAAW,uDAAuD,EAEpEH,EAAY,OAAO,SAAS6B,EAAW,EAAE,EAClC9B,GAAkBC,EAAWC,CAAM,GAGxCwB,GAEFK,EAAYL,EACZG,EAAYF,EACRzB,GAAU,CAAC2B,GACbzB,GAAW,uDAAuD,EAEpEH,EAAY,OAAO,SAAS8B,EAAW,EAAE,EAClC/B,GAAkBC,EAAWC,CAAM,IAKxCA,GACFE,GACE,6DACF,EAEKY,EACT,CACF,CACF,CAEAG,GAAO,QAAU,CACf,iBAAkB,GAClB,OAAQ,EACV,ECh/HO,SAASe,GAAWC,EAAc,CACvC,OAAOA,EACJ,QAAQ,KAAM,OAAO,EACrB,QAAQ,KAAM,MAAM,EACpB,QAAQ,KAAM,MAAM,EACpB,QAAQ,KAAM,QAAQ,EACtB,QAAQ,KAAM,QAAQ,CAC3B,CAMO,IAAMC,GAAgBhB,GAAiBD,GAAOC,CAAI,ECAzD,SAASiB,GACPC,EACAC,EACAC,EACAC,EAC8B,CAC9B,GAAI,OAAOF,GAAQ,WACjB,OAAOA,EAAI,CACT,MAAOG,EAAAC,EAAA,GAAKH,GAAL,CAAY,SAAAC,CAAS,GAC5B,MAAAD,EACA,SAAAC,EACA,EAAGH,EAAQ,EACX,QAAAA,CACF,CAAC,EAEE,CACH,IAAIM,EAAY,GACZC,EAWJ,GAVIN,EACEA,EAAI,YAAY,IAAM,YACxBM,EAAKP,EAAQ,SAAS,uBAAuB,EAC7CM,EAAY,IAEPC,EAAKP,EAAQ,SAAS,cAAcC,CAAG,EAG9CM,EAAKP,EAAQ,SAAS,cAAc,KAAK,EAEvCE,GAASI,EAAW,CACtB,IAAME,EAAUD,EAChB,OAAS,CAAC/C,EAAKP,CAAK,IAAK,OAAO,QAAQiD,CAAK,EAAG,CAC9C1C,EAAMA,EAAI,SAAS,EACnB,IAAMiD,EAAajD,EAAI,YAAY,EAC/BiD,IAAe,YACjBD,EAAQ,UAAYvD,EAEbwD,IAAe,KACtB,OAAO,QAAQxD,CAAK,EAAE,QAAQ,CAAC,CAACyD,EAAMzD,CAAK,IAAM,CAC/CuD,EAAQ,aAAa,KAAKE,CAAI,GAAI,OAAOzD,CAAK,CAAC,CACjD,CAAC,EAOMA,IAAU,IAASA,GAAS,OAC/BA,IAAU,GACZuD,EAAQ,aAAahD,EAAKA,CAAG,EAE7BgD,EAAQ,aAAahD,EAAKP,EAAM,SAAS,CAAC,EAEhD,CACF,CACA,GAAIkD,EACF,QAAWQ,KAAcR,EAAU,CACjC,IAAMS,EAAK,MAAM,QAAQD,CAAU,EAAI,CAAC,GAAGA,CAAU,EAAI,CAACA,CAAU,EACpE,QAAWE,KAASD,EACdC,GACEA,IAAU,IAASA,GAAS,OAC1B,OAAOA,GAAU,SACnBN,EAAG,YACDP,EAAQ,SAAS,eAAea,EAAM,SAAS,CAAC,CAClD,EAGAN,EAAG,YAAYM,CAAK,EAK9B,CAEF,OAAON,CACT,CACF,CAEO,SAASO,GAAgBb,EAAUC,KAAeC,EAAiB,CACxE,OAAI,OAAOF,GAAQ,WACjBA,EAAM,WACNE,EAAWF,EAAI,SACfC,EAAQD,EAAI,OAEV,MAAM,QAAQC,CAAK,GACrBC,EAAW,CAACD,CAAK,EACjBA,EAAQ,CAAC,GAEFA,EACHA,EAAM,QACRA,EAAQG,IAAA,GAAKH,EAAM,OAAUA,GAC7B,OAAOA,EAAM,OAIfA,EAAQ,CAAC,EAEJ,CACL,IAAAD,EACA,MAAAC,EACA,SACE,OAAOC,EAAS,CAAC,GAAM,SAAWA,EAAWA,EAAS,KAAK,OAAO,iBAAiB,CACvF,CACF,CAEO,SAASY,GAASf,EAAkB,CAEzC,OAAAA,EAAQ,EAAI,SAAWgB,EAAWC,KAAgBC,EAAkB,CAClE,GAAM,CAAE,IAAAjB,EAAK,MAAAC,EAAO,SAAAC,CAAS,EAAIW,GAAgBE,EAAMC,EAAQC,CAAS,EACxE,OAAOnB,GAAGC,EAASC,EAAKC,EAAOC,CAAQ,CACzC,EACOH,EAAQ,CACjB,CCnHO,IAAMmB,GAAoB,CAC/B,OACA,OACA,KACA,MACA,QACA,KACA,MACA,QACA,SACA,OACA,OACA,QACA,SACA,QACA,MACA,SACF,EAUO,SAASC,GACdC,EACAC,EACAC,EAAa,CAAC,EACdC,EACA,CACA,IAAMC,EAAc,EACjB,OAAOD,GAAa,UAAYA,IAAa,IAC1C,MAAM,QAAQA,CAAQ,IACpBA,EAAS,SAAW,GAClBA,EAAS,SAAW,GAAKA,EAAS,CAAC,IAAM,KAC9CA,GAAY,MAGXE,EAAkB,CAAC,EAIzB,GAHAJ,EAAMA,EAAI,QAAQ,MAAO,GAAG,EAGxBA,IAAQ,QAAUA,IAAQ,GAAI,CAC5BA,IAAQ,QACVI,EAAM,KAAK,IAAIJ,CAAG,EAAE,EAEpBI,EAAM,KAAK,WAAW,EAGxB,QAASC,KAAQJ,EACf,GAAII,GAAQC,GAAOL,EAAOI,CAAI,EAAG,CAC/B,IAAME,EAAIN,EAAMI,CAAI,EACpB,GAAIA,IAAS,OACX,SAEEA,EAAK,YAAY,IAAM,cACzBA,EAAO,SAETA,EAAOA,EAAK,QAAQ,MAAO,GAAG,EAC1BE,IAAM,GAERH,EAAM,KAAK,IAAIC,CAAI,EAAE,EAEdA,IAAS,SAAW,OAAOE,GAAM,SACxCH,EAAM,KACJ,IAAIC,CAAI,KAAK,OAAO,KAAKE,CAAC,EACvB,OAAOC,GAAKD,EAAEC,CAAC,GAAK,IAAI,EACxB,IAAKA,GAAM,CACV,IAAIC,EAAKF,EAAEC,CAAC,EACZ,OAAAC,EAAK,OAAOA,GAAO,SAAW,GAAGA,CAAE,KAAOA,EACnC,GAAGD,EACP,QAAQ,kBAAmB,OAAO,EAClC,YAAY,CAAC,IAAIC,CAAE,EACxB,CAAC,EACA,KAAK,GAAG,CAAC,GACd,EAEOF,IAAM,IAASA,GAAK,MAC3BH,EAAM,KAAK,IAAIC,CAAI,KAAKK,GAAWH,EAAE,SAAS,CAAC,CAAC,GAAG,CAEvD,CAGF,GAAIP,IAAQ,QAAS,CACnB,GAAID,GAAW,CAACI,EACd,OAAAC,EAAM,KAAK,KAAK,EACTA,EAAM,KAAK,EAAE,EAGpBA,EAAM,KAAK,GAAG,CAElB,CAEA,GAAI,CAACL,GAAWY,GAAkB,SAASX,CAAG,EAC5C,OAAOI,EAAM,KAAK,EAAE,CACxB,CAGA,GAAID,GACF,GAAI,OAAOD,GAAa,SACtBE,EAAM,KAAKF,CAAQ,UAEZA,GAAYA,EAAS,OAAS,GACrC,QAASU,KAASV,EAChB,GAAIU,GAAS,MAAQA,IAAU,GAAO,CAC/B,MAAM,QAAQA,CAAK,IACtBA,EAAQ,CAACA,CAAK,GAEhB,QAAWC,KAAKD,EAGXC,EAAE,WAAW,GAAG,GAAKA,EAAE,SAAS,GAAG,GACjCb,IAAQ,UACRA,IAAQ,QAEXI,EAAM,KAAKS,CAAC,EAEZT,EAAM,KAAKM,GAAWG,EAAE,SAAS,CAAC,CAAC,CAEzC,GAKN,OAAIZ,EAAM,MACRG,EAAM,KAAKH,EAAM,IAAI,EAEnBD,IAAQ,QAAUA,IAAQ,KACxBA,IAAQ,QACVI,EAAM,KAAK,KAAKJ,CAAG,GAAG,EAEtBI,EAAM,KAAK,KAAK,GAEbA,EAAM,KAAK,EAAE,CACtB,CAEO,SAASU,GAAKC,EAAcC,KAAoBC,EAAkB,CACvE,GAAM,CAAE,IAAAjB,EAAK,MAAAC,EAAO,SAAAC,CAAS,EAAIgB,GAAgBH,EAAMC,EAAQC,CAAS,EACxE,OAAOnB,GAAO,GAAOE,EAAKC,EAAOC,CAAQ,CAC3C,CAEO,IAAMiB,GAAWrB,GAAO,KAAK,KAAM,EAAK,EAE/CgB,GAAK,UAAY,kBACjBA,GAAK,KAAO,GCzJZ,SAASM,MAAOC,EAAY,CAAC,CAI7B,IAAMC,GAA6B,CAAC,EAE7B,SAASC,GAAcC,EAAkB,CAC9C,IAAIC,EAAMH,GAAME,CAAQ,EACxB,OAAIC,GAAO,OACTA,EAAMC,GAAMF,CAAQ,EACpBF,GAAME,CAAQ,EAAIC,GAEbA,CACT,CAIO,SAASE,GACdH,EACAI,EACA,CAAE,MAAAC,EAAQ,EAAM,EAAI,CAAC,EACrB,CACA,QAAWC,KAASP,GAAcC,CAAQ,EAAG,CACvCK,IACFT,GAAI,YAAaI,CAAQ,EACzBJ,GAAI,SAAUU,CAAK,EACnBV,GAAI,WAAYQ,CAAO,GAGzB,IAAMG,EAAc,CAACH,EAAmBE,IAAiB,CAlC7D,IAAAE,EAAAC,EAAAC,EAAAC,EAoCM,IAAIC,EAAU,GACd,QAAWC,KAAQP,EAAO,CACxB,GAAM,CAAE,KAAAQ,EAAM,KAAAC,EAAM,OAAAC,EAAQ,MAAAC,EAAO,YAAAC,EAAc,GAAM,KAAAC,CAAK,EAAIN,EAChE,GAAIC,IAAS,YACPE,IAAW,UACbJ,EAAUR,EAAQ,aAAaW,CAAI,IAAME,EACrCZ,GACFT,GAAI,mBAAoBgB,CAAO,GAE1BI,IAAW,SAClBJ,EAAU,CAAC,GAACJ,EAAAJ,EAAQ,aAAaW,CAAI,IAAzB,MAAAP,EAA4B,WAAWS,CAAA,GAC/CZ,GACFT,GAAI,kBAAmBgB,CAAO,GAEzBI,IAAW,OAClBJ,EAAU,CAAC,GAACH,EAAAL,EAAQ,aAAaW,CAAI,IAAzB,MAAAN,EAA4B,SAASQ,CAAA,GAC7CZ,GACFT,GAAI,kBAAmBgB,CAAO,GAEzBI,IAAW,UACdD,IAAS,SACXH,EAAUR,EAAQ,UAAU,SAASa,CAAK,EACtCZ,GACFT,GAAI,kBAAmBgB,CAAO,IAGhCA,EAAU,CAAC,GAACF,EAAAN,EAAQ,aAAaW,CAAI,IAAzB,MAAAL,EAA4B,SAASO,CAAA,GAC7CZ,GACFT,GAAI,oBAAqBgB,CAAO,GAG7BI,IAAW,UAClBJ,EAAUR,EAAQ,aAAaW,CAAI,EAC/BV,GACFT,GAAI,mBAAoBgB,CAAO,GAE1BI,IAAW,OAClBJ,EAAU,CAAC,GAACD,EAAAP,EAAQ,aAAaW,CAAI,IAAzB,MAAAJ,EAA4B,SAASM,CAAA,GAC7CZ,GACFT,GAAI,gBAAiBgB,CAAO,GAG9B,QAAQ,KAAK,8BAA+BI,CAAM,UAG7CF,IAAS,MAChBF,EAAUR,EAAQ,UAAYW,EAAK,YAAY,EAC3CV,GACFT,GAAI,SAAUgB,CAAO,UAEhBE,IAAS,YAChBF,EAAU,GACNP,GACFT,GAAI,eAAgBgB,CAAO,UAEtBE,IAAS,SAAU,CAC1B,GAAIC,IAAS,MAAO,CAClB,IAAIK,EAAK,GACTD,EAAK,QAASb,GAAe,CACtBC,EAAYH,EAASE,CAAK,IAC7Bc,EAAK,GACT,CAAC,EACDR,EAAU,CAACQ,CACb,CACIf,GACFT,GAAI,UAAWgB,CAAO,CAG1B,MAME,QAAQ,KAAK,4BAA6BE,EAAMd,EAAUM,CAAK,EAGjE,GAAI,CAACM,EACH,KAGJ,CACA,OAAOA,CACT,EAEA,GAAIL,EAAYH,EAASE,CAAK,EAC5B,MAAO,EACX,CACA,MAAO,EACT,CCrHA,IAAMe,GAAU,OAAO,IAAI,4BAA4B,EAEjDC,GAAI,CAAE,WAAY,MAAO,EACzBC,GAAI,CAAE,UAAW,QAAS,EAC1BC,GAAI,CAAE,gBAAiB,oBAAqB,EAC5CC,GAAI,CAAE,gBAAiB,WAAY,EACnCC,GAAI,CAAE,gBAAiB,cAAe,EAGtCC,GAAW,CACf,EAAGL,GACH,OAAQA,GACR,GAAIC,GACJ,EAAGA,GACH,KAAMC,GACN,EAAGC,GACH,EAAGA,GACH,EAAGC,GACH,IAAKA,GACL,IAAKF,GACL,OAAQE,EAGV,EAEA,SAASE,GAAYC,EAAmB,CACtC,OAAOA,EAAE,YAAY,EAAE,QAAQ,oBAAqB,CAACC,EAAIC,IAAQA,EAAI,YAAY,CAAC,CACpF,CAEO,IAAMC,GAAN,MAAMA,EAAM,CA2BjB,aAAc,CAyEd,KAAA,OAAS,KAAK,YAxEZ,KAAK,YAAc,KACnB,KAAK,YAAc,CAAC,CACtB,CAjBA,IAAI,UAAmB,CACrB,eAAQ,MAAM,oCAAoC,EAC3C,CACT,CAEA,IAAI,UAAW,CACb,eAAQ,MAAM,oCAAoC,EAC3C,EACT,CAEA,IAAI,WAA2B,CAC7B,OAAO,IACT,CAOA,UAAUC,EAAO,GAAO,CAEtB,IAAMC,EAAO,IAAI,KAAK,YACtB,OAAID,IACFC,EAAK,YAAc,KAAK,YAAY,IAAIC,GAAKA,EAAE,UAAU,EAAI,CAAC,EAC9DD,EAAK,qBAAqB,GAErBA,CACT,CAEA,sBAAuB,CACrB,KAAK,YAAY,QAAQA,GAASA,EAAK,YAAc,IAAK,CAC5D,CAEA,aAAaE,EAAgBF,EAAc,CACzC,GAAIE,IAAYF,EAAM,CACpB,IAAIG,EAAQH,EAAO,KAAK,YAAY,QAAQA,CAAI,EAAI,EAChDG,EAAQ,IACVA,EAAQ,GACV,KAAK,YAAY,OAAOA,EAAO,EAAGD,CAAO,EACzC,KAAK,qBAAqB,CAC5B,CACF,CAEA,YAAYF,EAA8D,CACxE,GAAIA,GAAQ,KAEZ,IAAIA,IAAS,KAAM,CACjB,QAAQ,KAAK,4BAA4B,EACzC,MACF,CAMA,GAHIA,aAAgBI,IAClB,QAAQ,KAAK,iDAAkDJ,CAAI,EAEjEA,aAAgBK,GAClB,QAAWJ,IAAK,CAAC,GAAGD,EAAK,WAAW,EAElC,KAAK,YAAYC,CAAC,UAGb,MAAM,QAAQD,CAAI,EACzB,QAAWC,IAAK,CAAC,GAAGD,CAAI,EAEtB,KAAK,YAAYC,CAAC,UAGbD,aAAgBF,GACvBE,EAAK,OAAO,EACZ,KAAK,YAAY,KAAKA,CAAI,MAI1B,IAAI,CACF,IAAMM,EACF,OAAON,GAAS,SAAWA,EAAO,KAAK,UAAUA,EAAM,KAAM,CAAC,EAClE,KAAK,YAAY,KAAK,IAAIO,GAAUD,CAAI,CAAC,CAC3C,OACOE,EAAK,CACV,QAAQ,MACN,YAAYR,CAAI,mBAAmB,KAAK,OAAO,CAAC,oBAAoBQ,CAAG,EACzE,CACF,CAEF,KAAK,qBAAqB,EAC5B,CAIA,YAAYR,EAA6B,CACvC,IAAMS,EAAI,KAAK,YAAY,QAAQT,CAAI,EACnCS,GAAK,IACPT,EAAK,YAAc,KACnB,KAAK,YAAY,OAAOS,EAAG,CAAC,EAC5B,KAAK,qBAAqB,EAE9B,CAGA,QAAS,CArJX,IAAAnC,EAsJI,OAAAA,EAAA,MAAA,KAAA,OAAA,KAAM,aAAN,MAAAA,EAAkB,YAAY,IAAA,EACvB,IACT,CAGA,mBAAmBoC,EAAc,CAC/B,KAAK,YAAcA,EAAM,IAAI,GAC3B,OAAO,GAAM,SAAW,IAAIH,GAAU,CAAC,EAAI,EAAE,OAAO,CACtD,EACA,KAAK,qBAAqB,CAC5B,CAGA,eAAeG,EAAc,CAC3B,IAAMC,EAAI,KAAK,YACf,GAAIA,EAAG,CACL,IAAMR,EAAQ,KAAK,eAAe,EAC9BA,GAAS,IACXO,EAAQA,EAAM,IAAIE,GAChB,OAAOA,GAAM,SAAW,IAAIL,GAAUK,CAAC,EAAIA,EAAE,OAAO,CACtD,EACAD,EAAE,YAAY,OAAOR,EAAO,EAAG,GAAGO,CAAK,EACvC,KAAK,YAAc,KACnBC,EAAE,qBAAqB,EAE3B,CACF,CAEA,gBAAiB,CACf,OAAI,KAAK,YACA,KAAK,YAAY,WAAW,QAAQ,IAAI,EAC1C,EACT,CAEA,IAAI,YAAa,CACf,OAAO,KAAK,WACd,CAEA,IAAI,YAAa,CACf,OAAO,KAAK,aAAe,CAAC,CAC9B,CAEA,IAAI,UAAW,CACb,OAAO,KAAK,aAAe,CAAC,CAC9B,CAEA,IAAI,YAAa,CACf,OAAO,KAAK,YAAY,CAAC,CAC3B,CAEA,IAAI,WAAY,CACd,OAAO,KAAK,YAAY,KAAK,YAAY,OAAS,CAAC,CACrD,CAEA,IAAI,aAAc,CAChB,IAAMF,EAAI,KAAK,eAAe,EAC9B,OAAIA,GAAK,MACA,KAAK,WAAW,WAAWA,EAAI,CAAC,GAAK,IAEhD,CAEA,IAAI,iBAAkB,CACpB,IAAMA,EAAI,KAAK,eAAe,EAC9B,OAAIA,EAAI,GACC,KAAK,WAAW,WAAWA,EAAI,CAAC,GAAK,IAEhD,CAEA,SAAsB,CACpB,IAAMI,EAAuB,CAAC,EAC1B,gBAAgBC,IAClBD,EAAS,KAAK,IAAI,EACpB,QAAWE,KAAS,KAAK,YACvBF,EAAS,KAAK,GAAGE,EAAM,QAAQ,CAAC,EAClC,OAAOF,CACT,CAEA,cAAwB,CACtB,IAAMH,EAAiB,CAAC,EACxBA,EAAM,KAAK,IAAI,EACf,QAAWK,KAAS,KAAK,YACvBL,EAAM,KAAK,GAAGK,EAAM,aAAa,CAAC,EACpC,OAAOL,CACT,CAEA,QAAS,CACP,MAAO,EACT,CAEA,IAAI,aAA6B,CAC/B,OAAO,KAAK,YAAY,IAAIT,GAAKA,EAAE,WAAW,EAAE,KAAK,EAAE,CACzD,CAEA,IAAI,YAAYK,EAAM,CACpB,KAAK,YAAc,CAAC,EAChBA,GACF,KAAK,YAAY,IAAIC,GAAUD,EAAK,SAAS,CAAC,CAAC,CACnD,CAEA,SAASU,EAAiB,CACxB,OAAIA,IAAc,KACT,GAEF,KAAK,YAAY,KAAK,GAAK,EAAE,SAASA,CAAS,CAAC,CACzD,CAEA,IAAI,eAAgB,CAhQtB,IAAA1C,EAiQI,OACE,KAAK,WAAawB,GAAM,eACrB,KAAK,WAAaA,GAAM,uBAEpB,MAEFxB,EAAA,MAAA,KAAA,OAAA,KAAM,cAAN,KAAA,OAAAA,EAAmB,aAC5B,CAEA,UAAmB,CACjB,MAAO,GAAG,KAAK,QAAQ,EAEzB,CAEA,CAACa,EAAO,GAAI,CACV,MAAO,GAAG,KAAK,YAAY,IAAI,KAAK,KAAK,OAAO,CAAC,GACnD,CACF,EA7OaW,GACJ,aAAe,EADXA,GAEJ,UAAY,EAFRA,GAGJ,mBAAqB,EAHjBA,GAIJ,4BAA8B,EAJ1BA,GAKJ,aAAe,EALXA,GAMJ,cAAgB,EANZA,GAOJ,mBAAqB,GAPjBA,GAQJ,uBAAyB,GAR3B,IAAMmB,GAANnB,GA+OMS,GAAN,cAAwBU,EAAM,CAmBnC,YAAYX,EAAO,GAAI,CACrB,MAAM,EACN,KAAK,MAAQA,CACf,CAnBA,IAAI,UAAmB,CACrB,OAAOW,GAAM,SACf,CAEA,IAAI,UAAW,CACb,MAAO,OACT,CAEA,IAAI,WAA2B,CAC7B,OAAO,KAAK,OAAS,EACvB,CAEA,IAAI,aAA6B,CAC/B,OAAO,KAAK,SACd,CAOA,QAAS,CA5SX,IAAA3C,EA6SI,IAAM4C,GAAgB5C,EAAA,KAAK,aAAL,KAAA,OAAAA,EAAiB,QACvC,OAAI4C,IAAkB,UAAYA,IAAkB,QAC3C,KAAK,MAEPC,GAAW,KAAK,KAAK,CAC9B,CAEA,UAAUpB,EAAO,GAAO,CACtB,IAAMC,EAAO,MAAM,UAAUD,CAAI,EACjC,OAAAC,EAAK,MAAQ,KAAK,MACXA,CACT,CACF,EAEaoB,GAAN,cAAyBH,EAAM,CACpC,eAAepC,EAAc,CAC3B,OAAO,KAAK,QAAQ,EAAE,KAAK,GAAK,EAAE,YAAY,KAAOA,CAAI,CAC3D,CAEA,uBAAuBA,EAAW,CAChC,OAAO,KAAK,QAAQ,EAAE,OAAO,GAAK,EAAE,UAAU,SAASA,CAAI,CAAC,CAC9D,CAEA,QAAQf,EAAkB,CACxB,OAAOG,GAAcH,EAAU,IAAW,CAC5C,CAEA,iBAAiBA,EAAe,CAC9B,OAAO,KAAK,QAAQ,EAAE,OAAO,GAAK,EAAE,QAAQA,CAAQ,CAAC,CACvD,CAEA,cAAcA,EAAkB,CAC9B,OAAO,KAAK,QAAQ,EAAE,KAAK,GAAK,EAAE,QAAQA,CAAQ,CAAC,CACrD,CAIA,OAAOA,EAAkB,CAlV3B,IAAAQ,EAmVI,OAAI,KAAK,QAAQR,CAAQ,EAChB,KAEL,KAAK,YAAc,KACd,MAEFQ,EAAA,KAAK,aAAL,KAAA,OAAAA,EAAiB,OAAOR,CAAA,CACjC,CAEA,OAAOA,EAAeuD,EAAiD,CACrE,IAAIZ,EAAI,EACR,QAAWa,KAAM,KAAK,iBAAiBxD,CAAQ,EAC7CuD,EAAQC,EAAIb,GAAG,CACnB,CACF,EAOaK,GAAN,cAAuBM,EAAW,CAcvC,YAAYvC,EAAO,MAAO0C,EAAQ,CAAC,EAAG,CACpC,MAAM,EACN,KAAK,iBAAmB1C,EACxB,KAAK,WAAaA,GAAQ,IAAI,YAAY,EAC1C,KAAK,YAAc0C,GAAS,CAAC,EAC7B,KAAK,QAAU,IACjB,CAdA,IAAI,UAAW,CACb,OAAON,GAAM,YACf,CAEA,IAAI,UAAW,CACb,OAAO,KAAK,SACd,CAUA,UAAUlB,EAAO,GAAO,CACtB,IAAMC,EAAO,MAAM,UAAUD,CAAI,EACjC,OAAAC,EAAK,iBAAmB,KAAK,iBAC7BA,EAAK,UAAY,KAAK,UACtBA,EAAK,YAAc,OAAO,OAAO,CAAC,EAAG,KAAK,WAAW,EAC9CA,CACT,CAEA,IAAI,YAAqB,CACvB,OAAO,OAAO,QAAQ,KAAK,WAAW,EAAE,IAAI,CAAC,CAACnB,EAAME,CAAK,KAAa,CAAE,KAAAF,EAAM,MAAAE,CAAM,EAAE,CAExF,CAEA,IAAI,kBAAmB,CACrB,OAAOyC,EAAA,GAAK,KAAK,YACnB,CAEA,mBAAmB3C,EAAc,CAC/B,IAAM4C,EAAS5C,EAAK,YAAY,EAChC,OACE,OAAO,KAAK,KAAK,WAAW,EAAE,KAC5BA,GAAQ4C,IAAW5C,EAAK,YAAY,CACtC,GAAK,IAET,CAEA,aAAaA,EAAcE,EAAe,CACxC,KAAK,gBAAgBF,CAAI,EACzB,KAAK,YAAYA,CAAI,EAAIE,EACzB,KAAK,QAAU,IACjB,CAEA,aAAaF,EAA6B,CACxC,IAAM6C,EAAe,KAAK,mBAAmB7C,CAAI,EAC3CE,EAAQ2C,EAAe,KAAK,YAAYA,CAAY,EAAI,KAC9D,OAAI3C,GAAS,KACJ,KACA,OAAOA,GAAU,SACjBA,EAEA,EACX,CAEA,gBAAgBF,EAAuB,CAChB,KAAK,mBAAmB,OAAOA,CAAI,CAAC,GAEvD,OAAO,KAAK,YAAYA,CAAI,CAChC,CAEA,aAAaA,EAAW,CACtB,IAAM6C,EAAe,KAAK,mBAAmB7C,CAAI,EACjD,OAAO6C,EAAe,KAAK,YAAYA,CAAY,GAAK,KAAO,EACjE,CAEA,IAAI,OAAQ,CACV,GAAI,KAAK,SAAW,KAAM,CACxB,IAAMC,EAAS,OAAO,OAAO,CAAC,EAAGlC,GAAS,KAAK,QAAQ,YAAY,CAAC,GAAK,CAAC,CAAC,EACrEmC,EAAc,KAAK,aAAa,OAAO,EAC7C,GAAIA,EAAa,CACf,IAAIC,EACEC,EAAK,6BAEX,KAAQD,EAAIC,EAAG,KAAKF,CAAW,GAAI,CACjC,IAAM/C,EAAOgD,EAAE,CAAC,EACV9C,EAAQ8C,EAAE,CAAC,EAAE,KAAK,EACxBF,EAAO9C,CAAI,EAAIE,EACf4C,EAAOjC,GAAYb,CAAI,CAAC,EAAIE,CAC9B,CACF,CACA,KAAK,QAAU4C,CACjB,CACA,OAAO,KAAK,OACd,CAEA,IAAI,SAAU,CACZ,OAAO,KAAK,SACd,CAGA,WAAW9C,EAAc,CACvB,KAAK,UAAYA,EAAK,YAAY,CACpC,CAEA,IAAI,IAAoB,CACtB,OAAO,KAAK,YAAY,IAAM,IAChC,CAEA,IAAI,GAAGE,EAAsB,CACvBA,GAAS,KACX,OAAO,KAAK,YAAY,GACrB,KAAK,YAAY,GAAKA,CAC7B,CAEA,IAAI,KAAqB,CACvB,OAAO,KAAK,YAAY,GAC1B,CAEA,IAAI,IAAIA,EAAsB,CACxBA,GAAS,KACX,OAAO,KAAK,YAAY,IACrB,KAAK,YAAY,IAAMA,CAC9B,CAIA,qBAAqBF,EAAc,CACjCA,EAAOA,EAAK,YAAY,EACxB,IAAMgC,EAAW,KAAK,QAAQ,EAC9B,OAAIhC,IAAS,IACJgC,EAAS,OAAOkB,GAAKA,EAAE,UAAYlD,CAAI,EAEzCgC,CACT,CAIA,aAAamB,EAAe,CAE5B,CAEA,IAAI,WAAY,CACd,OAAO,KAAK,YAAY,IAAI/B,GAAKA,EAAE,OAAOgC,EAAI,CAAC,EAAE,KAAK,EAAE,CAC1D,CAEA,IAAI,UAAUA,EAAM,CAClB,KAAK,aAAaA,CAAI,CACxB,CAEA,IAAI,WAAY,CACd,OAAO,KAAK,OAAOC,EAAQ,CAC7B,CAIA,IAAI,WAAoB,CACtB,OAAO,KAAK,YAAY,OAAS,EACnC,CAEA,IAAI,UAAUrD,EAAyB,CACjC,MAAM,QAAQA,CAAI,EACpBA,EAAOA,EAAK,OAAO+B,GAAK,CAAC,CAACA,CAAC,EAAE,KAAK,GAAG,EAE9B,OAAO/B,GAAS,WACvBA,EAAO,OAAO,QAAQA,CAAI,EACvB,OAAO,CAAC,CAACsD,EAAIC,CAAC,IAAM,CAAC,CAACA,CAAC,EACvB,IAAI,CAAC,CAACC,EAAGC,CAAE,IAAMD,CAAC,EAClB,KAAK,GAAG,GAEb,KAAK,YAAY,MAAQxD,CAC3B,CAEA,IAAI,WAAY,CArhBlB,IAAAP,EAuhBI,IAAMiE,EAAO,KACPC,EAAa,QAAOlE,EAAA,KAAK,YAAL,KAAAA,EAAkB,EAAE,EAAE,KAAK,EAAE,MAAM,MAAM,GAAK,CAAC,EAEzE,MAAO,CACL,SAASqB,EAAQ,CACf,OAAO6C,EAAW,SAAS7C,CAAC,CAC9B,EACA,IAAIA,EAAQ,CACL6C,EAAW,SAAS7C,CAAC,IACxB6C,EAAW,KAAK7C,CAAC,EACjB4C,EAAK,UAAYC,EAErB,EACA,OAAO7C,EAAQ,CACb,IAAMQ,EAAQqC,EAAW,QAAQ7C,CAAC,EAC9BQ,GAAS,IACXqC,EAAW,OAAOrC,EAAO,CAAC,EAC1BoC,EAAK,UAAYC,EAErB,CACF,CACF,CAIA,OAAOC,EAAIP,GAAU,CACnB,OAAOO,EACL,KAAK,kBAAoB,KAAK,QAC9B,KAAK,YACL,KAAK,YAAY,IAAIxC,GAAKA,EAAE,OAAOwC,CAAC,CAAC,EAAE,KAAK,EAAE,CAChD,CACF,CACF,EAEaC,GAAN,MAAMC,WAAiB1B,EAAM,CAOlC,IAAI,UAAmB,CACrB,OAAO,MAAM,QACf,CAEA,IAAI,WAA2B,CAC7B,OAAO,MAAM,SACf,CAEA,IAAI,UAAmB,CACrB,OAAO0B,GAAS,kBAClB,CAEA,QAAS,CACP,MAAO,iBACT,CACF,EAEatC,GAAN,MAAMuC,WAA0BxB,EAAW,CAGhD,IAAI,UAAW,CACb,OAAOH,GAAM,sBACf,CAEA,IAAI,UAAW,CACb,MAAO,oBACT,CAEA,OAAOwB,EAAIP,GAAU,CACnB,OAAO,KAAK,YAAY,IAAIjC,GAAKA,EAAE,OAAOwC,CAAC,GAAK,CAAC,CAAC,EAAE,KAAK,EAAE,CAC7D,CAEA,IAAI,WAAY,CAEd,OAAO,KAAK,YAAY,IAAIxC,GAAKA,EAAE,OAAOgC,EAAI,CAAC,EAAE,KAAK,EAAE,CAC1D,CAEA,cAAcpD,EAAc0C,EAAQ,CAAC,EAAG,CACtC,OAAO,IAAIT,GAASjC,EAAM0C,CAAK,CACjC,CAEA,wBAAyB,CACvB,OAAO,IAAIqB,EACb,CAEA,eAAetC,EAAe,CAC5B,OAAO,IAAIC,GAAUD,CAAI,CAC3B,CACF,EAEaF,GAAN,cAAwBC,EAAkB,CAC/C,IAAI,UAAW,CACb,OAAOY,GAAM,aACf,CAEA,IAAI,UAAW,CACb,MAAO,WACT,CAEA,IAAI,iBAAkB,CACpB,OAAO,KAAK,UACd,CAEA,OAAOwB,EAAIP,GAAU,CACnB,IAAIW,EAAU,MAAM,OAAOJ,CAAC,EAC5B,OAAI,KAAK,UACPI,EAAU,KAAK,QAAQ,OAAO,EAAIA,GAE7BA,CACT,CACF,EAEaC,GAAN,cAA4B1C,EAAU,CAC3C,YAAY2C,EAAQ,GAAO,CAGzB,GAFA,MAAM,EACN,KAAK,QAAU,IAAIL,GACf,CAACK,EAAO,CACV,IAAMd,EAAO,IAAInB,GAAS,MAAM,EAC1BkC,EAAO,IAAIlC,GAAS,MAAM,EAC1BmC,EAAO,IAAInC,GAAS,MAAM,EAC1BoC,EAAQ,IAAIpC,GAAS,OAAO,EAClCmB,EAAK,YAAYgB,CAAI,EACrBA,EAAK,YAAYC,CAAK,EACtBjB,EAAK,YAAYe,CAAI,EACrB,KAAK,YAAYf,CAAI,CACvB,CACF,CAEA,IAAI,MAAiB,CACnB,IAAIe,EAAO,KAAK,cAAc,MAAM,EACpC,GAAI,CAACA,EAAM,CACT,IAAIf,EAAO,KAAK,cAAc,MAAM,EAC/BA,IACHA,EAAO,IAAInB,GAAS,MAAM,EAC1B,KAAK,YAAYmB,CAAI,GAEvBe,EAAO,IAAIlC,GAAS,MAAM,EAC1BmB,EAAK,YAAYA,CAAI,CACvB,CACA,OAAOe,CACT,CAEA,IAAI,OAAgB,CAtqBtB,IAAA1E,EAuqBI,QAAOA,EAAA,KAAK,cAAc,OAAO,IAA1B,KAAA,OAAAA,EAA6B,cAAe,EACrD,CAEA,IAAI,MAAM4E,EAAe,CACvB,IAAMC,EAAe,KAAK,cAAc,OAAO,EAC3CA,IACFA,EAAa,YAAcD,EAC/B,CAEA,IAAI,MAAiB,CACnB,IAAID,EAAO,KAAK,cAAc,MAAM,EACpC,GAAI,CAACA,EAAM,CACT,IAAIhB,EAAO,KAAK,cAAc,MAAM,EAC/BA,IACHA,EAAO,IAAInB,GAAS,MAAM,EAC1B,KAAK,YAAYmB,CAAI,GAEvBgB,EAAO,IAAInC,GAAS,MAAM,EAC1BmB,EAAK,aAAaA,CAAI,CACxB,CACA,OAAOgB,CACT,CACF,EAEO,SAASG,IAA4B,CAC1C,OAAO,IAAIhD,EACb,CAEO,SAASiD,IAAoC,CAClD,OAAO,IAAIP,EACb,CAEO,IAAMQ,GAAWF,GAAe,EAC1BX,GAAIc,GAAS,CAAE,SAAAD,EAAS,CAAC,ECvrBtC,IAAME,GAAS,CAAC,EACVC,GAAiBD,GAAO,eAGvB,SAASE,GAAOF,EAAaG,EAAsB,CACxD,OAAOF,GAAe,KAAKD,EAAQG,CAAY,CACjD,CCfA,IAAMC,GAAS,yDACTC,GAAW,uBAKXC,GAAa,kFACbC,GAAiB,iBAQVC,GAAN,KAAiB,CAQtB,YAAYC,EAGR,CAAC,EAAG,CARR,KAAA,OAASL,GACT,KAAA,SAAWC,GACX,KAAA,WAAaC,GACb,KAAA,SAAW,CAAE,qBAAsB,EAAM,EAMnCG,EAAQ,UACV,KAAK,QAAUA,EAAQ,SACzB,KAAK,QAAU,OAAO,OAAO,CAAC,EAAG,KAAK,SAAUA,CAAO,CACzD,CAEA,MAAMC,EAAc,CAClB,IAAIC,EAAe,GACfC,EAAOC,EAAOC,EAClB,KAAOJ,EAAK,QAAQ,CAsClB,GApCIA,EAAK,UAAU,EAAG,CAAC,IAAM,QAC3BE,EAAQF,EAAK,QAAQ,KAAK,EACtBE,IAAU,IACZ,KAAK,QAAQ,QAAQF,EAAK,UAAU,EAAGE,CAAK,CAAC,EAC7CF,EAAOA,EAAK,UAAUE,EAAQ,CAAC,EAC/BD,EAAe,IAGfA,EAAe,IAIVD,EAAK,UAAU,EAAG,CAAC,IAAM,MAChCG,EAAQ,KAAK,SAAS,KAAKH,CAAI,EAC3BG,GACFH,EAAO,OAAO,aACdC,EAAe,GACf,KAAK,YAAY,OAAO,UAAWE,EAAM,CAAC,CAAC,GAG3CF,EAAe,IAIVD,EAAK,OAAO,CAAC,IAAM,MAC1BG,EAAQ,KAAK,WAAW,KAAKH,CAAI,EAC7BG,GACFH,EAAO,OAAO,aACdC,EAAe,GACf,KAAK,cAAc,OAAO,UAAWE,EAAM,CAAC,EAAGA,CAAK,GAGpDF,EAAe,IAIfA,EAAc,CAChBC,EAAQF,EAAK,QAAQ,GAAG,EACxB,IAAIK,EAASH,EAETA,IAAU,IAEZA,EAAQF,EAAK,UAAU,CAAC,EAAE,QAAQ,GAAG,EAErCK,EAASA,EAAS,GAGhBH,IAAU,IACZE,EAAaJ,EACbA,EAAO,KAGPI,EAAaJ,EAAK,UAAU,EAAGK,CAAM,EACrCL,EAAOA,EAAK,UAAUK,CAAM,IAG1B,CAAC,KAAK,QAAQ,sBAAwB,CAAC,QAAQ,KAAKD,CAAU,IAChE,KAAK,QAAQ,WAAWA,CAAU,CACtC,CAEAH,EAAe,GACfE,EAAQ,IACV,CACF,CAEA,cAAcG,EAAeC,EAAiBJ,EAAY,CACxD,IAAMK,EAAcX,GAAe,KAAKS,CAAK,EACzCG,EAAYN,EAAM,CAAC,EACnBK,IACFC,EAAYA,EAAU,QAAQ,YAAa,EAAE,GAE/C,IAAMC,EAAQ,KAAK,gBAAgBH,EAASE,CAAS,EACrD,KAAK,QAAQ,aAAaF,EAASG,EAAOF,EAAaL,EAAM,CAAC,CAAC,CACjE,CAEA,YAAYG,EAAeC,EAAiB,CAC1C,KAAK,QAAQ,WAAWA,CAAO,CACjC,CAEA,gBAAgBA,EAAiBD,EAAe,CAC9C,IAAMI,EAA6B,CAAC,EACpC,OAAAJ,EAAM,QAAQ,KAAK,OAAQ,IAAIK,IAAa,CA9HhD,IAAAC,EAAAC,EA+HM,GAAM,CAACC,EAAOC,EAAMC,EAAKC,EAAOC,EAAKC,EAAcC,EAAKC,CAAkB,EAAIV,EAC9ED,EAAMK,CAAI,GAAIF,GAAAD,EAAAS,GAAA,KAAAA,EAAsBF,IAAtB,KAAAP,EAAsCK,IAAtC,KAAAJ,EAA+C,EAE/D,CAAC,EACMH,CACT,CACF,ECpGO,SAASY,GAAUC,EAAiD,CACzE,GAAI,OAAOA,GAAS,SAClB,cAAQ,MAAM,mCAAoCA,CAAI,EAChD,IAAI,MAAM,2BAA2B,EAG7C,IAAMC,EACFD,EAAK,QAAQ,IAAI,IAAM,EAAI,IAAIE,GAAc,EAAI,EAAI,IAAIC,GAEvDC,EAAiB,CAACH,CAAI,EAwD5B,OAtDe,IAAII,GAAW,CAE5B,QAAS,CACP,aACEC,EACAC,EACAC,EACA,CAGA,GAFqBF,EAAQ,YAAY,IAEpB,WAAY,CAC/BL,EAAK,QAAU,IAAIQ,GACnB,MACF,CAEA,QAAWC,KAAQH,EACjB,GAAII,GAAOJ,EAAOG,CAAI,EAAG,CACvB,IAAME,EAAQL,EAAMG,CAAI,EAEpB,OAAOE,GAAU,WACnBL,EAAMG,CAAI,EAAIG,GAAaD,CAAK,EACpC,CAEF,IAAME,EAAaV,EAAMA,EAAM,OAAS,CAAC,EACzC,GAAIU,EAAY,CACd,IAAMC,EAAUC,GAAS,cAAcV,EAASC,CAAK,EACrDO,EAAW,YAAYC,CAAO,EAG1BE,GAAkB,SAASX,EAAQ,YAAY,CAAC,GAAKE,GAGvDJ,EAAM,KAAKW,CAAO,CACtB,CACF,EACA,WAAWG,EAAkB,CAC3Bd,EAAM,IAAI,CACZ,EACA,WAAWe,EAAc,CAlF/B,IAAAC,EAmFQD,EAAON,GAAaM,CAAI,EACxB,IAAML,EAAaV,EAAMA,EAAM,OAAS,CAAC,IACrCgB,EAAAN,GAAA,KAAA,OAAAA,EAAY,YAAZ,KAAA,OAAAM,EAAuB,YAAaC,GAAM,UAC5CP,EAAW,UAAU,OAASK,EAG1BL,GACFA,EAAW,YAAY,IAAIQ,GAAUH,CAAI,CAAC,CAIhD,EACA,QAAQI,EAAe,CAAC,CAC1B,CACF,CAAC,EACM,MAAMvB,CAAI,EAEVC,CACT,CAsCAuB,GAAS,UAAU,aAAe,SAAUxB,EAAM,CAChD,IAAMC,EAAOF,GAAUC,CAAI,EAC3B,KAAK,YAAcC,EAAK,YACxB,KAAK,qBAAqB,CAC5B,EE1IO,SAASwB,GAAIC,EAAcC,KAAoBC,EAAkB,CACtE,GAAM,CAAE,IAAAC,EAAK,MAAAC,EAAO,SAAAC,CAAS,EAAIC,GAAgBN,EAAMC,EAAQC,CAAS,EACxE,OAAOK,GAAO,GAAMJ,EAAKC,EAAOC,CAAQ,CAC1C,CAIAN,GAAI,UAAY,yCAChBA,GAAI,IAAM,YEVMS,GAAoBC,EAAWC,EAAgBC,EAAiC,CAC9F,GAAIA,GAAA,MAAAA,EAAS,SAAU,CAGrB,IAAMC,EAAOD,EAAQ,SAAS,cAAc,KAAK,EAEjD,OAAAE,GAAc,WAAWH,CAAM,EAAE,kBAAkBD,EAAI,QAAS,CAAE,SAAUE,EAAQ,QAAQ,EAAIC,CAAI,EAC7FA,EAAK,SACb,CAOD,OAJqBC,GAAc,WAAWH,CAAM,EAAE,kBAAkBD,EAAI,QAAS,CACnF,SAAUK,GAAkB,CAC7B,CAAA,EAEmB,OAAM,CAC5B,CCdgB,SAAAC,GAAaN,EAAkBO,EAAsB,CACnE,IAAMN,EAASO,GAAUD,CAAU,EAC7BE,EAAcC,GAAK,SAAST,EAAQD,CAAG,EAE7C,OAAOD,GAAoBU,EAAaR,CAAM,CAChD,mrEEIO,IAAMU,GAAS,IAAM,IAAI,IAUnBC,GAAOC,GAAK,CACvB,IAAMC,EAAIH,GAAO,EACjB,OAAAE,EAAE,QAAQ,CAACE,EAAGC,IAAM,CAAEF,EAAE,IAAIE,EAAGD,CAAC,CAAE,CAAC,EAC5BD,CACT,EAkBaG,GAAiB,CAACC,EAAKC,EAAKC,IAAY,CACnD,IAAIC,EAAMH,EAAI,IAAIC,CAAG,EACrB,OAAIE,IAAQ,QACVH,EAAI,IAAIC,EAAKE,EAAMD,EAAQ,CAAC,EAEvBC,CACT,EAaaH,GAAM,CAACL,EAAGS,IAAM,CAC3B,IAAMC,EAAM,CAAC,EACb,OAAW,CAACJ,EAAKK,CAAK,IAAKX,EACzBU,EAAI,KAAKD,EAAEE,EAAOL,CAAG,CAAC,EAExB,OAAOI,CACT,EAcaE,GAAM,CAACZ,EAAGS,IAAM,CAC3B,OAAW,CAACH,EAAKK,CAAK,IAAKX,EACzB,GAAIS,EAAEE,EAAOL,CAAG,EACd,MAAO,GAGX,MAAO,EACT,ECtFO,IAAMO,GAAS,IAAM,IAAI,ICSzB,IAAMC,GAAOC,GAAOA,EAAIA,EAAI,OAAS,CAAC,EAsBtC,IAAMC,GAAW,CAACC,EAAMC,IAAQ,CACrC,QAASC,EAAI,EAAGA,EAAID,EAAI,OAAQC,IAC9BF,EAAK,KAAKC,EAAIC,CAAC,CAAC,CAEpB,EAUaC,GAAO,MAAM,KAgCnB,IAAMC,GAAO,CAACC,EAAKC,IAAM,CAC9B,QAASC,EAAI,EAAGA,EAAIF,EAAI,OAAQE,IAC9B,GAAID,EAAED,EAAIE,CAAC,EAAGA,EAAGF,CAAG,EAClB,MAAO,GAGX,MAAO,EACT,EAwBO,IAAMG,GAAS,CAACC,EAAKC,IAAM,CAChC,IAAMC,EAAQ,IAAI,MAAMF,CAAG,EAC3B,QAASG,EAAI,EAAGA,EAAIH,EAAKG,IACvBD,EAAMC,CAAC,EAAIF,EAAEE,EAAGD,CAAK,EAEvB,OAAOA,CACT,EAWO,IAAME,GAAU,MAAM,QCnCtB,IAAMC,GAAN,KAAiB,CACtB,aAAe,CAKb,KAAK,WAAiBC,GAAO,CAC/B,CAMA,GAAIC,EAAMC,EAAG,CACPC,GAAe,KAAK,WAAYF,EAAUD,EAAM,EAAE,IAAIE,CAAC,CAC7D,CAMA,KAAMD,EAAMC,EAAG,CAIb,IAAME,EAAK,IAAIC,IAAS,CACtB,KAAK,IAAIJ,EAAMG,CAAE,EACjBF,EAAE,GAAGG,CAAI,CACX,EACA,KAAK,GAAGJ,EAAMG,CAAE,CAClB,CAMA,IAAKH,EAAMC,EAAG,CACZ,IAAMI,EAAY,KAAK,WAAW,IAAIL,CAAI,EACtCK,IAAc,SAChBA,EAAU,OAAOJ,CAAC,EACdI,EAAU,OAAS,GACrB,KAAK,WAAW,OAAOL,CAAI,EAGjC,CAWA,KAAMA,EAAMI,EAAM,CAEhB,OAAaE,IAAM,KAAK,WAAW,IAAIN,CAAI,GAASD,GAAO,GAAG,OAAO,CAAC,EAAE,QAAQE,GAAKA,EAAE,GAAGG,CAAI,CAAC,CACjG,CAEA,SAAW,CACT,KAAK,WAAiBL,GAAO,CAC/B,CACF,ECzJO,IAAMQ,GAAQ,KAAK,MAEnB,IAAMC,GAAM,KAAK,IAsBjB,IAAMC,GAAM,CAACC,EAAGC,IAAMD,EAAIC,EAAID,EAAIC,EAQ5BC,GAAM,CAACF,EAAGC,IAAMD,EAAIC,EAAID,EAAIC,EAE5BE,GAAQ,OAAO,MAiBrB,IAAMC,GAAiBC,GAAKA,IAAM,EAAIA,EAAI,EAAI,EAAIA,EAAI,EChDtD,IAAMC,GAAmB,OAAO,iBAC1BC,GAAmB,OAAO,iBAE1BC,GAAe,GAAK,GAK1B,IAAMC,GAAY,OAAO,YAAcC,GAAO,OAAOA,GAAQ,UAAY,SAASA,CAAG,GAAUC,GAAMD,CAAG,IAAMA,GACxGE,GAAQ,OAAO,MACfC,GAAW,OAAO,SCXxB,IAAMC,GAAe,OAAO,aACtBC,GAAgB,OAAO,cAMvBC,GAAsBF,GAAa,KAAK,EAM/CG,GAAcC,GAAKA,EAAE,YAAY,EAEjCC,GAAgB,QAMTC,GAAWF,GAAKA,EAAE,QAAQC,GAAe,EAAE,EAElDE,GAAqB,WAOdC,GAAgB,CAACJ,EAAGK,IAAcH,GAASF,EAAE,QAAQG,GAAoBG,GAAS,GAAGD,CAAS,GAAGN,GAAYO,CAAK,CAAC,EAAE,CAAC,EAa5H,IAAMC,GAAsBC,GAAO,CACxC,IAAMC,EAAgB,SAAS,mBAAmBD,CAAG,CAAC,EAChDE,EAAMD,EAAc,OACpBE,EAAM,IAAI,WAAWD,CAAG,EAC9B,QAAS,EAAI,EAAG,EAAIA,EAAK,IACvBC,EAAI,CAAC,EAA2BF,EAAc,YAAY,CAAC,EAE7D,OAAOE,CACT,EAGaC,GAA8C,OAAO,aAAgB,YAAc,IAAI,YAAgB,KAMvGC,GAAoBL,GAAOI,GAAgB,OAAOJ,CAAG,EAOrDM,GAAaF,GAAkBC,GAAoBN,GAsBzD,IAAIQ,GAAkB,OAAO,aAAgB,YAAc,KAAO,IAAI,YAAY,QAAS,CAAE,MAAO,GAAM,UAAW,EAAK,CAAC,EAG9HA,IAAmBA,GAAgB,OAAO,IAAI,UAAY,EAAE,SAAW,IAOzEA,GAAkB,MA6Bb,IAAMC,GAAS,CAACC,EAAQC,IAAYC,GAAOD,EAAG,IAAMD,CAAM,EAAE,KAAK,EAAE,ECnGnE,IAAMG,GAAN,KAAc,CACnB,aAAe,CACb,KAAK,KAAO,EACZ,KAAK,KAAO,IAAI,WAAW,GAAG,EAI9B,KAAK,KAAO,CAAC,CACf,CACF,EAMaC,GAAgB,IAAM,IAAID,GAkBhC,IAAME,GAASC,GAAW,CAC/B,IAAIC,EAAMD,EAAQ,KAClB,QAASE,EAAI,EAAGA,EAAIF,EAAQ,KAAK,OAAQE,IACvCD,GAAOD,EAAQ,KAAKE,CAAC,EAAE,OAEzB,OAAOD,CACT,EAkBO,IAAME,GAAeC,GAAW,CACrC,IAAMC,EAAW,IAAI,WAAWC,GAAOF,CAAO,CAAC,EAC3CG,EAAS,EACb,QAASC,EAAI,EAAGA,EAAIJ,EAAQ,KAAK,OAAQI,IAAK,CAC5C,IAAMC,EAAIL,EAAQ,KAAKI,CAAC,EACxBH,EAAS,IAAII,EAAGF,CAAM,EACtBA,GAAUE,EAAE,MACd,CACA,OAAAJ,EAAS,IAAI,IAAI,WAAWD,EAAQ,KAAK,OAAQ,EAAGA,EAAQ,IAAI,EAAGG,CAAM,EAClEF,CACT,EASaK,GAAY,CAACN,EAASO,IAAQ,CACzC,IAAMC,EAAYR,EAAQ,KAAK,OAC3BQ,EAAYR,EAAQ,KAAOO,IAC7BP,EAAQ,KAAK,KAAK,IAAI,WAAWA,EAAQ,KAAK,OAAQ,EAAGA,EAAQ,IAAI,CAAC,EACtEA,EAAQ,KAAO,IAAI,WAAgBS,GAAID,EAAWD,CAAG,EAAI,CAAC,EAC1DP,EAAQ,KAAO,EAEnB,EASaU,GAAQ,CAACV,EAASW,IAAQ,CACrC,IAAMH,EAAYR,EAAQ,KAAK,OAC3BA,EAAQ,OAASQ,IACnBR,EAAQ,KAAK,KAAKA,EAAQ,IAAI,EAC9BA,EAAQ,KAAO,IAAI,WAAWQ,EAAY,CAAC,EAC3CR,EAAQ,KAAO,GAEjBA,EAAQ,KAAKA,EAAQ,MAAM,EAAIW,CACjC,EAoCO,IAAMC,GAAaC,GAsFnB,IAAMC,EAAe,CAACC,EAASC,IAAQ,CAC5C,KAAOA,EAAa,KAClBC,GAAMF,EAAgB,IAAe,IAAQC,CAAI,EACjDA,EAAWE,GAAMF,EAAM,GAAG,EAE5BC,GAAMF,EAAgB,IAAQC,CAAG,CACnC,EAWaG,GAAc,CAACJ,EAASC,IAAQ,CAC3C,IAAMI,EAAkBC,GAAeL,CAAG,EAS1C,IARII,IACFJ,EAAM,CAACA,GAGTC,GAAMF,GAAUC,EAAa,GAAe,IAAO,IAAMI,EAAoB,GAAO,GAAa,GAAQJ,CAAI,EAC7GA,EAAWE,GAAMF,EAAM,EAAE,EAGlBA,EAAM,GACXC,GAAMF,GAAUC,EAAa,IAAe,IAAO,GAAa,IAAQA,CAAI,EAC5EA,EAAWE,GAAMF,EAAM,GAAG,CAE9B,EAKMM,GAAa,IAAI,WAAW,GAAK,EACjCC,GAAeD,GAAW,OAAS,EAS5BE,GAAwB,CAACT,EAASU,IAAQ,CACrD,GAAIA,EAAI,OAASF,GAAc,CAG7B,IAAMG,EAAiBC,GAAgB,WAAWF,EAAKH,EAAU,EAAE,SAAW,EAC9ER,EAAaC,EAASW,CAAO,EAC7B,QAASE,EAAI,EAAGA,EAAIF,EAASE,IAC3BX,GAAMF,EAASO,GAAWM,CAAC,CAAC,CAEhC,MACEC,GAAmBd,EAAgBe,GAAWL,CAAG,CAAC,CAEtD,EASaM,GAA0B,CAAChB,EAASU,IAAQ,CACvD,IAAMO,EAAgB,SAAS,mBAAmBP,CAAG,CAAC,EAChDQ,EAAMD,EAAc,OAC1BlB,EAAaC,EAASkB,CAAG,EACzB,QAAS,EAAI,EAAG,EAAIA,EAAK,IACvBhB,GAAMF,EAAgCiB,EAAc,YAAY,CAAC,CAAE,CAEvE,EAUaE,GAAyBP,IAA8CA,GAAiB,WAAcH,GAAwBO,GAuDpI,IAAMI,GAAqB,CAACC,EAASC,IAAWC,GAAgBF,EAASG,GAAaF,CAAM,CAAC,EASvFC,GAAkB,CAACF,EAASI,IAAe,CACtD,IAAMC,EAAYL,EAAQ,KAAK,OACzBM,EAAON,EAAQ,KACfO,EAAmBC,GAAIH,EAAYC,EAAMF,EAAW,MAAM,EAC1DK,EAAeL,EAAW,OAASG,EACzCP,EAAQ,KAAK,IAAII,EAAW,SAAS,EAAGG,CAAW,EAAGD,CAAI,EAC1DN,EAAQ,MAAQO,EACZE,EAAe,IAGjBT,EAAQ,KAAK,KAAKA,EAAQ,IAAI,EAE9BA,EAAQ,KAAO,IAAI,WAAgBU,GAAIL,EAAY,EAAGI,CAAY,CAAC,EAEnET,EAAQ,KAAK,IAAII,EAAW,SAASG,CAAW,CAAC,EACjDP,EAAQ,KAAOS,EAEnB,EASaE,GAAqB,CAACX,EAASI,IAAe,CACzDQ,EAAaZ,EAASI,EAAW,UAAU,EAC3CF,GAAgBF,EAASI,CAAU,CACrC,EAmBaS,GAAkB,CAACb,EAASc,IAAQ,CAC/CC,GAAUf,EAASc,CAAG,EACtB,IAAME,EAAQ,IAAI,SAAShB,EAAQ,KAAK,OAAQA,EAAQ,KAAMc,CAAG,EACjE,OAAAd,EAAQ,MAAQc,EACTE,CACT,EAMaC,GAAe,CAACjB,EAASkB,IAAQL,GAAgBb,EAAS,CAAC,EAAE,WAAW,EAAGkB,EAAK,EAAK,EAMrFC,GAAe,CAACnB,EAASkB,IAAQL,GAAgBb,EAAS,CAAC,EAAE,WAAW,EAAGkB,EAAK,EAAK,EAMrFE,GAAgB,CAACpB,EAASkB,IAA4BL,GAAgBb,EAAS,CAAC,EAAG,YAAY,EAAGkB,EAAK,EAAK,EAQzH,IAAMG,GAAe,IAAI,SAAS,IAAI,YAAY,CAAC,CAAC,EAO9CC,GAAYC,IAChBF,GAAa,WAAW,EAAGE,CAAG,EACvBF,GAAa,WAAW,CAAC,IAAME,GAwC3BC,GAAW,CAACC,EAASC,IAAS,CACzC,OAAQ,OAAOA,EAAM,CACnB,IAAK,SAEHC,GAAMF,EAAS,GAAG,EAClBG,GAAeH,EAASC,CAAI,EAC5B,MACF,IAAK,SACQG,GAAUH,CAAI,GAAUI,GAAIJ,CAAI,GAAY,YAErDC,GAAMF,EAAS,GAAG,EAClBM,GAAYN,EAASC,CAAI,GAChBJ,GAAUI,CAAI,GAEvBC,GAAMF,EAAS,GAAG,EAClBO,GAAaP,EAASC,CAAI,IAG1BC,GAAMF,EAAS,GAAG,EAClBQ,GAAaR,EAASC,CAAI,GAE5B,MACF,IAAK,SAEHC,GAAMF,EAAS,GAAG,EAClBS,GAAcT,EAASC,CAAI,EAC3B,MACF,IAAK,SACH,GAAIA,IAAS,KAEXC,GAAMF,EAAS,GAAG,UACHU,GAAQT,CAAI,EAAG,CAE9BC,GAAMF,EAAS,GAAG,EAClBW,EAAaX,EAASC,EAAK,MAAM,EACjC,QAASW,EAAI,EAAGA,EAAIX,EAAK,OAAQW,IAC/Bb,GAASC,EAASC,EAAKW,CAAC,CAAC,CAE7B,SAAWX,aAAgB,WAEzBC,GAAMF,EAAS,GAAG,EAClBa,GAAmBb,EAASC,CAAI,MAC3B,CAELC,GAAMF,EAAS,GAAG,EAClB,IAAMc,EAAO,OAAO,KAAKb,CAAI,EAC7BU,EAAaX,EAASc,EAAK,MAAM,EACjC,QAASF,EAAI,EAAGA,EAAIE,EAAK,OAAQF,IAAK,CACpC,IAAMG,EAAMD,EAAKF,CAAC,EAClBT,GAAeH,EAASe,CAAG,EAC3BhB,GAASC,EAASC,EAAKc,CAAG,CAAC,CAC7B,CACF,CACA,MACF,IAAK,UAEHb,GAAMF,EAASC,EAAO,IAAM,GAAG,EAC/B,MACF,QAEEC,GAAMF,EAAS,GAAG,CACtB,CACF,EAiBagB,GAAN,cAAyBC,EAAQ,CAItC,YAAaC,EAAQ,CACnB,MAAM,EAIN,KAAK,EAAIA,EAKT,KAAK,EAAI,KACT,KAAK,MAAQ,CACf,CAKA,MAAOC,EAAG,CACJ,KAAK,IAAMA,EACb,KAAK,SAED,KAAK,MAAQ,GAEfR,EAAa,KAAM,KAAK,MAAQ,CAAC,EAEnC,KAAK,MAAQ,EAEb,KAAK,EAAE,KAAMQ,CAAC,EACd,KAAK,EAAIA,EAEb,CACF,EAwEA,IAAMC,GAAyBC,GAAW,CACpCA,EAAQ,MAAQ,IAIlBC,GAAYD,EAAQ,QAASA,EAAQ,QAAU,EAAIA,EAAQ,EAAI,CAACA,EAAQ,CAAC,EACrEA,EAAQ,MAAQ,GAClBE,EAAaF,EAAQ,QAASA,EAAQ,MAAQ,CAAC,EAGrD,EAUaG,GAAN,KAAwB,CAC7B,aAAe,CACb,KAAK,QAAU,IAAIC,GAInB,KAAK,EAAI,EACT,KAAK,MAAQ,CACf,CAKA,MAAOC,EAAG,CACJ,KAAK,IAAMA,EACb,KAAK,SAELN,GAAuB,IAAI,EAC3B,KAAK,MAAQ,EACb,KAAK,EAAIM,EAEb,CAOA,cAAgB,CACd,OAAAN,GAAuB,IAAI,EACpBO,GAAa,KAAK,OAAO,CAClC,CACF,EA+CA,IAAMC,GAA4BC,GAAW,CAC3C,GAAIA,EAAQ,MAAQ,EAAG,CAGrB,IAAMC,EAAcD,EAAQ,KAAO,GAAKA,EAAQ,QAAU,EAAI,EAAI,GAIlEE,GAAYF,EAAQ,QAASC,CAAW,EACpCD,EAAQ,MAAQ,GAClBG,EAAaH,EAAQ,QAASA,EAAQ,MAAQ,CAAC,CAEnD,CACF,EAmBaI,GAAN,KAA2B,CAChC,aAAe,CACb,KAAK,QAAU,IAAIC,GAInB,KAAK,EAAI,EACT,KAAK,MAAQ,EACb,KAAK,KAAO,CACd,CAKA,MAAOC,EAAG,CACJ,KAAK,OAASA,EAAI,KAAK,GACzB,KAAK,EAAIA,EACT,KAAK,UAELP,GAA0B,IAAI,EAC9B,KAAK,MAAQ,EACb,KAAK,KAAOO,EAAI,KAAK,EACrB,KAAK,EAAIA,EAEb,CAOA,cAAgB,CACd,OAAAP,GAA0B,IAAI,EACvBQ,GAAa,KAAK,OAAO,CAClC,CACF,EAYaC,GAAN,KAAoB,CACzB,aAAe,CAIb,KAAK,KAAO,CAAC,EACb,KAAK,EAAI,GACT,KAAK,MAAQ,IAAIC,EACnB,CAKA,MAAOC,EAAQ,CACb,KAAK,GAAKA,EACN,KAAK,EAAE,OAAS,KAClB,KAAK,KAAK,KAAK,KAAK,CAAC,EACrB,KAAK,EAAI,IAEX,KAAK,MAAM,MAAMA,EAAO,MAAM,CAChC,CAEA,cAAgB,CACd,IAAMV,EAAU,IAAIK,GACpB,YAAK,KAAK,KAAK,KAAK,CAAC,EACrB,KAAK,EAAI,GACTM,GAAeX,EAAS,KAAK,KAAK,KAAK,EAAE,CAAC,EAC1CY,GAAgBZ,EAAS,KAAK,MAAM,aAAa,CAAC,EAC3CO,GAAaP,CAAO,CAC7B,CACF,ECt5BO,IAAMa,GAASC,GAAK,IAAI,MAAMA,CAAC,EAOzBC,GAAsB,IAAM,CACvC,MAAMF,GAAO,sBAAsB,CACrC,EAOaG,GAAiB,IAAM,CAClC,MAAMH,GAAO,iBAAiB,CAChC,ECMA,IAAMI,GAAkCC,GAAO,yBAAyB,EAClEC,GAA+BD,GAAO,sBAAsB,EAKrDE,GAAN,KAAc,CAInB,YAAaC,EAAY,CAMvB,KAAK,IAAMA,EAMX,KAAK,IAAM,CACb,CACF,EAOaC,GAAgBD,GAAc,IAAID,GAAQC,CAAU,EAOpDE,GAAaC,GAAWA,EAAQ,MAAQA,EAAQ,IAAI,OA4B1D,IAAMC,GAAiB,CAACC,EAASC,IAAQ,CAC9C,IAAMC,EAAO,IAAI,WAAWF,EAAQ,IAAI,OAAQA,EAAQ,IAAMA,EAAQ,IAAI,WAAYC,CAAG,EACzF,OAAAD,EAAQ,KAAOC,EACRC,CACT,EAYaC,GAAoBH,GAAWD,GAAeC,EAASI,GAAYJ,CAAO,CAAC,EAwBjF,IAAMK,GAAYC,GAAWA,EAAQ,IAAIA,EAAQ,KAAK,EAmGtD,IAAMC,GAAcC,GAAW,CACpC,IAAIC,EAAM,EACNC,EAAO,EACLC,EAAMH,EAAQ,IAAI,OACxB,KAAOA,EAAQ,IAAMG,GAAK,CACxB,IAAMC,EAAIJ,EAAQ,IAAIA,EAAQ,KAAK,EAInC,GAFAC,EAAMA,GAAOG,EAAW,KAASF,EACjCA,GAAQ,IACJE,EAAW,IACb,OAAOH,EAGT,GAAIA,EAAaI,GACf,MAAMC,EAGV,CACA,MAAMC,EACR,EAaaC,GAAaR,GAAW,CACnC,IAAII,EAAIJ,EAAQ,IAAIA,EAAQ,KAAK,EAC7BC,EAAMG,EAAW,GACjBF,EAAO,GACLO,GAAQL,EAAW,IAAQ,EAAI,GAAK,EAC1C,GAAK,EAAAA,EAAW,KAEd,OAAOK,EAAOR,EAEhB,IAAME,EAAMH,EAAQ,IAAI,OACxB,KAAOA,EAAQ,IAAMG,GAAK,CAKxB,GAJAC,EAAIJ,EAAQ,IAAIA,EAAQ,KAAK,EAE7BC,EAAMA,GAAOG,EAAW,KAASF,EACjCA,GAAQ,IACJE,EAAW,IACb,OAAOK,EAAOR,EAGhB,GAAIA,EAAaI,GACf,MAAMC,EAGV,CACA,MAAMC,EACR,EA4CO,IAAMG,GAAyBC,GAAW,CAC/C,IAAIC,EAAeC,GAAYF,CAAO,EACtC,GAAIC,IAAiB,EACnB,MAAO,GACF,CACL,IAAIE,EAAgB,OAAO,cAAcC,GAAUJ,CAAO,CAAC,EAC3D,GAAI,EAAEC,EAAe,IACnB,KAAOA,KACLE,GAAiB,OAAO,cAAcC,GAAUJ,CAAO,CAAC,MAG1D,MAAOC,EAAe,GAAG,CACvB,IAAMI,EAAUJ,EAAe,IAAQA,EAAe,IAEhDK,EAAQN,EAAQ,IAAI,SAASA,EAAQ,IAAKA,EAAQ,IAAMK,CAAO,EACrEL,EAAQ,KAAOK,EAEfF,GAAiB,OAAO,cAAc,MAAM,KAA0BG,CAAM,EAC5EL,GAAgBI,CAClB,CAEF,OAAO,mBAAmB,OAAOF,CAAa,CAAC,CACjD,CACF,EAQaI,GAAuBP,GACTQ,GAAiB,OAAOC,GAAkBT,CAAO,CAAC,EAYhEU,GAAuBF,GAAkBD,GAAuBR,GA8CtE,IAAMY,GAAmB,CAACC,EAASC,IAAQ,CAChD,IAAMC,EAAK,IAAI,SAASF,EAAQ,IAAI,OAAQA,EAAQ,IAAI,WAAaA,EAAQ,IAAKC,CAAG,EACrF,OAAAD,EAAQ,KAAOC,EACRC,CACT,EAKaC,GAAcH,GAAWD,GAAiBC,EAAS,CAAC,EAAE,WAAW,EAAG,EAAK,EAKzEI,GAAcJ,GAAWD,GAAiBC,EAAS,CAAC,EAAE,WAAW,EAAG,EAAK,EAKzEK,GAAeL,GAA+BD,GAAiBC,EAAS,CAAC,EAAG,YAAY,EAAG,EAAK,EAU7G,IAAMM,GAAqB,CACzBC,GAAQ,GACRA,GAAW,KACXC,GACAC,GACAC,GACAC,GACAJ,GAAW,GACXA,GAAW,GACXK,GACAL,GAAW,CACT,IAAMM,EAAMC,GAAYP,CAAO,EAIzBQ,EAAM,CAAC,EACb,QAASC,EAAI,EAAGA,EAAIH,EAAKG,IAAK,CAC5B,IAAMC,EAAML,GAAcL,CAAO,EACjCQ,EAAIE,CAAG,EAAIC,GAAQX,CAAO,CAC5B,CACA,OAAOQ,CACT,EACAR,GAAW,CACT,IAAMM,EAAMC,GAAYP,CAAO,EACzBY,EAAM,CAAC,EACb,QAASH,EAAI,EAAGA,EAAIH,EAAKG,IACvBG,EAAI,KAAKD,GAAQX,CAAO,CAAC,EAE3B,OAAOY,CACT,EACAC,EACF,EAKaF,GAAUX,GAAWD,GAAmB,IAAMe,GAAUd,CAAO,CAAC,EAAEA,CAAO,EAOzEe,GAAN,cAAyBC,EAAQ,CAKtC,YAAaC,EAAYC,EAAQ,CAC/B,MAAMD,CAAU,EAIhB,KAAK,OAASC,EAKd,KAAK,EAAI,KACT,KAAK,MAAQ,CACf,CAEA,MAAQ,CACN,OAAI,KAAK,QAAU,IACjB,KAAK,EAAI,KAAK,OAAO,IAAI,EACrBC,GAAW,IAAI,EACjB,KAAK,MAAQZ,GAAY,IAAI,EAAI,EAEjC,KAAK,MAAQ,IAGjB,KAAK,QACoB,KAAK,CAChC,CACF,EAyDO,IAAMa,GAAN,cAAgCC,EAAQ,CAI7C,YAAaC,EAAY,CACvB,MAAMA,CAAU,EAIhB,KAAK,EAAI,EACT,KAAK,MAAQ,CACf,CAEA,MAAQ,CACN,GAAI,KAAK,QAAU,EAAG,CACpB,KAAK,EAAIC,GAAW,IAAI,EAExB,IAAMC,EAAkBC,GAAe,KAAK,CAAC,EAC7C,KAAK,MAAQ,EACTD,IACF,KAAK,EAAI,CAAC,KAAK,EACf,KAAK,MAAQE,GAAY,IAAI,EAAI,EAErC,CACA,YAAK,QACyB,KAAK,CACrC,CACF,EA+BO,IAAMC,GAAN,cAAmCC,EAAQ,CAIhD,YAAaC,EAAY,CACvB,MAAMA,CAAU,EAIhB,KAAK,EAAI,EACT,KAAK,MAAQ,EACb,KAAK,KAAO,CACd,CAKA,MAAQ,CACN,GAAI,KAAK,QAAU,EAAG,CACpB,IAAMC,EAAOC,GAAW,IAAI,EAEtBC,EAAWF,EAAO,EACxB,KAAK,KAAYG,GAAMH,EAAO,CAAC,EAC/B,KAAK,MAAQ,EACTE,IACF,KAAK,MAAQE,GAAY,IAAI,EAAI,EAErC,CACA,YAAK,GAAK,KAAK,KACf,KAAK,QACE,KAAK,CACd,CACF,EAEaC,GAAN,KAAoB,CAIzB,YAAaN,EAAY,CACvB,KAAK,QAAU,IAAIO,GAAkBP,CAAU,EAC/C,KAAK,IAAMQ,GAAc,KAAK,OAAO,EAIrC,KAAK,KAAO,CACd,CAKA,MAAQ,CACN,IAAMC,EAAM,KAAK,KAAO,KAAK,QAAQ,KAAK,EACpCC,EAAM,KAAK,IAAI,MAAM,KAAK,KAAMD,CAAG,EACzC,YAAK,KAAOA,EACLC,CACT,CACF,EC/rBO,IAAMC,GAAS,OAAO,OAChBC,GAAkB,OAAO,gBAAgB,KAAK,MAAM,ECS1D,IAAMC,GAAO,KAAK,OAEZC,GAAS,IAAMC,GAAgB,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,EAY1D,IAAMC,GAAQC,GAAOA,EAASC,GAAMC,GAAK,EAAIF,EAAI,MAAM,CAAC,EAGzDG,GAAiB,CAAC,GAAG,EAAI,KAAO,KAAO,KAAO,MAKvCC,GAAS,IAAMD,GAAe,QAAQ,SAAmCE,IACnFA,EAAIC,GAAO,EAAI,IAAMD,EAAI,GAAG,SAAS,EAAE,CAC1C,ECfO,IAAME,GAAc,KAAK,ICFzB,IAAMC,GAASC,GAAgC,IAAI,QAAQA,CAAC,EAe5D,IAAMC,GAAM,QAAQ,IAAI,KAAK,OAAO,ECtBpC,IAAMC,GAAkBC,GAAKA,IAAM,OAAY,KAAOA,ECD7D,IAAMC,GAAN,KAAyB,CACvB,aAAe,CACb,KAAK,IAAM,IAAI,GACjB,CAMA,QAASC,EAAKC,EAAU,CACtB,KAAK,IAAI,IAAID,EAAKC,CAAQ,CAC5B,CAKA,QAASD,EAAK,CACZ,OAAO,KAAK,IAAI,IAAIA,CAAG,CACzB,CACF,EAMIE,GAAgB,IAAIH,GACpBI,GAAc,GAGlB,GAAI,CAEE,OAAO,cAAiB,aAAe,eACzCD,GAAgB,aAChBC,GAAc,GAElB,OAASC,EAAG,CAAE,CAOP,IAAMC,GAAaH,GCvCnB,IAAMI,GAAS,OAAO,OAKhBC,GAAO,OAAO,KAOdC,GAAU,CAACC,EAAKC,IAAM,CACjC,QAAWC,KAAOF,EAChBC,EAAED,EAAIE,CAAG,EAAGA,CAAG,CAEnB,EAsBO,IAAMC,GAASC,GAAOC,GAAKD,CAAG,EAAE,OAmBhC,IAAME,GAAUC,GAAO,CAE5B,QAAWC,KAAMD,EACf,MAAO,GAET,MAAO,EACT,EAOaE,GAAQ,CAACF,EAAKG,IAAM,CAC/B,QAAWC,KAAOJ,EAChB,GAAI,CAACG,EAAEH,EAAII,CAAG,EAAGA,CAAG,EAClB,MAAO,GAGX,MAAO,EACT,EASaC,GAAc,CAACL,EAAKI,IAAQ,OAAO,UAAU,eAAe,KAAKJ,EAAKI,CAAG,EAOzEE,GAAY,CAACC,EAAGC,IAAMD,IAAMC,GAAMC,GAAOF,CAAC,IAAME,GAAOD,CAAC,GAAKN,GAAMK,EAAG,CAACG,EAAKN,KAASM,IAAQ,QAAaL,GAAYG,EAAGJ,CAAG,IAAMI,EAAEJ,CAAG,IAAMM,CAAG,EC5FtJ,IAAMC,GAAU,CAACC,EAAIC,EAAMC,EAAI,IAAM,CAC1C,GAAI,CACF,KAAOA,EAAIF,EAAG,OAAQE,IACpBF,EAAGE,CAAC,EAAE,GAAGD,CAAI,CAEjB,QAAE,CACIC,EAAIF,EAAG,QACTD,GAAQC,EAAIC,EAAMC,EAAI,CAAC,CAE3B,CACF,EAiBO,IAAMC,GAAKC,GAAKA,EA6GhB,IAAMC,GAAU,CAACC,EAAOC,IAAYA,EAAQ,SAASD,CAAK,ECzI1D,IAAME,GAAS,OAAO,SAAY,aAAe,QAAQ,SAAW,cAAc,KAAK,QAAQ,QAAQ,IAAI,GAAK,OAAO,UAAU,SAAS,KAAK,OAAO,SAAY,YAAc,QAAU,CAAC,IAAM,mBAG3LC,GAAY,OAAO,QAAW,aAAe,OAAO,UAAa,aAAe,CAACD,GAEjFE,GAAQ,OAAO,WAAc,YACtC,MAAM,KAAK,UAAU,QAAQ,EAC7B,GAKAC,GACEC,GAAO,CAAC,EAGRC,GAAgB,IAAM,CAC1B,GAAIF,KAAW,OACb,GAAIH,GAAQ,CACVG,GAAaG,GAAO,EACpB,IAAMC,EAAQ,QAAQ,KAClBC,EAAgB,KACpB,QAASC,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAAK,CACrC,IAAMC,EAAOH,EAAME,CAAC,EAChBC,EAAK,CAAC,IAAM,KACVF,IAAkB,MACpBL,GAAO,IAAIK,EAAe,EAAE,EAE9BA,EAAgBE,GAEZF,IAAkB,MACpBL,GAAO,IAAIK,EAAeE,CAAI,EAC9BF,EAAgB,MAEhBJ,GAAK,KAAKM,CAAI,CAGpB,CACIF,IAAkB,MACpBL,GAAO,IAAIK,EAAe,EAAE,CAGhC,MAAW,OAAO,UAAa,UAC7BL,GAAaG,GAAO,GACnB,SAAS,QAAU,KAAK,MAAM,CAAC,EAAE,MAAM,GAAG,EAAE,QAASK,GAAO,CAC3D,GAAIA,EAAG,SAAW,EAAG,CACnB,GAAM,CAACC,EAAKC,CAAK,EAAIF,EAAG,MAAM,GAAG,EACjCR,GAAO,IAAI,KAAYW,GAAcF,EAAK,GAAG,CAAC,GAAIC,CAAK,EACvDV,GAAO,IAAI,IAAWW,GAAcF,EAAK,GAAG,CAAC,GAAIC,CAAK,CACxD,CACF,CAAC,GAEDV,GAAaG,GAAO,EAGxB,OAAOH,EACT,EAQaY,GAAYC,GAASX,GAAc,EAAE,IAAIW,CAAI,EAgBnD,IAAMC,GAAeC,GAC1BC,GACeC,GAAgB,QAAQ,IAAIF,EAAK,YAAY,CAAC,CAAC,EAC/CE,GAAwBC,GAAW,QAAQH,CAAI,CAAC,EAe1D,IAAMI,GAAWC,GACtBC,GAAS,KAAOD,CAAI,GAAKE,GAAYF,CAAI,IAAM,KAGpCG,GAAaJ,GAAQ,YAAY,EAGxCK,GAAaC,IACfC,GAAQ,QAAQ,IAAI,YAAa,CAAC,OAAQ,IAAK,GAAG,CAAC,EAG1CC,GAAgB,CAACN,GAAS,WAAW,IAC/C,CAACI,IAAU,QAAQ,OAAO,OAASD,MACpC,CAACC,IAAUJ,GAAS,OAAO,GAAKG,IAC9BF,GAAY,WAAW,IAAM,OAC5BA,GAAY,MAAM,GAAK,IAAI,SAAS,OAAO,GC/GzC,IAAMM,GAA0BC,GAAO,IAAI,WAAWA,CAAG,EA2GzD,IAAMC,GAAiBC,GAAc,CAC1C,IAAMC,EAASC,GAAwBF,EAAW,UAAU,EAC5D,OAAAC,EAAO,IAAID,CAAU,EACdC,CACT,ECtHO,IAAME,GAAN,KAAW,CAKhB,YAAaC,EAAMC,EAAO,CACxB,KAAK,KAAOD,EACZ,KAAK,MAAQC,CACf,CACF,EAQaC,GAAS,CAACF,EAAMC,IAAU,IAAIF,GAAKC,EAAMC,CAAK,ECXpD,IAAME,GAA+B,OAAO,UAAa,YAAc,SAAW,CAAC,EAmBnF,IAAMC,GAAsC,OAAO,WAAc,YAAc,IAAI,UAAc,KA4IjG,IAAMC,GAAmBC,GAASC,GAAID,EAAG,CAACE,EAAOC,IAAQ,GAAGA,CAAG,IAAID,CAAK,GAAG,EAAE,KAAK,EAAE,EA+DpF,IAAME,GAAeC,GAAI,aACnBC,GAAYD,GAAI,UAChBE,GAAqBF,GAAI,mBACzBG,GAAeH,GAAI,aACnBI,GAAgBJ,GAAI,cACpBK,GAAqBL,GAAI,mBACzBM,GAAyBN,GAAI,uBC7M1C,IAAMO,GAAqBC,GAAiB,KAAS,CAInD,YAAaC,EAAW,CACtB,KAAK,EAAIA,CACX,CAEA,SAAW,CACTD,EAAc,KAAK,CAAC,CACtB,CACF,EAEME,GAAUH,GAAmB,YAAY,EAOlCI,GAAU,CAACA,EAASC,IAAa,IAAIF,GAAQ,WAAWE,EAAUD,CAAO,CAAC,EAEjFE,GAAWN,GAAmB,aAAa,EAU1C,IAAMO,GAAYC,GAAmBC,GAAO,OAAO,uBAA0B,aAAe,qBAAqBA,CAAG,CAAC,EAW5H,IAAMC,GAAOC,GAAmBC,GAAO,OAAO,oBAAuB,aAAe,mBAAmBA,CAAG,CAAC,ECtEpG,IAAMC,GAAS,OCNf,IAAMC,GAAcC,GAAO,EACrBC,GAAgBD,GAAO,EACvBE,GAAcF,GAAO,EACrBG,GAAcH,GAAO,EACrBI,GAAeJ,GAAO,EACtBK,GAAaL,GAAO,EACpBM,GAAgBN,GAAO,EACvBO,GAAgBP,GAAO,EACvBQ,GAAiBR,GAAO,EAOxBS,GAA4BC,GAAQ,CAC/C,IAAMC,EAAa,CAAC,EACdC,EAAU,CAAC,EAEbC,EAAI,EACR,KAAOA,EAAIH,EAAK,OAAQG,IAAK,CAC3B,IAAMC,EAAMJ,EAAKG,CAAC,EACdC,EAAI,cAAgB,QAAUA,EAAI,cAAgB,OACpDH,EAAW,KAAKG,CAAG,EACVA,EAAI,cAAgB,QAC7BF,EAAQ,KAAK,KAAK,UAAUE,CAAG,CAAC,CAEpC,CACA,OAAOF,CACT,EAKA,IAAIG,GAAuBC,GAAY,EClBvC,IAAMC,GAAmB,CACvB,CAAQC,EAAI,EAAQC,GAAO,cAAe,MAAM,EAChD,CAAQC,EAAM,EAAQD,GAAO,cAAe,QAAQ,EACpD,CAAQE,EAAI,EAAQF,GAAO,QAAS,MAAM,EAC1C,CAAQG,EAAK,EAAQH,GAAO,QAAS,OAAO,EAC5C,CAAQI,EAAI,EAAQJ,GAAO,QAAS,MAAM,EAC1C,CAAQK,EAAG,EAAQL,GAAO,QAAS,KAAK,EACxC,CAAQM,EAAM,EAAQN,GAAO,QAAS,QAAQ,EAC9C,CAAQO,EAAM,EAAQP,GAAO,QAAS,QAAQ,EAC9C,CAAQQ,EAAO,EAAQR,GAAO,QAAS,OAAO,CAChD,EAOMS,GAA6BC,GAAS,CAC1C,IAAMC,EAAa,CAAC,EACdC,EAAS,CAAC,EACVC,EAAmBb,GAAO,EAI5Bc,EAAU,CAAC,EAEXC,EAAI,EACR,KAAOA,EAAIL,EAAK,OAAQK,IAAK,CAC3B,IAAMC,EAAMN,EAAKK,CAAC,EAEZE,EAAQnB,GAAiBkB,CAAG,EAClC,GAAIC,IAAU,OACZJ,EAAa,IAAII,EAAM,KAAMA,EAAM,KAAK,UAEpCD,EAAI,cAAgB,QAAUA,EAAI,cAAgB,OAAQ,CAC5D,IAAMC,EAAYC,GAAiBL,CAAY,EAC3CE,EAAI,GAAKE,EAAM,OAAS,GAC1BN,EAAW,KAAK,KAAOK,CAAG,EAC1BJ,EAAO,KAAKK,CAAK,GAEjBN,EAAW,KAAKK,CAAG,CAEvB,KACE,MAGN,CAOA,IANID,EAAI,IAEND,EAAUF,EACVE,EAAQ,QAAQH,EAAW,KAAK,EAAE,CAAC,GAG9BI,EAAIL,EAAK,OAAQK,IAAK,CAC3B,IAAMC,EAAMN,EAAKK,CAAC,EACZC,aAAe,QACnBF,EAAQ,KAAKE,CAAG,CAEpB,CACA,OAAOF,CACT,EAIMK,GAAyBC,GAC3BX,GACOY,GAMEC,GAAQ,IAAIZ,IAAS,CAChC,QAAQ,IAAI,GAAGS,GAAmBT,CAAI,CAAC,EAEvCa,GAAU,QAASC,GAAOA,EAAG,MAAMd,CAAI,CAAC,CAC1C,EAMae,GAAO,IAAIf,IAAS,CAC/B,QAAQ,KAAK,GAAGS,GAAmBT,CAAI,CAAC,EACxCA,EAAK,QAAeH,EAAM,EAC1BgB,GAAU,QAASC,GAAOA,EAAG,MAAMd,CAAI,CAAC,CAC1C,EA6EO,IAAMgB,GAAgBC,GAAO,EC5J7B,IAAMC,GAAiBC,IAAS,CAIrC,CAAC,OAAO,QAAQ,GAAK,CACnB,OAAO,IACT,EAEA,KAAAA,CACF,GAOaC,GAAiB,CAACC,EAAUC,IAAWJ,GAAe,IAAM,CACvE,IAAIK,EACJ,GACEA,EAAMF,EAAS,KAAK,QACb,CAACE,EAAI,MAAQ,CAACD,EAAOC,EAAI,KAAK,GACvC,OAAOA,CACT,CAAC,EAOYC,GAAc,CAACH,EAAUI,IAASP,GAAe,IAAM,CAClE,GAAM,CAAE,KAAAQ,EAAM,MAAAC,CAAM,EAAIN,EAAS,KAAK,EACtC,MAAO,CAAE,KAAAK,EAAM,MAAOA,EAAO,OAAYD,EAAKE,CAAK,CAAE,CACvD,CAAC,EC9CM,IAAMC,GAAN,cAAgCC,EAAW,CAKhD,YAAaC,EAAMC,EAAW,CAC5B,MAAK,EACL,KAAK,IAAMD,EACX,KAAK,UAAYC,CACrB,CACA,ECTaC,GAAN,KAAiB,CAKtB,YAAaC,EAAOC,EAAK,CAIvB,KAAK,MAAQD,EAIb,KAAK,IAAMC,CACf,CACA,EASaC,GAAN,KAAgB,CACrB,aAAe,CAIb,KAAK,QAAU,IAAI,GACvB,CACA,EAWaC,GAAwB,CAACC,EAAaC,EAAIC,IACrDD,EAAG,QAAQ,QAAQ,CAACE,EAASC,IAAa,CACxC,IAAMC,EAAyCL,EAAY,IAAI,MAAM,QAAQ,IAAII,CAAQ,EACzF,QAASE,EAAI,EAAGA,EAAIH,EAAQ,OAAQG,IAAK,CACvC,IAAMC,EAAMJ,EAAQG,CAAC,EACrBE,GAAeR,EAAaK,EAASE,EAAI,MAAOA,EAAI,IAAKL,CAAC,CAChE,CACA,CAAG,EAUUO,GAAc,CAACC,EAAKd,IAAU,CACzC,IAAIe,EAAO,EACPC,EAAQF,EAAI,OAAS,EACzB,KAAOC,GAAQC,GAAO,CACpB,IAAMC,EAAgBC,IAAOH,EAAOC,GAAS,CAAC,EACxCG,EAAML,EAAIG,CAAQ,EAClBG,EAAWD,EAAI,MACrB,GAAIC,GAAYpB,EAAO,CACrB,GAAIA,EAAQoB,EAAWD,EAAI,IACzB,OAAOF,EAETF,EAAOE,EAAW,CACxB,MACMD,EAAQC,EAAW,CAEzB,CACE,OAAO,IACT,EAUaI,GAAY,CAAChB,EAAIiB,IAAO,CACnC,IAAMR,EAAMT,EAAG,QAAQ,IAAIiB,EAAG,MAAM,EACpC,OAAOR,IAAQ,QAAaD,GAAYC,EAAKQ,EAAG,KAAK,IAAM,IAC7D,EAQaC,GAAwBlB,GAAM,CACzCA,EAAG,QAAQ,QAAQmB,GAAQ,CACzBA,EAAK,KAAK,CAACC,EAAGC,IAAMD,EAAE,MAAQC,EAAE,KAAK,EAKrC,IAAIhB,EAAGiB,EACP,IAAKjB,EAAI,EAAGiB,EAAI,EAAGjB,EAAIc,EAAK,OAAQd,IAAK,CACvC,IAAMK,EAAOS,EAAKG,EAAI,CAAC,EACjBX,EAAQQ,EAAKd,CAAC,EAChBK,EAAK,MAAQA,EAAK,KAAOC,EAAM,MACjCD,EAAK,IAAWa,GAAIb,EAAK,IAAKC,EAAM,MAAQA,EAAM,IAAMD,EAAK,KAAK,GAE9DY,EAAIjB,IACNc,EAAKG,CAAC,EAAIX,GAEZW,IAER,CACIH,EAAK,OAASG,CAClB,CAAG,CACH,EAMaE,GAAkBC,GAAO,CACpC,IAAMC,EAAS,IAAI7B,GACnB,QAAS8B,EAAO,EAAGA,EAAOF,EAAI,OAAQE,IACpCF,EAAIE,CAAI,EAAE,QAAQ,QAAQ,CAACC,EAAUC,IAAW,CAC9C,GAAI,CAACH,EAAO,QAAQ,IAAIG,CAAM,EAAG,CAM/B,IAAMV,EAAOS,EAAS,MAAK,EAC3B,QAASvB,EAAIsB,EAAO,EAAGtB,EAAIoB,EAAI,OAAQpB,IAC/ByB,GAASX,EAAMM,EAAIpB,CAAC,EAAE,QAAQ,IAAIwB,CAAM,GAAK,CAAA,CAAE,EAEvDH,EAAO,QAAQ,IAAIG,EAAQV,CAAI,CACvC,CACA,CAAK,EAEH,OAAAD,GAAsBQ,CAAM,EACrBA,CACT,EAWaK,GAAiB,CAAC/B,EAAI6B,EAAQlC,EAAOqC,IAAW,CACvDC,GAAejC,EAAG,QAAS6B,EAAQ,IAAwC,CAAA,CAAG,EAAE,KAAK,IAAInC,GAAWC,EAAOqC,CAAM,CAAC,CACxH,EAEaE,GAAkB,IAAM,IAAIrC,GAS5BsC,GAAiCC,GAAM,CAClD,IAAMpC,EAAKkC,GAAe,EAC1B,OAAAE,EAAG,QAAQ,QAAQ,CAAChC,EAASyB,IAAW,CAItC,IAAMQ,EAAU,CAAA,EAChB,QAAShC,EAAI,EAAGA,EAAID,EAAQ,OAAQC,IAAK,CACvC,IAAMiC,EAASlC,EAAQC,CAAC,EACxB,GAAIiC,EAAO,QAAS,CAClB,IAAM3C,EAAQ2C,EAAO,GAAG,MACpB1C,EAAM0C,EAAO,OACjB,GAAIjC,EAAI,EAAID,EAAQ,OAClB,QAASmC,EAAOnC,EAAQC,EAAI,CAAC,EAAGA,EAAI,EAAID,EAAQ,QAAUmC,EAAK,QAASA,EAAOnC,EAAQ,EAAEC,EAAI,CAAC,EAC5FT,GAAO2C,EAAK,OAGhBF,EAAQ,KAAK,IAAI3C,GAAWC,EAAOC,CAAG,CAAC,CAC/C,CACA,CACQyC,EAAQ,OAAS,GACnBrC,EAAG,QAAQ,IAAI6B,EAAQQ,CAAO,CAEpC,CAAG,EACMrC,CACT,EASawC,GAAiB,CAACC,EAASzC,IAAO,CACpC0C,EAAaD,EAAQ,YAAazC,EAAG,QAAQ,IAAI,EAGpD2C,GAAK3C,EAAG,QAAQ,QAAO,CAAE,EAC5B,KAAK,CAACoB,EAAGC,IAAMA,EAAE,CAAC,EAAID,EAAE,CAAC,CAAC,EAC1B,QAAQ,CAAC,CAACS,EAAQQ,CAAO,IAAM,CAC9BI,EAAQ,cAAa,EACZC,EAAaD,EAAQ,YAAaZ,CAAM,EACjD,IAAMjC,EAAMyC,EAAQ,OACXK,EAAaD,EAAQ,YAAa7C,CAAG,EAC9C,QAASS,EAAI,EAAGA,EAAIT,EAAKS,IAAK,CAC5B,IAAMuC,EAAOP,EAAQhC,CAAC,EACtBoC,EAAQ,aAAaG,EAAK,KAAK,EAC/BH,EAAQ,WAAWG,EAAK,GAAG,CACnC,CACA,CAAK,CACL,EASaC,GAAgBC,GAAW,CACtC,IAAM9C,EAAK,IAAIH,GACTkD,EAAsBC,GAAYF,EAAQ,WAAW,EAC3D,QAASzC,EAAI,EAAGA,EAAI0C,EAAY1C,IAAK,CACnCyC,EAAQ,cAAa,EACrB,IAAMjB,EAAkBmB,GAAYF,EAAQ,WAAW,EACjDG,EAA2BD,GAAYF,EAAQ,WAAW,EAChE,GAAIG,EAAkB,EAAG,CACvB,IAAMC,EAAcjB,GAAejC,EAAG,QAAS6B,EAAQ,IAAwC,CAAA,CAAG,EAClG,QAASxB,EAAI,EAAGA,EAAI4C,EAAiB5C,IACnC6C,EAAQ,KAAK,IAAIxD,GAAWoD,EAAQ,YAAW,EAAIA,EAAQ,UAAS,CAAE,CAAC,CAE/E,CACA,CACE,OAAO9C,CACT,EAeamD,GAAwB,CAACL,EAAS/C,EAAaqD,IAAU,CACpE,IAAMC,EAAc,IAAIxD,GAClBkD,EAAsBC,GAAYF,EAAQ,WAAW,EAC3D,QAASzC,EAAI,EAAGA,EAAI0C,EAAY1C,IAAK,CACnCyC,EAAQ,cAAa,EACrB,IAAMjB,EAAkBmB,GAAYF,EAAQ,WAAW,EACjDG,EAA2BD,GAAYF,EAAQ,WAAW,EAC1D1C,EAAUgD,EAAM,QAAQ,IAAIvB,CAAM,GAAK,CAAA,EACvCyB,EAAQC,GAASH,EAAOvB,CAAM,EACpC,QAASxB,EAAI,EAAGA,EAAI4C,EAAiB5C,IAAK,CACxC,IAAMV,EAAQmD,EAAQ,YAAW,EAC3BU,EAAW7D,EAAQmD,EAAQ,UAAS,EAC1C,GAAInD,EAAQ2D,EAAO,CACbA,EAAQE,GACVzB,GAAesB,EAAaxB,EAAQyB,EAAOE,EAAWF,CAAK,EAE7D,IAAIG,EAAQC,GAAYtD,EAAST,CAAK,EAMlC2C,EAASlC,EAAQqD,CAAK,EAM1B,IAJI,CAACnB,EAAO,SAAWA,EAAO,GAAG,MAAQ3C,IACvCS,EAAQ,OAAOqD,EAAQ,EAAG,EAAGE,GAAU5D,EAAauC,EAAQ3C,EAAQ2C,EAAO,GAAG,KAAK,CAAC,EACpFmB,KAEKA,EAAQrD,EAAQ,SAErBkC,EAASlC,EAAQqD,GAAO,EACpBnB,EAAO,GAAG,MAAQkB,IACflB,EAAO,UACNkB,EAAWlB,EAAO,GAAG,MAAQA,EAAO,QACtClC,EAAQ,OAAOqD,EAAO,EAAGE,GAAU5D,EAAauC,EAAQkB,EAAWlB,EAAO,GAAG,KAAK,CAAC,EAErFA,EAAO,OAAOvC,CAAW,EAMvC,MACQgC,GAAesB,EAAaxB,EAAQlC,EAAO6D,EAAW7D,CAAK,CAEnE,CACA,CACE,GAAI0D,EAAY,QAAQ,KAAO,EAAG,CAChC,IAAMrD,EAAK,IAAI4D,GACf,OAASlB,EAAa1C,EAAG,YAAa,CAAC,EACvCwC,GAAexC,EAAIqD,CAAW,EACvBrD,EAAG,aAAY,CAC1B,CACE,OAAO,IACT,EAMa6D,GAAkB,CAACC,EAAKC,IAAQ,CAC3C,GAAID,EAAI,QAAQ,OAASC,EAAI,QAAQ,KAAM,MAAO,GAClD,OAAW,CAAClC,EAAQmC,CAAY,IAAKF,EAAI,QAAQ,QAAO,EAAI,CAC1D,IAAMG,EAA2EF,EAAI,QAAQ,IAAIlC,CAAM,EACvG,GAAIoC,IAAiB,QAAaD,EAAa,SAAWC,EAAa,OAAQ,MAAO,GACtF,QAAS5D,EAAI,EAAGA,EAAI2D,EAAa,OAAQ3D,IAAK,CAC5C,IAAM6D,EAAMF,EAAa3D,CAAC,EACpB8D,EAAMF,EAAa5D,CAAC,EAC1B,GAAI6D,EAAI,QAAUC,EAAI,OAASD,EAAI,MAAQC,EAAI,IAC7C,MAAO,EAEf,CACA,CACE,MAAO,EACT,ECvUaC,GAA6BC,GAiB7BC,GAAN,MAAMC,UAAYhF,EAAW,CAIlC,YAAa,CAAE,KAAAiF,EAAcC,GAAM,EAAI,aAAAC,EAAe,KAAM,GAAAC,EAAK,GAAM,SAAAC,EAAW,IAAM,GAAM,KAAAC,EAAO,KAAM,SAAAC,EAAW,GAAO,WAAAC,EAAa,EAAI,EAAK,CAAA,EAAI,CACrJ,MAAK,EACL,KAAK,GAAKJ,EACV,KAAK,SAAWC,EAChB,KAAK,SAAWR,GAAmB,EACnC,KAAK,KAAOI,EACZ,KAAK,aAAeE,EAIpB,KAAK,MAAQ,IAAI,IACjB,KAAK,MAAQ,IAAIM,GAIjB,KAAK,aAAe,KAIpB,KAAK,qBAAuB,CAAA,EAI5B,KAAK,QAAU,IAAI,IAKnB,KAAK,MAAQ,KACb,KAAK,WAAaD,EAClB,KAAK,SAAWD,EAChB,KAAK,KAAOD,EAOZ,KAAK,SAAW,GAQhB,KAAK,SAAW,GAIhB,KAAK,WAAqBI,GAAOC,GAAW,CAC1C,KAAK,GAAG,OAAQ,IAAM,CACpB,KAAK,SAAW,GAChBA,EAAQ,IAAI,CACpB,CAAO,CACP,CAAK,EACD,IAAMC,EAAuB,IAAcF,GAAOC,GAAW,CAI3D,IAAME,EAAgBC,GAAa,EAC7BA,IAAa,QAAaA,IAAa,MACzC,KAAK,IAAI,OAAQD,CAAY,EAC7BF,EAAO,EAEjB,EACM,KAAK,GAAG,OAAQE,CAAY,CAClC,CAAK,EACD,KAAK,GAAG,OAAQC,GAAY,CACtBA,IAAa,IAAS,KAAK,WAC7B,KAAK,WAAaF,EAAoB,GAExC,KAAK,SAAWE,IAAa,QAAaA,IAAa,GACnD,KAAK,UAAY,CAAC,KAAK,UACzB,KAAK,KAAK,OAAQ,CAAA,CAAE,CAE5B,CAAK,EAMD,KAAK,WAAaF,EAAoB,CAC1C,CASE,MAAQ,CACN,IAAMvC,EAAO,KAAK,MACdA,IAAS,MAAQ,CAAC,KAAK,YACzB0C,GAA6B1C,EAAK,OAAQ,IAAK7C,GAAe,CAC5DA,EAAY,cAAc,IAAI,IAAI,CAC1C,EAAS,KAAM,EAAI,EAEf,KAAK,WAAa,EACtB,CAEE,YAAc,CACZ,OAAO,KAAK,OAChB,CAEE,gBAAkB,CAChB,OAAO,IAAI,IAAU4C,GAAK,KAAK,OAAO,EAAE,IAAI4C,GAAOA,EAAI,IAAI,CAAC,CAChE,CAeE,SAAUtF,EAAGuF,EAAS,KAAM,CAC1B,OAAOF,GAAS,KAAMrF,EAAGuF,CAAM,CACnC,CA4BE,IAAKC,EAAMC,EAAkBC,GAAc,CACzC,IAAMC,EAAW3D,GAAe,KAAK,MAAOwD,EAAM,IAAM,CAEtD,IAAMI,EAAI,IAAIH,EACd,OAAAG,EAAE,WAAW,KAAM,IAAI,EAChBA,CACb,CAAK,EACKC,EAASF,EAAK,YACpB,GAAIF,IAAoBC,IAAgBG,IAAWJ,EACjD,GAAII,IAAWH,GAAc,CAE3B,IAAME,EAAI,IAAIH,EACdG,EAAE,KAAOD,EAAK,KACdA,EAAK,KAAK,QAAgCG,GAAK,CAC7C,KAAOA,IAAM,KAAMA,EAAIA,EAAE,KAEvBA,EAAE,OAASF,CAEvB,CAAS,EACDA,EAAE,OAASD,EAAK,OAChB,QAASG,EAAIF,EAAE,OAAQE,IAAM,KAAMA,EAAIA,EAAE,MACvCA,EAAE,OAASF,EAEb,OAAAA,EAAE,QAAUD,EAAK,QACjB,KAAK,MAAM,IAAIH,EAAMI,CAAC,EACtBA,EAAE,WAAW,KAAM,IAAI,EAChBA,CACf,KACQ,OAAM,IAAI,MAAM,sBAAsBJ,CAAI,wDAAwD,EAGtG,OAAOG,CACX,CASE,SAAUH,EAAO,GAAI,CAEnB,OAAO,KAAK,IAAIA,EAAMO,EAAM,CAChC,CAQE,QAASP,EAAO,GAAI,CAElB,OAAO,KAAK,IAAIA,EAAMQ,EAAK,CAC/B,CASE,OAAQR,EAAO,GAAI,CAEjB,OAAO,KAAK,IAAIA,EAAMS,EAAI,CAC9B,CAQE,eAAgBT,EAAO,GAAI,CAEzB,OAAO,KAAK,IAAIA,EAAMU,EAAY,CACtC,CAUE,QAAU,CAIR,IAAMZ,EAAM,CAAA,EAEZ,YAAK,MAAM,QAAQ,CAACa,EAAOC,IAAQ,CACjCd,EAAIc,CAAG,EAAID,EAAM,OAAM,CAC7B,CAAK,EAEMb,CACX,CAKE,SAAW,CACH5C,GAAK,KAAK,OAAO,EAAE,QAAQ2D,GAAUA,EAAO,QAAO,CAAE,EAC3D,IAAM1D,EAAO,KAAK,MAClB,GAAIA,IAAS,KAAM,CACjB,KAAK,MAAQ,KACb,IAAM2D,EAAqC3D,EAAK,QAChD2D,EAAQ,IAAM,IAAIhC,EAAIiC,EAAAC,EAAA,CAAE,KAAM,KAAK,MAASF,EAAQ,MAA9B,CAAoC,WAAY,EAAK,EAAE,EAC7EA,EAAQ,IAAI,MAAQ3D,EACpB0C,GAA6B1C,EAAM,OAAO,IAAK7C,GAAe,CAC5D,IAAMwF,EAAMgB,EAAQ,IACf3D,EAAK,SACR7C,EAAY,aAAa,IAAIwF,CAAG,EAElCxF,EAAY,eAAe,IAAI,IAAI,CAC3C,EAAS,KAAM,EAAI,CACnB,CACI,KAAK,KAAK,YAAa,CAAC,EAAI,CAAC,EAC7B,KAAK,KAAK,UAAW,CAAC,IAAI,CAAC,EAC3B,MAAM,QAAO,CACjB,CAME,GAAI2G,EAAWzG,EAAG,CAChB,MAAM,GAAGyG,EAAWzG,CAAC,CACzB,CAME,IAAKyG,EAAWzG,EAAG,CACjB,MAAM,IAAIyG,EAAWzG,CAAC,CAC1B,CACA,ECzUa0G,GAAN,KAAkB,CAIvB,YAAa7D,EAAS,CACpB,KAAK,YAAcA,CACvB,CAEE,eAAiB,CAEnB,CAKE,aAAe,CACb,OAAgBE,GAAY,KAAK,WAAW,CAChD,CAKE,WAAa,CACX,OAAgBA,GAAY,KAAK,WAAW,CAChD,CACA,EAEa4D,GAAN,cAA8BD,EAAY,CAI/C,YAAc,CACZ,OAAOE,GAAkB7D,GAAY,KAAK,WAAW,EAAYA,GAAY,KAAK,WAAW,CAAC,CAClG,CAKE,aAAe,CACb,OAAO6D,GAAkB7D,GAAY,KAAK,WAAW,EAAYA,GAAY,KAAK,WAAW,CAAC,CAClG,CAME,YAAc,CACZ,OAAgBA,GAAY,KAAK,WAAW,CAChD,CAKE,UAAY,CACV,OAAgB8D,GAAU,KAAK,WAAW,CAC9C,CAKE,YAAc,CACZ,OAAgBC,GAAc,KAAK,WAAW,CAClD,CAKE,gBAAkB,CAChB,OAAgB/D,GAAY,KAAK,WAAW,IAAM,CACtD,CAKE,aAAe,CACb,OAAgBA,GAAY,KAAK,WAAW,CAChD,CAOE,SAAW,CACT,OAAgBA,GAAY,KAAK,WAAW,CAChD,CAKE,SAAW,CACT,OAAgBgE,GAAQ,KAAK,WAAW,CAC5C,CAKE,SAAW,CACT,OAAcC,GAAwBC,GAAkB,KAAK,WAAW,CAAC,CAC7E,CAOE,UAAY,CACV,OAAO,KAAK,MAAeH,GAAc,KAAK,WAAW,CAAC,CAC9D,CAKE,SAAW,CACT,OAAgBA,GAAc,KAAK,WAAW,CAClD,CACA,EAEaI,GAAN,KAAkB,CAIvB,YAAarE,EAAS,CAIpB,KAAK,UAAY,EACjB,KAAK,YAAcA,CACvB,CAEE,eAAiB,CACf,KAAK,UAAY,CACrB,CAKE,aAAe,CACb,YAAK,WAAsBE,GAAY,KAAK,WAAW,EAChD,KAAK,SAChB,CAKE,WAAa,CACX,IAAMoE,EAAgBpE,GAAY,KAAK,WAAW,EAAI,EACtD,YAAK,WAAaoE,EACXA,CACX,CACA,EAEaC,GAAN,cAA8BF,EAAY,CAI/C,YAAarE,EAAS,CACpB,MAAMA,CAAO,EAOb,KAAK,KAAO,CAAA,EACHE,GAAYF,CAAO,EAC5B,KAAK,gBAAkB,IAAawE,GAA8BJ,GAAkBpE,CAAO,CAAC,EAC5F,KAAK,cAAgB,IAAayE,GAA2BL,GAAkBpE,CAAO,CAAC,EACvF,KAAK,iBAAmB,IAAawE,GAA8BJ,GAAkBpE,CAAO,CAAC,EAC7F,KAAK,kBAAoB,IAAawE,GAA8BJ,GAAkBpE,CAAO,CAAC,EAC9F,KAAK,YAAc,IAAa0E,GAAoBN,GAAkBpE,CAAO,EAAYgE,EAAS,EAClG,KAAK,cAAgB,IAAaW,GAAuBP,GAAkBpE,CAAO,CAAC,EACnF,KAAK,kBAAoB,IAAa0E,GAAoBN,GAAkBpE,CAAO,EAAYgE,EAAS,EACxG,KAAK,eAAiB,IAAaS,GAA2BL,GAAkBpE,CAAO,CAAC,EACxF,KAAK,WAAa,IAAayE,GAA2BL,GAAkBpE,CAAO,CAAC,CACxF,CAKE,YAAc,CACZ,OAAO,IAAI4E,GAAG,KAAK,cAAc,KAAI,EAAI,KAAK,iBAAiB,KAAI,CAAE,CACzE,CAKE,aAAe,CACb,OAAO,IAAIA,GAAG,KAAK,cAAc,KAAI,EAAI,KAAK,kBAAkB,KAAI,CAAE,CAC1E,CAME,YAAc,CACZ,OAAO,KAAK,cAAc,KAAI,CAClC,CAKE,UAAY,CACV,OAA8B,KAAK,YAAY,KAAI,CACvD,CAKE,YAAc,CACZ,OAAO,KAAK,cAAc,KAAI,CAClC,CAKE,gBAAkB,CAChB,OAAO,KAAK,kBAAkB,KAAI,IAAO,CAC7C,CAKE,aAAe,CACb,OAAO,KAAK,eAAe,KAAI,CACnC,CAOE,SAAW,CACT,OAAO,KAAK,WAAW,KAAI,CAC/B,CAKE,SAAW,CACT,OAAgBV,GAAQ,KAAK,WAAW,CAC5C,CAKE,SAAW,CACT,OAAgBE,GAAkB,KAAK,WAAW,CACtD,CASE,UAAY,CACV,OAAgBF,GAAQ,KAAK,WAAW,CAC5C,CAKE,SAAW,CACT,IAAMW,EAAW,KAAK,gBAAgB,KAAI,EAC1C,GAAIA,EAAW,KAAK,KAAK,OACvB,OAAO,KAAK,KAAKA,CAAQ,EACpB,CACL,IAAMtB,EAAM,KAAK,cAAc,KAAI,EACnC,YAAK,KAAK,KAAKA,CAAG,EACXA,CACb,CACA,CACA,ECjRauB,GAAN,KAAkB,CACvB,aAAe,CACb,KAAK,YAAuBC,GAAa,CAC7C,CAEE,cAAgB,CACd,OAAgBC,GAAa,KAAK,WAAW,CACjD,CAEE,eAAiB,CAEnB,CAKE,aAAcnI,EAAO,CACV+C,EAAa,KAAK,YAAa/C,CAAK,CACjD,CAKE,WAAYC,EAAK,CACN8C,EAAa,KAAK,YAAa9C,CAAG,CAC/C,CACA,EAEamI,GAAN,cAA8BH,EAAY,CAI/C,YAAa3G,EAAI,CACNyB,EAAa,KAAK,YAAazB,EAAG,MAAM,EACxCyB,EAAa,KAAK,YAAazB,EAAG,KAAK,CACpD,CAKE,aAAcA,EAAI,CACPyB,EAAa,KAAK,YAAazB,EAAG,MAAM,EACxCyB,EAAa,KAAK,YAAazB,EAAG,KAAK,CACpD,CAME,YAAaY,EAAQ,CACVa,EAAa,KAAK,YAAab,CAAM,CAClD,CAKE,UAAWmG,EAAM,CACNC,GAAW,KAAK,YAAaD,CAAI,CAC9C,CAKE,YAAaE,EAAG,CACLC,GAAe,KAAK,YAAaD,CAAC,CAC/C,CAKE,gBAAiBE,EAAQ,CACd1F,EAAa,KAAK,YAAa0F,EAAS,EAAI,CAAC,CAC1D,CAKE,aAAcJ,EAAM,CACTtF,EAAa,KAAK,YAAasF,CAAI,CAChD,CAOE,SAAUpI,EAAK,CACJ8C,EAAa,KAAK,YAAa9C,CAAG,CAC/C,CAKE,SAAUyI,EAAK,CACJC,GAAS,KAAK,YAAaD,CAAG,CAC3C,CAKE,SAAUE,EAAK,CACJC,GAAmB,KAAK,YAAaD,CAAG,CACrD,CAKE,UAAWE,EAAO,CACPN,GAAe,KAAK,YAAa,KAAK,UAAUM,CAAK,CAAC,CACnE,CAKE,SAAUpC,EAAK,CACJ8B,GAAe,KAAK,YAAa9B,CAAG,CACjD,CACA,EAEaqC,GAAN,KAAkB,CACvB,aAAe,CACb,KAAK,YAAuBb,GAAa,EACzC,KAAK,UAAY,CACrB,CAEE,cAAgB,CACd,OAAgBC,GAAa,KAAK,WAAW,CACjD,CAEE,eAAiB,CACf,KAAK,UAAY,CACrB,CAKE,aAAcnI,EAAO,CACnB,IAAMyH,EAAOzH,EAAQ,KAAK,UAC1B,KAAK,UAAYA,EACR+C,EAAa,KAAK,YAAa0E,CAAI,CAChD,CAKE,WAAYxH,EAAK,CACXA,IAAQ,GACJ+I,GAAc,EAEbjG,EAAa,KAAK,YAAa9C,EAAM,CAAC,EAC/C,KAAK,WAAaA,CACtB,CACA,EAEagE,GAAN,cAA8B8E,EAAY,CAC/C,aAAe,CACb,MAAK,EAIL,KAAK,OAAS,IAAI,IAOlB,KAAK,SAAW,EAChB,KAAK,gBAAkB,IAAaE,GACpC,KAAK,cAAgB,IAAaC,GAClC,KAAK,iBAAmB,IAAaD,GACrC,KAAK,kBAAoB,IAAaA,GACtC,KAAK,YAAc,IAAaE,GAAoBb,EAAU,EAC9D,KAAK,cAAgB,IAAac,GAClC,KAAK,kBAAoB,IAAaD,GAAoBb,EAAU,EACpE,KAAK,eAAiB,IAAaY,GACnC,KAAK,WAAa,IAAaA,EACnC,CAEE,cAAgB,CACd,IAAMpG,EAAmBoF,GAAa,EACtC,OAASnF,EAAaD,EAAS,CAAC,EACvB+F,GAAmB/F,EAAS,KAAK,gBAAgB,aAAY,CAAE,EAC/D+F,GAAmB/F,EAAS,KAAK,cAAc,aAAY,CAAE,EAC7D+F,GAAmB/F,EAAS,KAAK,iBAAiB,aAAY,CAAE,EAChE+F,GAAmB/F,EAAS,KAAK,kBAAkB,aAAY,CAAE,EACjE+F,GAAmB/F,EAAkBqF,GAAa,KAAK,WAAW,CAAC,EACnEU,GAAmB/F,EAAS,KAAK,cAAc,aAAY,CAAE,EAC7D+F,GAAmB/F,EAAkBqF,GAAa,KAAK,iBAAiB,CAAC,EACzEU,GAAmB/F,EAAS,KAAK,eAAe,aAAY,CAAE,EAC9D+F,GAAmB/F,EAAS,KAAK,WAAW,aAAY,CAAE,EAE1DuG,GAAgBvG,EAAkBqF,GAAa,KAAK,WAAW,CAAC,EACzDA,GAAarF,CAAO,CACxC,CAKE,YAAaxB,EAAI,CACf,KAAK,cAAc,MAAMA,EAAG,MAAM,EAClC,KAAK,iBAAiB,MAAMA,EAAG,KAAK,CACxC,CAKE,aAAcA,EAAI,CAChB,KAAK,cAAc,MAAMA,EAAG,MAAM,EAClC,KAAK,kBAAkB,MAAMA,EAAG,KAAK,CACzC,CAKE,YAAaY,EAAQ,CACnB,KAAK,cAAc,MAAMA,CAAM,CACnC,CAKE,UAAWmG,EAAM,CACf,KAAK,YAAY,MAAMA,CAAI,CAC/B,CAKE,YAAaE,EAAG,CACd,KAAK,cAAc,MAAMA,CAAC,CAC9B,CAKE,gBAAiBE,EAAQ,CACvB,KAAK,kBAAkB,MAAMA,EAAS,EAAI,CAAC,CAC/C,CAKE,aAAcJ,EAAM,CAClB,KAAK,eAAe,MAAMA,CAAI,CAClC,CAOE,SAAUpI,EAAK,CACb,KAAK,WAAW,MAAMA,CAAG,CAC7B,CAKE,SAAUyI,EAAK,CACJC,GAAS,KAAK,YAAaD,CAAG,CAC3C,CAKE,SAAUE,EAAK,CACJC,GAAmB,KAAK,YAAaD,CAAG,CACrD,CASE,UAAWE,EAAO,CACPH,GAAS,KAAK,YAAaG,CAAK,CAC7C,CAUE,SAAUpC,EAAK,CACb,IAAM1G,EAAQ,KAAK,OAAO,IAAI0G,CAAG,EAC7B1G,IAAU,QAeZ,KAAK,gBAAgB,MAAM,KAAK,UAAU,EAC1C,KAAK,cAAc,MAAM0G,CAAG,GAE5B,KAAK,gBAAgB,MAAM1G,CAAK,CAEtC,CACA,ECvQMsJ,GAAe,CAACxG,EAASrC,EAASyB,EAAQlC,IAAU,CAExDA,EAAa4B,GAAI5B,EAAOS,EAAQ,CAAC,EAAE,GAAG,KAAK,EAC3C,IAAM8I,EAAkBxF,GAAYtD,EAAST,CAAK,EAEzC+C,EAAaD,EAAQ,YAAarC,EAAQ,OAAS8I,CAAe,EAC3EzG,EAAQ,YAAYZ,CAAM,EACjBa,EAAaD,EAAQ,YAAa9C,CAAK,EAChD,IAAMwJ,EAAc/I,EAAQ8I,CAAe,EAE3CC,EAAY,MAAM1G,EAAS9C,EAAQwJ,EAAY,GAAG,KAAK,EACvD,QAAS9I,EAAI6I,EAAkB,EAAG7I,EAAID,EAAQ,OAAQC,IACpDD,EAAQC,CAAC,EAAE,MAAMoC,EAAS,CAAC,CAE/B,EAUa2G,GAAsB,CAAC3G,EAASW,EAAOiG,IAAQ,CAE1D,IAAMC,EAAK,IAAI,IACfD,EAAI,QAAQ,CAAC1J,EAAOkC,IAAW,CAEzB0B,GAASH,EAAOvB,CAAM,EAAIlC,GAC5B2J,EAAG,IAAIzH,EAAQlC,CAAK,CAE1B,CAAG,EACD4J,GAAenG,CAAK,EAAE,QAAQ,CAACoG,EAAQ3H,IAAW,CAC3CwH,EAAI,IAAIxH,CAAM,GACjByH,EAAG,IAAIzH,EAAQ,CAAC,CAEtB,CAAG,EAEQa,EAAaD,EAAQ,YAAa6G,EAAG,IAAI,EAG5C3G,GAAK2G,EAAG,QAAO,CAAE,EAAE,KAAK,CAAClI,EAAGC,IAAMA,EAAE,CAAC,EAAID,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,CAACS,EAAQlC,CAAK,IAAM,CAChFsJ,GAAaxG,EAAwCW,EAAM,QAAQ,IAAIvB,CAAM,EAAIA,EAAQlC,CAAK,CAClG,CAAG,CACH,EAUa8J,GAAwB,CAAC3G,EAASyC,IAAQ,CAIrD,IAAMmE,EAAiBzE,GAAM,EACvB0E,EAA6B3G,GAAYF,EAAQ,WAAW,EAClE,QAAS,EAAI,EAAG,EAAI6G,EAAmB,IAAK,CAC1C,IAAMC,EAA2B5G,GAAYF,EAAQ,WAAW,EAI1D+G,EAAO,IAAI,MAAMD,CAAe,EAChC/H,EAASiB,EAAQ,WAAU,EAC7BnD,EAAiBqD,GAAYF,EAAQ,WAAW,EAEpD4G,EAAW,IAAI7H,EAAQ,CAAE,EAAG,EAAG,KAAAgI,CAAI,CAAE,EACrC,QAASxJ,EAAI,EAAGA,EAAIuJ,EAAiBvJ,IAAK,CACxC,IAAM2H,EAAOlF,EAAQ,SAAQ,EAC7B,OAAe,GAAQkF,EAAI,CACzB,IAAK,GAAG,CACN,IAAMpI,EAAMkD,EAAQ,QAAO,EAC3B+G,EAAKxJ,CAAC,EAAI,IAAIyJ,GAAGjD,GAAShF,EAAQlC,CAAK,EAAGC,CAAG,EAC7CD,GAASC,EACT,KACV,CACQ,IAAK,IAAI,CAEP,IAAMA,EAAeoD,GAAYF,EAAQ,WAAW,EACpD+G,EAAKxJ,CAAC,EAAI,IAAI0J,GAAKlD,GAAShF,EAAQlC,CAAK,EAAGC,CAAG,EAC/CD,GAASC,EACT,KACV,CACQ,QAAS,CAMP,IAAMoK,GAAsBhC,EAAQ,OAAgC,EAK9D1F,EAAS,IAAI2H,GACjBpD,GAAShF,EAAQlC,CAAK,EACtB,MACCqI,EAAc,OAAiB,IAAOlF,EAAQ,WAAU,EAAK,KAC9D,MACCkF,EAAc,MAAiB,GAAOlF,EAAQ,YAAW,EAAK,KAC/DkH,EAAsBlH,EAAQ,eAAc,EAAKyC,EAAI,IAAIzC,EAAQ,WAAU,CAAE,EAAIA,EAAQ,WAAU,EAAM,KACzGkH,IAAuBhC,EAAc,MAAiB,GAAOlF,EAAQ,WAAU,EAAK,KACpFoH,GAAgBpH,EAASkF,CAAI,CACzC,EA0BU6B,EAAKxJ,CAAC,EAAIiC,EACV3C,GAAS2C,EAAO,MAC1B,CACA,CACA,CAEA,CACE,OAAOoH,CACT,EA6BMS,GAAmB,CAACpK,EAAaqD,EAAOgH,IAAsB,CAIlE,IAAMC,EAAQ,CAAA,EAEVC,EAA6B3H,GAAKyH,EAAkB,KAAI,CAAE,EAAE,KAAK,CAAChJ,EAAGC,IAAMD,EAAIC,CAAC,EACpF,GAAIiJ,EAAqB,SAAW,EAClC,OAAO,KAET,IAAMC,EAAsB,IAAM,CAChC,GAAID,EAAqB,SAAW,EAClC,OAAO,KAET,IAAIE,EAAmEJ,EAAkB,IAAIE,EAAqBA,EAAqB,OAAS,CAAC,CAAC,EAClJ,KAAOE,EAAkB,KAAK,SAAWA,EAAkB,GAEzD,GADAF,EAAqB,IAAG,EACpBA,EAAqB,OAAS,EAChCE,EAAmEJ,EAAkB,IAAIE,EAAqBA,EAAqB,OAAS,CAAC,CAAC,MAE9I,QAAO,KAGX,OAAOE,CACX,EACMC,EAAmBF,EAAmB,EAC1C,GAAIE,IAAqB,KACvB,OAAO,KAMT,IAAMC,EAAc,IAAI1F,GAClB2F,EAAY,IAAI,IAKhBC,EAAkB,CAAC/I,EAAQlC,IAAU,CACzC,IAAMkL,EAASF,EAAU,IAAI9I,CAAM,GAC/BgJ,GAAU,MAAQA,EAASlL,IAC7BgL,EAAU,IAAI9I,EAAQlC,CAAK,CAEjC,EAIMmL,EAAgCL,EAAkB,KAAyBA,EAAkB,GAAG,EAE9FnH,EAAQ,IAAI,IAEZyH,EAAmB,IAAM,CAC7B,QAAWnI,KAAQyH,EAAO,CACxB,IAAMxI,EAASe,EAAK,GAAG,OACjBoI,EAAoBZ,EAAkB,IAAIvI,CAAM,EAClDmJ,GAEFA,EAAkB,IAClBN,EAAY,QAAQ,IAAI7I,EAAQmJ,EAAkB,KAAK,MAAMA,EAAkB,CAAC,CAAC,EACjFZ,EAAkB,OAAOvI,CAAM,EAC/BmJ,EAAkB,EAAI,EACtBA,EAAkB,KAAO,CAAA,GAGzBN,EAAY,QAAQ,IAAI7I,EAAQ,CAACe,CAAI,CAAC,EAGxC0H,EAAuBA,EAAqB,OAAOW,GAAKA,IAAMpJ,CAAM,CAC1E,CACIwI,EAAM,OAAS,CACnB,EAGE,OAAa,CACX,GAAIS,EAAU,cAAgBf,GAAM,CAElC,IAAMmB,EADiBjJ,GAAeqB,EAAOwH,EAAU,GAAG,OAAQ,IAAMvH,GAASH,EAAO0H,EAAU,GAAG,MAAM,CAAC,EAChFA,EAAU,GAAG,MACzC,GAAII,EAAS,EAEXb,EAAM,KAAKS,CAAS,EACpBF,EAAgBE,EAAU,GAAG,OAAQA,EAAU,GAAG,MAAQ,CAAC,EAE3DC,EAAgB,MACX,CACL,IAAMI,EAAUL,EAAU,WAAW/K,EAAaqD,CAAK,EACvD,GAAI+H,IAAY,KAAM,CACpBd,EAAM,KAAKS,CAAS,EAKpB,IAAMM,EAAahB,EAAkB,IAA2Be,CAAO,GAAM,CAAE,KAAM,CAAA,EAAI,EAAG,CAAC,EAC7F,GAAIC,EAAW,KAAK,SAAWA,EAAW,EAExCR,EAAuCO,EAAU5H,GAASH,EAAO+H,CAAO,CAAC,EACzEJ,EAAgB,MACX,CACLD,EAAYM,EAAW,KAAKA,EAAW,GAAG,EAC1C,QACZ,CACA,MAAmBF,IAAW,GAAKA,EAASJ,EAAU,UAE5CA,EAAU,UAAU/K,EAAamL,CAAM,EACvC5H,EAAM,IAAIwH,EAAU,GAAG,OAAQA,EAAU,GAAG,MAAQA,EAAU,MAAM,EAE9E,CACA,CAEI,GAAIT,EAAM,OAAS,EACjBS,EAAoCT,EAAM,IAAG,UACpCI,IAAqB,MAAQA,EAAiB,EAAIA,EAAiB,KAAK,OACjFK,EAAoCL,EAAiB,KAAKA,EAAiB,GAAG,MACzE,CAEL,GADAA,EAAmBF,EAAmB,EAClCE,IAAqB,KAEvB,MAEAK,EAAoCL,EAAiB,KAAKA,EAAiB,GAAG,CAEtF,CACA,CACE,GAAIC,EAAY,QAAQ,KAAO,EAAG,CAChC,IAAMjI,EAAU,IAAImB,GACpB,OAAAwF,GAAoB3G,EAASiI,EAAa,IAAI,GAAK,EAG1ChI,EAAaD,EAAQ,YAAa,CAAC,EACrC,CAAE,QAASkI,EAAW,OAAQlI,EAAQ,aAAY,CAAE,CAC/D,CACE,OAAO,IACT,EASa4I,GAA8B,CAAC5I,EAAS1C,IAAgBqJ,GAAoB3G,EAAS1C,EAAY,IAAI,MAAOA,EAAY,WAAW,EAcnIuL,GAAe,CAACxI,EAAStD,EAAM+L,EAAmBC,EAAgB,IAAInE,GAAgBvE,CAAO,IACxGwC,GAAS9F,EAAMO,GAAe,CAE5BA,EAAY,MAAQ,GACpB,IAAI0L,EAAQ,GACNlG,EAAMxF,EAAY,IAClBqD,EAAQmC,EAAI,MAEZnD,EAAKqH,GAAsB+B,EAAejG,CAAG,EAK7CmF,EAAcP,GAAiBpK,EAAaqD,EAAOhB,CAAE,EACrDsJ,EAAUtI,EAAM,eACtB,GAAIsI,EAAS,CAEX,OAAW,CAAC7J,EAAQlC,CAAK,IAAK+L,EAAQ,QACpC,GAAI/L,EAAQ4D,GAASH,EAAOvB,CAAM,EAAG,CACnC4J,EAAQ,GACR,KACV,CAEM,GAAIf,EAAa,CAEf,OAAW,CAAC7I,EAAQlC,CAAK,IAAK+K,EAAY,QAAS,CACjD,IAAMG,EAASa,EAAQ,QAAQ,IAAI7J,CAAM,GACrCgJ,GAAU,MAAQA,EAASlL,IAC7B+L,EAAQ,QAAQ,IAAI7J,EAAQlC,CAAK,CAE7C,CACQ+L,EAAQ,OAASC,GAAe,CAACD,EAAQ,OAAQhB,EAAY,MAAM,CAAC,CAC5E,CACA,MACMtH,EAAM,eAAiBsH,EAIzB,IAAMkB,EAASzI,GAAsBqI,EAAezL,EAAaqD,CAAK,EACtE,GAAIA,EAAM,UAAW,CAEnB,IAAMyI,EAAkB,IAAIxE,GAAyByE,GAAc1I,EAAM,SAAS,CAAC,EAC1EJ,GAAY6I,EAAgB,WAAW,EAChD,IAAME,EAAU5I,GAAsB0I,EAAiB9L,EAAaqD,CAAK,EACrEwI,GAAUG,EAEZ3I,EAAM,UAAYuI,GAAe,CAACC,EAAQG,CAAO,CAAC,EAKlD3I,EAAM,UAAYwI,GAAUG,CAEpC,MAEM3I,EAAM,UAAYwI,EAOpB,GAAIH,EAAO,CACT,IAAMO,EAA8C5I,EAAM,eAAgB,OAC1EA,EAAM,eAAiB,KACvB6I,GAAclM,EAAY,IAAKiM,CAAM,CAC3C,CACA,EAAKT,EAAmB,EAAK,EAahBW,GAAa,CAACpJ,EAAStD,EAAM+L,IAAsBD,GAAaxI,EAAStD,EAAM+L,EAAmB,IAAI3E,GAAgB9D,CAAO,CAAC,EAc9HmJ,GAAgB,CAACzM,EAAMwM,EAAQT,EAAmBY,EAAW9E,KAAoB,CAC5F,IAAMvE,EAAmBgJ,GAAcE,CAAM,EAC7CV,GAAaxI,EAAStD,EAAM+L,EAAmB,IAAIY,EAASrJ,CAAO,CAAC,CACtE,EAaasJ,GAAc,CAAC5M,EAAMwM,EAAQT,IAAsBU,GAAczM,EAAMwM,EAAQT,EAAmB3E,EAAe,EAYjHyF,GAAqB,CAAC5J,EAAS8C,EAAK+G,EAAoB,IAAI,MAAU,CACjFlD,GAAoB3G,EAAS8C,EAAI,MAAO+G,CAAiB,EACzD9J,GAAeC,EAASN,GAA+BoD,EAAI,KAAK,CAAC,CACnE,EAeagH,GAAwB,CAAChH,EAAKiH,EAA2B,IAAI,WAAW,CAAC,CAAC,CAAC,EAAG/J,EAAU,IAAImB,KAAsB,CAC7H,IAAM0I,EAAoBG,GAAkBD,CAAwB,EACpEH,GAAmB5J,EAAS8C,EAAK+G,CAAiB,EAClD,IAAMI,EAAU,CAACjK,EAAQ,aAAY,CAAE,EAQvC,GANI8C,EAAI,MAAM,WACZmH,EAAQ,KAAKnH,EAAI,MAAM,SAAS,EAE9BA,EAAI,MAAM,gBACZmH,EAAQ,KAAKC,GAAapH,EAAI,MAAM,eAAe,OAAQiH,CAAwB,CAAC,EAElFE,EAAQ,OAAS,EAAG,CACtB,GAAIjK,EAAQ,cAAgBsF,GAC1B,OAAO6E,GAAaF,EAAQ,IAAI,CAACV,EAAQ3L,IAAMA,IAAM,EAAI2L,EAASa,GAA0Bb,CAAM,CAAC,CAAC,EAC/F,GAAIvJ,EAAQ,cAAgBmB,GACjC,OAAO+H,GAAee,CAAO,CAEnC,CACE,OAAOA,EAAQ,CAAC,CAClB,EAcaI,GAAsB,CAACvH,EAAKiH,IAA6BD,GAAsBhH,EAAKiH,EAA0B,IAAIzE,EAAiB,EAUnIgF,GAAkBjK,GAAW,CACxC,IAAMV,EAAK,IAAI,IACT4K,EAAoBhK,GAAYF,EAAQ,WAAW,EACzD,QAASzC,EAAI,EAAGA,EAAI2M,EAAU3M,IAAK,CACjC,IAAMwB,EAAkBmB,GAAYF,EAAQ,WAAW,EACjDnD,EAAiBqD,GAAYF,EAAQ,WAAW,EACtDV,EAAG,IAAIP,EAAQlC,CAAK,CACxB,CACE,OAAOyC,CACT,EAoBaqK,GAAoBQ,GAAgBF,GAAgB,IAAIpG,GAAqBmF,GAAcmB,CAAY,CAAC,CAAC,EAOzGC,GAAmB,CAACzK,EAAS0K,KAC/BzK,EAAaD,EAAQ,YAAa0K,EAAG,IAAI,EAC5CxK,GAAKwK,EAAG,QAAO,CAAE,EAAE,KAAK,CAAC/L,EAAGC,IAAMA,EAAE,CAAC,EAAID,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,CAACS,EAAQlC,CAAK,IAAM,CACvE+C,EAAaD,EAAQ,YAAaZ,CAAM,EACxCa,EAAaD,EAAQ,YAAa9C,CAAK,CACpD,CAAG,EACM8C,GASI2K,GAA2B,CAAC3K,EAAS8C,IAAQ2H,GAAiBzK,EAAS8G,GAAehE,EAAI,KAAK,CAAC,EAWhG8H,GAAsB,CAAC9H,EAAK9C,EAAU,IAAIiG,MACjDnD,aAAe,IACjB2H,GAAiBzK,EAAS8C,CAAG,EAE7B6H,GAAyB3K,EAAS8C,CAAG,EAEhC9C,EAAQ,aAAY,GAWhB6K,GAAoB/H,GAAO8H,GAAoB9H,EAAK,IAAIqC,EAAa,EC1nBrE2F,GAAN,KAAmB,CACxB,aAAe,CAIb,KAAK,EAAI,CAAA,CACb,CACA,EASaC,GAAqB,IAAM,IAAID,GAa/BE,GAA0B,CAACrI,EAAcnF,IACpDmF,EAAa,EAAE,KAAKnF,CAAC,EAaVyN,GAA6B,CAACtI,EAAcnF,IAAM,CAC7D,IAAM0N,EAAIvI,EAAa,EACjBxF,EAAM+N,EAAE,OACdvI,EAAa,EAAIuI,EAAE,OAAOC,GAAK3N,IAAM2N,CAAC,EAClChO,IAAQwF,EAAa,EAAE,QACzB,QAAQ,MAAM,yDAA0D,CAE5E,EA0BayI,GAA4B,CAACzI,EAAc0I,EAAMC,IAC1DC,GAAQ5I,EAAa,EAAG,CAAC0I,EAAMC,CAAI,CAAC,EChF3BrG,GAAN,KAAS,CAKd,YAAa7F,EAAQlC,EAAO,CAK1B,KAAK,OAASkC,EAKd,KAAK,MAAQlC,CACjB,CACA,EASasO,GAAa,CAAC7M,EAAGC,IAAMD,IAAMC,GAAMD,IAAM,MAAQC,IAAM,MAAQD,EAAE,SAAWC,EAAE,QAAUD,EAAE,QAAUC,EAAE,MAStGwF,GAAW,CAAChF,EAAQlC,IAAU,IAAI+H,GAAG7F,EAAQlC,CAAK,EASlDuO,GAAU,CAACzL,EAASxB,IAAO,CAC7ByB,EAAaD,EAASxB,EAAG,MAAM,EAC/ByB,EAAaD,EAASxB,EAAG,KAAK,CACzC,EAaakN,GAASrL,GACpB+D,GAAkB7D,GAAYF,CAAO,EAAYE,GAAYF,CAAO,CAAC,EAa1DsL,GAAkBxI,GAAQ,CAErC,OAAW,CAACS,EAAKD,CAAK,IAAKR,EAAK,IAAI,MAAM,QAAO,EAC/C,GAAIQ,IAAUR,EACZ,OAAOS,EAGX,MAAYsC,GAAc,CAC5B,EC5Ea0F,GAAa,CAACC,EAAQC,IAAU,CAC3C,KAAOA,IAAU,MAAM,CACrB,GAAIA,EAAM,SAAWD,EACnB,MAAO,GAETC,EAA0CA,EAAM,OAAQ,KAC5D,CACE,MAAO,EACT,ECTaC,GAAU5I,GAAQ,CAC7B,IAAM6I,EAAM,CAAA,EACR,EAAI7I,EAAK,OACb,KAAO,GACL6I,EAAI,KAAK,CAAC,EACV,EAAI,EAAE,MAER,QAAQ,IAAI,aAAcA,CAAG,EAC7B,QAAQ,IAAI,qBAAsBA,EAAI,OAAOC,GAAK,CAACA,EAAE,OAAO,EAAE,IAAIA,GAAKA,EAAE,OAAO,CAAC,CACnF,ECPaC,GAAN,KAAwB,CAK7B,YAAapJ,EAAKqJ,EAAYrJ,EAAI,OAAO,OAAO,EAAG,CAIjD,IAAM9D,EAAM,IAAI,IAChB,KAAK,OAASmN,EACd,KAAK,IAAMrJ,EAMX,KAAK,QAAU,IAAI,IACnB,KAAK,IAAM9D,EAKX,IAAMoN,EAAW,CAACC,EAAMC,IAAoB,CAI1C,IAAM/O,EAAK8O,EAAK,IAAI,IAAI,EAClBE,EAAMF,EAAK,IAAI,KAAK,EACpBG,EAA8C9O,GAAY,KAAK,QAAQ,IAAIA,EAAU4O,CAAe,EAC1G/O,EAAG,QAA+CkP,GAAS,CACzDA,EAAM,QAAQ,MAAM,QAAQtM,GAAQ,CAClCA,EAAK,QAAQ,WAAU,EAAG,QAAQuM,GAAa,CACzCA,aAAqB,YACvB,KAAK,IAAI,IAAIJ,EAAiBvN,GAAgB,CAAC,KAAK,IAAI,IAAIuN,CAAe,GAAK7M,GAAe,EAAIW,GAAc,IAAI8D,GAAqBmF,GAAcqD,CAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAEpL,CAAW,CACX,CAAS,CACT,CAAO,EACD,KAAK,IAAI,IAAIJ,EAAiBvN,GAAgBxB,EAAG,IAAImP,GAAatM,GAAc,IAAI8D,GAAqBmF,GAAcqD,CAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EACrIH,EAAI,QAA+CE,GACjDA,EAAM,QAAQ,MAAM,QAAQtM,GAAQA,EAAK,QAAQ,WAAU,EAAG,QAAQqM,CAAW,CAAC,CAC1F,EACMD,EAAI,QAAQC,CAAW,CAC7B,EAEIL,EAAU,QAAQM,GAAS,CACzBA,EAAM,YAAY,QAAQH,GACxBF,EAASD,EAAU,IAAIG,CAAe,EAAGA,CAAe,CAChE,CACA,CAAK,EAEDH,EAAU,QAAQC,CAAQ,CAC9B,CASE,eAAgBtJ,EAAKpF,EAAU4O,EAAiB,CAAE,OAAAK,EAAS,IAAM,EAAI,EAAK,CAAA,EAAI,CAC5E,IAAMC,EAAQ,KAAK,OACfP,EAAOO,EAAM,IAAIN,CAAe,EAC/BD,IACHA,EAAO,IAAI5I,GACX4I,EAAK,IAAI,MAAO,IAAI9I,EAAQ,EAC5B8I,EAAK,IAAI,KAAM,IAAI9I,EAAQ,EAC3BqJ,EAAM,IAAIN,EAAiBD,CAAI,GAEjCA,EAAK,IAAI,KAAK,EAAE,KAAK,CAAC3O,CAAQ,CAAC,EAC/BkP,EAAM,QAAQC,GAAU,CACtB,WAAW,IAAM,CACf,IAAMC,EAAgBF,EAAM,IAAIN,CAAe,EAC/C,GAAIQ,IAAkBT,EAAM,CAG1BA,EAAOS,EAEP,KAAK,QAAQ,QAAQ,CAACC,EAAkBrP,IAAa,CAC/C4O,IAAoBS,GACtBV,EAAK,IAAI,KAAK,EAAE,KAAK,CAAC3O,CAAQ,CAAC,CAE7C,CAAW,EACD,IAAMsC,EAAU,IAAImF,GACd5H,EAAK,KAAK,IAAI,IAAI+O,CAAe,EACnC/O,IACFwC,GAAeC,EAASzC,CAAE,EAC1B8O,EAAK,IAAI,IAAI,EAAE,KAAK,CAACrM,EAAQ,aAAY,CAAE,CAAC,EAExD,CACA,EAAS,CAAC,CACV,CAAK,EACD8C,EAAI,GAAG,mBAA4DxF,GAAe,CAChF,WAAW,IAAM,CACf,IAAM0P,EAAMX,EAAK,IAAI,IAAI,EACnB9O,EAAKD,EAAY,UACvB,GAAIA,EAAY,OAASC,EAAG,QAAQ,KAAO,GAAKoP,EAAOrP,EAAaC,CAAE,EAAG,CACvE,IAAMyC,EAAU,IAAImF,GACpBpF,GAAeC,EAASzC,CAAE,EAC1ByP,EAAI,KAAK,CAAChN,EAAQ,aAAY,CAAE,CAAC,CAC3C,CACA,CAAO,CACP,CAAK,CACL,CAME,kBAAmBtC,EAAU,CAC3B,OAAO,KAAK,QAAQ,IAAIA,CAAQ,GAAK,IACzC,CAME,mBAAoBc,EAAI,CACtB,OAAW,CAAC8N,EAAiB/O,CAAE,IAAK,KAAK,IAAI,QAAO,EAClD,GAAIgB,GAAUhB,EAAIiB,CAAE,EAClB,OAAO8N,EAGX,OAAO,IACX,CACA,ECnGaW,GAAN,KAAuB,CAO5B,YAAa9J,EAAM+J,EAAO/M,EAAMgN,EAAQ,EAAG,CAIzC,KAAK,KAAOhK,EAIZ,KAAK,MAAQ+J,EAIb,KAAK,KAAO/M,EAYZ,KAAK,MAAQgN,CACjB,CACA,EAMaC,GAAyBC,GAAQ,CAC5C,IAAMC,EAAO,CAAA,EACb,OAAID,EAAK,OACPC,EAAK,KAAOD,EAAK,MAEfA,EAAK,QACPC,EAAK,MAAQD,EAAK,OAEhBA,EAAK,OACPC,EAAK,KAAOD,EAAK,MAEfA,EAAK,OAAS,OAChBC,EAAK,MAAQD,EAAK,OAEbC,CACT,EAQaC,GAAiCD,GAAQ,IAAIL,GAAiBK,EAAK,MAAQ,KAAO,KAAOlJ,GAASkJ,EAAK,KAAK,OAAQA,EAAK,KAAK,KAAK,EAAGA,EAAK,OAAS,KAAMA,EAAK,MAAQ,KAAO,KAAOlJ,GAASkJ,EAAK,KAAK,OAAQA,EAAK,KAAK,KAAK,EAAGA,EAAK,OAAS,KAAO,EAAIA,EAAK,KAAK,EAErQE,GAAN,KAAuB,CAM5B,YAAarK,EAAMnC,EAAOmM,EAAQ,EAAG,CAInC,KAAK,KAAOhK,EAIZ,KAAK,MAAQnC,EACb,KAAK,MAAQmM,CACjB,CACA,EASaM,GAAyB,CAACtK,EAAMnC,EAAOmM,EAAQ,IAAM,IAAIK,GAAiBrK,EAAMnC,EAAOmM,CAAK,EAS5FO,GAAyB,CAACvK,EAAMhD,EAAMgN,IAAU,CAC3D,IAAIQ,EAAS,KACTT,EAAQ,KACZ,OAAI/J,EAAK,QAAU,KACjB+J,EAAQvB,GAAgBxI,CAAI,EAE5BwK,EAASvJ,GAASjB,EAAK,MAAM,GAAG,OAAQA,EAAK,MAAM,GAAG,KAAK,EAEtD,IAAI8J,GAAiBU,EAAQT,EAAO/M,EAAMgN,CAAK,CACxD,EAYaS,GAAsC,CAACzK,EAAMnC,EAAOmM,EAAQ,IAAM,CAC7E,IAAI/J,EAAID,EAAK,OACb,GAAIgK,EAAQ,EAAG,CAEb,GAAInM,IAAU,EACZ,OAAO0M,GAAuBvK,EAAM,KAAMgK,CAAK,EAEjDnM,GACJ,CACE,KAAOoC,IAAM,MAAM,CACjB,GAAI,CAACA,EAAE,SAAWA,EAAE,UAAW,CAC7B,GAAIA,EAAE,OAASpC,EAEb,OAAO0M,GAAuBvK,EAAMiB,GAAShB,EAAE,GAAG,OAAQA,EAAE,GAAG,MAAQpC,CAAK,EAAGmM,CAAK,EAEtFnM,GAASoC,EAAE,MACjB,CACI,GAAIA,EAAE,QAAU,MAAQ+J,EAAQ,EAE9B,OAAOO,GAAuBvK,EAAMC,EAAE,OAAQ+J,CAAK,EAErD/J,EAAIA,EAAE,KACV,CACE,OAAOsK,GAAuBvK,EAAM,KAAMgK,CAAK,CACjD,EAQaU,GAAwB,CAAC7N,EAASqN,IAAS,CACtD,GAAM,CAAE,KAAAlK,EAAM,MAAA+J,EAAO,KAAA/M,EAAM,MAAAgN,CAAK,EAAKE,EACrC,GAAIlN,IAAS,KACFF,EAAaD,EAAS,CAAC,EAChCyL,GAAQzL,EAASG,CAAI,UACZ+M,IAAU,KAEV1H,GAAWxF,EAAS,CAAC,EACrB0F,GAAe1F,EAASkN,CAAK,UAC7B/J,IAAS,KAETqC,GAAWxF,EAAS,CAAC,EAC9ByL,GAAQzL,EAASmD,CAAI,MAErB,OAAY+C,GAAc,EAE5B,OAAS4H,GAAY9N,EAASmN,CAAK,EAC5BnN,CACT,EAMa+N,GAAyBV,GAAQ,CAC5C,IAAMrN,EAAmBoF,GAAa,EACtC,OAAAyI,GAAsB7N,EAASqN,CAAI,EACnBhI,GAAarF,CAAO,CACtC,EAQagO,GAAuB3N,GAAW,CAC7C,IAAI8C,EAAO,KACP+J,EAAQ,KACRe,EAAS,KACb,OAAiB1N,GAAYF,CAAO,EAAC,CACnC,IAAK,GAEH4N,EAASvC,GAAOrL,CAAO,EACvB,MACF,IAAK,GAEH6M,EAAiB5I,GAAcjE,CAAO,EACtC,MACF,IAAK,GAEH8C,EAAOuI,GAAOrL,CAAO,CAE3B,CACE,IAAM8M,EAAiBe,GAAW7N,CAAO,EAAa8N,GAAW9N,CAAO,EAAI,EAC5E,OAAO,IAAI4M,GAAiB9J,EAAM+J,EAAOe,EAAQd,CAAK,CACxD,EAMaiB,GAAyBC,GAAcL,GAA8B3E,GAAcgF,CAAU,CAAC,EAS9FC,GAA6C,CAACjB,EAAMvK,IAAQ,CACvE,IAAMnC,EAAQmC,EAAI,MACZyL,EAAUlB,EAAK,KACfmB,EAASnB,EAAK,KACdH,EAAQG,EAAK,MACbF,EAAQE,EAAK,MACflK,EAAO,KACPnC,EAAQ,EACZ,GAAIuN,IAAY,KAAM,CACpB,GAAIzN,GAASH,EAAO4N,EAAQ,MAAM,GAAKA,EAAQ,MAC7C,OAAO,KAET,IAAMvC,EAAMyC,GAAa9N,EAAO4N,CAAO,EACjCrQ,EAAQ8N,EAAI,KAClB,GAAI,EAAE9N,aAAiBsJ,IACrB,OAAO,KAGT,GADArE,EAAyCjF,EAAM,OAC3CiF,EAAK,QAAU,MAAQ,CAACA,EAAK,MAAM,QAAS,CAC9CnC,EAAS9C,EAAM,SAAW,CAACA,EAAM,UAAa,EAAK8N,EAAI,MAAQmB,GAAS,EAAI,EAAI,GAChF,IAAI7J,EAAIpF,EAAM,KACd,KAAOoF,IAAM,MACP,CAACA,EAAE,SAAWA,EAAE,YAClBtC,GAASsC,EAAE,QAEbA,EAAIA,EAAE,IAEd,CACA,KAAS,CACL,GAAI4J,IAAU,KACZ/J,EAAOL,EAAI,IAAIoK,CAAK,UACXsB,IAAW,KAAM,CAC1B,GAAI1N,GAASH,EAAO6N,EAAO,MAAM,GAAKA,EAAO,MAE3C,OAAO,KAET,GAAM,CAAE,KAAArO,CAAI,EAAKsO,GAAa9N,EAAO6N,CAAM,EAC3C,GAAIrO,aAAgBqH,IAAQrH,EAAK,mBAAmBuO,GAClDvL,EAAOhD,EAAK,QAAQ,SAGpB,QAAO,IAEf,KACM,OAAY+F,GAAc,EAExBiH,GAAS,EACXnM,EAAQmC,EAAK,QAEbnC,EAAQ,CAEd,CACE,OAAOyM,GAAuBtK,EAAMnC,EAAOqM,EAAK,KAAK,CACvD,EASasB,GAA2B,CAAChQ,EAAGC,IAAMD,IAAMC,GACtDD,IAAM,MAAQC,IAAM,MAAQD,EAAE,QAAUC,EAAE,OAAS4M,GAAW7M,EAAE,KAAMC,EAAE,IAAI,GAAK4M,GAAW7M,EAAE,KAAMC,EAAE,IAAI,GAAKD,EAAE,QAAUC,EAAE,MC5SlHgQ,GAAN,KAAe,CAKpB,YAAarR,EAAImN,EAAI,CAInB,KAAK,GAAKnN,EAKV,KAAK,GAAKmN,CACd,CACA,EAOamE,GAAiB,CAACC,EAAOC,IAAU,CAC9C,IAAM1N,EAAMyN,EAAM,GAAG,QACfxN,EAAMyN,EAAM,GAAG,QACfC,EAAMF,EAAM,GACZG,EAAMF,EAAM,GAClB,GAAIC,EAAI,OAASC,EAAI,MAAQ5N,EAAI,OAASC,EAAI,KAC5C,MAAO,GAET,OAAW,CAACsC,EAAKD,CAAK,IAAKqL,EAAI,QAAO,EACpC,GAAIC,EAAI,IAAIrL,CAAG,IAAMD,EACnB,MAAO,GAGX,OAAW,CAACvE,EAAQ8P,CAAQ,IAAK7N,EAAI,QAAO,EAAI,CAC9C,IAAM8N,EAAW7N,EAAI,IAAIlC,CAAM,GAAK,CAAA,EACpC,GAAI8P,EAAS,SAAWC,EAAS,OAC/B,MAAO,GAET,QAASvR,EAAI,EAAGA,EAAIsR,EAAS,OAAQtR,IAAK,CACxC,IAAMwR,EAAUF,EAAStR,CAAC,EACpByR,EAAUF,EAASvR,CAAC,EAC1B,GAAIwR,EAAQ,QAAUC,EAAQ,OAASD,EAAQ,MAAQC,EAAQ,IAC7D,MAAO,EAEf,CACA,CACE,MAAO,EACT,EAOaC,GAAmB,CAACC,EAAUvP,EAAU,IAAIiG,MACvDlG,GAAeC,EAASuP,EAAS,EAAE,EACnC9E,GAAiBzK,EAASuP,EAAS,EAAE,EAC9BvP,EAAQ,aAAY,GAOhBwP,GAAiBD,GAAYD,GAAiBC,EAAU,IAAIpK,EAAa,EAOzEsK,GAAmB,CAAC3J,EAAKzF,EAAU,IAAIqE,GAAqB2E,GAAcvD,CAAG,CAAC,IAClF,IAAI8I,GAASxO,GAAcC,CAAO,EAAGiK,GAAgBjK,CAAO,CAAC,EAOzDqP,GAAiB5J,GAAO2J,GAAiB3J,EAAK,IAAI5B,GAAqBmF,GAAcvD,CAAG,CAAC,CAAC,EAO1F6J,GAAiB,CAACpS,EAAIsJ,IAAO,IAAI+H,GAASrR,EAAIsJ,CAAE,EAEhD+I,GAAgBD,GAAelQ,GAAe,EAAI,IAAI,GAAK,EAM3D8P,GAAWzM,GAAO6M,GAAejQ,GAA+BoD,EAAI,KAAK,EAAGgE,GAAehE,EAAI,KAAK,CAAC,EASrG+M,GAAY,CAAC1P,EAAMoP,IAAaA,IAAa,OACtD,CAACpP,EAAK,QACNoP,EAAS,GAAG,IAAIpP,EAAK,GAAG,MAAM,IAAMoP,EAAS,GAAG,IAAIpP,EAAK,GAAG,MAAM,GAAK,GAAKA,EAAK,GAAG,OAAS,CAAC5B,GAAUgR,EAAS,GAAIpP,EAAK,EAAE,EAMnH2P,GAA+B,CAACxS,EAAaiS,IAAa,CACrE,IAAMnN,EAAW5C,GAAelC,EAAY,KAAMwS,GAAkCtN,EAAM,EACpF7B,EAAQrD,EAAY,IAAI,MAEzB8E,EAAK,IAAImN,CAAQ,IACpBA,EAAS,GAAG,QAAQ,CAACrS,EAAOkC,IAAW,CACjClC,EAAQ4D,GAASH,EAAOvB,CAAM,GAChC2Q,GAAkBzS,EAAa8G,GAAShF,EAAQlC,CAAK,CAAC,CAE9D,CAAK,EACDG,GAAsBC,EAAaiS,EAAS,GAAIS,GAAS,CAAA,CAAE,EAC3D5N,EAAK,IAAImN,CAAQ,EAErB,EAgBaU,GAAwB,CAACC,EAAWX,EAAUY,EAAS,IAAItO,KAAU,CAChF,GAAIqO,EAAU,GAEZ,MAAM,IAAI,MAAM,qDAAqD,EAEvE,GAAM,CAAE,GAAAxF,EAAI,GAAAnN,CAAE,EAAKgS,EAEbvP,EAAU,IAAImB,GACpB,OAAA+O,EAAU,SAAS5S,GAAe,CAChC,IAAI8S,EAAO,EACX1F,EAAG,QAAQxN,GAAS,CACdA,EAAQ,GACVkT,GAER,CAAK,EACQnQ,EAAaD,EAAQ,YAAaoQ,CAAI,EAE/C,OAAW,CAAChR,EAAQlC,CAAK,IAAKwN,EAAI,CAChC,GAAIxN,IAAU,EACZ,SAEEA,EAAQ4D,GAASoP,EAAU,MAAO9Q,CAAM,GAC1C2Q,GAAkBzS,EAAa8G,GAAShF,EAAQlC,CAAK,CAAC,EAExD,IAAMS,EAAUuS,EAAU,MAAM,QAAQ,IAAI9Q,CAAM,GAAK,CAAA,EACjDiR,EAAkBpP,GAAYtD,EAAST,EAAQ,CAAC,EAE7C+C,EAAaD,EAAQ,YAAaqQ,EAAkB,CAAC,EAC9DrQ,EAAQ,YAAYZ,CAAM,EAEjBa,EAAaD,EAAQ,YAAa,CAAC,EAC5C,QAASpC,EAAI,EAAGA,GAAKyS,EAAiBzS,IACpCD,EAAQC,CAAC,EAAE,MAAMoC,EAAS,CAAC,CAEnC,CACID,GAAeC,EAASzC,CAAE,CAC9B,CAAG,EAEDiM,GAAc2G,EAAQnQ,EAAQ,aAAY,EAAI,UAAU,EACjDmQ,CACT,EAOaG,GAA2B,CAACf,EAAUhG,EAAQG,EAAW9E,KAAoB,CAExF,IAAM2L,EAAgB,IAAI7G,EAAkBL,GAAcE,CAAM,CAAC,EAC3DiH,EAAc,IAAIC,GAAiBF,EAAe,EAAK,EAC7D,QAASG,EAAOF,EAAY,KAAME,IAAS,KAAMA,EAAOF,EAAY,KAAI,EAEtE,IAAKjB,EAAS,GAAG,IAAImB,EAAK,GAAG,MAAM,GAAK,GAAKA,EAAK,GAAG,MAAQA,EAAK,OAChE,MAAO,GAGX,IAAMC,EAAW5R,GAAgB,CAACwQ,EAAS,GAAInP,GAAcmQ,CAAa,CAAC,CAAC,EAC5E,OAAOnP,GAAgBmO,EAAS,GAAIoB,CAAQ,CAC9C,EAMaC,GAAyB,CAACrB,EAAUhG,IAAW+G,GAAyBf,EAAUhG,EAAQpF,EAAe,EClOzG5B,GAAN,KAAkB,CACvB,aAAe,CAIb,KAAK,QAAU,IAAI,IAInB,KAAK,eAAiB,KAItB,KAAK,UAAY,IACrB,CACA,EAYauE,GAAiBnG,GAAS,CACrC,IAAMkG,EAAK,IAAI,IACf,OAAAlG,EAAM,QAAQ,QAAQ,CAAChD,EAASyB,IAAW,CACzC,IAAMS,EAASlC,EAAQA,EAAQ,OAAS,CAAC,EACzCkJ,EAAG,IAAIzH,EAAQS,EAAO,GAAG,MAAQA,EAAO,MAAM,CAClD,CAAG,EACMgH,CACT,EAUa/F,GAAW,CAACH,EAAOvB,IAAW,CACzC,IAAMzB,EAAUgD,EAAM,QAAQ,IAAIvB,CAAM,EACxC,GAAIzB,IAAY,OACd,MAAO,GAET,IAAMkT,EAAalT,EAAQA,EAAQ,OAAS,CAAC,EAC7C,OAAOkT,EAAW,GAAG,MAAQA,EAAW,MAC1C,EA2BaC,GAAY,CAACnQ,EAAOd,IAAW,CAC1C,IAAIlC,EAAUgD,EAAM,QAAQ,IAAId,EAAO,GAAG,MAAM,EAChD,GAAIlC,IAAY,OACdA,EAAU,CAAA,EACVgD,EAAM,QAAQ,IAAId,EAAO,GAAG,OAAQlC,CAAO,MACtC,CACL,IAAMkT,EAAalT,EAAQA,EAAQ,OAAS,CAAC,EAC7C,GAAIkT,EAAW,GAAG,MAAQA,EAAW,SAAWhR,EAAO,GAAG,MACxD,MAAYqG,GAAc,CAEhC,CACEvI,EAAQ,KAAKkC,CAAM,CACrB,EAWaoB,GAAc,CAACtD,EAAST,IAAU,CAC7C,IAAIe,EAAO,EACPC,EAAQP,EAAQ,OAAS,EACzBU,EAAMV,EAAQO,CAAK,EACnBI,EAAWD,EAAI,GAAG,MACtB,GAAIC,IAAapB,EACf,OAAOgB,EAKT,IAAIC,EAAgBC,GAAOlB,GAASoB,EAAWD,EAAI,OAAS,GAAMH,CAAK,EACvE,KAAOD,GAAQC,GAAO,CAGpB,GAFAG,EAAMV,EAAQQ,CAAQ,EACtBG,EAAWD,EAAI,GAAG,MACdC,GAAYpB,EAAO,CACrB,GAAIA,EAAQoB,EAAWD,EAAI,OACzB,OAAOF,EAETF,EAAOE,EAAW,CACxB,MACMD,EAAQC,EAAW,EAErBA,EAAgBC,IAAOH,EAAOC,GAAS,CAAC,CAC5C,CAGE,MAAYgI,GAAc,CAC5B,EAYa6K,GAAO,CAACpQ,EAAOnC,IAAO,CAKjC,IAAMb,EAAUgD,EAAM,QAAQ,IAAInC,EAAG,MAAM,EAC3C,OAAOb,EAAQsD,GAAYtD,EAASa,EAAG,KAAK,CAAC,CAC/C,EAOawS,GAAwDD,GAOxDE,GAAsB,CAAC3T,EAAaK,EAAST,IAAU,CAClE,IAAM8D,EAAQC,GAAYtD,EAAST,CAAK,EAClC2C,EAASlC,EAAQqD,CAAK,EAC5B,OAAInB,EAAO,GAAG,MAAQ3C,GAAS2C,aAAkB2H,IAC/C7J,EAAQ,OAAOqD,EAAQ,EAAG,EAAGE,GAAU5D,EAAauC,EAAQ3C,EAAQ2C,EAAO,GAAG,KAAK,CAAC,EAC7EmB,EAAQ,GAEVA,CACT,EAYa+O,GAAoB,CAACzS,EAAakB,IAAO,CACpD,IAAMb,EAAsCL,EAAY,IAAI,MAAM,QAAQ,IAAIkB,EAAG,MAAM,EACvF,OAAOb,EAAQsT,GAAoB3T,EAAaK,EAASa,EAAG,KAAK,CAAC,CACpE,EAaa0S,GAAkB,CAAC5T,EAAaqD,EAAOnC,IAAO,CAKzD,IAAMb,EAAUgD,EAAM,QAAQ,IAAInC,EAAG,MAAM,EACrCwC,EAAQC,GAAYtD,EAASa,EAAG,KAAK,EACrCqB,EAASlC,EAAQqD,CAAK,EAC5B,OAAIxC,EAAG,QAAUqB,EAAO,GAAG,MAAQA,EAAO,OAAS,GAAKA,EAAO,cAAgBwH,IAC7E1J,EAAQ,OAAOqD,EAAQ,EAAG,EAAGE,GAAU5D,EAAauC,EAAQrB,EAAG,MAAQqB,EAAO,GAAG,MAAQ,CAAC,CAAC,EAEtFA,CACT,EAWasR,GAAgB,CAACxQ,EAAOd,EAAQuR,IAAc,CACzD,IAAMzT,EAAyCgD,EAAM,QAAQ,IAAId,EAAO,GAAG,MAAM,EACjFlC,EAAQsD,GAAYtD,EAASkC,EAAO,GAAG,KAAK,CAAC,EAAIuR,CACnD,EAaatT,GAAiB,CAACR,EAAaK,EAAS0T,EAAYlU,EAAKK,IAAM,CAC1E,GAAIL,IAAQ,EACV,OAEF,IAAM4D,EAAWsQ,EAAalU,EAC1B6D,EAAQiQ,GAAoB3T,EAAaK,EAAS0T,CAAU,EAC5DxR,EACJ,GACEA,EAASlC,EAAQqD,GAAO,EACpBD,EAAWlB,EAAO,GAAG,MAAQA,EAAO,QACtCoR,GAAoB3T,EAAaK,EAASoD,CAAQ,EAEpDvD,EAAEqC,CAAM,QACDmB,EAAQrD,EAAQ,QAAUA,EAAQqD,CAAK,EAAE,GAAG,MAAQD,EAC/D,ECtNauQ,GAAN,KAAkB,CAMvB,YAAaxO,EAAKC,EAAQwO,EAAO,CAK/B,KAAK,IAAMzO,EAKX,KAAK,UAAY,IAAI1F,GAKrB,KAAK,YAAc0J,GAAehE,EAAI,KAAK,EAK3C,KAAK,WAAa,IAAI,IAOtB,KAAK,QAAU,IAAI,IAMnB,KAAK,mBAAqB,IAAI,IAI9B,KAAK,cAAgB,CAAA,EAIrB,KAAK,OAASC,EAKd,KAAK,KAAO,IAAI,IAKhB,KAAK,MAAQwO,EAIb,KAAK,aAAe,IAAI,IAIxB,KAAK,eAAiB,IAAI,IAI1B,KAAK,cAAgB,IAAI,IAIzB,KAAK,uBAAyB,EAClC,CACA,EAOaC,GAAoC,CAACxR,EAAS1C,IACrDA,EAAY,UAAU,QAAQ,OAAS,GAAK,CAAKsI,GAAItI,EAAY,WAAY,CAACJ,EAAOkC,IAAW9B,EAAY,YAAY,IAAI8B,CAAM,IAAMlC,CAAK,EACxI,IAETuB,GAAsBnB,EAAY,SAAS,EAC3CsL,GAA4B5I,EAAS1C,CAAW,EAChDyC,GAAeC,EAAS1C,EAAY,SAAS,EACtC,IAsBImU,GAA8B,CAACnU,EAAa6F,EAAMuO,IAAc,CAC3E,IAAMvR,EAAOgD,EAAK,OACdhD,IAAS,MAASA,EAAK,GAAG,OAAS7C,EAAY,YAAY,IAAI6C,EAAK,GAAG,MAAM,GAAK,IAAM,CAACA,EAAK,UAC5FX,GAAelC,EAAY,QAAS6F,EAAUX,EAAM,EAAE,IAAIkP,CAAS,CAE3E,EAOMC,GAAsB,CAAChU,EAASiU,IAAQ,CAC5C,IAAI1T,EAAQP,EAAQiU,CAAG,EACnB3T,EAAON,EAAQiU,EAAM,CAAC,EACtB,EAAIA,EACR,KAAO,EAAI,EAAG1T,EAAQD,EAAMA,EAAON,EAAQ,EAAE,EAAI,CAAC,EAAG,CACnD,GAAIM,EAAK,UAAYC,EAAM,SAAWD,EAAK,cAAgBC,EAAM,aAC3DD,EAAK,UAAUC,CAAK,EAAG,CACrBA,aAAiBsJ,IAAQtJ,EAAM,YAAc,MAA0CA,EAAM,OAAQ,KAAK,IAAIA,EAAM,SAAS,IAAMA,GACnGA,EAAM,OAAQ,KAAK,IAAIA,EAAM,UAAgCD,CAAI,EAErG,QACR,CAEI,KACJ,CACE,IAAMgB,EAAS2S,EAAM,EACrB,OAAI3S,GAEFtB,EAAQ,OAAOiU,EAAM,EAAI3S,EAAQA,CAAM,EAElCA,CACT,EAOM4S,GAAiB,CAACtU,EAAIoD,EAAOwB,IAAa,CAC9C,OAAW,CAAC/C,EAAQ0S,CAAW,IAAKvU,EAAG,QAAQ,QAAO,EAAI,CACxD,IAAMI,EAAyCgD,EAAM,QAAQ,IAAIvB,CAAM,EACvE,QAAS2S,EAAKD,EAAY,OAAS,EAAGC,GAAM,EAAGA,IAAM,CACnD,IAAMC,EAAaF,EAAYC,CAAE,EAC3BE,EAAqBD,EAAW,MAAQA,EAAW,IACzD,QACME,EAAKjR,GAAYtD,EAASqU,EAAW,KAAK,EAAGnS,EAASlC,EAAQuU,CAAE,EACpEA,EAAKvU,EAAQ,QAAUkC,EAAO,GAAG,MAAQoS,EACzCpS,EAASlC,EAAQ,EAAEuU,CAAE,EACrB,CACA,IAAMrS,EAASlC,EAAQuU,CAAE,EACzB,GAAIF,EAAW,MAAQA,EAAW,KAAOnS,EAAO,GAAG,MACjD,MAEEA,aAAkB2H,IAAQ3H,EAAO,SAAW,CAACA,EAAO,MAAQsC,EAAStC,CAAM,GAC7EA,EAAO,GAAGc,EAAO,EAAK,CAEhC,CACA,CACA,CACA,EAMMwR,GAAoB,CAAC5U,EAAIoD,IAAU,CAGvCpD,EAAG,QAAQ,QAAQ,CAACuU,EAAa1S,IAAW,CAC1C,IAAMzB,EAAyCgD,EAAM,QAAQ,IAAIvB,CAAM,EACvE,QAAS2S,EAAKD,EAAY,OAAS,EAAGC,GAAM,EAAGA,IAAM,CACnD,IAAMC,EAAaF,EAAYC,CAAE,EAE3BK,EAA6BC,GAAI1U,EAAQ,OAAS,EAAG,EAAIsD,GAAYtD,EAASqU,EAAW,MAAQA,EAAW,IAAM,CAAC,CAAC,EAC1H,QACME,EAAKE,EAAuBvS,EAASlC,EAAQuU,CAAE,EACnDA,EAAK,GAAKrS,EAAO,GAAG,OAASmS,EAAW,MACxCnS,EAASlC,EAAQuU,CAAE,EAEnBA,GAAM,EAAIP,GAAoBhU,EAASuU,CAAE,CAEjD,CACA,CAAG,CACH,EAOaI,GAAQ,CAAC/U,EAAIoD,EAAOwB,IAAa,CAC5C0P,GAAetU,EAAIoD,EAAOwB,CAAQ,EAClCgQ,GAAkB5U,EAAIoD,CAAK,CAC7B,EAMM4R,GAAsB,CAACC,EAAqB5U,IAAM,CACtD,GAAIA,EAAI4U,EAAoB,OAAQ,CAClC,IAAMlV,EAAckV,EAAoB5U,CAAC,EACnCkF,EAAMxF,EAAY,IAClBqD,EAAQmC,EAAI,MACZvF,EAAKD,EAAY,UACjBmV,EAAenV,EAAY,cACjC,GAAI,CACFmB,GAAsBlB,CAAE,EACxBD,EAAY,WAAawJ,GAAexJ,EAAY,IAAI,KAAK,EAC7DwF,EAAI,KAAK,sBAAuB,CAACxF,EAAawF,CAAG,CAAC,EAQlD,IAAM4P,EAAK,CAAA,EAEXpV,EAAY,QAAQ,QAAQ,CAACqV,EAAMC,IACjCF,EAAG,KAAK,IAAM,EACRE,EAAS,QAAU,MAAQ,CAACA,EAAS,MAAM,UAC7CA,EAAS,cAActV,EAAaqV,CAAI,CAEpD,CAAS,CACT,EACMD,EAAG,KAAK,IAAM,CAEZpV,EAAY,mBAAmB,QAAQ,CAACuV,EAAQ1P,IAAS,CAGnDA,EAAK,KAAK,EAAE,OAAS,IAAMA,EAAK,QAAU,MAAQ,CAACA,EAAK,MAAM,WAChE0P,EAASA,EACN,OAAOpG,GACNA,EAAM,OAAO,QAAU,MAAQ,CAACA,EAAM,OAAO,MAAM,OACnE,EACYoG,EACG,QAAQpG,GAAS,CAChBA,EAAM,cAAgBtJ,EAEtBsJ,EAAM,MAAQ,IAC9B,CAAe,EAEHoG,EACG,KAAK,CAACC,EAAQC,IAAWD,EAAO,KAAK,OAASC,EAAO,KAAK,MAAM,EAGnE3H,GAA0BjI,EAAK,KAAM0P,EAAQvV,CAAW,EAEpE,CAAS,CACT,CAAO,EACDoV,EAAG,KAAK,IAAM5P,EAAI,KAAK,mBAAoB,CAACxF,EAAawF,CAAG,CAAC,CAAC,EAC9DyI,GAAQmH,EAAI,CAAA,CAAE,EACVpV,EAAY,wBACd0V,GAA6B1V,CAAW,CAEhD,QAAK,CAGKwF,EAAI,IACN+O,GAAetU,EAAIoD,EAAOmC,EAAI,QAAQ,EAExCqP,GAAkB5U,EAAIoD,CAAK,EAG3BrD,EAAY,WAAW,QAAQ,CAACJ,EAAOkC,IAAW,CAChD,IAAM6T,EAAc3V,EAAY,YAAY,IAAI8B,CAAM,GAAK,EAC3D,GAAI6T,IAAgB/V,EAAO,CACzB,IAAMS,EAAyCgD,EAAM,QAAQ,IAAIvB,CAAM,EAEjE8T,EAAsBpU,GAAImC,GAAYtD,EAASsV,CAAW,EAAG,CAAC,EACpE,QAASrV,EAAID,EAAQ,OAAS,EAAGC,GAAKsV,GACpCtV,GAAK,EAAI+T,GAAoBhU,EAASC,CAAC,CAEnD,CACA,CAAO,EAID,QAASA,EAAI6U,EAAa,OAAS,EAAG7U,GAAK,EAAGA,IAAK,CACjD,GAAM,CAAE,OAAAwB,EAAQ,MAAAlC,CAAK,EAAKuV,EAAa7U,CAAC,EAAE,GACpCD,EAAyCgD,EAAM,QAAQ,IAAIvB,CAAM,EACjE+T,EAAoBlS,GAAYtD,EAAST,CAAK,EAChDiW,EAAoB,EAAIxV,EAAQ,QAC9BgU,GAAoBhU,EAASwV,EAAoB,CAAC,EAAI,GAIxDA,EAAoB,GACtBxB,GAAoBhU,EAASwV,CAAiB,CAExD,CAOM,GANI,CAAC7V,EAAY,OAASA,EAAY,WAAW,IAAIwF,EAAI,QAAQ,IAAMxF,EAAY,YAAY,IAAIwF,EAAI,QAAQ,IACrGsQ,GAAcC,GAAgBC,GAAM,SAAkBC,GAAgBC,GAAK,oEAAoE,EACvJ1Q,EAAI,SAAWnB,GAAmB,GAGpCmB,EAAI,KAAK,0BAA2B,CAACxF,EAAawF,CAAG,CAAC,EAClDA,EAAI,WAAW,IAAI,QAAQ,EAAG,CAChC,IAAM9C,EAAU,IAAIsF,GACDkM,GAAkCxR,EAAS1C,CAAW,GAEvEwF,EAAI,KAAK,SAAU,CAAC9C,EAAQ,aAAY,EAAI1C,EAAY,OAAQwF,EAAKxF,CAAW,CAAC,CAE3F,CACM,GAAIwF,EAAI,WAAW,IAAI,UAAU,EAAG,CAClC,IAAM9C,EAAU,IAAImB,GACDqQ,GAAkCxR,EAAS1C,CAAW,GAEvEwF,EAAI,KAAK,WAAY,CAAC9C,EAAQ,aAAY,EAAI1C,EAAY,OAAQwF,EAAKxF,CAAW,CAAC,CAE7F,CACM,GAAM,CAAE,aAAAmW,EAAc,cAAAC,EAAe,eAAAC,CAAc,EAAKrW,GACpDmW,EAAa,KAAO,GAAKE,EAAe,KAAO,GAAKD,EAAc,KAAO,KAC3ED,EAAa,QAAQ5P,GAAU,CAC7BA,EAAO,SAAWf,EAAI,SAClBe,EAAO,cAAgB,OACzBA,EAAO,aAAef,EAAI,cAE5BA,EAAI,QAAQ,IAAIe,CAAM,CAChC,CAAS,EACD8P,EAAe,QAAQ9P,GAAUf,EAAI,QAAQ,OAAOe,CAAM,CAAC,EAC3Df,EAAI,KAAK,UAAW,CAAC,CAAE,OAAQ4Q,EAAe,MAAOD,EAAc,QAASE,CAAc,EAAI7Q,EAAKxF,CAAW,CAAC,EAC/GqW,EAAe,QAAQ9P,GAAUA,EAAO,QAAO,CAAE,GAG/C2O,EAAoB,QAAU5U,EAAI,GACpCkF,EAAI,qBAAuB,CAAA,EAC3BA,EAAI,KAAK,uBAAwB,CAACA,EAAK0P,CAAmB,CAAC,GAE3DD,GAAoBC,EAAqB5U,EAAI,CAAC,CAEtD,CACA,CACA,EAaaiF,GAAW,CAACC,EAAKtF,EAAGuF,EAAS,KAAMwO,EAAQ,KAAS,CAC/D,IAAMiB,EAAsB1P,EAAI,qBAC5B8Q,EAAc,GAIdC,EAAS,KACT/Q,EAAI,eAAiB,OACvB8Q,EAAc,GACd9Q,EAAI,aAAe,IAAIwO,GAAYxO,EAAKC,EAAQwO,CAAK,EACrDiB,EAAoB,KAAK1P,EAAI,YAAY,EACrC0P,EAAoB,SAAW,GACjC1P,EAAI,KAAK,wBAAyB,CAACA,CAAG,CAAC,EAEzCA,EAAI,KAAK,oBAAqB,CAACA,EAAI,aAAcA,CAAG,CAAC,GAEvD,GAAI,CACF+Q,EAASrW,EAAEsF,EAAI,YAAY,CAC/B,QAAG,CACC,GAAI8Q,EAAa,CACf,IAAME,EAAgBhR,EAAI,eAAiB0P,EAAoB,CAAC,EAChE1P,EAAI,aAAe,KACfgR,GASFvB,GAAoBC,EAAqB,CAAC,CAElD,CACA,CACE,OAAOqB,CACT,ECtaaE,GAAN,KAAgB,CAKrB,YAAaC,EAAWC,EAAY,CAClC,KAAK,WAAaA,EAClB,KAAK,UAAYD,EAIjB,KAAK,KAAO,IAAI,GACpB,CACA,EAMME,GAA4B,CAACC,EAAIC,EAAIC,IAAc,CACvDhX,GAAsB8W,EAAIE,EAAU,UAAWlU,GAAQ,CACjDA,aAAgBqH,IAAQ4M,EAAG,MAAM,KAAKjR,GAAQyI,GAAWzI,EAAMhD,CAAI,CAAC,GACtEmU,GAASnU,EAAM,EAAK,CAE1B,CAAG,CACH,EAQMoU,GAAe,CAACC,EAAa5M,EAAO6M,IAAc,CAKtD,IAAIZ,EAAS,KAKTa,EAAM,KACJ5R,EAAM0R,EAAY,IAClBG,EAAQH,EAAY,MA4D1B,GA3DA3R,GAASC,EAAKxF,GAAe,CAC3B,KAAOsK,EAAM,OAAS,GAAKiM,IAAW,MAAM,CAC1C,IAAMlT,EAAQmC,EAAI,MACZuR,EAAsCzM,EAAM,IAAG,EAI/CgN,EAAc,IAAI,IAIlBC,EAAgB,CAAA,EAClBC,EAAkB,GACtBzX,GAAsBC,EAAa+W,EAAU,WAAYxU,GAAU,CACjE,GAAIA,aAAkB2H,GAAM,CAC1B,GAAI3H,EAAO,SAAW,KAAM,CAC1B,GAAI,CAAE,KAAAM,EAAM,KAAAwE,CAAI,EAAK8J,GAAa9N,EAAOd,EAAO,EAAE,EAC9C8E,EAAO,IACTxE,EAAO4P,GAAkBzS,EAAa8G,GAASjE,EAAK,GAAG,OAAQA,EAAK,GAAG,MAAQwE,CAAI,CAAC,GAEtF9E,EAASM,CACrB,CACc,CAACN,EAAO,SAAW8U,EAAM,KAAKxR,GAAQyI,GAAWzI,EAA2BtD,CAAM,CAAE,GACtFgV,EAAc,KAAKhV,CAAM,CAErC,CACA,CAAO,EACDxC,GAAsBC,EAAa+W,EAAU,UAAWxU,GAAU,CAE9DA,aAAkB2H,IAClBmN,EAAM,KAAKxR,GAAQyI,GAAWzI,EAAMtD,CAAM,CAAC,GAE3C,CAACtB,GAAU8V,EAAU,WAAYxU,EAAO,EAAE,GAE1C+U,EAAY,IAAI/U,CAAM,CAEhC,CAAO,EACD+U,EAAY,QAAQ/U,GAAU,CAC5BiV,EAAkBC,GAASzX,EAAauC,EAAQ+U,EAAaP,EAAU,WAAYG,EAAY,uBAAwBA,CAAW,IAAM,MAAQM,CACxJ,CAAO,EAGD,QAASlX,EAAIiX,EAAc,OAAS,EAAGjX,GAAK,EAAGA,IAAK,CAClD,IAAMuC,EAAO0U,EAAcjX,CAAC,EACxB4W,EAAY,aAAarU,CAAI,IAC/BA,EAAK,OAAO7C,CAAW,EACvBwX,EAAkB,GAE5B,CACMjB,EAASiB,EAAkBT,EAAY,IAC7C,CACI/W,EAAY,QAAQ,QAAQ,CAAC0X,EAAU7R,IAAS,CAE1C6R,EAAS,IAAI,IAAI,GAAK7R,EAAK,gBAC7BA,EAAK,cAAc,OAAS,EAEpC,CAAK,EACDuR,EAAMpX,CACV,EAAKkX,CAAW,EACVX,GAAU,KAAM,CAClB,IAAMoB,EAAqBP,EAAI,mBAC/BF,EAAY,KAAK,oBAAqB,CAAC,CAAE,UAAWX,EAAQ,KAAMY,EAAW,mBAAAQ,CAAkB,EAAIT,CAAW,CAAC,CACnH,CACE,OAAOX,CACT,EAwBaqB,GAAN,cAA0BpY,EAAW,CAK1C,YAAaqY,EAAW,CACtB,eAAAC,EAAiB,IACjB,mBAAAC,EAAqBX,GAAO,GAC5B,aAAAY,EAAe,IAAM,GACrB,eAAAC,EAAiB,IAAI,IAAI,CAAC,IAAI,CAAC,EAC/B,uBAAAC,EAAyB,GACzB,IAAA1S,EAAgC2S,GAAQN,CAAS,EAAIA,EAAU,CAAC,EAAE,IAAMA,EAAU,GACtF,EAAM,CAAA,EAAI,CACN,MAAK,EAIL,KAAK,MAAQ,CAAA,EACb,KAAK,IAAMrS,EACX,KAAK,WAAWqS,CAAS,EACzB,KAAK,aAAeG,EACpBC,EAAe,IAAI,IAAI,EACvB,KAAK,eAAiBA,EACtB,KAAK,mBAAqBF,EAI1B,KAAK,UAAY,CAAA,EAIjB,KAAK,UAAY,CAAA,EAMjB,KAAK,QAAU,GACf,KAAK,QAAU,GACf,KAAK,WAAa,EAClB,KAAK,uBAAyBG,EAC9B,KAAK,eAAiBJ,EAItB,KAAK,wBAA0B9X,GAAe,CAE5C,GACE,CAAC,KAAK,mBAAmBA,CAAW,GACpC,CAAC,KAAK,MAAM,KAAK6F,GAAQ7F,EAAY,mBAAmB,IAAI6F,CAAI,CAAC,GAChE,CAAC,KAAK,eAAe,IAAI7F,EAAY,MAAM,IAAM,CAACA,EAAY,QAAU,CAAC,KAAK,eAAe,IAAIA,EAAY,OAAO,WAAW,GAEhI,OAEF,IAAMoY,EAAU,KAAK,QACfC,EAAU,KAAK,QACf/N,EAAQ8N,EAAU,KAAK,UAAY,KAAK,UAC1CA,EACF,KAAK,cAAa,EACRC,GAEV,KAAK,MAAM,GAAO,EAAI,EAExB,IAAM1B,EAAa,IAAI7W,GACvBE,EAAY,WAAW,QAAQ,CAACsY,EAAUxW,IAAW,CACnD,IAAMyW,EAAavY,EAAY,YAAY,IAAI8B,CAAM,GAAK,EACpDjC,EAAMyY,EAAWC,EACnB1Y,EAAM,GACRmC,GAAe2U,EAAY7U,EAAQyW,EAAY1Y,CAAG,CAE5D,CAAO,EACD,IAAM2Y,EAAWC,GAAW,EACxBC,EAAS,GACb,GAAI,KAAK,WAAa,GAAKF,EAAM,KAAK,WAAa,KAAK,gBAAkBlO,EAAM,OAAS,GAAK,CAAC8N,GAAW,CAACC,EAAS,CAElH,IAAMM,EAASrO,EAAMA,EAAM,OAAS,CAAC,EACrCqO,EAAO,UAAYlX,GAAgB,CAACkX,EAAO,UAAW3Y,EAAY,SAAS,CAAC,EAC5E2Y,EAAO,WAAalX,GAAgB,CAACkX,EAAO,WAAYhC,CAAU,CAAC,CAC3E,MAEQrM,EAAM,KAAK,IAAImM,GAAUzW,EAAY,UAAW2W,CAAU,CAAC,EAC3D+B,EAAS,GAEP,CAACN,GAAW,CAACC,IACf,KAAK,WAAaG,GAGpBzY,GAAsBC,EAAaA,EAAY,UAAwC6C,GAAQ,CACzFA,aAAgBqH,IAAQ,KAAK,MAAM,KAAKrE,GAAQyI,GAAWzI,EAAMhD,CAAI,CAAC,GACxEmU,GAASnU,EAAM,EAAI,CAE7B,CAAO,EACD,IAAM+V,EAAc,CAAC,CAAE,UAAWtO,EAAMA,EAAM,OAAS,CAAC,EAAG,OAAQtK,EAAY,OAAQ,KAAMoY,EAAU,OAAS,OAAQ,mBAAoBpY,EAAY,kBAAkB,EAAI,IAAI,EAC9K0Y,EACF,KAAK,KAAK,mBAAoBE,CAAW,EAEzC,KAAK,KAAK,qBAAsBA,CAAW,CAEnD,EACI,KAAK,IAAI,GAAG,mBAAoB,KAAK,uBAAuB,EAC5D,KAAK,IAAI,GAAG,UAAW,IAAM,CAC3B,KAAK,QAAO,CAClB,CAAK,CACL,CAKE,WAAYC,EAAQ,CAClBA,EAAeV,GAAQU,CAAM,EAAIA,EAAS,CAACA,CAAM,EACjDA,EAAO,QAAQC,GAAS,CAClB,KAAK,MAAM,MAAMC,GAAMA,IAAOD,CAAK,IACjCA,EAAM,MAAQ,KAAK,KAAaE,GAAK,0BAA0B,EACnE,KAAK,MAAM,KAAKF,CAAK,EAE7B,CAAK,CACL,CAKE,iBAAkBrT,EAAQ,CACxB,KAAK,eAAe,IAAIA,CAAM,CAClC,CAKE,oBAAqBA,EAAQ,CAC3B,KAAK,eAAe,OAAOA,CAAM,CACrC,CAEE,MAAOwT,EAAiB,GAAMC,EAAiB,GAAM,EAC9CD,GAAkB,KAAK,QAAO,GAAQC,GAAkB,KAAK,QAAO,IACvE,KAAK,IAAI,SAASrC,GAAM,CAClBoC,IACF,KAAK,UAAU,QAAQpW,GAAQ+T,GAA0BC,EAAI,KAAMhU,CAAI,CAAC,EACxE,KAAK,UAAY,CAAA,GAEfqW,IACF,KAAK,UAAU,QAAQrW,GAAQ+T,GAA0BC,EAAI,KAAMhU,CAAI,CAAC,EACxE,KAAK,UAAY,CAAA,GAEnB,KAAK,KAAK,gBAAiB,CAAC,CAAE,iBAAkBoW,EAAgB,iBAAkBC,CAAc,CAAE,CAAC,CAC3G,CAAO,CAEP,CAsBE,eAAiB,CACf,KAAK,WAAa,CACtB,CAOE,MAAQ,CACN,KAAK,QAAU,GACf,IAAIxK,EACJ,GAAI,CACFA,EAAMuI,GAAa,KAAM,KAAK,UAAW,MAAM,CACrD,QAAK,CACC,KAAK,QAAU,EACrB,CACI,OAAOvI,CACX,CAOE,MAAQ,CACN,KAAK,QAAU,GACf,IAAIA,EACJ,GAAI,CACFA,EAAMuI,GAAa,KAAM,KAAK,UAAW,MAAM,CACrD,QAAK,CACC,KAAK,QAAU,EACrB,CACI,OAAOvI,CACX,CAOE,SAAW,CACT,OAAO,KAAK,UAAU,OAAS,CACnC,CAOE,SAAW,CACT,OAAO,KAAK,UAAU,OAAS,CACnC,CAEE,SAAW,CACT,KAAK,eAAe,OAAO,IAAI,EAC/B,KAAK,IAAI,IAAI,mBAAoB,KAAK,uBAAuB,EAC7D,MAAM,QAAO,CACjB,CACA,ECnVA,SAAWyK,GAA2BpW,EAAS,CAC7C,IAAM6G,EAA6B3G,GAAYF,EAAQ,WAAW,EAClE,QAASzC,EAAI,EAAGA,EAAIsJ,EAAmBtJ,IAAK,CAC1C,IAAMuJ,EAA2B5G,GAAYF,EAAQ,WAAW,EAC1DjB,EAASiB,EAAQ,WAAU,EAC7BnD,EAAiBqD,GAAYF,EAAQ,WAAW,EACpD,QAASzC,EAAI,EAAGA,EAAIuJ,EAAiBvJ,IAAK,CACxC,IAAM2H,EAAOlF,EAAQ,SAAQ,EAE7B,GAAIkF,IAAS,GAAI,CACf,IAAMpI,EAAeoD,GAAYF,EAAQ,WAAW,EACpD,MAAM,IAAIiH,GAAKlD,GAAShF,EAAQlC,CAAK,EAAGC,CAAG,EAC3CD,GAASC,CACjB,SAAyB,GAAQoI,EAAa,CACtC,IAAMgC,GAAsBhC,EAAQ,OAAgC,EAK9D1F,EAAS,IAAI2H,GACjBpD,GAAShF,EAAQlC,CAAK,EACtB,MACCqI,EAAc,OAAiB,IAAOlF,EAAQ,WAAU,EAAK,KAC9D,MACCkF,EAAc,MAAiB,GAAOlF,EAAQ,YAAW,EAAK,KAE/DkH,EAAsBlH,EAAQ,eAAc,EAAKA,EAAQ,WAAU,EAAKA,EAAQ,WAAU,EAAM,KAChGkH,IAAuBhC,EAAc,MAAiB,GAAOlF,EAAQ,WAAU,EAAK,KACpFoH,GAAgBpH,EAASkF,CAAI,CACvC,EACQ,MAAM1F,EACN3C,GAAS2C,EAAO,MACxB,KAAa,CACL,IAAM1C,EAAMkD,EAAQ,QAAO,EAC3B,MAAM,IAAIgH,GAAGjD,GAAShF,EAAQlC,CAAK,EAAGC,CAAG,EACzCD,GAASC,CACjB,CACA,CACA,CACA,CAEO,IAAMsT,GAAN,KAAuB,CAK5B,YAAapQ,EAASqW,EAAa,CACjC,KAAK,IAAMD,GAA0BpW,CAAO,EAI5C,KAAK,KAAO,KACZ,KAAK,KAAO,GACZ,KAAK,YAAcqW,EACnB,KAAK,KAAI,CACb,CAKE,MAAQ,CAEN,GACE,KAAK,KAAO,KAAK,IAAI,KAAI,EAAG,OAAS,WAC9B,KAAK,aAAe,KAAK,OAAS,MAAQ,KAAK,KAAK,cAAgBpP,IAC7E,OAAO,KAAK,IAChB,CACA,EAMaqP,GAAYpN,GAAUqN,GAAYrN,EAAQpF,EAAe,EAOzDyS,GAAc,CAACrN,EAAQG,EAAW9E,KAAoB,CACjE,IAAMjH,EAAU,CAAA,EACV4S,EAAgB,IAAI7G,EAAkBL,GAAcE,CAAM,CAAC,EAC3DiH,EAAc,IAAIC,GAAiBF,EAAe,EAAK,EAC7D,QAASG,EAAOF,EAAY,KAAME,IAAS,KAAMA,EAAOF,EAAY,KAAI,EACtE7S,EAAQ,KAAK+S,CAAI,EAEX0C,GAAM,YAAazV,CAAO,EAClC,IAAMJ,EAAK6C,GAAcmQ,CAAa,EAC9B6C,GAAM,cAAe7V,CAAE,CACjC,EAMasZ,GAAgBtN,GAAWuN,GAAevN,EAAQpF,EAAe,EAOjE2S,GAAiB,CAACvN,EAAQG,EAAW9E,KAAoB,CACpE,IAAMjH,EAAU,CAAA,EACV4S,EAAgB,IAAI7G,EAAkBL,GAAcE,CAAM,CAAC,EAC3DiH,EAAc,IAAIC,GAAiBF,EAAe,EAAK,EAC7D,QAASG,EAAOF,EAAY,KAAME,IAAS,KAAMA,EAAOF,EAAY,KAAI,EACtE7S,EAAQ,KAAK+S,CAAI,EAEnB,MAAO,CACL,QAAA/S,EACA,GAAIyC,GAAcmQ,CAAa,CACnC,CACA,EAEawG,GAAN,KAAuB,CAI5B,YAAa/W,EAAS,CACpB,KAAK,WAAa,EAClB,KAAK,WAAa,EAClB,KAAK,QAAU,EACf,KAAK,QAAUA,EAWf,KAAK,cAAgB,CAAA,CACzB,CACA,EAMamK,GAAeF,GAAWf,GAAee,EAAS9F,GAAiBmB,EAAe,EAQlF0R,GAAgC,CAACzN,EAAQ0N,EAAWhR,GAAayD,EAAW9E,KAAoB,CAC3G,IAAM5E,EAAU,IAAIiX,EACd1G,EAAgB,IAAIE,GAAiB,IAAI/G,EAAkBL,GAAcE,CAAM,CAAC,EAAG,EAAK,EAC1FmH,EAAOH,EAAc,KACzB,GAAIG,IAAS,KAAM,CACjB,IAAIN,EAAO,EACP8G,EAAaxG,EAAK,GAAG,OACrByG,EAAezG,EAAK,GAAG,QAAU,EACjC0G,EAAYD,EAAe,EAAIzG,EAAK,GAAG,MAAQA,EAAK,OACxD,KAAOA,IAAS,KAAMA,EAAOH,EAAc,KAAI,EACzC2G,IAAexG,EAAK,GAAG,SACrB0G,IAAc,IAChBhH,IAGSnQ,EAAaD,EAAQ,YAAakX,CAAU,EAC5CjX,EAAaD,EAAQ,YAAaoX,CAAS,GAEtDF,EAAaxG,EAAK,GAAG,OACrB0G,EAAY,EACZD,EAAezG,EAAK,GAAG,QAAU,GAG/BA,EAAK,cAAgBpJ,KACvB6P,EAAe,IAEZA,IACHC,EAAY1G,EAAK,GAAG,MAAQA,EAAK,QAIjC0G,IAAc,IAChBhH,IACSnQ,EAAaD,EAAQ,YAAakX,CAAU,EAC5CjX,EAAaD,EAAQ,YAAaoX,CAAS,GAGtD,IAAMC,EAAejS,GAAa,EAClC,OAASnF,EAAaoX,EAAKjH,CAAI,EACtBkH,GAAmBD,EAAKrX,EAAQ,WAAW,EACpDA,EAAQ,YAAcqX,EACfrX,EAAQ,aAAY,CAC/B,KACI,QAASC,EAAaD,EAAQ,YAAa,CAAC,EACrCA,EAAQ,aAAY,CAE/B,EAMauX,GAA8BhO,GAAUyN,GAA8BzN,EAAQpE,GAAahB,EAAe,EAO1GqT,GAAoB,CAACjO,EAAQG,EAAW9E,KAAoB,CAIvE,IAAM1E,EAAO,IAAI,IAIXuX,EAAK,IAAI,IACTlH,EAAgB,IAAIE,GAAiB,IAAI/G,EAAkBL,GAAcE,CAAM,CAAC,EAAG,EAAK,EAC1FmH,EAAOH,EAAc,KACzB,GAAIG,IAAS,KAAM,CACjB,IAAIwG,EAAaxG,EAAK,GAAG,OACrB0G,EAAY1G,EAAK,GAAG,MAGxB,IADAxQ,EAAK,IAAIgX,EAAYE,CAAS,EACvB1G,IAAS,KAAMA,EAAOH,EAAc,KAAI,EACzC2G,IAAexG,EAAK,GAAG,SAGzB+G,EAAG,IAAIP,EAAYE,CAAS,EAE5BlX,EAAK,IAAIwQ,EAAK,GAAG,OAAQA,EAAK,GAAG,KAAK,EAEtCwG,EAAaxG,EAAK,GAAG,QAEvB0G,EAAY1G,EAAK,GAAG,MAAQA,EAAK,OAGnC+G,EAAG,IAAIP,EAAYE,CAAS,CAChC,CACE,MAAO,CAAE,KAAAlX,EAAM,GAAAuX,CAAE,CACnB,EAMaC,GAAkBnO,GAAUiO,GAAkBjO,EAAQpF,EAAe,EAU5EwT,GAAc,CAAC1Z,EAAM0G,IAAS,CAClC,GAAI1G,EAAK,cAAgBoJ,GAAI,CAC3B,GAAM,CAAE,OAAAjI,EAAQ,MAAAlC,CAAK,EAAKe,EAAK,GAC/B,OAAO,IAAIoJ,GAAGjD,GAAShF,EAAQlC,EAAQyH,CAAI,EAAG1G,EAAK,OAAS0G,CAAI,CACpE,SAAa1G,EAAK,cAAgBqJ,GAAM,CACpC,GAAM,CAAE,OAAAlI,EAAQ,MAAAlC,CAAK,EAAKe,EAAK,GAC/B,OAAO,IAAIqJ,GAAKlD,GAAShF,EAAQlC,EAAQyH,CAAI,EAAG1G,EAAK,OAAS0G,CAAI,CACtE,KAAS,CACL,IAAMiT,EAAgC3Z,EAChC,CAAE,OAAAmB,EAAQ,MAAAlC,CAAK,EAAK0a,EAAS,GACnC,OAAO,IAAIpQ,GACTpD,GAAShF,EAAQlC,EAAQyH,CAAI,EAC7B,KACAP,GAAShF,EAAQlC,EAAQyH,EAAO,CAAC,EACjC,KACAiT,EAAS,YACTA,EAAS,OACTA,EAAS,UACTA,EAAS,QAAQ,OAAOjT,CAAI,CAClC,CACA,CACA,EAWauE,GAAiB,CAACe,EAASP,EAAW9E,GAAiBqS,EAAW9V,KAAoB,CACjG,GAAI8I,EAAQ,SAAW,EACrB,OAAOA,EAAQ,CAAC,EAElB,IAAM4N,EAAiB5N,EAAQ,IAAIV,GAAU,IAAIG,EAAkBL,GAAcE,CAAM,CAAC,CAAC,EACrFuO,EAAqBD,EAAe,IAAIxX,GAAW,IAAIoQ,GAAiBpQ,EAAS,EAAI,CAAC,EAMtF0X,EAAY,KAEVC,EAAgB,IAAIf,EAEpBgB,EAAoB,IAAIlB,GAAiBiB,CAAa,EAM5D,KAEEF,EAAqBA,EAAmB,OAAOI,GAAOA,EAAI,OAAS,IAAI,EACvEJ,EAAmB,KACuB,CAACK,EAAMC,IAAS,CACtD,GAAID,EAAK,KAAK,GAAG,SAAWC,EAAK,KAAK,GAAG,OAAQ,CAC/C,IAAMC,EAAYF,EAAK,KAAK,GAAG,MAAQC,EAAK,KAAK,GAAG,MACpD,OAAIC,IAAc,EAETF,EAAK,KAAK,cAAgBC,EAAK,KAAK,YACvC,EACAD,EAAK,KAAK,cAAgB7Q,GAAO,EAAI,GAElC+Q,CAEnB,KACU,QAAOD,EAAK,KAAK,GAAG,OAASD,EAAK,KAAK,GAAG,MAEpD,CACA,EACQL,EAAmB,SAAW,GApBvB,CAuBX,IAAMQ,EAAcR,EAAmB,CAAC,EAGlCS,EAAwCD,EAAY,KAAM,GAAG,OAEnE,GAAIP,IAAc,KAAM,CACtB,IAAIrH,EAAwC4H,EAAY,KACpDE,EAAW,GAIf,KAAO9H,IAAS,MAAQA,EAAK,GAAG,MAAQA,EAAK,QAAUqH,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,QAAUrH,EAAK,GAAG,QAAUqH,EAAU,OAAO,GAAG,QAClJrH,EAAO4H,EAAY,KAAI,EACvBE,EAAW,GAEb,GACE9H,IAAS,MACTA,EAAK,GAAG,SAAW6H,GAClBC,GAAY9H,EAAK,GAAG,MAAQqH,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,OAE1E,SAGF,GAAIQ,IAAgBR,EAAU,OAAO,GAAG,OACtCU,GAA8BR,EAAmBF,EAAU,OAAQA,EAAU,MAAM,EACnFA,EAAY,CAAE,OAAQrH,EAAM,OAAQ,CAAC,EACrC4H,EAAY,KAAI,UAEZP,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,OAASrH,EAAK,GAAG,MAEhE,GAAIqH,EAAU,OAAO,cAAgBzQ,GAEnCyQ,EAAU,OAAO,OAASrH,EAAK,GAAG,MAAQA,EAAK,OAASqH,EAAU,OAAO,GAAG,UACvE,CACLU,GAA8BR,EAAmBF,EAAU,OAAQA,EAAU,MAAM,EACnF,IAAMpT,EAAO+L,EAAK,GAAG,MAAQqH,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,OAK1EA,EAAY,CAAE,OADC,IAAIzQ,GAAKlD,GAASmU,EAAaR,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,MAAM,EAAGpT,CAAI,EAClF,OAAQ,CAAC,CAC3C,KACe,CACL,IAAMA,EAAOoT,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,OAASrH,EAAK,GAAG,MACvE/L,EAAO,IACLoT,EAAU,OAAO,cAAgBzQ,GAEnCyQ,EAAU,OAAO,QAAUpT,EAE3B+L,EAAOiH,GAAYjH,EAAM/L,CAAI,GAG5BoT,EAAU,OAAO,UAA8BrH,CAAI,IACtD+H,GAA8BR,EAAmBF,EAAU,OAAQA,EAAU,MAAM,EACnFA,EAAY,CAAE,OAAQrH,EAAM,OAAQ,CAAC,EACrC4H,EAAY,KAAI,EAE5B,CAEA,MACMP,EAAY,CAAE,OAAkCO,EAAY,KAAO,OAAQ,CAAC,EAC5EA,EAAY,KAAI,EAElB,QACMxY,EAAOwY,EAAY,KACvBxY,IAAS,MAAQA,EAAK,GAAG,SAAWyY,GAAezY,EAAK,GAAG,QAAUiY,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,QAAUjY,EAAK,cAAgBwH,GACjJxH,EAAOwY,EAAY,KAAI,EAEvBG,GAA8BR,EAAmBF,EAAU,OAAQA,EAAU,MAAM,EACnFA,EAAY,CAAE,OAAQjY,EAAM,OAAQ,CAAC,CAE3C,CACMiY,IAAc,OAChBU,GAA8BR,EAAmBF,EAAU,OAAQA,EAAU,MAAM,EACnFA,EAAY,MAEdW,GAAwBT,CAAiB,EAEzC,IAAMjZ,EAAM6Y,EAAe,IAAIxX,GAAWD,GAAcC,CAAO,CAAC,EAC1D9C,EAAKwB,GAAgBC,CAAG,EAC9B,OAAAe,GAAeiY,EAAeza,CAAE,EACzBya,EAAc,aAAY,CACnC,EAQa9N,GAAe,CAACX,EAAQmB,EAAIhB,EAAW9E,GAAiBqS,EAAW9V,KAAoB,CAClG,IAAMN,EAAQmJ,GAAkBU,CAAE,EAC5B1K,EAAU,IAAIiX,EACd0B,EAAmB,IAAI5B,GAAiB/W,CAAO,EAC/CK,EAAU,IAAIqJ,EAAkBL,GAAcE,CAAM,CAAC,EACrDqP,EAAS,IAAInI,GAAiBpQ,EAAS,EAAK,EAClD,KAAOuY,EAAO,MAAM,CAClB,IAAMlI,EAAOkI,EAAO,KACd1B,EAAaxG,EAAK,GAAG,OACrBmI,EAAUhY,EAAM,IAAIqW,CAAU,GAAK,EACzC,GAAI0B,EAAO,KAAK,cAAgBtR,GAAM,CAEpCsR,EAAO,KAAI,EACX,QACN,CACI,GAAIlI,EAAK,GAAG,MAAQA,EAAK,OAASmI,EAGhC,IAFAJ,GAA8BE,EAAkBjI,EAAW5R,GAAI+Z,EAAUnI,EAAK,GAAG,MAAO,CAAC,CAAC,EAC1FkI,EAAO,KAAI,EACJA,EAAO,MAAQA,EAAO,KAAK,GAAG,SAAW1B,GAC9CuB,GAA8BE,EAAkBC,EAAO,KAAM,CAAC,EAC9DA,EAAO,KAAI,MAIb,MAAOA,EAAO,MAAQA,EAAO,KAAK,GAAG,SAAW1B,GAAc0B,EAAO,KAAK,GAAG,MAAQA,EAAO,KAAK,QAAUC,GACzGD,EAAO,KAAI,CAGnB,CACEF,GAAwBC,CAAgB,EAExC,IAAMpb,EAAK6C,GAAcC,CAAO,EAChC,OAAAN,GAAeC,EAASzC,CAAE,EACnByC,EAAQ,aAAY,CAC7B,EAMa8Y,GAAa,CAACvP,EAAQmB,IAAOR,GAAaX,EAAQmB,EAAIvG,GAAiBmB,EAAe,EAK7FyT,GAAwBC,GAAc,CACtCA,EAAW,QAAU,IACvBA,EAAW,cAAc,KAAK,CAAE,QAASA,EAAW,QAAS,YAAsB3T,GAAa2T,EAAW,QAAQ,WAAW,CAAC,CAAE,EACjIA,EAAW,QAAQ,YAAuB5T,GAAa,EACvD4T,EAAW,QAAU,EAEzB,EAOMP,GAAgC,CAACO,EAAYnZ,EAAQ4I,IAAW,CAEhEuQ,EAAW,QAAU,GAAKA,EAAW,aAAenZ,EAAO,GAAG,QAChEkZ,GAAsBC,CAAU,EAE9BA,EAAW,UAAY,IACzBA,EAAW,WAAanZ,EAAO,GAAG,OAElCmZ,EAAW,QAAQ,YAAYnZ,EAAO,GAAG,MAAM,EAEtCI,EAAa+Y,EAAW,QAAQ,YAAanZ,EAAO,GAAG,MAAQ4I,CAAM,GAEhF5I,EAAO,MAAMmZ,EAAW,QAASvQ,CAAM,EACvCuQ,EAAW,SACb,EAQMN,GAA2BM,GAAe,CAC9CD,GAAsBC,CAAU,EAGhC,IAAMC,EAAcD,EAAW,QAAQ,YAQ9B/Y,EAAagZ,EAAaD,EAAW,cAAc,MAAM,EAElE,QAASpb,EAAI,EAAGA,EAAIob,EAAW,cAAc,OAAQpb,IAAK,CACxD,IAAMsb,EAAcF,EAAW,cAAcpb,CAAC,EAKrCqC,EAAagZ,EAAaC,EAAY,OAAO,EAE7C3S,GAAgB0S,EAAaC,EAAY,WAAW,CACjE,CACA,EAQaC,GAAsB,CAAC5P,EAAQ6P,EAAkB1P,EAAUuN,IAAa,CACnF,IAAM1G,EAAgB,IAAI7G,EAAkBL,GAAcE,CAAM,CAAC,EAC3DiH,EAAc,IAAIC,GAAiBF,EAAe,EAAK,EACvDyH,EAAgB,IAAIf,EACpB+B,EAAa,IAAIjC,GAAiBiB,CAAa,EACrD,QAAStH,EAAOF,EAAY,KAAME,IAAS,KAAMA,EAAOF,EAAY,KAAI,EACtEiI,GAA8BO,EAAYI,EAAiB1I,CAAI,EAAG,CAAC,EAErEgI,GAAwBM,CAAU,EAClC,IAAMzb,EAAK6C,GAAcmQ,CAAa,EACtC,OAAAxQ,GAAeiY,EAAeza,CAAE,EACzBya,EAAc,aAAY,CACnC,EAYMqB,GAAmB,CAAC,CAAE,WAAAC,EAAa,GAAM,QAAAC,EAAU,GAAM,KAAAC,EAAO,EAAI,EAAK,CAAA,IAAO,CACpF,IAAI5b,EAAI,EACF6b,EAAkBjX,GAAM,EACxBkX,EAAoBlX,GAAM,EAC1BmX,EAAyBnX,GAAM,EAC/BoX,EAA2BpX,GAAM,EACvC,OAAAoX,EAAqB,IAAI,KAAM,IAAI,EAK5BC,GAAS,CACd,OAAQA,EAAM,YAAW,CACvB,KAAKxS,GACL,KAAKC,GACH,OAAOuS,EACT,KAAKrS,GAAM,CACT,IAAMrH,EAA4B0Z,EAC5B/V,EAAU3D,EAAK,QACrB,OAAQ2D,EAAQ,YAAW,CACzB,KAAKgW,GACH,MACF,KAAKpL,GAAa,CAChB,GAAI8K,EAAM,CACR,IAAMrW,EAAmCW,EAAS,KAC9CX,aAAgB4W,KAClB5W,EAAK,SAAe3D,GAAeka,EAAevW,EAAK,SAAU,IAAM,QAAUvF,CAAC,GAEhFuF,aAAgB6W,KAClB7W,EAAK,SAAe3D,GAAeka,EAAevW,EAAK,SAAU,IAAM,QAAUvF,CAAC,EAElG,CACY,KACZ,CACU,KAAKqc,GAAY,CACf,IAAMzR,EAA+B1E,EACrC0E,EAAE,IAAMA,EAAE,IAAI,IAAI,IAAM5K,CAAC,EACzB,KACZ,CACU,KAAKsc,GAAe,CAClB,IAAM1R,EAAkC1E,EACxC0E,EAAE,QAAU,IAAI,WAAW,CAAC5K,CAAC,CAAC,EAC9B,KACZ,CACU,KAAKuc,GAAY,CACf,IAAM3R,EAA+B1E,EACjCyV,IACF/Q,EAAE,KAAO,CAAA,EACTA,EAAE,IAAI,KAAO5K,EAAI,IAEnB,KACZ,CACU,KAAKwc,GAAc,CACjB,IAAM5R,EAAiC1E,EACvC0E,EAAE,MAAQ,CAAA,EACV,KACZ,CACU,KAAK6R,GAAe,CAClB,IAAM7R,EAAkC1E,EACpCwV,IACF9Q,EAAE,IAAUhJ,GAAema,EAAoBnR,EAAE,IAAK,IAAM5K,EAAI,EAAE,EAClE4K,EAAE,MAAYhJ,GAAeoa,EAAsBpR,EAAE,MAAO,KAAO,CAAE,EAAA5K,CAAC,EAAG,GAE3E,KACZ,CACU,KAAK0c,GAAa,CAChB,IAAM9R,EAAgC1E,EACtC0E,EAAE,IAAMA,EAAE,IAAI,IAAI,IAAM5K,CAAC,EACzB,KACZ,CACU,KAAK2c,GAAe,CAClB,IAAM/R,EAAkC1E,EACxC0E,EAAE,IAAagS,GAAQ5c,EAAI,GAAM,GAAI4K,EAAE,IAAI,MAAM,EACjD,KACZ,CACU,QAEQtC,GAAc,CAChC,CACQ,OAAI/F,EAAK,YACPA,EAAK,UAAgBX,GAAeia,EAAatZ,EAAK,UAAW,IAAMvC,EAAI,EAAE,GAE/EA,IACOic,CACf,CACM,QAEQ3T,GAAc,CAC5B,CACA,CACA,EAaauU,GAAkB,CAAClR,EAAQmR,IAASvB,GAAoB5P,EAAQ8P,GAAiBqB,CAAI,EAAGvW,GAAiBmB,EAAe,EAMxHqV,GAAoB,CAACpR,EAAQmR,IAASvB,GAAoB5P,EAAQ8P,GAAiBqB,CAAI,EAAG9V,GAAiBzD,EAAe,EAK1HyZ,GAA4BrR,GAAU4P,GAAoB5P,EAAU/K,GAAI2F,GAAiBhD,EAAe,EAKxGiJ,GAA4Bb,GAAU4P,GAAoB5P,EAAU/K,GAAIoG,GAAiBU,EAAe,ECxsB/GuV,GAAsB,8DAMfC,GAAN,KAAa,CAKlB,YAAaC,EAAQzd,EAAa,CAKhC,KAAK,OAASyd,EAKd,KAAK,cAAgBA,EAKrB,KAAK,YAAczd,EAInB,KAAK,SAAW,KAIhB,KAAK,MAAQ,KAIb,KAAK,OAAS,KAId,KAAK,MAAQ,IACjB,CAeE,IAAI,MAAQ,CACV,OAAO,KAAK,QAAU,KAAK,MAAQ0d,GAAU,KAAK,cAAe,KAAK,MAAM,EAChF,CAUE,QAASnb,EAAQ,CACf,OAAOtB,GAAU,KAAK,YAAY,UAAWsB,EAAO,EAAE,CAC1D,CAKE,IAAI,MAAQ,CACV,GAAI,KAAK,QAAU,KAAM,CACvB,GAAI,KAAK,YAAY,IAAI,qBAAqB,SAAW,EACvD,MAAY2C,GAAOqY,EAAmB,EAExC,IAAMI,EAAO,IAAI,IACXF,EAAS,KAAK,OAC2B,KAAK,YAAY,QAAQ,IAAIA,CAAM,EAC1E,QAAQnX,GAAO,CACrB,GAAIA,IAAQ,KAAM,CAChB,IAAMzD,EAA4B4a,EAAO,KAAK,IAAInX,CAAG,EAIjDsX,EACAC,EACJ,GAAI,KAAK,KAAKhb,CAAI,EAAG,CACnB,IAAIib,EAAOjb,EAAK,KAChB,KAAOib,IAAS,MAAQ,KAAK,KAAKA,CAAI,GACpCA,EAAOA,EAAK,KAEd,GAAI,KAAK,QAAQjb,CAAI,EACnB,GAAIib,IAAS,MAAQ,KAAK,QAAQA,CAAI,EACpCF,EAAS,SACTC,EAAiBE,GAAKD,EAAK,QAAQ,WAAU,CAAE,MAE/C,aAGEA,IAAS,MAAQ,KAAK,QAAQA,CAAI,GACpCF,EAAS,SACTC,EAAiBE,GAAKD,EAAK,QAAQ,WAAU,CAAE,IAE/CF,EAAS,MACTC,EAAW,OAG3B,SACgB,KAAK,QAAQhb,CAAI,EACnB+a,EAAS,SACTC,EAAiBE,GAAyBlb,EAAK,QAAQ,WAAU,CAAE,MAEnE,QAGJ8a,EAAK,IAAIrX,EAAK,CAAE,OAAAsX,EAAQ,SAAAC,CAAQ,CAAE,CAC5C,CACA,CAAO,EACD,KAAK,MAAQF,CACnB,CACI,OAAO,KAAK,KAChB,CAUE,IAAI,OAAS,CACX,OAAO,KAAK,QAAQ,KACxB,CAUE,KAAMpb,EAAQ,CACZ,OAAOA,EAAO,GAAG,QAAU,KAAK,YAAY,YAAY,IAAIA,EAAO,GAAG,MAAM,GAAK,EACrF,CAUE,IAAI,SAAW,CACb,IAAIyb,EAAU,KAAK,SACnB,GAAIA,IAAY,KAAM,CACpB,GAAI,KAAK,YAAY,IAAI,qBAAqB,SAAW,EACvD,MAAY9Y,GAAOqY,EAAmB,EAExC,IAAME,EAAS,KAAK,OACdQ,EAAY/Y,GAAM,EAClBgZ,EAAchZ,GAAM,EAIpBiZ,EAAQ,CAAA,EAQd,GAPAH,EAAU,CACR,MAAAC,EACA,QAAAC,EACA,MAAAC,EACA,KAAM,KAAK,IACnB,EACqD,KAAK,YAAY,QAAQ,IAAIV,CAAM,EACtE,IAAI,IAAI,EAAG,CAIrB,IAAI9E,EAAS,KACPyF,EAAS,IAAM,CACfzF,GACFwF,EAAM,KAAKxF,CAAM,CAE7B,EACQ,QAAS9V,EAAO4a,EAAO,OAAQ5a,IAAS,KAAMA,EAAOA,EAAK,MACpDA,EAAK,QACH,KAAK,QAAQA,CAAI,GAAK,CAAC,KAAK,KAAKA,CAAI,KACnC8V,IAAW,MAAQA,EAAO,SAAW,UACvCyF,EAAM,EACNzF,EAAS,CAAE,OAAQ,CAAC,GAEtBA,EAAO,QAAU9V,EAAK,OACtBqb,EAAQ,IAAIrb,CAAI,GAGd,KAAK,KAAKA,CAAI,IACZ8V,IAAW,MAAQA,EAAO,SAAW,UACvCyF,EAAM,EACNzF,EAAS,CAAE,OAAQ,CAAA,CAAE,GAEvBA,EAAO,OAASA,EAAO,OAAO,OAAO9V,EAAK,QAAQ,WAAU,CAAE,EAC9Dob,EAAM,IAAIpb,CAAI,KAEV8V,IAAW,MAAQA,EAAO,SAAW,UACvCyF,EAAM,EACNzF,EAAS,CAAE,OAAQ,CAAC,GAEtBA,EAAO,QAAU9V,EAAK,QAIxB8V,IAAW,MAAQA,EAAO,SAAW,QACvCyF,EAAM,CAEhB,CACM,KAAK,SAAWJ,CACtB,CACI,OAA2BA,CAC/B,CACA,EAmBMN,GAAY,CAACnP,EAAQC,IAAU,CACnC,IAAM6P,EAAO,CAAA,EACb,KAAO7P,EAAM,QAAU,MAAQA,IAAUD,GAAQ,CAC/C,GAAIC,EAAM,MAAM,YAAc,KAE5B6P,EAAK,QAAQ7P,EAAM,MAAM,SAAS,MAC7B,CAEL,IAAIlO,EAAI,EACJ4K,EAAsCsD,EAAM,MAAM,OAAQ,OAC9D,KAAOtD,IAAMsD,EAAM,OAAStD,IAAM,MAC3BA,EAAE,SACL5K,IAEF4K,EAAIA,EAAE,MAERmT,EAAK,QAAQ/d,CAAC,CACpB,CACIkO,EAA0CA,EAAM,MAAM,MAC1D,CACE,OAAO6P,CACT,EChQMC,GAAkB,GASpBC,GAA8B,EAErBC,GAAN,KAAwB,CAK7B,YAAaC,EAAG/a,EAAO,CACrB+a,EAAE,OAAS,GACX,KAAK,EAAIA,EACT,KAAK,MAAQ/a,EACb,KAAK,UAAY6a,IACrB,CACA,EAKMG,GAAyBC,GAAU,CAAEA,EAAO,UAAYJ,IAA6B,EASrFK,GAAkB,CAACD,EAAQF,EAAG/a,IAAU,CAC5Cib,EAAO,EAAE,OAAS,GAClBA,EAAO,EAAIF,EACXA,EAAE,OAAS,GACXE,EAAO,MAAQjb,EACfib,EAAO,UAAYJ,IACrB,EAOMM,GAAe,CAACC,EAAcL,EAAG/a,IAAU,CAC/C,GAAIob,EAAa,QAAUR,GAAiB,CAE1C,IAAMK,EAASG,EAAa,OAAO,CAACzd,EAAGC,IAAMD,EAAE,UAAYC,EAAE,UAAYD,EAAIC,CAAC,EAC9E,OAAAsd,GAAgBD,EAAQF,EAAG/a,CAAK,EACzBib,CACX,KAAS,CAEL,IAAMI,EAAK,IAAIP,GAAkBC,EAAG/a,CAAK,EACzC,OAAAob,EAAa,KAAKC,CAAE,EACbA,CACX,CACA,EAcaC,GAAa,CAACC,EAAQvb,IAAU,CAC3C,GAAIub,EAAO,SAAW,MAAQvb,IAAU,GAAKub,EAAO,gBAAkB,KACpE,OAAO,KAET,IAAMN,EAASM,EAAO,cAAc,SAAW,EAAI,KAAOA,EAAO,cAAc,OAAO,CAAC5d,EAAGC,IAAW4d,GAAIxb,EAAQrC,EAAE,KAAK,EAAS6d,GAAIxb,EAAQpC,EAAE,KAAK,EAAID,EAAIC,CAAC,EACzJmd,EAAIQ,EAAO,OACXE,EAAS,EAOb,IANIR,IAAW,OACbF,EAAIE,EAAO,EACXQ,EAASR,EAAO,MAChBD,GAAuBC,CAAM,GAGxBF,EAAE,QAAU,MAAQU,EAASzb,GAAO,CACzC,GAAI,CAAC+a,EAAE,SAAWA,EAAE,UAAW,CAC7B,GAAI/a,EAAQyb,EAASV,EAAE,OACrB,MAEFU,GAAUV,EAAE,MAClB,CACIA,EAAIA,EAAE,KACV,CAEE,KAAOA,EAAE,OAAS,MAAQU,EAASzb,GACjC+a,EAAIA,EAAE,KACF,CAACA,EAAE,SAAWA,EAAE,YAClBU,GAAUV,EAAE,QAMhB,KAAOA,EAAE,OAAS,MAAQA,EAAE,KAAK,GAAG,SAAWA,EAAE,GAAG,QAAUA,EAAE,KAAK,GAAG,MAAQA,EAAE,KAAK,SAAWA,EAAE,GAAG,OACrGA,EAAIA,EAAE,KACF,CAACA,EAAE,SAAWA,EAAE,YAClBU,GAAUV,EAAE,QA4BhB,OAAIE,IAAW,MAAaO,GAAIP,EAAO,MAAQQ,CAAM,EAAsCV,EAAE,OAAQ,OAASH,IAE5GM,GAAgBD,EAAQF,EAAGU,CAAM,EAC1BR,GAGAE,GAAaI,EAAO,cAAeR,EAAGU,CAAM,CAEvD,EAWaC,GAAsB,CAACN,EAAcpb,EAAO7D,IAAQ,CAC/D,QAASS,EAAIwe,EAAa,OAAS,EAAGxe,GAAK,EAAGA,IAAK,CACjD,IAAMqO,EAAImQ,EAAaxe,CAAC,EACxB,GAAIT,EAAM,EAAG,CAIX,IAAI4e,EAAI9P,EAAE,EAKV,IAJA8P,EAAE,OAAS,GAIJA,IAAMA,EAAE,SAAW,CAACA,EAAE,YAC3BA,EAAIA,EAAE,KACFA,GAAK,CAACA,EAAE,SAAWA,EAAE,YAEvB9P,EAAE,OAAS8P,EAAE,QAGjB,GAAIA,IAAM,MAAQA,EAAE,SAAW,GAAM,CAEnCK,EAAa,OAAOxe,EAAG,CAAC,EACxB,QACR,CACMqO,EAAE,EAAI8P,EACNA,EAAE,OAAS,EACjB,EACQ/a,EAAQiL,EAAE,OAAU9O,EAAM,GAAK6D,IAAUiL,EAAE,SAC7CA,EAAE,MAAanN,GAAIkC,EAAOiL,EAAE,MAAQ9O,CAAG,EAE7C,CACA,EAQawf,GAAkB,GAAK,CAClC,IAAIlX,EAAI,EAAE,OACJmX,EAAM,CAAA,EACZ,KAAOnX,GACLmX,EAAI,KAAKnX,CAAC,EACVA,EAAIA,EAAE,MAER,OAAOmX,CACT,EAWaC,GAAoB,CAAC1Z,EAAM7F,EAAamP,IAAU,CAC7D,IAAMqQ,EAAc3Z,EACd8R,EAAqB3X,EAAY,mBACvC,KAEMkC,GAAeyV,EAAoB9R,EAAM,IAAM,CAAA,CAAE,EAAE,KAAKsJ,CAAK,EAC7DtJ,EAAK,QAAU,MAGnBA,EAAyCA,EAAK,MAAM,OAEtDiI,GAA0B0R,EAAY,IAAKrQ,EAAOnP,CAAW,CAC/D,EAMa4F,GAAN,KAAmB,CACxB,aAAe,CAIb,KAAK,MAAQ,KAIb,KAAK,KAAO,IAAI,IAIhB,KAAK,OAAS,KAId,KAAK,IAAM,KACX,KAAK,QAAU,EAKf,KAAK,IAAM6H,GAAkB,EAK7B,KAAK,KAAOA,GAAkB,EAI9B,KAAK,cAAgB,IACzB,CAKE,IAAI,QAAU,CACZ,OAAO,KAAK,MAA0C,KAAK,MAAM,OAAU,IAC/E,CAYE,WAAYgS,EAAG5c,EAAM,CACnB,KAAK,IAAM4c,EACX,KAAK,MAAQ5c,CACjB,CAKE,OAAS,CACP,MAAY6c,GAAmB,CACnC,CAKE,OAAS,CACP,MAAYA,GAAmB,CACnC,CAKE,OAAQC,EAAU,CAAA,CAKlB,IAAI,QAAU,CACZ,IAAI3Z,EAAI,KAAK,OACb,KAAOA,IAAM,MAAQA,EAAE,SACrBA,EAAIA,EAAE,MAER,OAAOA,CACX,CASE,cAAehG,EAAa4f,EAAa,CACnC,CAAC5f,EAAY,OAAS,KAAK,gBAC7B,KAAK,cAAc,OAAS,EAElC,CAOE,QAASE,EAAG,CACVwN,GAAwB,KAAK,IAAKxN,CAAC,CACvC,CAOE,YAAaA,EAAG,CACdwN,GAAwB,KAAK,KAAMxN,CAAC,CACxC,CAOE,UAAWA,EAAG,CACZyN,GAA2B,KAAK,IAAKzN,CAAC,CAC1C,CAOE,cAAeA,EAAG,CAChByN,GAA2B,KAAK,KAAMzN,CAAC,CAC3C,CAME,QAAU,CAAA,CACZ,EAWa2f,GAAgB,CAACha,EAAMia,EAAOC,IAAQ,CAC7CD,EAAQ,IACVA,EAAQja,EAAK,QAAUia,GAErBC,EAAM,IACRA,EAAMla,EAAK,QAAUka,GAEvB,IAAIlgB,EAAMkgB,EAAMD,EACVE,EAAK,CAAA,EACPha,EAAIH,EAAK,OACb,KAAOG,IAAM,MAAQnG,EAAM,GAAG,CAC5B,GAAImG,EAAE,WAAa,CAACA,EAAE,QAAS,CAC7B,IAAMkF,EAAIlF,EAAE,QAAQ,WAAU,EAC9B,GAAIkF,EAAE,QAAU4U,EACdA,GAAS5U,EAAE,WACN,CACL,QAAS5K,EAAIwf,EAAOxf,EAAI4K,EAAE,QAAUrL,EAAM,EAAGS,IAC3C0f,EAAG,KAAK9U,EAAE5K,CAAC,CAAC,EACZT,IAEFigB,EAAQ,CAChB,CACA,CACI9Z,EAAIA,EAAE,KACV,CACE,OAAOga,CACT,EASaC,GAAkBpa,GAAQ,CACrC,IAAMma,EAAK,CAAA,EACP,EAAIna,EAAK,OACb,KAAO,IAAM,MAAM,CACjB,GAAI,EAAE,WAAa,CAAC,EAAE,QAAS,CAC7B,IAAMqF,EAAI,EAAE,QAAQ,WAAU,EAC9B,QAAS,EAAI,EAAG,EAAIA,EAAE,OAAQ,IAC5B8U,EAAG,KAAK9U,EAAE,CAAC,CAAC,CAEpB,CACI,EAAI,EAAE,KACV,CACE,OAAO8U,CACT,EAUaE,GAA0B,CAACra,EAAMoM,IAAa,CACzD,IAAM+N,EAAK,CAAA,EACPha,EAAIH,EAAK,OACb,KAAOG,IAAM,MAAM,CACjB,GAAIA,EAAE,WAAauM,GAAUvM,EAAGiM,CAAQ,EAAG,CACzC,IAAM/G,EAAIlF,EAAE,QAAQ,WAAU,EAC9B,QAAS1F,EAAI,EAAGA,EAAI4K,EAAE,OAAQ5K,IAC5B0f,EAAG,KAAK9U,EAAE5K,CAAC,CAAC,CAEpB,CACI0F,EAAIA,EAAE,KACV,CACE,OAAOga,CACT,EAWaG,GAAkB,CAACta,EAAM3F,IAAM,CAC1C,IAAIwD,EAAQ,EACRsC,EAAIH,EAAK,OACb,KAAOG,IAAM,MAAM,CACjB,GAAIA,EAAE,WAAa,CAACA,EAAE,QAAS,CAC7B,IAAMkF,EAAIlF,EAAE,QAAQ,WAAU,EAC9B,QAAS1F,EAAI,EAAGA,EAAI4K,EAAE,OAAQ5K,IAC5BJ,EAAEgL,EAAE5K,CAAC,EAAGoD,IAASmC,CAAI,CAE7B,CACIG,EAAIA,EAAE,KACV,CACA,EAWaoa,GAAc,CAACva,EAAM3F,IAAM,CAItC,IAAMqW,EAAS,CAAA,EACf,OAAA4J,GAAgBta,EAAM,CAACqF,EAAG,IAAM,CAC9BqL,EAAO,KAAKrW,EAAEgL,EAAG,EAAGrF,CAAI,CAAC,CAC7B,CAAG,EACM0Q,CACT,EASa8J,GAAyBxa,GAAQ,CAC5C,IAAIG,EAAIH,EAAK,OAITya,EAAiB,KACjBC,EAAsB,EAC1B,MAAO,CACL,CAAC,OAAO,QAAQ,GAAK,CACnB,OAAO,IACb,EACI,KAAM,IAAM,CAEV,GAAID,IAAmB,KAAM,CAC3B,KAAOta,IAAM,MAAQA,EAAE,SACrBA,EAAIA,EAAE,MAGR,GAAIA,IAAM,KACR,MAAO,CACL,KAAM,GACN,MAAO,MACnB,EAGQsa,EAAiBta,EAAE,QAAQ,WAAU,EACrCua,EAAsB,EACtBva,EAAIA,EAAE,KACd,CACM,IAAMK,EAAQia,EAAeC,GAAqB,EAElD,OAAID,EAAe,QAAUC,IAC3BD,EAAiB,MAEZ,CACL,KAAM,GACN,MAAAja,CACR,CACA,CACA,CACA,EAmCama,GAAc,CAAC3a,EAAMnC,IAAU,CAC1C,IAAMib,EAASK,GAAWnZ,EAAMnC,CAAK,EACjCsC,EAAIH,EAAK,OAKb,IAJI8Y,IAAW,OACb3Y,EAAI2Y,EAAO,EACXjb,GAASib,EAAO,OAEX3Y,IAAM,KAAMA,EAAIA,EAAE,MACvB,GAAI,CAACA,EAAE,SAAWA,EAAE,UAAW,CAC7B,GAAItC,EAAQsC,EAAE,OACZ,OAAOA,EAAE,QAAQ,WAAU,EAAGtC,CAAK,EAErCA,GAASsC,EAAE,MACjB,CAEA,EAWaya,GAA8B,CAACzgB,EAAauO,EAAQmS,EAAela,IAAY,CAC1F,IAAI7F,EAAO+f,EACLlb,EAAMxF,EAAY,IAClB2gB,EAAcnb,EAAI,SAClBnC,EAAQmC,EAAI,MACZ5E,EAAQ8f,IAAkB,KAAOnS,EAAO,OAASmS,EAAc,MAIjEE,EAAc,CAAA,EACZC,EAAkB,IAAM,CACxBD,EAAY,OAAS,IACvBjgB,EAAO,IAAIuJ,GAAKpD,GAAS6Z,EAAand,GAASH,EAAOsd,CAAW,CAAC,EAAGhgB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAI2N,EAAQ,KAAM,IAAIoO,GAAWiE,CAAW,CAAC,EACnKjgB,EAAK,UAAUX,EAAa,CAAC,EAC7B4gB,EAAc,CAAA,EAEpB,EACEpa,EAAQ,QAAQ0E,GAAK,CACnB,GAAIA,IAAM,KACR0V,EAAY,KAAK1V,CAAC,MAElB,QAAQA,EAAE,YAAW,CACnB,KAAK,OACL,KAAK,OACL,KAAK,QACL,KAAK,MACL,KAAK,OACH0V,EAAY,KAAK1V,CAAC,EAClB,MACF,QAEE,OADA2V,EAAe,EACP3V,EAAE,YAAW,CACnB,KAAK,WACL,KAAK,YACHvK,EAAO,IAAIuJ,GAAKpD,GAAS6Z,EAAand,GAASH,EAAOsd,CAAW,CAAC,EAAGhgB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAI2N,EAAQ,KAAM,IAAIqO,GAAc,IAAI,WAAsC1R,CAAC,CAAE,CAAC,EACxMvK,EAAK,UAAUX,EAAa,CAAC,EAC7B,MACF,KAAKuE,GACH5D,EAAO,IAAIuJ,GAAKpD,GAAS6Z,EAAand,GAASH,EAAOsd,CAAW,CAAC,EAAGhgB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAI2N,EAAQ,KAAM,IAAIsO,GAA+B3R,CAAC,CAAE,EAC9KvK,EAAK,UAAUX,EAAa,CAAC,EAC7B,MACF,QACE,GAAIkL,aAAatF,GACfjF,EAAO,IAAIuJ,GAAKpD,GAAS6Z,EAAand,GAASH,EAAOsd,CAAW,CAAC,EAAGhgB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAI2N,EAAQ,KAAM,IAAI6C,GAAYlG,CAAC,CAAC,EAC1JvK,EAAK,UAAUX,EAAa,CAAC,MAE7B,OAAM,IAAI,MAAM,6CAA6C,CAE7E,CACA,CAEA,CAAG,EACD6gB,EAAe,CACjB,EAEMC,GAAiB,IAAY5b,GAAO,kBAAkB,EAW/C6b,GAAyB,CAAC/gB,EAAauO,EAAQ7K,EAAO8C,IAAY,CAC7E,GAAI9C,EAAQ6K,EAAO,QACjB,MAAMuS,GAAc,EAEtB,GAAIpd,IAAU,EACZ,OAAI6K,EAAO,eACT6Q,GAAoB7Q,EAAO,cAAe7K,EAAO8C,EAAQ,MAAM,EAE1Dia,GAA4BzgB,EAAauO,EAAQ,KAAM/H,CAAO,EAEvE,IAAMwa,EAAatd,EACbib,EAASK,GAAWzQ,EAAQ7K,CAAK,EACnCsC,EAAIuI,EAAO,OAWf,IAVIoQ,IAAW,OACb3Y,EAAI2Y,EAAO,EACXjb,GAASib,EAAO,MAEZjb,IAAU,IAEZsC,EAAIA,EAAE,KACNtC,GAAUsC,GAAKA,EAAE,WAAa,CAACA,EAAE,QAAWA,EAAE,OAAS,IAGpDA,IAAM,KAAMA,EAAIA,EAAE,MACvB,GAAI,CAACA,EAAE,SAAWA,EAAE,UAAW,CAC7B,GAAItC,GAASsC,EAAE,OAAQ,CACjBtC,EAAQsC,EAAE,QAEZyM,GAAkBzS,EAAa8G,GAASd,EAAE,GAAG,OAAQA,EAAE,GAAG,MAAQtC,CAAK,CAAC,EAE1E,KACR,CACMA,GAASsC,EAAE,MACjB,CAEE,OAAIuI,EAAO,eACT6Q,GAAoB7Q,EAAO,cAAeyS,EAAYxa,EAAQ,MAAM,EAE/Dia,GAA4BzgB,EAAauO,EAAQvI,EAAGQ,CAAO,CACpE,EAaaya,GAAuB,CAACjhB,EAAauO,EAAQ/H,IAAY,CAGpE,IAAIR,GADYuI,EAAO,eAAiB,CAAA,GAAI,OAAO,CAAC2S,EAAWC,IAAeA,EAAW,MAAQD,EAAU,MAAQC,EAAaD,EAAW,CAAE,MAAO,EAAG,EAAG3S,EAAO,MAAM,CAAE,EAC1J,EACf,GAAIvI,EACF,KAAOA,EAAE,OACPA,EAAIA,EAAE,MAGV,OAAOya,GAA4BzgB,EAAauO,EAAQvI,EAAGQ,CAAO,CACpE,EAWa4a,GAAiB,CAACphB,EAAauO,EAAQ7K,EAAOzB,IAAW,CACpE,GAAIA,IAAW,EAAK,OACpB,IAAM+e,EAAatd,EACb2d,EAAcpf,EACd0c,EAASK,GAAWzQ,EAAQ7K,CAAK,EACnCsC,EAAIuI,EAAO,OAMf,IALIoQ,IAAW,OACb3Y,EAAI2Y,EAAO,EACXjb,GAASib,EAAO,OAGX3Y,IAAM,MAAQtC,EAAQ,EAAGsC,EAAIA,EAAE,MAChC,CAACA,EAAE,SAAWA,EAAE,YACdtC,EAAQsC,EAAE,QACZyM,GAAkBzS,EAAa8G,GAASd,EAAE,GAAG,OAAQA,EAAE,GAAG,MAAQtC,CAAK,CAAC,EAE1EA,GAASsC,EAAE,QAIf,KAAO/D,EAAS,GAAK+D,IAAM,MACpBA,EAAE,UACD/D,EAAS+D,EAAE,QACbyM,GAAkBzS,EAAa8G,GAASd,EAAE,GAAG,OAAQA,EAAE,GAAG,MAAQ/D,CAAM,CAAC,EAE3E+D,EAAE,OAAOhG,CAAW,EACpBiC,GAAU+D,EAAE,QAEdA,EAAIA,EAAE,MAER,GAAI/D,EAAS,EACX,MAAM6e,GAAc,EAElBvS,EAAO,eACT6Q,GAAoB7Q,EAAO,cAAeyS,EAAY,CAACK,EAAcpf,CAAM,CAE/E,EAUaqf,GAAgB,CAACthB,EAAauO,EAAQjI,IAAQ,CACzD,IAAM4E,EAAIqD,EAAO,KAAK,IAAIjI,CAAG,EACzB4E,IAAM,QACRA,EAAE,OAAOlL,CAAW,CAExB,EAWauhB,GAAa,CAACvhB,EAAauO,EAAQjI,EAAKD,IAAU,CAC7D,IAAM1F,EAAO4N,EAAO,KAAK,IAAIjI,CAAG,GAAK,KAC/Bd,EAAMxF,EAAY,IAClB2gB,EAAcnb,EAAI,SACpBgB,EACJ,GAAIH,GAAS,KACXG,EAAU,IAAImW,GAAW,CAACtW,CAAK,CAAC,MAEhC,QAAQA,EAAM,YAAW,CACvB,KAAK,OACL,KAAK,OACL,KAAK,QACL,KAAK,MACL,KAAK,OACHG,EAAU,IAAImW,GAAW,CAACtW,CAAK,CAAC,EAChC,MACF,KAAK,WACHG,EAAU,IAAIoW,GAAyCvW,CAAK,EAC5D,MACF,KAAK9B,GACHiC,EAAU,IAAIqW,GAA+BxW,CAAK,EAClD,MACF,QACE,GAAIA,aAAiBT,GACnBY,EAAU,IAAI4K,GAAY/K,CAAK,MAE/B,OAAM,IAAI,MAAM,yBAAyB,CAEnD,CAEE,IAAI6D,GAAKpD,GAAS6Z,EAAand,GAASgC,EAAI,MAAOmb,CAAW,CAAC,EAAGhgB,EAAMA,GAAQA,EAAK,OAAQ,KAAM,KAAM4N,EAAQjI,EAAKE,CAAO,EAAE,UAAUxG,EAAa,CAAC,CACzJ,EAUawhB,GAAa,CAACjT,EAAQjI,IAAQ,CACzC,IAAMmb,EAAMlT,EAAO,KAAK,IAAIjI,CAAG,EAC/B,OAAOmb,IAAQ,QAAa,CAACA,EAAI,QAAUA,EAAI,QAAQ,WAAU,EAAGA,EAAI,OAAS,CAAC,EAAI,MACxF,EASaC,GAAiBnT,GAAW,CAIvC,IAAMG,EAAM,CAAA,EACZ,OAAAH,EAAO,KAAK,QAAQ,CAAClI,EAAOC,IAAQ,CAC7BD,EAAM,UACTqI,EAAIpI,CAAG,EAAID,EAAM,QAAQ,WAAU,EAAGA,EAAM,OAAS,CAAC,EAE5D,CAAG,EACMqI,CACT,EAUaiT,GAAa,CAACpT,EAAQjI,IAAQ,CACzC,IAAMmb,EAAMlT,EAAO,KAAK,IAAIjI,CAAG,EAC/B,OAAOmb,IAAQ,QAAa,CAACA,EAAI,OACnC,EAWaG,GAAqB,CAACrT,EAAQjI,EAAK2L,IAAa,CAC3D,IAAI4P,EAAItT,EAAO,KAAK,IAAIjI,CAAG,GAAK,KAChC,KAAOub,IAAM,OAAS,CAAC5P,EAAS,GAAG,IAAI4P,EAAE,GAAG,MAAM,GAAKA,EAAE,GAAG,QAAU5P,EAAS,GAAG,IAAI4P,EAAE,GAAG,MAAM,GAAK,KACpGA,EAAIA,EAAE,KAER,OAAOA,IAAM,MAAQtP,GAAUsP,EAAG5P,CAAQ,EAAI4P,EAAE,QAAQ,WAAU,EAAGA,EAAE,OAAS,CAAC,EAAI,MACvF,EAUaC,GAAwB,CAACvT,EAAQ0D,IAAa,CAIzD,IAAMvD,EAAM,CAAA,EACZ,OAAAH,EAAO,KAAK,QAAQ,CAAClI,EAAOC,IAAQ,CAIlC,IAAIub,EAAIxb,EACR,KAAOwb,IAAM,OAAS,CAAC5P,EAAS,GAAG,IAAI4P,EAAE,GAAG,MAAM,GAAKA,EAAE,GAAG,QAAU5P,EAAS,GAAG,IAAI4P,EAAE,GAAG,MAAM,GAAK,KACpGA,EAAIA,EAAE,KAEJA,IAAM,MAAQtP,GAAUsP,EAAG5P,CAAQ,IACrCvD,EAAIpI,CAAG,EAAIub,EAAE,QAAQ,WAAU,EAAGA,EAAE,OAAS,CAAC,EAEpD,CAAG,EACMnT,CACT,EASaqT,GAAoBC,GAAgBC,GAAeD,EAAI,QAAO,EAA8BE,GAAS,CAACA,EAAM,CAAC,EAAE,OAAO,ECt6BtHC,GAAN,cAA0B3E,EAAO,CAKtC,YAAayB,EAAQjf,EAAa,CAChC,MAAMif,EAAQjf,CAAW,EACzB,KAAK,aAAeA,CACxB,CACA,EAQaiG,GAAN,MAAMmc,UAAexc,EAAa,CACvC,aAAe,CACb,MAAK,EAKL,KAAK,eAAiB,CAAA,EAItB,KAAK,cAAgB,CAAA,CACzB,CAQE,OAAO,KAAMyc,EAAO,CAIlB,IAAMhhB,EAAI,IAAI+gB,EACd,OAAA/gB,EAAE,KAAKghB,CAAK,EACLhhB,CACX,CAYE,WAAYoe,EAAG5c,EAAM,CACnB,MAAM,WAAW4c,EAAG5c,CAAI,EACxB,KAAK,OAAO,EAA8B,KAAK,cAAc,EAC7D,KAAK,eAAiB,IAC1B,CAKE,OAAS,CACP,OAAO,IAAIuf,CACf,CAKE,OAAS,CAIP,IAAM9C,EAAM,IAAI8C,EAChB,OAAA9C,EAAI,OAAO,EAAG,KAAK,QAAO,EAAG,IAAIgD,GAC/BA,aAAc1c,GAAyC0c,EAAG,MAAK,EAAMA,CAC3E,CAAK,EACMhD,CACX,CAEE,IAAI,QAAU,CACZ,OAAO,KAAK,iBAAmB,KAAO,KAAK,QAAU,KAAK,eAAe,MAC7E,CAQE,cAAetf,EAAauiB,EAAY,CACtC,MAAM,cAAcviB,EAAauiB,CAAU,EAC3ChD,GAAkB,KAAMvf,EAAa,IAAImiB,GAAY,KAAMniB,CAAW,CAAC,CAC3E,CAkBE,OAAQ0D,EAAO8C,EAAS,CAClB,KAAK,MAAQ,KACfjB,GAAS,KAAK,IAAKvF,GAAe,CAChC+gB,GAAuB/gB,EAAa,KAAM0D,EAA2B8C,CAAO,CACpF,CAAO,EAE0B,KAAK,eAAgB,OAAO9C,EAAO,EAAG,GAAG8C,CAAO,CAEjF,CASE,KAAMA,EAAS,CACT,KAAK,MAAQ,KACfjB,GAAS,KAAK,IAAKvF,GAAe,CAChCihB,GAAqBjhB,EAAa,KAA0BwG,CAAO,CAC3E,CAAO,EAE0B,KAAK,eAAgB,KAAK,GAAGA,CAAO,CAErE,CAOE,QAASA,EAAS,CAChB,KAAK,OAAO,EAAGA,CAAO,CAC1B,CAQE,OAAQ9C,EAAOzB,EAAS,EAAG,CACrB,KAAK,MAAQ,KACfsD,GAAS,KAAK,IAAKvF,GAAe,CAChCohB,GAAephB,EAAa,KAAM0D,EAAOzB,CAAM,CACvD,CAAO,EAE0B,KAAK,eAAgB,OAAOyB,EAAOzB,CAAM,CAE1E,CAQE,IAAKyB,EAAO,CACV,OAAO8c,GAAY,KAAM9c,CAAK,CAClC,CAOE,SAAW,CACT,OAAOuc,GAAgB,IAAI,CAC/B,CASE,MAAOH,EAAQ,EAAGC,EAAM,KAAK,OAAQ,CACnC,OAAOF,GAAc,KAAMC,EAAOC,CAAG,CACzC,CAOE,QAAU,CACR,OAAO,KAAK,IAAI7U,GAAKA,aAAatF,GAAesF,EAAE,OAAM,EAAKA,CAAC,CACnE,CAWE,IAAKhL,EAAG,CACN,OAAOkgB,GAAY,KAA0BlgB,CAAC,CAClD,CAOE,QAASA,EAAG,CACVigB,GAAgB,KAAMjgB,CAAC,CAC3B,CAKE,CAAC,OAAO,QAAQ,GAAK,CACnB,OAAOmgB,GAAuB,IAAI,CACtC,CAKE,OAAQ3d,EAAS,CACfA,EAAQ,aAAa8f,EAAW,CACpC,CACA,EAQaC,GAAaC,GAAY,IAAIzc,GC1P7B0c,GAAN,cAAwBnF,EAAO,CAMpC,YAAaoF,EAAM5iB,EAAaqV,EAAM,CACpC,MAAMuN,EAAM5iB,CAAW,EACvB,KAAK,YAAcqV,CACvB,CACA,EASalP,GAAN,MAAM0c,UAAajd,EAAa,CAKrC,YAAakd,EAAS,CACpB,MAAK,EAKL,KAAK,eAAiB,KAElBA,IAAY,OACd,KAAK,eAAiB,IAAI,IAE1B,KAAK,eAAiB,IAAI,IAAIA,CAAO,CAE3C,CAYE,WAAYrD,EAAG5c,EAAM,CACnB,MAAM,WAAW4c,EAAG5c,CAAI,EACU,KAAK,eAAgB,QAAQ,CAACwD,EAAOC,IAAQ,CAC7E,KAAK,IAAIA,EAAKD,CAAK,CACzB,CAAK,EACD,KAAK,eAAiB,IAC1B,CAKE,OAAS,CACP,OAAO,IAAIwc,CACf,CAKE,OAAS,CAIP,IAAMb,EAAM,IAAIa,EAChB,YAAK,QAAQ,CAACxc,EAAOC,IAAQ,CAC3B0b,EAAI,IAAI1b,EAAKD,aAAiBT,GAA4CS,EAAM,MAAK,EAAMA,CAAK,CACtG,CAAK,EACM2b,CACX,CAQE,cAAehiB,EAAauiB,EAAY,CACtChD,GAAkB,KAAMvf,EAAa,IAAI2iB,GAAU,KAAM3iB,EAAauiB,CAAU,CAAC,CACrF,CAOE,QAAU,CAIR,IAAMP,EAAM,CAAA,EACZ,YAAK,KAAK,QAAQ,CAACnf,EAAMyD,IAAQ,CAC/B,GAAI,CAACzD,EAAK,QAAS,CACjB,IAAMgf,EAAIhf,EAAK,QAAQ,WAAU,EAAGA,EAAK,OAAS,CAAC,EACnDmf,EAAI1b,CAAG,EAAIub,aAAajc,GAAeic,EAAE,OAAM,EAAKA,CAC5D,CACA,CAAK,EACMG,CACX,CAOE,IAAI,MAAQ,CACV,MAAO,CAAC,GAAGD,GAAkB,KAAK,IAAI,CAAC,EAAE,MAC7C,CAOE,MAAQ,CACN,OAAgBgB,GAAYhB,GAAkB,KAAK,IAAI,EAAyBF,GAAKA,EAAE,CAAC,CAAC,CAC7F,CAOE,QAAU,CACR,OAAgBkB,GAAYhB,GAAkB,KAAK,IAAI,EAAyBF,GAAKA,EAAE,CAAC,EAAE,QAAQ,WAAU,EAAGA,EAAE,CAAC,EAAE,OAAS,CAAC,CAAC,CACnI,CAOE,SAAW,CACT,OAAgBkB,GAAYhB,GAAkB,KAAK,IAAI,EAAyBF,GAAyB,CAACA,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAE,QAAQ,WAAU,EAAGA,EAAE,CAAC,EAAE,OAAS,CAAC,CAAC,CAAE,CAChK,CAOE,QAAS3hB,EAAG,CACV,KAAK,KAAK,QAAQ,CAAC2C,EAAMyD,IAAQ,CAC1BzD,EAAK,SACR3C,EAAE2C,EAAK,QAAQ,WAAU,EAAGA,EAAK,OAAS,CAAC,EAAGyD,EAAK,IAAI,CAE/D,CAAK,CACL,CAOE,CAAC,OAAO,QAAQ,GAAK,CACnB,OAAO,KAAK,QAAO,CACvB,CAOE,OAAQA,EAAK,CACP,KAAK,MAAQ,KACff,GAAS,KAAK,IAAKvF,GAAe,CAChCshB,GAActhB,EAAa,KAAMsG,CAAG,CAC5C,CAAO,EAEgC,KAAK,eAAgB,OAAOA,CAAG,CAEtE,CAUE,IAAKA,EAAKD,EAAO,CACf,OAAI,KAAK,MAAQ,KACfd,GAAS,KAAK,IAAKvF,GAAe,CAChCuhB,GAAWvhB,EAAa,KAAMsG,EAAyBD,CAAK,CACpE,CAAO,EAEgC,KAAK,eAAgB,IAAIC,EAAKD,CAAK,EAE/DA,CACX,CAQE,IAAKC,EAAK,CACR,OAA2Bkb,GAAW,KAAMlb,CAAG,CACnD,CAQE,IAAKA,EAAK,CACR,OAAOqb,GAAW,KAAMrb,CAAG,CAC/B,CAKE,OAAS,CACH,KAAK,MAAQ,KACff,GAAS,KAAK,IAAKvF,GAAe,CAChC,KAAK,QAAQ,SAAUgjB,EAAQ1c,EAAK0b,EAAK,CACvCV,GAActhB,EAAagiB,EAAK1b,CAAG,CAC7C,CAAS,CACT,CAAO,EAEgC,KAAK,eAAgB,MAAK,CAEjE,CAKE,OAAQ5D,EAAS,CACfA,EAAQ,aAAaugB,EAAS,CAClC,CACA,EAQaC,GAAWR,GAAY,IAAIvc,GCzOlCgd,GAAa,CAAC9hB,EAAGC,IAAMD,IAAMC,GAAM,OAAOD,GAAM,UAAY,OAAOC,GAAM,UAAYD,GAAKC,GAAY8hB,GAAU/hB,EAAGC,CAAC,EAE7G+hB,GAAN,KAA2B,CAOhC,YAAa1iB,EAAMC,EAAO8C,EAAO4f,EAAmB,CAClD,KAAK,KAAO3iB,EACZ,KAAK,MAAQC,EACb,KAAK,MAAQ8C,EACb,KAAK,kBAAoB4f,CAC7B,CAKE,SAAW,CAIT,OAHI,KAAK,QAAU,MACX1a,GAAc,EAEd,KAAK,MAAM,QAAQ,YAAW,CACpC,KAAKmU,GACE,KAAK,MAAM,SACdwG,GAAwB,KAAK,kBAAiD,KAAK,MAAM,OAAO,EAElG,MACF,QACO,KAAK,MAAM,UACd,KAAK,OAAS,KAAK,MAAM,QAE3B,KACR,CACI,KAAK,KAAO,KAAK,MACjB,KAAK,MAAQ,KAAK,MAAM,KAC5B,CACA,EAWMC,GAAmB,CAACxjB,EAAasU,EAAKmP,IAAU,CACpD,KAAOnP,EAAI,QAAU,MAAQmP,EAAQ,GAAG,CACtC,OAAQnP,EAAI,MAAM,QAAQ,YAAW,CACnC,KAAKyI,GACEzI,EAAI,MAAM,SACbiP,GAAwBjP,EAAI,kBAAiDA,EAAI,MAAM,OAAO,EAEhG,MACF,QACOA,EAAI,MAAM,UACTmP,EAAQnP,EAAI,MAAM,QAEpB7B,GAAkBzS,EAAa8G,GAASwN,EAAI,MAAM,GAAG,OAAQA,EAAI,MAAM,GAAG,MAAQmP,CAAK,CAAC,EAE1FnP,EAAI,OAASA,EAAI,MAAM,OACvBmP,GAASnP,EAAI,MAAM,QAErB,KACR,CACIA,EAAI,KAAOA,EAAI,MACfA,EAAI,MAAQA,EAAI,MAAM,KAE1B,CACE,OAAOA,CACT,EAYMoP,GAAe,CAAC1jB,EAAauO,EAAQ7K,EAAOigB,IAAoB,CACpE,IAAML,EAAoB,IAAI,IACxB3E,EAASgF,EAAkB3E,GAAWzQ,EAAQ7K,CAAK,EAAI,KAC7D,GAAIib,EAAQ,CACV,IAAMrK,EAAM,IAAI+O,GAAqB1E,EAAO,EAAE,KAAMA,EAAO,EAAGA,EAAO,MAAO2E,CAAiB,EAC7F,OAAOE,GAAiBxjB,EAAasU,EAAK5Q,EAAQib,EAAO,KAAK,CAClE,KAAS,CACL,IAAMrK,EAAM,IAAI+O,GAAqB,KAAM9U,EAAO,OAAQ,EAAG+U,CAAiB,EAC9E,OAAOE,GAAiBxjB,EAAasU,EAAK5Q,CAAK,CACnD,CACA,EAaMkgB,GAA0B,CAAC5jB,EAAauO,EAAQsV,EAASC,IAAsB,CAEnF,KACED,EAAQ,QAAU,OAChBA,EAAQ,MAAM,UAAY,IACxBA,EAAQ,MAAM,QAAQ,cAAgB9G,IACtCoG,GAAWW,EAAkB,IAAkCD,EAAQ,MAAM,QAAS,GAAG,EAAiCA,EAAQ,MAAM,QAAS,KAAK,IAIrJA,EAAQ,MAAM,SACjBC,EAAkB,OAAqCD,EAAQ,MAAM,QAAS,GAAG,EAEnFA,EAAQ,QAAO,EAEjB,IAAMre,EAAMxF,EAAY,IAClB2gB,EAAcnb,EAAI,SACxBse,EAAkB,QAAQ,CAACrC,EAAKnb,IAAQ,CACtC,IAAM3F,EAAOkjB,EAAQ,KACfjjB,EAAQijB,EAAQ,MAChBE,EAAa,IAAI7Z,GAAKpD,GAAS6Z,EAAand,GAASgC,EAAI,MAAOmb,CAAW,CAAC,EAAGhgB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAI2N,EAAQ,KAAM,IAAIwO,GAAczW,EAAKmb,CAAG,CAAC,EACnLsC,EAAW,UAAU/jB,EAAa,CAAC,EACnC6jB,EAAQ,MAAQE,EAChBF,EAAQ,QAAO,CACnB,CAAG,CACH,EASMN,GAA0B,CAACD,EAAmBU,IAAW,CAC7D,GAAM,CAAE,IAAA1d,EAAK,MAAAD,CAAK,EAAK2d,EACnB3d,IAAU,KACZid,EAAkB,OAAOhd,CAAG,EAE5Bgd,EAAkB,IAAIhd,EAAKD,CAAK,CAEpC,EASM4d,GAA2B,CAACJ,EAASK,IAAe,CAExD,KACML,EAAQ,QAAU,MADX,CAGJ,GAAI,EAAAA,EAAQ,MAAM,SAAYA,EAAQ,MAAM,QAAQ,cAAgB9G,IAAiBoG,GAAWe,EAA0CL,EAAQ,MAAM,QAAU,GAAG,GAAK,KAAoCA,EAAQ,MAAM,QAAS,KAAK,GAG/O,MAEFA,EAAQ,QAAO,CACnB,CACA,EAYMM,GAAmB,CAACnkB,EAAauO,EAAQsV,EAASK,IAAe,CACrE,IAAM1e,EAAMxF,EAAY,IAClB2gB,EAAcnb,EAAI,SAClBse,EAAoB,IAAI,IAE9B,QAAWxd,KAAO4d,EAAY,CAC5B,IAAMzC,EAAMyC,EAAW5d,CAAG,EACpB8d,EAAaP,EAAQ,kBAAkB,IAAIvd,CAAG,GAAK,KACzD,GAAI,CAAC6c,GAAWiB,EAAY3C,CAAG,EAAG,CAEhCqC,EAAkB,IAAIxd,EAAK8d,CAAU,EACrC,GAAM,CAAE,KAAAzjB,EAAM,MAAAC,CAAK,EAAKijB,EACxBA,EAAQ,MAAQ,IAAI3Z,GAAKpD,GAAS6Z,EAAand,GAASgC,EAAI,MAAOmb,CAAW,CAAC,EAAGhgB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAI2N,EAAQ,KAAM,IAAIwO,GAAczW,EAAKmb,CAAG,CAAC,EAChLoC,EAAQ,MAAM,UAAU7jB,EAAa,CAAC,EACtC6jB,EAAQ,QAAO,CACrB,CACA,CACE,OAAOC,CACT,EAYMO,GAAa,CAACrkB,EAAauO,EAAQsV,EAASS,EAAMJ,IAAe,CACrEL,EAAQ,kBAAkB,QAAQ,CAACU,EAAMje,IAAQ,CAC3C4d,EAAW5d,CAAG,IAAM,SACtB4d,EAAW5d,CAAG,EAAI,KAExB,CAAG,EACD,IAAMd,EAAMxF,EAAY,IAClB2gB,EAAcnb,EAAI,SACxBye,GAAyBJ,EAASK,CAAU,EAC5C,IAAMJ,EAAoBK,GAAiBnkB,EAAauO,EAAQsV,EAASK,CAAU,EAE7E1d,EAAU8d,EAAK,cAAgB,OAAS,IAAIrH,GAAqCqH,CAAI,EAAMA,aAAgB1e,GAAe,IAAIwL,GAAYkT,CAAI,EAAI,IAAIxH,GAAawH,CAAI,EACzK,CAAE,KAAA3jB,EAAM,MAAAC,EAAO,MAAA8C,CAAK,EAAKmgB,EACzBtV,EAAO,eACT6Q,GAAoB7Q,EAAO,cAAesV,EAAQ,MAAOrd,EAAQ,UAAS,CAAE,EAE9E5F,EAAQ,IAAIsJ,GAAKpD,GAAS6Z,EAAand,GAASgC,EAAI,MAAOmb,CAAW,CAAC,EAAGhgB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAI2N,EAAQ,KAAM/H,CAAO,EACpJ5F,EAAM,UAAUZ,EAAa,CAAC,EAC9B6jB,EAAQ,MAAQjjB,EAChBijB,EAAQ,MAAQngB,EAChBmgB,EAAQ,QAAO,EACfD,GAAwB5jB,EAAauO,EAAQsV,EAASC,CAAiB,CACzE,EAYMU,GAAa,CAACxkB,EAAauO,EAAQsV,EAAS5hB,EAAQiiB,IAAe,CACvE,IAAM1e,EAAMxF,EAAY,IAClB2gB,EAAcnb,EAAI,SACxBye,GAAyBJ,EAASK,CAAU,EAC5C,IAAMJ,EAAoBK,GAAiBnkB,EAAauO,EAAQsV,EAASK,CAAU,EAKnFO,EAAe,KACbZ,EAAQ,QAAU,OACjB5hB,EAAS,GAEN6hB,EAAkB,KAAO,IACxBD,EAAQ,MAAM,SAAWA,EAAQ,MAAM,QAAQ,cAAgB9G,MAGpE,CACA,GAAI,CAAC8G,EAAQ,MAAM,QACjB,OAAQA,EAAQ,MAAM,QAAQ,YAAW,CACvC,KAAK9G,GAAe,CAClB,GAAM,CAAE,IAAAzW,EAAK,MAAAD,CAAK,EAAmCwd,EAAQ,MAAM,QAC7Da,EAAOR,EAAW5d,CAAG,EAC3B,GAAIoe,IAAS,OAAW,CACtB,GAAIvB,GAAWuB,EAAMre,CAAK,EACxByd,EAAkB,OAAOxd,CAAG,MACvB,CACL,GAAIrE,IAAW,EAGb,MAAMwiB,EAERX,EAAkB,IAAIxd,EAAKD,CAAK,CAC9C,CACYwd,EAAQ,MAAM,OAAO7jB,CAAW,CAC5C,MACY6jB,EAAQ,kBAAkB,IAAIvd,EAAKD,CAAK,EAE1C,KACV,CACQ,QACMpE,EAAS4hB,EAAQ,MAAM,QACzBpR,GAAkBzS,EAAa8G,GAAS+c,EAAQ,MAAM,GAAG,OAAQA,EAAQ,MAAM,GAAG,MAAQ5hB,CAAM,CAAC,EAEnGA,GAAU4hB,EAAQ,MAAM,OACxB,KACV,CAEIA,EAAQ,QAAO,CACnB,CAIE,GAAI5hB,EAAS,EAAG,CACd,IAAI0iB,EAAW,GACf,KAAO1iB,EAAS,EAAGA,IACjB0iB,GAAY;EAEdd,EAAQ,MAAQ,IAAI3Z,GAAKpD,GAAS6Z,EAAand,GAASgC,EAAI,MAAOmb,CAAW,CAAC,EAAGkD,EAAQ,KAAMA,EAAQ,MAAQA,EAAQ,KAAK,OAAQA,EAAQ,MAAOA,EAAQ,OAASA,EAAQ,MAAM,GAAItV,EAAQ,KAAM,IAAI0O,GAAc0H,CAAQ,CAAC,EAChOd,EAAQ,MAAM,UAAU7jB,EAAa,CAAC,EACtC6jB,EAAQ,QAAO,CACnB,CACED,GAAwB5jB,EAAauO,EAAQsV,EAASC,CAAiB,CACzE,EAeMc,GAAuB,CAAC5kB,EAAa8f,EAAO1M,EAAMyR,EAAiBC,IAAmB,CAI1F,IAAI/E,EAAMD,EAIJiF,EAAiB7f,GAAM,EAC7B,KAAO6a,IAAQ,CAACA,EAAI,WAAaA,EAAI,UAAU,CAC7C,GAAI,CAACA,EAAI,SAAWA,EAAI,QAAQ,cAAgBhD,GAAe,CAC7D,IAAMiI,EAAmCjF,EAAI,QAC7CgF,EAAW,IAAIC,EAAG,IAAKA,CAAE,CAC/B,CACIjF,EAAMA,EAAI,KACd,CACE,IAAIkF,EAAW,EACXC,EAAc,GAClB,KAAOpF,IAAUC,GAAK,CAIpB,GAHI3M,IAAS0M,IACXoF,EAAc,IAEZ,CAACpF,EAAM,QAAS,CAClB,IAAMtZ,EAAUsZ,EAAM,QACtB,OAAQtZ,EAAQ,YAAW,CACzB,KAAKuW,GAAe,CAClB,GAAM,CAAE,IAAAzW,EAAK,MAAAD,CAAK,EAAmCG,EAC/C2e,EAAiBN,EAAgB,IAAIve,CAAG,GAAK,MAC/Cye,EAAW,IAAIze,CAAG,IAAME,GAAW2e,IAAmB9e,KAExDyZ,EAAM,OAAO9f,CAAW,EACxBilB,IACI,CAACC,IAAgBJ,EAAe,IAAIxe,CAAG,GAAK,QAAUD,GAAS8e,IAAmB9e,IAChF8e,IAAmB,KACrBL,EAAe,OAAOxe,CAAG,EAEzBwe,EAAe,IAAIxe,EAAK6e,CAAc,IAIxC,CAACD,GAAe,CAACpF,EAAM,SACzByD,GAAwBuB,EAA8Cte,CAAO,EAE/E,KACV,CACA,CACA,CACIsZ,EAA6BA,EAAM,KACvC,CACE,OAAOmF,CACT,EAMMG,GAAkC,CAACplB,EAAa6C,IAAS,CAE7D,KAAOA,GAAQA,EAAK,QAAUA,EAAK,MAAM,SAAW,CAACA,EAAK,MAAM,YAC9DA,EAAOA,EAAK,MAEd,IAAMwiB,EAAQ,IAAI,IAElB,KAAOxiB,IAASA,EAAK,SAAW,CAACA,EAAK,YAAY,CAChD,GAAI,CAACA,EAAK,SAAWA,EAAK,QAAQ,cAAgBka,GAAe,CAC/D,IAAMzW,EAAoCzD,EAAK,QAAS,IACpDwiB,EAAM,IAAI/e,CAAG,EACfzD,EAAK,OAAO7C,CAAW,EAEvBqlB,EAAM,IAAI/e,CAAG,CAErB,CACIzD,EAAOA,EAAK,IAChB,CACA,EAcayiB,GAAyBzf,GAAQ,CAC5C,IAAI6I,EAAM,EACV,OAAAnJ,GAA6BM,EAAK,IAAM7F,GAAe,CACrD,IAAI8f,EAA6Bja,EAAK,OAClCka,EAAMla,EAAK,OACXgf,EAAsB3f,GAAM,EAC1Boe,EAAwBiC,GAAKV,CAAe,EAClD,KAAO9E,GAAK,CACV,GAAIA,EAAI,UAAY,GAClB,OAAQA,EAAI,QAAQ,YAAW,CAC7B,KAAKhD,GACHwG,GAAwBD,EAAiDvD,EAAI,OAAO,EACpF,MACF,QACErR,GAAOkW,GAAqB5kB,EAAa8f,EAAOC,EAAK8E,EAAiBvB,CAAiB,EACvFuB,EAAsBU,GAAKjC,CAAiB,EAC5CxD,EAAQC,EACR,KACZ,CAEMA,EAAMA,EAAI,KAChB,CACA,CAAG,EACMrR,CACT,EAQagH,GAA+B1V,GAAe,CAIzD,IAAMwlB,EAAkB,IAAI,IAEtBhgB,EAAMxF,EAAY,IACxB,OAAW,CAAC8B,EAAQ2jB,CAAU,IAAKzlB,EAAY,WAAW,QAAO,EAAI,CACnE,IAAMJ,EAAQI,EAAY,YAAY,IAAI8B,CAAM,GAAK,EACjD2jB,IAAe7lB,GAGnBY,GAAeR,EAA4CwF,EAAI,MAAM,QAAQ,IAAI1D,CAAM,EAAIlC,EAAO6lB,EAAY5iB,GAAQ,CAElH,CAACA,EAAK,SAAgCA,EAAM,QAAQ,cAAgBka,IAAiBla,EAAK,cAAgBkH,IAE1Gyb,EAAgB,IAAwB3iB,EAAM,MAAM,CAE5D,CAAK,CACL,CAEE0C,GAASC,EAAMM,GAAM,CACnB/F,GAAsBC,EAAaA,EAAY,UAAW6C,GAAQ,CAChE,GAAIA,aAAgBkH,IAAM,CAAwBlH,EAAK,OAAQ,gBAAmB2iB,EAAgB,IAA0B3iB,EAAK,MAAM,EACrI,OAEF,IAAM0L,EAA+B1L,EAAK,OACtCA,EAAK,QAAQ,cAAgBka,GAC/ByI,EAAgB,IAAIjX,CAAM,EAK1B6W,GAAgCtf,EAAGjD,CAAI,CAE/C,CAAK,EAGD,QAAW6iB,KAASF,EAClBF,GAAuBI,CAAK,CAElC,CAAG,CACH,EAWMC,GAAa,CAAC3lB,EAAa6jB,EAAS5hB,IAAW,CACnD,IAAMof,EAAcpf,EACd2jB,EAAiBL,GAAK1B,EAAQ,iBAAiB,EAC/C/D,EAAQ+D,EAAQ,MACtB,KAAO5hB,EAAS,GAAK4hB,EAAQ,QAAU,MAAM,CAC3C,GAAIA,EAAQ,MAAM,UAAY,GAC5B,OAAQA,EAAQ,MAAM,QAAQ,YAAW,CACvC,KAAKzS,GACL,KAAK0L,GACL,KAAKG,GACChb,EAAS4hB,EAAQ,MAAM,QACzBpR,GAAkBzS,EAAa8G,GAAS+c,EAAQ,MAAM,GAAG,OAAQA,EAAQ,MAAM,GAAG,MAAQ5hB,CAAM,CAAC,EAEnGA,GAAU4hB,EAAQ,MAAM,OACxBA,EAAQ,MAAM,OAAO7jB,CAAW,EAChC,KACV,CAEI6jB,EAAQ,QAAO,CACnB,CACM/D,GACF8E,GAAqB5kB,EAAa8f,EAAO+D,EAAQ,MAAO+B,EAAY/B,EAAQ,iBAAiB,EAE/F,IAAMtV,GAAgEsV,EAAQ,MAAQA,EAAQ,OAAO,OACrG,OAAItV,EAAO,eACT6Q,GAAoB7Q,EAAO,cAAesV,EAAQ,MAAO,CAACxC,EAAcpf,CAAM,EAEzE4hB,CACT,EAiCagC,GAAN,cAAyBrI,EAAO,CAMrC,YAAasI,EAAO9lB,EAAaqV,EAAM,CACrC,MAAMyQ,EAAO9lB,CAAW,EAMxB,KAAK,iBAAmB,GAKxB,KAAK,YAAc,IAAI,IACvBqV,EAAK,QAAS0Q,GAAQ,CAChBA,IAAQ,KACV,KAAK,iBAAmB,GAExB,KAAK,YAAY,IAAIA,CAAG,CAEhC,CAAK,CACL,CAKE,IAAI,SAAW,CACb,GAAI,KAAK,WAAa,KAAM,CAI1B,IAAM/H,EAAU,CACd,KAAM,KAAK,KACX,MAAO,KAAK,MACZ,MAAO,IAAI,IACX,QAAS,IAAI,GACrB,EACM,KAAK,SAAWA,CACtB,CACI,OAA2B,KAAK,QACpC,CAUE,IAAI,OAAS,CACX,GAAI,KAAK,SAAW,KAAM,CACxB,IAAMyB,EAAwB,KAAK,OAAO,IAIpCtB,EAAQ,CAAA,EACd5Y,GAASka,EAAGzf,GAAe,CACzB,IAAMsjB,EAAoB,IAAI,IACxB0C,EAAgB,IAAI,IACtBnjB,EAAO,KAAK,OAAO,OAInB+a,EAAS,KAIPsG,EAAa,CAAA,EAIf+B,EAAS,GACTC,EAAS,EACTC,EAAY,EACVC,EAAQ,IAAM,CAClB,GAAIxI,IAAW,KAAM,CAInB,IAAIyI,EAAK,KACT,OAAQzI,EAAM,CACZ,IAAK,SACCuI,EAAY,IACdE,EAAK,CAAE,OAAQF,CAAS,GAE1BA,EAAY,EACZ,MACF,IAAK,UACC,OAAOF,GAAW,UAAYA,EAAO,OAAS,KAChDI,EAAK,CAAE,OAAAJ,CAAM,EACT3C,EAAkB,KAAO,IAC3B+C,EAAG,WAAa,CAAA,EAChB/C,EAAkB,QAAQ,CAACjd,EAAOC,IAAQ,CACpCD,IAAU,OACZggB,EAAG,WAAW/f,CAAG,EAAID,EAE7C,CAAqB,IAGL4f,EAAS,GACT,MACF,IAAK,SACCC,EAAS,IACXG,EAAK,CAAE,OAAAH,CAAM,EACDI,GAAQpC,CAAU,IAC5BmC,EAAG,WAAoBE,GAAO,CAAA,EAAIrC,CAAU,IAGhDgC,EAAS,EACT,KAChB,CACgBG,GAAIlI,EAAM,KAAKkI,CAAE,EACrBzI,EAAS,IACrB,CACA,EACQ,KAAO/a,IAAS,MAAM,CACpB,OAAQA,EAAK,QAAQ,YAAW,CAC9B,KAAKuO,GACL,KAAK0L,GACC,KAAK,KAAKja,CAAI,EACX,KAAK,QAAQA,CAAI,IACpBujB,EAAK,EACLxI,EAAS,SACTqI,EAASpjB,EAAK,QAAQ,WAAU,EAAG,CAAC,EACpCujB,EAAK,GAEE,KAAK,QAAQvjB,CAAI,GACtB+a,IAAW,WACbwI,EAAK,EACLxI,EAAS,UAEXuI,GAAa,GACHtjB,EAAK,UACX+a,IAAW,WACbwI,EAAK,EACLxI,EAAS,UAEXsI,GAAU,GAEZ,MACF,KAAKjJ,GACC,KAAK,KAAKpa,CAAI,EACX,KAAK,QAAQA,CAAI,IAChB+a,IAAW,WACbwI,EAAK,EACLxI,EAAS,UAEXqI,GAAwCpjB,EAAK,QAAS,KAE/C,KAAK,QAAQA,CAAI,GACtB+a,IAAW,WACbwI,EAAK,EACLxI,EAAS,UAEXuI,GAAatjB,EAAK,QACRA,EAAK,UACX+a,IAAW,WACbwI,EAAK,EACLxI,EAAS,UAEXsI,GAAUrjB,EAAK,QAEjB,MACF,KAAKka,GAAe,CAClB,GAAM,CAAE,IAAAzW,EAAK,MAAAD,CAAK,EAAmCxD,EAAK,QAC1D,GAAI,KAAK,KAAKA,CAAI,GAChB,GAAI,CAAC,KAAK,QAAQA,CAAI,EAAG,CACvB,IAAM2jB,EAASlD,EAAkB,IAAIhd,CAAG,GAAK,KACxC6c,GAAWqD,EAAQngB,CAAK,EASlBA,IAAU,MACnBxD,EAAK,OAAO7C,CAAW,GATnB4d,IAAW,UACbwI,EAAK,EAEHjD,GAAW9c,EAAQ2f,EAAc,IAAI1f,CAAG,GAAK,IAAI,EACnD,OAAO4d,EAAW5d,CAAG,EAErB4d,EAAW5d,CAAG,EAAID,EAKxC,UACyB,KAAK,QAAQxD,CAAI,EAAG,CAC7BmjB,EAAc,IAAI1f,EAAKD,CAAK,EAC5B,IAAMmgB,EAASlD,EAAkB,IAAIhd,CAAG,GAAK,KACxC6c,GAAWqD,EAAQngB,CAAK,IACvBuX,IAAW,UACbwI,EAAK,EAEPlC,EAAW5d,CAAG,EAAIkgB,EAEpC,SAAyB,CAAC3jB,EAAK,QAAS,CACxBmjB,EAAc,IAAI1f,EAAKD,CAAK,EAC5B,IAAMqe,EAAOR,EAAW5d,CAAG,EACvBoe,IAAS,SACNvB,GAAWuB,EAAMre,CAAK,EAShBqe,IAAS,MAClB7hB,EAAK,OAAO7C,CAAW,GATnB4d,IAAW,UACbwI,EAAK,EAEH/f,IAAU,KACZ,OAAO6d,EAAW5d,CAAG,EAErB4d,EAAW5d,CAAG,EAAID,GAMxC,CACmBxD,EAAK,UACJ+a,IAAW,UACbwI,EAAK,EAEP7C,GAAwBD,EAAiDzgB,EAAK,OAAO,GAEvF,KACd,CACA,CACUA,EAAOA,EAAK,KACtB,CAEQ,IADAujB,EAAK,EACEjI,EAAM,OAAS,GAAG,CACvB,IAAMxF,EAASwF,EAAMA,EAAM,OAAS,CAAC,EACrC,GAAIxF,EAAO,SAAW,QAAaA,EAAO,aAAe,OAEvDwF,EAAM,IAAG,MAET,MAEZ,CACA,CAAO,EACD,KAAK,OAASA,CACpB,CACI,OAA2B,KAAK,MACpC,CACA,EAWajY,GAAN,MAAMugB,UAAc7gB,EAAa,CAItC,YAAa8gB,EAAQ,CACnB,MAAK,EAKL,KAAK,SAAWA,IAAW,OAAY,CAAC,IAAM,KAAK,OAAO,EAAGA,CAAM,CAAC,EAAI,CAAA,EAIxE,KAAK,cAAgB,CAAA,EAKrB,KAAK,eAAiB,EAC1B,CAOE,IAAI,QAAU,CACZ,OAAO,KAAK,OAChB,CAME,WAAYjH,EAAG5c,EAAM,CACnB,MAAM,WAAW4c,EAAG5c,CAAI,EACxB,GAAI,CAC8B,KAAK,SAAU,QAAQ3C,GAAKA,EAAC,CAAE,CACrE,OAAaymB,EAAG,CACV,QAAQ,MAAMA,CAAC,CACrB,CACI,KAAK,SAAW,IACpB,CAEE,OAAS,CACP,OAAO,IAAIF,CACf,CAKE,OAAS,CACP,IAAMnC,EAAO,IAAImC,EACjB,OAAAnC,EAAK,WAAW,KAAK,QAAO,CAAE,EACvBA,CACX,CAQE,cAAetkB,EAAauiB,EAAY,CACtC,MAAM,cAAcviB,EAAauiB,CAAU,EAC3C,IAAMpT,EAAQ,IAAI0W,GAAW,KAAM7lB,EAAauiB,CAAU,EAC1DhD,GAAkB,KAAMvf,EAAamP,CAAK,EAEtC,CAACnP,EAAY,OAAS,KAAK,iBAC7BA,EAAY,uBAAyB,GAE3C,CAOE,UAAY,CACV,IAAI4mB,EAAM,GAIN,EAAI,KAAK,OACb,KAAO,IAAM,MACP,CAAC,EAAE,SAAW,EAAE,WAAa,EAAE,QAAQ,cAAgB3J,KACzD2J,GAAqC,EAAE,QAAS,KAElD,EAAI,EAAE,MAER,OAAOA,CACX,CAQE,QAAU,CACR,OAAO,KAAK,SAAQ,CACxB,CAYE,WAAYzI,EAAO,CAAE,SAAA0I,EAAW,EAAI,EAAK,CAAA,EAAI,CACvC,KAAK,MAAQ,KACfthB,GAAS,KAAK,IAAKvF,GAAe,CAChC,IAAM6jB,EAAU,IAAIR,GAAqB,KAAM,KAAK,OAAQ,EAAG,IAAI,GAAK,EACxE,QAAS/iB,EAAI,EAAGA,EAAI6d,EAAM,OAAQ7d,IAAK,CACrC,IAAM+lB,EAAKlI,EAAM7d,CAAC,EAClB,GAAI+lB,EAAG,SAAW,OAAW,CAM3B,IAAMS,EAAO,CAACD,GAAY,OAAOR,EAAG,QAAW,UAAY/lB,IAAM6d,EAAM,OAAS,GAAK0F,EAAQ,QAAU,MAAQwC,EAAG,OAAO,MAAM,EAAE,IAAM;EAAQA,EAAG,OAAO,MAAM,EAAG,EAAE,EAAIA,EAAG,QACvK,OAAOS,GAAQ,UAAYA,EAAI,OAAS,IAC1CzC,GAAWrkB,EAAa,KAAM6jB,EAASiD,EAAKT,EAAG,YAAc,CAAA,CAAE,CAE7E,MAAqBA,EAAG,SAAW,OACvB7B,GAAWxkB,EAAa,KAAM6jB,EAASwC,EAAG,OAAQA,EAAG,YAAc,CAAA,CAAE,EAC5DA,EAAG,SAAW,QACvBV,GAAW3lB,EAAa6jB,EAASwC,EAAG,MAAM,CAEtD,CACA,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,WAAWlI,CAAK,CAAC,CAEtF,CAYE,QAASlM,EAAU8U,EAAcC,EAAgB,CAI/C,IAAMC,EAAM,CAAA,EACN3D,EAAoB,IAAI,IACxB9d,EAA0B,KAAK,IACjCohB,EAAM,GACN5gB,EAAI,KAAK,OACb,SAASkhB,GAAW,CAClB,GAAIN,EAAI,OAAS,EAAG,CAKlB,IAAM1C,EAAa,CAAA,EACfiD,EAAgB,GACpB7D,EAAkB,QAAQ,CAACjd,EAAOC,IAAQ,CACxC6gB,EAAgB,GAChBjD,EAAW5d,CAAG,EAAID,CAC5B,CAAS,EAID,IAAMggB,EAAK,CAAE,OAAQO,CAAG,EACpBO,IACFd,EAAG,WAAanC,GAElB+C,EAAI,KAAKZ,CAAE,EACXO,EAAM,EACd,CACA,CACI,IAAMQ,EAAe,IAAM,CACzB,KAAOphB,IAAM,MAAM,CACjB,GAAIuM,GAAUvM,EAAGiM,CAAQ,GAAM8U,IAAiB,QAAaxU,GAAUvM,EAAG+gB,CAAY,EACpF,OAAQ/gB,EAAE,QAAQ,YAAW,CAC3B,KAAKiX,GAAe,CAClB,IAAMoK,EAAM/D,EAAkB,IAAI,SAAS,EACvCrR,IAAa,QAAa,CAACM,GAAUvM,EAAGiM,CAAQ,GAC9CoV,IAAQ,QAAaA,EAAI,OAASrhB,EAAE,GAAG,QAAUqhB,EAAI,OAAS,aAChEH,EAAO,EACP5D,EAAkB,IAAI,UAAW0D,EAAiBA,EAAe,UAAWhhB,EAAE,EAAE,EAAI,CAAE,KAAM,SAAS,CAAE,GAEhG+gB,IAAiB,QAAa,CAACxU,GAAUvM,EAAG+gB,CAAY,GAC7DM,IAAQ,QAAaA,EAAI,OAASrhB,EAAE,GAAG,QAAUqhB,EAAI,OAAS,WAChEH,EAAO,EACP5D,EAAkB,IAAI,UAAW0D,EAAiBA,EAAe,QAAShhB,EAAE,EAAE,EAAI,CAAE,KAAM,OAAO,CAAE,GAE5FqhB,IAAQ,SACjBH,EAAO,EACP5D,EAAkB,OAAO,SAAS,GAEpCsD,GAAqC5gB,EAAE,QAAS,IAChD,KACd,CACY,KAAKoL,GACL,KAAK0L,GAAc,CACjBoK,EAAO,EAIP,IAAMb,EAAK,CACT,OAAQrgB,EAAE,QAAQ,WAAU,EAAG,CAAC,CAChD,EACc,GAAIsd,EAAkB,KAAO,EAAG,CAC9B,IAAM+B,EAA2C,CAAA,EACjDgB,EAAG,WAAahB,EAChB/B,EAAkB,QAAQ,CAACjd,EAAOC,IAAQ,CACxC+e,EAAM/e,CAAG,EAAID,CAC/B,CAAiB,CACjB,CACc4gB,EAAI,KAAKZ,CAAE,EACX,KACd,CACY,KAAKtJ,GACCxK,GAAUvM,EAAGiM,CAAQ,IACvBiV,EAAO,EACP3D,GAAwBD,EAAiDtd,EAAE,OAAO,GAEpF,KACd,CAEQA,EAAIA,EAAE,KACd,CACMkhB,EAAO,CACb,EACI,OAAIjV,GAAY8U,EAGdxhB,GAASC,EAAKxF,GAAe,CACvBiS,GACFO,GAA6BxS,EAAaiS,CAAQ,EAEhD8U,GACFvU,GAA6BxS,EAAa+mB,CAAY,EAExDK,EAAY,CACpB,EAAS,SAAS,EAEZA,EAAY,EAEPH,CACX,CAYE,OAAQvjB,EAAO4gB,EAAMJ,EAAY,CAC/B,GAAII,EAAK,QAAU,EACjB,OAEF,IAAM7E,EAAI,KAAK,IACXA,IAAM,KACRla,GAASka,EAAGzf,GAAe,CACzB,IAAMsU,EAAMoP,GAAa1jB,EAAa,KAAM0D,EAAO,CAACwgB,CAAU,EACzDA,IACHA,EAAa,CAAA,EAEb5P,EAAI,kBAAkB,QAAQ,CAACuN,EAAGyF,IAAM,CAAEpD,EAAWoD,CAAC,EAAIzF,CAAC,CAAE,GAE/DwC,GAAWrkB,EAAa,KAAMsU,EAAKgQ,EAAMJ,CAAU,CAC3D,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,OAAOxgB,EAAO4gB,EAAMJ,CAAU,CAAC,CAEpG,CAYE,YAAaxgB,EAAOgF,EAAOwb,EAAY,CACrC,IAAMzE,EAAI,KAAK,IACXA,IAAM,KACRla,GAASka,EAAGzf,GAAe,CACzB,IAAMsU,EAAMoP,GAAa1jB,EAAa,KAAM0D,EAAO,CAACwgB,CAAU,EAC9DG,GAAWrkB,EAAa,KAAMsU,EAAK5L,EAAOwb,GAAc,CAAA,CAAE,CAClE,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,YAAYxgB,EAAOgF,EAAOwb,GAAc,CAAA,CAAE,CAAC,CAEhH,CAUE,OAAQxgB,EAAOzB,EAAQ,CACrB,GAAIA,IAAW,EACb,OAEF,IAAMwd,EAAI,KAAK,IACXA,IAAM,KACRla,GAASka,EAAGzf,GAAe,CACzB2lB,GAAW3lB,EAAa0jB,GAAa1jB,EAAa,KAAM0D,EAAO,EAAI,EAAGzB,CAAM,CACpF,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,OAAOyB,EAAOzB,CAAM,CAAC,CAE1F,CAYE,OAAQyB,EAAOzB,EAAQiiB,EAAY,CACjC,GAAIjiB,IAAW,EACb,OAEF,IAAMwd,EAAI,KAAK,IACXA,IAAM,KACRla,GAASka,EAAGzf,GAAe,CACzB,IAAMsU,EAAMoP,GAAa1jB,EAAa,KAAM0D,EAAO,EAAK,EACpD4Q,EAAI,QAAU,MAGlBkQ,GAAWxkB,EAAa,KAAMsU,EAAKrS,EAAQiiB,CAAU,CAC7D,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,OAAOxgB,EAAOzB,EAAQiiB,CAAU,CAAC,CAEtG,CAWE,gBAAiBqD,EAAe,CAC1B,KAAK,MAAQ,KACfhiB,GAAS,KAAK,IAAKvF,GAAe,CAChCshB,GAActhB,EAAa,KAAMunB,CAAa,CACtD,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,gBAAgBA,CAAa,CAAC,CAEnG,CAYE,aAAcA,EAAeC,EAAgB,CACvC,KAAK,MAAQ,KACfjiB,GAAS,KAAK,IAAKvF,GAAe,CAChCuhB,GAAWvhB,EAAa,KAAMunB,EAAeC,CAAc,CACnE,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,aAAaD,EAAeC,CAAc,CAAC,CAEhH,CAaE,aAAcD,EAAe,CAC3B,OAA2B/F,GAAW,KAAM+F,CAAa,CAC7D,CAWE,eAAiB,CACf,OAAO7F,GAAc,IAAI,CAC7B,CAKE,OAAQhf,EAAS,CACfA,EAAQ,aAAa+kB,EAAU,CACnC,CACA,EASaC,GAAYhF,GAAY,IAAIxc,GCltC5ByhB,GAAN,KAAqB,CAK1B,YAAaC,EAAM1nB,EAAI,IAAM,GAAM,CACjC,KAAK,QAAUA,EACf,KAAK,MAAQ0nB,EAIb,KAAK,aAAoCA,EAAK,OAC9C,KAAK,WAAa,EACtB,CAEE,CAAC,OAAO,QAAQ,GAAK,CACnB,OAAO,IACX,CASE,MAAQ,CAIN,IAAI5hB,EAAI,KAAK,aACTH,EAAOG,GAAKA,EAAE,SAA+BA,EAAE,QAAS,KAC5D,GAAIA,IAAM,OAAS,CAAC,KAAK,YAAcA,EAAE,SAAW,CAAC,KAAK,QAAQH,CAAI,GACpE,EAEE,IADAA,EAA2BG,EAAE,QAAS,KAClC,CAACA,EAAE,UAAYH,EAAK,cAAgB4W,IAAe5W,EAAK,cAAgBO,KAAiBP,EAAK,SAAW,KAE3GG,EAAIH,EAAK,WAGT,MAAOG,IAAM,MACX,GAAIA,EAAE,QAAU,KAAM,CACpBA,EAAIA,EAAE,MACN,KACd,MAAuBA,EAAE,SAAW,KAAK,MAC3BA,EAAI,KAEJA,EAAsCA,EAAE,OAAQ,YAI/CA,IAAM,OAASA,EAAE,SAAW,CAAC,KAAK,QAAoCA,EAAE,QAAS,IAAI,IAGhG,OADA,KAAK,WAAa,GACdA,IAAM,KAED,CAAE,MAAO,OAAW,KAAM,EAAI,GAEvC,KAAK,aAAeA,EACb,CAAE,MAA2BA,EAAE,QAAS,KAAM,KAAM,EAAK,EACpE,CACA,EAWaI,GAAN,MAAMyhB,UAAqBjiB,EAAa,CAC7C,aAAe,CACb,MAAK,EAIL,KAAK,eAAiB,CAAA,CAC1B,CAKE,IAAI,YAAc,CAChB,IAAMkiB,EAAQ,KAAK,OACnB,OAAOA,EAAQA,EAAM,QAAQ,WAAU,EAAG,CAAC,EAAI,IACnD,CAYE,WAAYrI,EAAG5c,EAAM,CACnB,MAAM,WAAW4c,EAAG5c,CAAI,EACxB,KAAK,OAAO,EAA8B,KAAK,cAAc,EAC7D,KAAK,eAAiB,IAC1B,CAEE,OAAS,CACP,OAAO,IAAIglB,CACf,CAKE,OAAS,CACP,IAAMvF,EAAK,IAAIuF,EAEf,OAAAvF,EAAG,OAAO,EAAG,KAAK,QAAO,EAAG,IAAIzf,GAAQA,aAAgB+C,GAAe/C,EAAK,MAAK,EAAKA,CAAI,CAAC,EACpFyf,CACX,CAEE,IAAI,QAAU,CACZ,OAAO,KAAK,iBAAmB,KAAO,KAAK,QAAU,KAAK,eAAe,MAC7E,CAmBE,iBAAkBjT,EAAQ,CACxB,OAAO,IAAIsY,GAAe,KAAMtY,CAAM,CAC1C,CAiBE,cAAe0Y,EAAO,CACpBA,EAAQA,EAAM,YAAW,EAGzB,IAAMvlB,EADW,IAAImlB,GAAe,KAAMK,GAAWA,EAAQ,UAAYA,EAAQ,SAAS,YAAW,IAAOD,CAAK,EAC3F,KAAI,EAC1B,OAAIvlB,EAAK,KACA,KAEAA,EAAK,KAElB,CAaE,iBAAkBulB,EAAO,CACvB,OAAAA,EAAQA,EAAM,YAAW,EAEZnlB,GAAK,IAAI+kB,GAAe,KAAMK,GAAWA,EAAQ,UAAYA,EAAQ,SAAS,YAAW,IAAOD,CAAK,CAAC,CACvH,CAQE,cAAe/nB,EAAauiB,EAAY,CACtChD,GAAkB,KAAMvf,EAAa,IAAIioB,GAAU,KAAM1F,EAAYviB,CAAW,CAAC,CACrF,CAOE,UAAY,CACV,OAAOogB,GAAY,KAAM8H,GAAOA,EAAI,SAAQ,CAAE,EAAE,KAAK,EAAE,CAC3D,CAKE,QAAU,CACR,OAAO,KAAK,SAAQ,CACxB,CAiBE,MAAOC,EAAY,SAAUC,EAAQ,CAAA,EAAIC,EAAS,CAChD,IAAMC,EAAWH,EAAU,uBAAsB,EACjD,OAAIE,IAAY,QACdA,EAAQ,mBAAmBC,EAAU,IAAI,EAE3CnI,GAAgB,KAAMoI,GAAW,CAC/BD,EAAS,aAAaC,EAAQ,MAAMJ,EAAWC,EAAOC,CAAO,EAAG,IAAI,CAC1E,CAAK,EACMC,CACX,CAYE,OAAQ5kB,EAAO8C,EAAS,CAClB,KAAK,MAAQ,KACfjB,GAAS,KAAK,IAAKvF,GAAe,CAChC+gB,GAAuB/gB,EAAa,KAAM0D,EAAO8C,CAAO,CAChE,CAAO,EAGD,KAAK,eAAe,OAAO9C,EAAO,EAAG,GAAG8C,CAAO,CAErD,CAYE,YAAagiB,EAAKhiB,EAAS,CACzB,GAAI,KAAK,MAAQ,KACfjB,GAAS,KAAK,IAAKvF,GAAe,CAChC,IAAMyoB,EAAWD,GAAOA,aAAe5iB,GAAgB4iB,EAAI,MAAQA,EACnE/H,GAA4BzgB,EAAa,KAAMyoB,EAASjiB,CAAO,CACvE,CAAO,MACI,CACL,IAAMkiB,EAAgC,KAAK,eACrChlB,EAAQ8kB,IAAQ,KAAO,EAAIE,EAAG,UAAUpG,GAAMA,IAAOkG,CAAG,EAAI,EAClE,GAAI9kB,IAAU,GAAK8kB,IAAQ,KACzB,MAAYtjB,GAAO,0BAA0B,EAE/CwjB,EAAG,OAAOhlB,EAAO,EAAG,GAAG8C,CAAO,CACpC,CACA,CAQE,OAAQ9C,EAAOzB,EAAS,EAAG,CACrB,KAAK,MAAQ,KACfsD,GAAS,KAAK,IAAKvF,GAAe,CAChCohB,GAAephB,EAAa,KAAM0D,EAAOzB,CAAM,CACvD,CAAO,EAGD,KAAK,eAAe,OAAOyB,EAAOzB,CAAM,CAE9C,CAOE,SAAW,CACT,OAAOge,GAAgB,IAAI,CAC/B,CAOE,KAAMzZ,EAAS,CACb,KAAK,OAAO,KAAK,OAAQA,CAAO,CACpC,CAOE,QAASA,EAAS,CAChB,KAAK,OAAO,EAAGA,CAAO,CAC1B,CAQE,IAAK9C,EAAO,CACV,OAAO8c,GAAY,KAAM9c,CAAK,CAClC,CASE,MAAOoc,EAAQ,EAAGC,EAAM,KAAK,OAAQ,CACnC,OAAOF,GAAc,KAAMC,EAAOC,CAAG,CACzC,CAOE,QAAS7f,EAAG,CACVigB,GAAgB,KAAMjgB,CAAC,CAC3B,CAUE,OAAQwC,EAAS,CACfA,EAAQ,aAAaimB,EAAiB,CAC1C,CACA,EASaC,GAAmBlG,GAAY,IAAItc,GCvZnCqW,GAAN,MAAMoM,UAAoBziB,EAAa,CAC5C,YAAa0iB,EAAW,YAAa,CACnC,MAAK,EACL,KAAK,SAAWA,EAIhB,KAAK,aAAe,IAAI,GAC5B,CAKE,IAAI,aAAe,CACjB,IAAM9iB,EAAI,KAAK,MAAQ,KAAK,MAAM,KAAO,KACzC,OAAOA,EAAqEA,EAAE,QAAS,KAAQ,IACnG,CAKE,IAAI,aAAe,CACjB,IAAMA,EAAI,KAAK,MAAQ,KAAK,MAAM,KAAO,KACzC,OAAOA,EAAqEA,EAAE,QAAS,KAAQ,IACnG,CAYE,WAAYyZ,EAAG5c,EAAM,CACnB,MAAM,WAAW4c,EAAG5c,CAAI,EACW,KAAK,aAAe,QAAQ,CAACwD,EAAOC,IAAQ,CAC7E,KAAK,aAAaA,EAAKD,CAAK,CAClC,CAAK,EACD,KAAK,aAAe,IACxB,CAOE,OAAS,CACP,OAAO,IAAIwiB,EAAY,KAAK,QAAQ,CACxC,CAKE,OAAS,CAIP,IAAMvG,EAAK,IAAIuG,EAAY,KAAK,QAAQ,EAClCxD,EAAQ,KAAK,cAAa,EAChC,OAAO0D,GAAQ1D,EAAO,CAAChf,EAAOC,IAAQ,CAChC,OAAOD,GAAU,UACnBic,EAAG,aAAahc,EAAKD,CAAK,CAElC,CAAK,EAEDic,EAAG,OAAO,EAAG,KAAK,QAAO,EAAG,IAAIzf,GAAQA,aAAgB+C,GAAe/C,EAAK,MAAK,EAAKA,CAAI,CAAC,EACpFyf,CACX,CAWE,UAAY,CACV,IAAM+C,EAAQ,KAAK,cAAa,EAC1B2D,EAAgB,CAAA,EAChBrL,EAAO,CAAA,EACb,QAAWrX,KAAO+e,EAChB1H,EAAK,KAAKrX,CAAG,EAEfqX,EAAK,KAAI,EACT,IAAMsL,EAAUtL,EAAK,OACrB,QAASrd,EAAI,EAAGA,EAAI2oB,EAAS3oB,IAAK,CAChC,IAAMgG,EAAMqX,EAAKrd,CAAC,EAClB0oB,EAAc,KAAK1iB,EAAM,KAAO+e,EAAM/e,CAAG,EAAI,GAAG,CACtD,CACI,IAAMwiB,EAAW,KAAK,SAAS,kBAAiB,EAC1CI,EAAcF,EAAc,OAAS,EAAI,IAAMA,EAAc,KAAK,GAAG,EAAI,GAC/E,MAAO,IAAIF,CAAQ,GAAGI,CAAW,IAAI,MAAM,SAAQ,CAAE,KAAKJ,CAAQ,GACtE,CASE,gBAAiBvB,EAAe,CAC1B,KAAK,MAAQ,KACfhiB,GAAS,KAAK,IAAKvF,GAAe,CAChCshB,GAActhB,EAAa,KAAMunB,CAAa,CACtD,CAAO,EAE+B,KAAK,aAAc,OAAOA,CAAa,CAE7E,CAYE,aAAcA,EAAeC,EAAgB,CACvC,KAAK,MAAQ,KACfjiB,GAAS,KAAK,IAAKvF,GAAe,CAChCuhB,GAAWvhB,EAAa,KAAMunB,EAAeC,CAAc,CACnE,CAAO,EAEgC,KAAK,aAAc,IAAID,EAAeC,CAAc,CAE3F,CAaE,aAAcD,EAAe,CAC3B,OAA2B/F,GAAW,KAAM+F,CAAa,CAC7D,CAUE,aAAcA,EAAe,CAC3B,OAA2B5F,GAAW,KAAM4F,CAAa,CAC7D,CAUE,cAAetV,EAAU,CACvB,OAA2BA,EAAW6P,GAAsB,KAAM7P,CAAQ,EAAIyP,GAAc,IAAI,CACpG,CAiBE,MAAOyG,EAAY,SAAUC,EAAQ,CAAA,EAAIC,EAAS,CAChD,IAAMc,EAAMhB,EAAU,cAAc,KAAK,QAAQ,EAC3C9C,EAAQ,KAAK,cAAa,EAChC,QAAW/e,KAAO+e,EAAO,CACvB,IAAMhf,EAAQgf,EAAM/e,CAAG,EACnB,OAAOD,GAAU,UACnB8iB,EAAI,aAAa7iB,EAAKD,CAAK,CAEnC,CACI,OAAA8Z,GAAgB,KAAMjE,GAAQ,CAC5BiN,EAAI,YAAYjN,EAAK,MAAMiM,EAAWC,EAAOC,CAAO,CAAC,CAC3D,CAAK,EACGA,IAAY,QACdA,EAAQ,mBAAmBc,EAAK,IAAI,EAE/BA,CACX,CAUE,OAAQzmB,EAAS,CACfA,EAAQ,aAAa0mB,EAAgB,EACrC1mB,EAAQ,SAAS,KAAK,QAAQ,CAClC,CACA,EAQa2mB,GAAkBtmB,GAAW,IAAI0Z,GAAY1Z,EAAQ,QAAO,CAAE,ECxP9DklB,GAAN,cAAwBzK,EAAO,CAQpC,YAAaC,EAAQpI,EAAMrV,EAAa,CACtC,MAAMyd,EAAQzd,CAAW,EAMzB,KAAK,iBAAmB,GAKxB,KAAK,kBAAoB,IAAI,IAC7BqV,EAAK,QAAS0Q,GAAQ,CAChBA,IAAQ,KACV,KAAK,iBAAmB,GAExB,KAAK,kBAAkB,IAAIA,CAAG,CAEtC,CAAK,CACL,CACA,EC3BarJ,GAAN,MAAM4M,UAAiBnjB,EAAK,CAIjC,YAAaojB,EAAU,CACrB,MAAK,EAIL,KAAK,SAAWA,CACpB,CAKE,OAAS,CACP,OAAO,IAAID,EAAS,KAAK,QAAQ,CACrC,CAKE,OAAS,CACP,IAAMhH,EAAK,IAAIgH,EAAS,KAAK,QAAQ,EACrC,YAAK,QAAQ,CAACjjB,EAAOC,IAAQ,CAC3Bgc,EAAG,IAAIhc,EAAKD,CAAK,CACvB,CAAK,EACMic,CACX,CAiBE,MAAO6F,EAAY,SAAUC,EAAQ,CAAA,EAAIC,EAAS,CAChD,IAAMmB,EAAOpB,EAAM,KAAK,QAAQ,EAC5Be,EACJ,OAAIK,IAAS,OACXL,EAAMK,EAAK,UAAU,IAAI,EAEzBL,EAAM,SAAS,cAAc,KAAK,QAAQ,EAE5CA,EAAI,aAAa,gBAAiB,KAAK,QAAQ,EAC3Cd,IAAY,QACdA,EAAQ,mBAAmBc,EAAK,IAAI,EAE/BA,CACX,CAUE,OAAQzmB,EAAS,CACfA,EAAQ,aAAa+mB,EAAa,EAClC/mB,EAAQ,SAAS,KAAK,QAAQ,CAClC,CACA,EASagnB,GAAe3mB,GAC1B,IAAI2Z,GAAS3Z,EAAQ,QAAO,CAAE,ECnFnB4mB,GAAN,MAAMC,UAAiB1jB,EAAM,CAIlC,IAAI,aAAe,CACjB,IAAMF,EAAI,KAAK,MAAQ,KAAK,MAAM,KAAO,KACzC,OAAOA,EAAqEA,EAAE,QAAS,KAAQ,IACnG,CAKE,IAAI,aAAe,CACjB,IAAMA,EAAI,KAAK,MAAQ,KAAK,MAAM,KAAO,KACzC,OAAOA,EAAqEA,EAAE,QAAS,KAAQ,IACnG,CAEE,OAAS,CACP,OAAO,IAAI4jB,CACf,CAKE,OAAS,CACP,IAAMtF,EAAO,IAAIsF,EACjB,OAAAtF,EAAK,WAAW,KAAK,QAAO,CAAE,EACvBA,CACX,CAiBE,MAAO6D,EAAY,SAAUC,EAAOC,EAAS,CAC3C,IAAMc,EAAMhB,EAAU,eAAe,KAAK,SAAQ,CAAE,EACpD,OAAIE,IAAY,QACdA,EAAQ,mBAAmBc,EAAK,IAAI,EAE/BA,CACX,CAEE,UAAY,CAEV,OAAO,KAAK,QAAO,EAAG,IAAIhL,GAAS,CACjC,IAAM0L,EAAc,CAAA,EACpB,QAAWf,KAAY3K,EAAM,WAAY,CACvC,IAAMkH,EAAQ,CAAA,EACd,QAAW/e,KAAO6X,EAAM,WAAW2K,CAAQ,EACzCzD,EAAM,KAAK,CAAE,IAAA/e,EAAK,MAAO6X,EAAM,WAAW2K,CAAQ,EAAExiB,CAAG,CAAC,CAAE,EAG5D+e,EAAM,KAAK,CAAChkB,EAAGC,IAAMD,EAAE,IAAMC,EAAE,IAAM,GAAK,CAAC,EAC3CuoB,EAAY,KAAK,CAAE,SAAAf,EAAU,MAAAzD,CAAK,CAAE,CAC5C,CAEMwE,EAAY,KAAK,CAACxoB,EAAGC,IAAMD,EAAE,SAAWC,EAAE,SAAW,GAAK,CAAC,EAE3D,IAAIslB,EAAM,GACV,QAAS,EAAI,EAAG,EAAIiD,EAAY,OAAQ,IAAK,CAC3C,IAAMC,EAAOD,EAAY,CAAC,EAC1BjD,GAAO,IAAIkD,EAAK,QAAQ,GACxB,QAASvoB,EAAI,EAAGA,EAAIuoB,EAAK,MAAM,OAAQvoB,IAAK,CAC1C,IAAMmjB,EAAOoF,EAAK,MAAMvoB,CAAC,EACzBqlB,GAAO,IAAIlC,EAAK,GAAG,KAAKA,EAAK,KAAK,GAC5C,CACQkC,GAAO,GACf,CACMA,GAAOzI,EAAM,OACb,QAAS,EAAI0L,EAAY,OAAS,EAAG,GAAK,EAAG,IAC3CjD,GAAO,KAAKiD,EAAY,CAAC,EAAE,QAAQ,IAErC,OAAOjD,CACb,CAAK,EAAE,KAAK,EAAE,CACd,CAKE,QAAU,CACR,OAAO,KAAK,SAAQ,CACxB,CAKE,OAAQlkB,EAAS,CACfA,EAAQ,aAAaqnB,EAAa,CACtC,CACA,EASaC,GAAejnB,GAAW,IAAI4mB,GCjH9BM,GAAN,KAAqB,CAK1B,YAAa/oB,EAAIe,EAAQ,CACvB,KAAK,GAAKf,EACV,KAAK,OAASe,CAClB,CAKE,IAAI,SAAW,CACb,MAAYyd,GAAmB,CACnC,CASE,UAAW9e,EAAO,CAChB,MAAO,EACX,CAOE,MAAO8B,EAASyI,EAAQ+e,EAAa,CACnC,MAAYxK,GAAmB,CACnC,CAME,UAAW1f,EAAamL,EAAQ,CAC9B,MAAYuU,GAAmB,CACnC,CACA,EC5CayK,GAAoB,EAKpBpgB,GAAN,cAAiBkgB,EAAe,CACrC,IAAI,SAAW,CACb,MAAO,EACX,CAEE,QAAU,CAAA,CAMV,UAAWrpB,EAAO,CAChB,OAAI,KAAK,cAAgBA,EAAM,YACtB,IAET,KAAK,QAAUA,EAAM,OACd,GACX,CAME,UAAWZ,EAAamL,EAAQ,CAC1BA,EAAS,IACX,KAAK,GAAG,OAASA,EACjB,KAAK,QAAUA,GAEjBqI,GAAUxT,EAAY,IAAI,MAAO,IAAI,CACzC,CAME,MAAO0C,EAASyI,EAAQ,CACtBzI,EAAQ,UAAUynB,EAAiB,EACnCznB,EAAQ,SAAS,KAAK,OAASyI,CAAM,CACzC,CAOE,WAAYnL,EAAaqD,EAAO,CAC9B,OAAO,IACX,CACA,ECrDauZ,GAAN,MAAMwN,CAAc,CAIzB,YAAa5jB,EAAS,CACpB,KAAK,QAAUA,CACnB,CAKE,WAAa,CACX,MAAO,EACX,CAKE,YAAc,CACZ,MAAO,CAAC,KAAK,OAAO,CACxB,CAKE,aAAe,CACb,MAAO,EACX,CAKE,MAAQ,CACN,OAAO,IAAI4jB,EAAc,KAAK,OAAO,CACzC,CAME,OAAQjf,EAAQ,CACd,MAAYuU,GAAmB,CACnC,CAME,UAAW9e,EAAO,CAChB,MAAO,EACX,CAME,UAAWZ,EAAa6C,EAAM,CAAA,CAI9B,OAAQ7C,EAAa,CAAA,CAIrB,GAAIqD,EAAO,CAAA,CAKX,MAAOX,EAASyI,EAAQ,CACtBzI,EAAQ,SAAS,KAAK,OAAO,CACjC,CAKE,QAAU,CACR,MAAO,EACX,CACA,EAMa2nB,GAAoBtnB,GAAW,IAAI6Z,GAAc7Z,EAAQ,QAAO,CAAE,ECtFlEyZ,GAAN,MAAM8N,CAAe,CAI1B,YAAazqB,EAAK,CAChB,KAAK,IAAMA,CACf,CAKE,WAAa,CACX,OAAO,KAAK,GAChB,CAKE,YAAc,CACZ,MAAO,CAAA,CACX,CAKE,aAAe,CACb,MAAO,EACX,CAKE,MAAQ,CACN,OAAO,IAAIyqB,EAAe,KAAK,GAAG,CACtC,CAME,OAAQnf,EAAQ,CACd,IAAMvK,EAAQ,IAAI0pB,EAAe,KAAK,IAAMnf,CAAM,EAClD,YAAK,IAAMA,EACJvK,CACX,CAME,UAAWA,EAAO,CAChB,YAAK,KAAOA,EAAM,IACX,EACX,CAME,UAAWZ,EAAa6C,EAAM,CAC5Bb,GAAehC,EAAY,UAAW6C,EAAK,GAAG,OAAQA,EAAK,GAAG,MAAO,KAAK,GAAG,EAC7EA,EAAK,YAAW,CACpB,CAKE,OAAQ7C,EAAa,CAAA,CAIrB,GAAIqD,EAAO,CAAA,CAKX,MAAOX,EAASyI,EAAQ,CACtBzI,EAAQ,SAAS,KAAK,IAAMyI,CAAM,CACtC,CAKE,QAAU,CACR,MAAO,EACX,CACA,EAQaof,GAAqBxnB,GAAW,IAAIyZ,GAAezZ,EAAQ,QAAO,CAAE,ECzF3EynB,GAAoB,CAAC/lB,EAAM2Y,IAAS,IAAI7Y,GAAIkC,EAAAC,EAAA,CAAE,KAAAjC,GAAS2Y,GAAX,CAAiB,WAAYA,EAAK,YAAcA,EAAK,UAAY,EAAK,EAAE,EAK7GP,GAAN,MAAM4N,CAAW,CAItB,YAAajlB,EAAK,CACZA,EAAI,OACN,QAAQ,MAAM,yHAAyH,EAKzI,KAAK,IAAMA,EAIX,IAAM4X,EAAO,CAAA,EACb,KAAK,KAAOA,EACP5X,EAAI,KACP4X,EAAK,GAAK,IAER5X,EAAI,WACN4X,EAAK,SAAW,IAEd5X,EAAI,OAAS,OACf4X,EAAK,KAAO5X,EAAI,KAEtB,CAKE,WAAa,CACX,MAAO,EACX,CAKE,YAAc,CACZ,MAAO,CAAC,KAAK,GAAG,CACpB,CAKE,aAAe,CACb,MAAO,EACX,CAKE,MAAQ,CACN,OAAO,IAAIilB,EAAWD,GAAkB,KAAK,IAAI,KAAM,KAAK,IAAI,CAAC,CACrE,CAME,OAAQrf,EAAQ,CACd,MAAYuU,GAAmB,CACnC,CAME,UAAW9e,EAAO,CAChB,MAAO,EACX,CAME,UAAWZ,EAAa6C,EAAM,CAE5B,KAAK,IAAI,MAAQA,EACjB7C,EAAY,aAAa,IAAI,KAAK,GAAG,EACjC,KAAK,IAAI,YACXA,EAAY,cAAc,IAAI,KAAK,GAAG,CAE5C,CAKE,OAAQA,EAAa,CACfA,EAAY,aAAa,IAAI,KAAK,GAAG,EACvCA,EAAY,aAAa,OAAO,KAAK,GAAG,EAExCA,EAAY,eAAe,IAAI,KAAK,GAAG,CAE7C,CAKE,GAAIqD,EAAO,CAAA,CAMX,MAAOX,EAASyI,EAAQ,CACtBzI,EAAQ,YAAY,KAAK,IAAI,IAAI,EACjCA,EAAQ,SAAS,KAAK,IAAI,CAC9B,CAKE,QAAU,CACR,MAAO,EACX,CACA,EAQagoB,GAAiB3nB,GAAW,IAAI8Z,GAAW2N,GAAkBznB,EAAQ,WAAU,EAAIA,EAAQ,QAAO,CAAE,CAAC,EClIrG+Z,GAAN,MAAM6N,CAAa,CAIxB,YAAajiB,EAAO,CAClB,KAAK,MAAQA,CACjB,CAKE,WAAa,CACX,MAAO,EACX,CAKE,YAAc,CACZ,MAAO,CAAC,KAAK,KAAK,CACtB,CAKE,aAAe,CACb,MAAO,EACX,CAKE,MAAQ,CACN,OAAO,IAAIiiB,EAAa,KAAK,KAAK,CACtC,CAME,OAAQxf,EAAQ,CACd,MAAYuU,GAAmB,CACnC,CAME,UAAW9e,EAAO,CAChB,MAAO,EACX,CAME,UAAWZ,EAAa6C,EAAM,CAAA,CAI9B,OAAQ7C,EAAa,CAAA,CAIrB,GAAIqD,EAAO,CAAA,CAKX,MAAOX,EAASyI,EAAQ,CACtBzI,EAAQ,UAAU,KAAK,KAAK,CAChC,CAKE,QAAU,CACR,MAAO,EACX,CACA,EAQakoB,GAAmB7nB,GAAW,IAAI+Z,GAAa/Z,EAAQ,SAAQ,CAAE,ECvFjEga,GAAN,MAAM8N,CAAc,CAKzB,YAAavkB,EAAKD,EAAO,CACvB,KAAK,IAAMC,EACX,KAAK,MAAQD,CACjB,CAKE,WAAa,CACX,MAAO,EACX,CAKE,YAAc,CACZ,MAAO,CAAA,CACX,CAKE,aAAe,CACb,MAAO,EACX,CAKE,MAAQ,CACN,OAAO,IAAIwkB,EAAc,KAAK,IAAK,KAAK,KAAK,CACjD,CAME,OAAQC,EAAS,CACf,MAAYpL,GAAmB,CACnC,CAME,UAAWqL,EAAQ,CACjB,MAAO,EACX,CAME,UAAWC,EAAcnoB,EAAM,CAE7B,IAAM4b,EAA0B5b,EAAK,OACrC4b,EAAE,cAAgB,KAClBA,EAAE,eAAiB,EACvB,CAKE,OAAQze,EAAa,CAAA,CAIrB,GAAIqD,EAAO,CAAA,CAKX,MAAOX,EAASyI,EAAQ,CACtBzI,EAAQ,SAAS,KAAK,GAAG,EACzBA,EAAQ,UAAU,KAAK,KAAK,CAChC,CAKE,QAAU,CACR,MAAO,EACX,CACA,EAMauoB,GAAoBloB,GAAW,IAAIga,GAAcha,EAAQ,QAAO,EAAIA,EAAQ,SAAQ,CAAE,EChGtFia,GAAN,MAAMkO,CAAY,CAIvB,YAAa5L,EAAK,CAIhB,KAAK,IAAMA,CACf,CAKE,WAAa,CACX,OAAO,KAAK,IAAI,MACpB,CAKE,YAAc,CACZ,OAAO,KAAK,GAChB,CAKE,aAAe,CACb,MAAO,EACX,CAKE,MAAQ,CACN,OAAO,IAAI4L,EAAY,KAAK,GAAG,CACnC,CAME,OAAQ/f,EAAQ,CACd,IAAMvK,EAAQ,IAAIsqB,EAAY,KAAK,IAAI,MAAM/f,CAAM,CAAC,EACpD,YAAK,IAAM,KAAK,IAAI,MAAM,EAAGA,CAAM,EAC5BvK,CACX,CAME,UAAWA,EAAO,CAChB,YAAK,IAAM,KAAK,IAAI,OAAOA,EAAM,GAAG,EAC7B,EACX,CAME,UAAWZ,EAAa6C,EAAM,CAAA,CAI9B,OAAQ7C,EAAa,CAAA,CAIrB,GAAIqD,EAAO,CAAA,CAKX,MAAOX,EAASyI,EAAQ,CACtB,IAAMtL,EAAM,KAAK,IAAI,OACrB6C,EAAQ,SAAS7C,EAAMsL,CAAM,EAC7B,QAAS,EAAIA,EAAQ,EAAItL,EAAK,IAAK,CACjC,IAAMqL,EAAI,KAAK,IAAI,CAAC,EACpBxI,EAAQ,YAAYwI,IAAM,OAAY,YAAc,KAAK,UAAUA,CAAC,CAAC,CAC3E,CACA,CAKE,QAAU,CACR,MAAO,EACX,CACA,EAQaigB,GAAkBpoB,GAAW,CACxC,IAAMlD,EAAMkD,EAAQ,QAAO,EACrBid,EAAK,CAAA,EACX,QAAS1f,EAAI,EAAGA,EAAIT,EAAKS,IAAK,CAC5B,IAAM4K,EAAInI,EAAQ,WAAU,EACxBmI,IAAM,YACR8U,EAAG,KAAK,MAAS,EAEjBA,EAAG,KAAK,KAAK,MAAM9U,CAAC,CAAC,CAE3B,CACE,OAAO,IAAI8R,GAAYgD,CAAE,CAC3B,ECjHarD,GAAN,MAAMyO,CAAW,CAItB,YAAa9L,EAAK,CAIhB,KAAK,IAAMA,CACf,CAKE,WAAa,CACX,OAAO,KAAK,IAAI,MACpB,CAKE,YAAc,CACZ,OAAO,KAAK,GAChB,CAKE,aAAe,CACb,MAAO,EACX,CAKE,MAAQ,CACN,OAAO,IAAI8L,EAAW,KAAK,GAAG,CAClC,CAME,OAAQjgB,EAAQ,CACd,IAAMvK,EAAQ,IAAIwqB,EAAW,KAAK,IAAI,MAAMjgB,CAAM,CAAC,EACnD,YAAK,IAAM,KAAK,IAAI,MAAM,EAAGA,CAAM,EAC5BvK,CACX,CAME,UAAWA,EAAO,CAChB,YAAK,IAAM,KAAK,IAAI,OAAOA,EAAM,GAAG,EAC7B,EACX,CAME,UAAWZ,EAAa6C,EAAM,CAAA,CAI9B,OAAQ7C,EAAa,CAAA,CAIrB,GAAIqD,EAAO,CAAA,CAKX,MAAOX,EAASyI,EAAQ,CACtB,IAAMtL,EAAM,KAAK,IAAI,OACrB6C,EAAQ,SAAS7C,EAAMsL,CAAM,EAC7B,QAAS,EAAIA,EAAQ,EAAItL,EAAK,IAAK,CACjC,IAAMqL,EAAI,KAAK,IAAI,CAAC,EACpBxI,EAAQ,SAASwI,CAAC,CACxB,CACA,CAKE,QAAU,CACR,MAAO,EACX,CACA,EAMamgB,GAAiBtoB,GAAW,CACvC,IAAMlD,EAAMkD,EAAQ,QAAO,EACrBid,EAAK,CAAA,EACX,QAAS1f,EAAI,EAAGA,EAAIT,EAAKS,IACvB0f,EAAG,KAAKjd,EAAQ,QAAO,CAAE,EAE3B,OAAO,IAAI4Z,GAAWqD,CAAE,CAC1B,ECpGa/C,GAAN,MAAMqO,CAAc,CAIzB,YAAa1E,EAAK,CAIhB,KAAK,IAAMA,CACf,CAKE,WAAa,CACX,OAAO,KAAK,IAAI,MACpB,CAKE,YAAc,CACZ,OAAO,KAAK,IAAI,MAAM,EAAE,CAC5B,CAKE,aAAe,CACb,MAAO,EACX,CAKE,MAAQ,CACN,OAAO,IAAI0E,EAAc,KAAK,GAAG,CACrC,CAME,OAAQngB,EAAQ,CACd,IAAMvK,EAAQ,IAAI0qB,EAAc,KAAK,IAAI,MAAMngB,CAAM,CAAC,EACtD,KAAK,IAAM,KAAK,IAAI,MAAM,EAAGA,CAAM,EAGnC,IAAMogB,EAAgB,KAAK,IAAI,WAAWpgB,EAAS,CAAC,EACpD,OAAIogB,GAAiB,OAAUA,GAAiB,QAI9C,KAAK,IAAM,KAAK,IAAI,MAAM,EAAGpgB,EAAS,CAAC,EAAI,SAE3CvK,EAAM,IAAM,SAAMA,EAAM,IAAI,MAAM,CAAC,GAE9BA,CACX,CAME,UAAWA,EAAO,CAChB,YAAK,KAAOA,EAAM,IACX,EACX,CAME,UAAWZ,EAAa6C,EAAM,CAAA,CAI9B,OAAQ7C,EAAa,CAAA,CAIrB,GAAIqD,EAAO,CAAA,CAKX,MAAOX,EAASyI,EAAQ,CACtBzI,EAAQ,YAAYyI,IAAW,EAAI,KAAK,IAAM,KAAK,IAAI,MAAMA,CAAM,CAAC,CACxE,CAKE,QAAU,CACR,MAAO,EACX,CACA,EAQaqgB,GAAoBzoB,GAAW,IAAIka,GAAcla,EAAQ,WAAU,CAAE,EC9FrE0oB,GAAW,CACtBhJ,GACAS,GACAwE,GACA2B,GACAT,GACAc,GACAM,EACF,EAEaxH,GAAc,EACdS,GAAY,EACZwE,GAAa,EACb2B,GAAmB,EACnBT,GAAoB,EACpBc,GAAgB,EAChBM,GAAgB,EAKhB3Y,GAAN,MAAMsa,CAAY,CAIvB,YAAa7lB,EAAM,CAIjB,KAAK,KAAOA,CAChB,CAKE,WAAa,CACX,MAAO,EACX,CAKE,YAAc,CACZ,MAAO,CAAC,KAAK,IAAI,CACrB,CAKE,aAAe,CACb,MAAO,EACX,CAKE,MAAQ,CACN,OAAO,IAAI6lB,EAAY,KAAK,KAAK,MAAK,CAAE,CAC5C,CAME,OAAQvgB,EAAQ,CACd,MAAYuU,GAAmB,CACnC,CAME,UAAW9e,EAAO,CAChB,MAAO,EACX,CAME,UAAWZ,EAAa6C,EAAM,CAC5B,KAAK,KAAK,WAAW7C,EAAY,IAAK6C,CAAI,CAC9C,CAKE,OAAQ7C,EAAa,CACnB,IAAI6C,EAAO,KAAK,KAAK,OACrB,KAAOA,IAAS,MACTA,EAAK,QAECA,EAAK,GAAG,OAAS7C,EAAY,YAAY,IAAI6C,EAAK,GAAG,MAAM,GAAK,IAKzE7C,EAAY,cAAc,KAAK6C,CAAI,EANnCA,EAAK,OAAO7C,CAAW,EAQzB6C,EAAOA,EAAK,MAEd,KAAK,KAAK,KAAK,QAAQA,GAAQ,CACxBA,EAAK,QAECA,EAAK,GAAG,OAAS7C,EAAY,YAAY,IAAI6C,EAAK,GAAG,MAAM,GAAK,IAEzE7C,EAAY,cAAc,KAAK6C,CAAI,EAHnCA,EAAK,OAAO7C,CAAW,CAK/B,CAAK,EACDA,EAAY,QAAQ,OAAO,KAAK,IAAI,CACxC,CAKE,GAAIqD,EAAO,CACT,IAAIR,EAAO,KAAK,KAAK,OACrB,KAAOA,IAAS,MACdA,EAAK,GAAGQ,EAAO,EAAI,EACnBR,EAAOA,EAAK,MAEd,KAAK,KAAK,OAAS,KACnB,KAAK,KAAK,KAAK,QAA0CA,GAAS,CAChE,KAAOA,IAAS,MACdA,EAAK,GAAGQ,EAAO,EAAI,EACnBR,EAAOA,EAAK,IAEpB,CAAK,EACD,KAAK,KAAK,KAAO,IAAI,GACzB,CAME,MAAOH,EAASyI,EAAQ,CACtB,KAAK,KAAK,OAAOzI,CAAO,CAC5B,CAKE,QAAU,CACR,MAAO,EACX,CACA,EAQaipB,GAAkB5oB,GAAW,IAAIqO,GAAYqa,GAAS1oB,EAAQ,YAAW,CAAE,EAAEA,CAAO,CAAC,ECpIrFoO,GAAe,CAAC9N,EAAOnC,IAAO,CAIzC,IAAI0qB,EAAS1qB,EACTmG,EAAO,EACPxE,EACJ,GACMwE,EAAO,IACTukB,EAAS9kB,GAAS8kB,EAAO,OAAQA,EAAO,MAAQvkB,CAAI,GAEtDxE,EAAO6Q,GAAQrQ,EAAOuoB,CAAM,EAC5BvkB,EAAOukB,EAAO,MAAQ/oB,EAAK,GAAG,MAC9B+oB,EAAS/oB,EAAK,aACP+oB,IAAW,MAAQ/oB,aAAgBqH,IAC5C,MAAO,CACL,KAAArH,EAAM,KAAAwE,CACV,CACA,EAWa2P,GAAW,CAACnU,EAAMgpB,IAAS,CACtC,KAAOhpB,IAAS,MAAQA,EAAK,OAASgpB,GACpChpB,EAAK,KAAOgpB,EACZhpB,EAAyCA,EAAK,OAAQ,KAE1D,EAYae,GAAY,CAAC5D,EAAasa,EAAUjT,IAAS,CAExD,GAAM,CAAE,OAAAvF,EAAQ,MAAAlC,CAAK,EAAK0a,EAAS,GAC7BwR,EAAY,IAAI5hB,GACpBpD,GAAShF,EAAQlC,EAAQyH,CAAI,EAC7BiT,EACAxT,GAAShF,EAAQlC,EAAQyH,EAAO,CAAC,EACjCiT,EAAS,MACTA,EAAS,YACTA,EAAS,OACTA,EAAS,UACTA,EAAS,QAAQ,OAAOjT,CAAI,CAChC,EACE,OAAIiT,EAAS,SACXwR,EAAU,YAAW,EAEnBxR,EAAS,OACXwR,EAAU,KAAO,IAEfxR,EAAS,SAAW,OACtBwR,EAAU,OAAShlB,GAASwT,EAAS,OAAO,OAAQA,EAAS,OAAO,MAAQjT,CAAI,GAGlFiT,EAAS,MAAQwR,EAEbA,EAAU,QAAU,OACtBA,EAAU,MAAM,KAAOA,GAGzB9rB,EAAY,cAAc,KAAK8rB,CAAS,EAEpCA,EAAU,YAAc,MAAQA,EAAU,QAAU,MACpBA,EAAU,OAAQ,KAAK,IAAIA,EAAU,UAAWA,CAAS,EAE7FxR,EAAS,OAASjT,EACXykB,CACT,EAMMC,GAAuB,CAACzhB,EAAOpJ,IAAa8qB,GAAK1hB,EAAmCnC,GAAKlH,GAAUkH,EAAE,UAAWjH,CAAE,CAAC,EAgB5GuW,GAAW,CAACzX,EAAa6C,EAAMopB,EAAW1U,EAAeW,EAAwBpB,IAAO,CACnG,IAAMtR,EAAMxF,EAAY,IAClBqD,EAAQmC,EAAI,MACZ0mB,EAAc1mB,EAAI,SAClB2mB,EAAStpB,EAAK,OACpB,GAAIspB,IAAW,KACb,OAAO1Z,GAAkBzS,EAAamsB,CAAM,EAE9C,IAAIC,EAA+CvpB,EAAK,OAAQ,MAI5DlC,EAAO,KAIPC,EAEJ,GAAIwrB,IAAe,MAAQA,EAAW,UAAY,GAAM,CAEtD,GAAIA,EAAW,SAAW,OAAS,CAACH,EAAU,IAAIG,CAAU,GAAK3U,GAASzX,EAAaosB,EAAYH,EAAW1U,EAAeW,EAAwBpB,CAAE,IAAM,MAC3J,OAAO,KAET,KAAOsV,EAAW,SAAW,MAC3BA,EAAa3Z,GAAkBzS,EAAaosB,EAAW,MAAM,CAEnE,CACE,IAAMC,EAAaD,IAAe,KAAyCvpB,EAAK,OAAsCupB,EAAW,QAAS,KAE1I,GAAIvpB,EAAK,YAAc,KAAM,CAK3B,IAHAlC,EAAOkC,EAAK,KACZjC,EAAQiC,EAEDlC,IAAS,MAAM,CAIpB,IAAI2rB,EAAY3rB,EAEhB,KAAO2rB,IAAc,MAA0CA,EAAU,OAAQ,QAAUF,GACzFE,EAAYA,EAAU,SAAW,KAAO,KAAO7Z,GAAkBzS,EAAassB,EAAU,MAAM,EAEhG,GAAIA,IAAc,MAA0CA,EAAU,OAAQ,QAAUF,EAAY,CAClGzrB,EAAO2rB,EACP,KACR,CACM3rB,EAAOA,EAAK,IAClB,CACI,KAAOC,IAAU,MAAM,CAIrB,IAAI2rB,EAAa3rB,EAEjB,KAAO2rB,IAAe,MAA0CA,EAAW,OAAQ,QAAUH,GAC3FG,EAAaA,EAAW,SAAW,KAAO,KAAO9Z,GAAkBzS,EAAausB,EAAW,MAAM,EAEnG,GAAIA,IAAe,MAA0CA,EAAW,OAAQ,QAAUH,EAAY,CACpGxrB,EAAQ2rB,EACR,KACR,CACM3rB,EAAQA,EAAM,KACpB,CACA,SACIA,EAAQ,KACJiC,EAAK,OAAS,CAACqV,EAAwB,CAIzC,IAHAvX,EAAOkC,EAGAlC,IAAS,MAAQA,EAAK,QAAU,OAASA,EAAK,MAAM,QAAUM,GAAUsW,EAAe5W,EAAK,MAAM,EAAE,GAAKorB,GAAqBjV,EAAG,UAAWnW,EAAK,MAAM,EAAE,GAAKorB,GAAqBjV,EAAG,UAAWnW,EAAK,MAAM,EAAE,IAGnN,IAFAA,EAAOA,EAAK,MAELA,EAAK,QAAQA,EAAO8R,GAAkBzS,EAAaW,EAAK,MAAM,EAEvE,GAAIA,GAAQA,EAAK,QAAU,KAGzB,OAAO,IAEf,MACMA,EAAO0rB,EAAW,KAAK,IAAIxpB,EAAK,SAAS,GAAK,KAGlD,IAAM2pB,EAAYhpB,GAASH,EAAO6oB,CAAW,EACvCO,EAAS3lB,GAASolB,EAAaM,CAAS,EACxCE,EAAa,IAAIxiB,GACrBuiB,EACA9rB,EAAMA,GAAQA,EAAK,OACnBC,EAAOA,GAASA,EAAM,GACtByrB,EACAxpB,EAAK,UACLA,EAAK,QAAQ,KAAI,CACrB,EACE,OAAAA,EAAK,OAAS4pB,EACdzV,GAAS0V,EAAY,EAAI,EACzBA,EAAW,UAAU1sB,EAAa,CAAC,EAC5B0sB,CACT,EAKaxiB,GAAN,MAAMyiB,UAAa1C,EAAe,CAWvC,YAAa/oB,EAAIP,EAAM8E,EAAQ7E,EAAOgsB,EAAare,EAAQ6F,EAAW5N,EAAS,CAC7E,MAAMtF,EAAIsF,EAAQ,UAAS,CAAE,EAK7B,KAAK,OAASf,EAKd,KAAK,KAAO9E,EAKZ,KAAK,MAAQC,EAKb,KAAK,YAAcgsB,EAInB,KAAK,OAASre,EAQd,KAAK,UAAY6F,EAMjB,KAAK,OAAS,KAId,KAAK,QAAU5N,EAQf,KAAK,KAAO,KAAK,QAAQ,YAAW,EAAY,EAAO,CAC3D,CAOE,IAAI,OAAQqmB,EAAU,EACd,KAAK,KAAc,GAAQ,IAAOA,IACtC,KAAK,MAAe,EAE1B,CAEE,IAAI,QAAU,CACZ,OAAQ,KAAK,KAAc,GAAQ,CACvC,CAKE,IAAI,MAAQ,CACV,OAAQ,KAAK,KAAc,GAAQ,CACvC,CAEE,IAAI,KAAMC,EAAQ,CACZ,KAAK,OAASA,IAChB,KAAK,MAAe,EAE1B,CAEE,IAAI,WAAa,CACf,OAAQ,KAAK,KAAc,GAAQ,CACvC,CAME,IAAI,SAAW,CACb,OAAQ,KAAK,KAAc,GAAQ,CACvC,CAEE,IAAI,QAASC,EAAU,CACjB,KAAK,UAAYA,IACnB,KAAK,MAAe,EAE1B,CAEE,aAAe,CACb,KAAK,MAAe,CACxB,CASE,WAAY/sB,EAAaqD,EAAO,CAC9B,GAAI,KAAK,QAAU,KAAK,OAAO,SAAW,KAAK,GAAG,QAAU,KAAK,OAAO,OAASG,GAASH,EAAO,KAAK,OAAO,MAAM,EACjH,OAAO,KAAK,OAAO,OAErB,GAAI,KAAK,aAAe,KAAK,YAAY,SAAW,KAAK,GAAG,QAAU,KAAK,YAAY,OAASG,GAASH,EAAO,KAAK,YAAY,MAAM,EACrI,OAAO,KAAK,YAAY,OAE1B,GAAI,KAAK,QAAU,KAAK,OAAO,cAAgBsE,IAAM,KAAK,GAAG,SAAW,KAAK,OAAO,QAAU,KAAK,OAAO,OAASnE,GAASH,EAAO,KAAK,OAAO,MAAM,EACnJ,OAAO,KAAK,OAAO,OAarB,GARI,KAAK,SACP,KAAK,KAAOuQ,GAAgB5T,EAAaqD,EAAO,KAAK,MAAM,EAC3D,KAAK,OAAS,KAAK,KAAK,QAEtB,KAAK,cACP,KAAK,MAAQoP,GAAkBzS,EAAa,KAAK,WAAW,EAC5D,KAAK,YAAc,KAAK,MAAM,IAE3B,KAAK,MAAQ,KAAK,KAAK,cAAgB+J,IAAQ,KAAK,OAAS,KAAK,MAAM,cAAgBA,GAC3F,KAAK,OAAS,aACL,CAAC,KAAK,OAEX,KAAK,MAAQ,KAAK,KAAK,cAAgB4iB,IACzC,KAAK,OAAS,KAAK,KAAK,OACxB,KAAK,UAAY,KAAK,KAAK,WAEzB,KAAK,OAAS,KAAK,MAAM,cAAgBA,IAC3C,KAAK,OAAS,KAAK,MAAM,OACzB,KAAK,UAAY,KAAK,MAAM,mBAErB,KAAK,OAAO,cAAgBhlB,GAAI,CACzC,IAAMykB,EAAa1Y,GAAQrQ,EAAO,KAAK,MAAM,EACzC+oB,EAAW,cAAgBriB,GAC7B,KAAK,OAAS,KAEd,KAAK,OAAqCqiB,EAAW,QAAS,IAEtE,CACI,OAAO,IACX,CAME,UAAWpsB,EAAamL,EAAQ,CAS9B,GARIA,EAAS,IACX,KAAK,GAAG,OAASA,EACjB,KAAK,KAAOyI,GAAgB5T,EAAaA,EAAY,IAAI,MAAO8G,GAAS,KAAK,GAAG,OAAQ,KAAK,GAAG,MAAQ,CAAC,CAAC,EAC3G,KAAK,OAAS,KAAK,KAAK,OACxB,KAAK,QAAU,KAAK,QAAQ,OAAOqE,CAAM,EACzC,KAAK,QAAUA,GAGb,KAAK,OAAQ,CACf,GAAK,CAAC,KAAK,OAAS,CAAC,KAAK,OAAS,KAAK,MAAM,OAAS,OAAW,KAAK,MAAQ,KAAK,KAAK,QAAU,KAAK,MAAQ,CAI9G,IAAIxK,EAAO,KAAK,KAKZqsB,EAEJ,GAAIrsB,IAAS,KACXqsB,EAAIrsB,EAAK,cACA,KAAK,YAAc,KAE5B,IADAqsB,EAAsC,KAAK,OAAQ,KAAK,IAAI,KAAK,SAAS,GAAK,KACxEA,IAAM,MAAQA,EAAE,OAAS,MAC9BA,EAAIA,EAAE,UAGRA,EAAsC,KAAK,OAAQ,OAOrD,IAAMC,EAAmB,IAAI,IAIvBC,EAAoB,IAAI,IAI9B,KAAOF,IAAM,MAAQA,IAAM,KAAK,OAAO,CAGrC,GAFAE,EAAkB,IAAIF,CAAC,EACvBC,EAAiB,IAAID,CAAC,EAClB9e,GAAW,KAAK,OAAQ8e,EAAE,MAAM,GAElC,GAAIA,EAAE,GAAG,OAAS,KAAK,GAAG,OACxBrsB,EAAOqsB,EACPC,EAAiB,MAAK,UACb/e,GAAW,KAAK,YAAa8e,EAAE,WAAW,EAGnD,cAEOA,EAAE,SAAW,MAAQE,EAAkB,IAAIxZ,GAAQ1T,EAAY,IAAI,MAAOgtB,EAAE,MAAM,CAAC,EAEvFC,EAAiB,IAAIvZ,GAAQ1T,EAAY,IAAI,MAAOgtB,EAAE,MAAM,CAAC,IAChErsB,EAAOqsB,EACPC,EAAiB,MAAK,OAGxB,OAEFD,EAAIA,EAAE,KAChB,CACQ,KAAK,KAAOrsB,CACpB,CAEM,GAAI,KAAK,OAAS,KAAM,CACtB,IAAMC,EAAQ,KAAK,KAAK,MACxB,KAAK,MAAQA,EACb,KAAK,KAAK,MAAQ,IAC1B,KAAa,CACL,IAAI,EACJ,GAAI,KAAK,YAAc,KAErB,IADA,EAAsC,KAAK,OAAQ,KAAK,IAAI,KAAK,SAAS,GAAK,KACxE,IAAM,MAAQ,EAAE,OAAS,MAC9B,EAAI,EAAE,UAGR,EAAsC,KAAK,OAAQ,OAChB,KAAK,OAAQ,OAAS,KAE3D,KAAK,MAAQ,CACrB,CACU,KAAK,QAAU,KACjB,KAAK,MAAM,KAAO,KACT,KAAK,YAAc,OAEM,KAAK,OAAQ,KAAK,IAAI,KAAK,UAAW,IAAI,EACxE,KAAK,OAAS,MAEhB,KAAK,KAAK,OAAOZ,CAAW,GAI5B,KAAK,YAAc,MAAQ,KAAK,WAAa,CAAC,KAAK,UACnB,KAAK,OAAQ,SAAW,KAAK,QAEjEwT,GAAUxT,EAAY,IAAI,MAAO,IAAI,EACrC,KAAK,QAAQ,UAAUA,EAAa,IAAI,EAExCmU,GAA4BnU,EAA+C,KAAK,OAAS,KAAK,SAAS,GAChE,KAAK,OAAQ,QAAU,MAA0C,KAAK,OAAQ,MAAM,SAAa,KAAK,YAAc,MAAQ,KAAK,QAAU,OAEhL,KAAK,OAAOA,CAAW,CAE/B,MAEM,IAAI+J,GAAG,KAAK,GAAI,KAAK,MAAM,EAAE,UAAU/J,EAAa,CAAC,CAE3D,CAKE,IAAI,MAAQ,CACV,IAAIgG,EAAI,KAAK,MACb,KAAOA,IAAM,MAAQA,EAAE,SACrBA,EAAIA,EAAE,MAER,OAAOA,CACX,CAKE,IAAI,MAAQ,CACV,IAAIA,EAAI,KAAK,KACb,KAAOA,IAAM,MAAQA,EAAE,SACrBA,EAAIA,EAAE,KAER,OAAOA,CACX,CAKE,IAAI,QAAU,CAEZ,OAAO,KAAK,SAAW,EAAI,KAAK,GAAKc,GAAS,KAAK,GAAG,OAAQ,KAAK,GAAG,MAAQ,KAAK,OAAS,CAAC,CACjG,CAQE,UAAWlG,EAAO,CAChB,GACE,KAAK,cAAgBA,EAAM,aAC3BsN,GAAWtN,EAAM,OAAQ,KAAK,MAAM,GACpC,KAAK,QAAUA,GACfsN,GAAW,KAAK,YAAatN,EAAM,WAAW,GAC9C,KAAK,GAAG,SAAWA,EAAM,GAAG,QAC5B,KAAK,GAAG,MAAQ,KAAK,SAAWA,EAAM,GAAG,OACzC,KAAK,UAAYA,EAAM,SACvB,KAAK,SAAW,MAChBA,EAAM,SAAW,MACjB,KAAK,QAAQ,cAAgBA,EAAM,QAAQ,aAC3C,KAAK,QAAQ,UAAUA,EAAM,OAAO,EACpC,CACA,IAAMke,EAAiD,KAAK,OAAQ,cACpE,OAAIA,GACFA,EAAa,QAAQH,GAAU,CACzBA,EAAO,IAAM/d,IAEf+d,EAAO,EAAI,KAEP,CAAC,KAAK,SAAW,KAAK,YACxBA,EAAO,OAAS,KAAK,QAGnC,CAAS,EAEC/d,EAAM,OACR,KAAK,KAAO,IAEd,KAAK,MAAQA,EAAM,MACf,KAAK,QAAU,OACjB,KAAK,MAAM,KAAO,MAEpB,KAAK,QAAUA,EAAM,OACd,EACb,CACI,MAAO,EACX,CAOE,OAAQZ,EAAa,CACnB,GAAI,CAAC,KAAK,QAAS,CACjB,IAAMuO,EAA2C,KAAK,OAElD,KAAK,WAAa,KAAK,YAAc,OACvCA,EAAO,SAAW,KAAK,QAEzB,KAAK,YAAW,EAChBvM,GAAehC,EAAY,UAAW,KAAK,GAAG,OAAQ,KAAK,GAAG,MAAO,KAAK,MAAM,EAChFmU,GAA4BnU,EAAauO,EAAQ,KAAK,SAAS,EAC/D,KAAK,QAAQ,OAAOvO,CAAW,CACrC,CACA,CAME,GAAIqD,EAAO8pB,EAAW,CACpB,GAAI,CAAC,KAAK,QACR,MAAYvkB,GAAc,EAE5B,KAAK,QAAQ,GAAGvF,CAAK,EACjB8pB,EACFtZ,GAAcxQ,EAAO,KAAM,IAAI0G,GAAG,KAAK,GAAI,KAAK,MAAM,CAAC,EAEvD,KAAK,QAAU,IAAIyS,GAAe,KAAK,MAAM,CAEnD,CAWE,MAAO9Z,EAASyI,EAAQ,CACtB,IAAM1F,EAAS0F,EAAS,EAAIrE,GAAS,KAAK,GAAG,OAAQ,KAAK,GAAG,MAAQqE,EAAS,CAAC,EAAI,KAAK,OAClFyhB,EAAc,KAAK,YACnBxY,EAAY,KAAK,UACjBnM,EAAQ,KAAK,QAAQ,OAAM,EAAY,IAC1CxC,IAAW,KAAO,EAAW,MAC7BmnB,IAAgB,KAAO,EAAW,KAClCxY,IAAc,KAAO,EAAW,IAQnC,GAPA1R,EAAQ,UAAUuF,CAAI,EAClBxC,IAAW,MACb/C,EAAQ,YAAY+C,CAAM,EAExBmnB,IAAgB,MAClBlqB,EAAQ,aAAakqB,CAAW,EAE9BnnB,IAAW,MAAQmnB,IAAgB,KAAM,CAC3C,IAAMre,EAA2C,KAAK,OACtD,GAAIA,EAAO,QAAU,OAAW,CAC9B,IAAM6d,EAAa7d,EAAO,MAC1B,GAAI6d,IAAe,KAAM,CAGvB,IAAMgB,EAAO/e,GAAgBE,CAAM,EACnC7L,EAAQ,gBAAgB,EAAI,EAC5BA,EAAQ,YAAY0qB,CAAI,CAClC,MACU1qB,EAAQ,gBAAgB,EAAK,EAC7BA,EAAQ,YAAY0pB,EAAW,EAAE,CAE3C,MAAiB7d,EAAO,cAAgB,QAChC7L,EAAQ,gBAAgB,EAAI,EAC5BA,EAAQ,YAAY6L,CAAM,GACjBA,EAAO,cAAgB5G,IAChCjF,EAAQ,gBAAgB,EAAK,EAC7BA,EAAQ,YAAY6L,CAAM,GAEpB3F,GAAc,EAElBwL,IAAc,MAChB1R,EAAQ,YAAY0R,CAAS,CAErC,CACI,KAAK,QAAQ,MAAM1R,EAASyI,CAAM,CACtC,CACA,EAMahB,GAAkB,CAACpH,EAASkF,IAASolB,GAAYplB,EAAc,EAAK,EAAElF,CAAO,EAO7EsqB,GAAc,CACzB,IAAM,CAAQzkB,GAAc,CAAE,EAC9B2hB,GACAY,GACAd,GACAmB,GACAZ,GACAK,GACAU,GACAN,GACAX,GACA,IAAM,CAAQ9hB,GAAc,CAAE,CAChC,ECzsBa0kB,GAAsB,GAKtBtjB,GAAN,cAAmBigB,EAAe,CACvC,IAAI,SAAW,CACb,MAAO,EACX,CAEE,QAAU,CAAA,CAMV,UAAWrpB,EAAO,CAChB,OAAI,KAAK,cAAgBA,EAAM,YACtB,IAET,KAAK,QAAUA,EAAM,OACd,GACX,CAME,UAAWZ,EAAamL,EAAQ,CAExBvC,GAAc,CACxB,CAME,MAAOlG,EAASyI,EAAQ,CACtBzI,EAAQ,UAAU4qB,EAAmB,EAE5B3qB,EAAaD,EAAQ,YAAa,KAAK,OAASyI,CAAM,CACnE,CAOE,WAAYnL,EAAaqD,EAAO,CAC9B,OAAO,IACX,CACA,EC+CMkqB,GAA0B,OAAO,YAAe,YAClD,WACA,OAAO,QAAW,YAChB,OAEA,OAAO,QAAW,YAAc,OAAS,CAAA,EAEzCC,GAAmB,cAErBD,GAAIC,EAAgB,IAAM,IAe5B,QAAQ,MAAM,2HAA2H,EAE3ID,GAAIC,EAAgB,EAAI,GCvGjB,IAAMC,GAAc,IAAM,CAC/B,IAAIC,EAAQ,GACZ,MAAO,CAACC,EAAGC,IAAM,CACf,GAAIF,EAAO,CACTA,EAAQ,GACR,GAAI,CACFC,EAAE,CACJ,QAAE,CACAD,EAAQ,EACV,CACF,MAAWE,IAAM,QACfA,EAAE,CAEN,CACF,ECZA,IAAMC,GAAqB,kBACrBC,GAAoB,kBAYbC,GAAmB,CAACC,EAAGC,IAAM,CACxC,IAAIC,EAAO,EACPC,EAAQ,EACZ,KAAOD,EAAOF,EAAE,QAAUE,EAAOD,EAAE,QAAUD,EAAEE,CAAI,IAAMD,EAAEC,CAAI,GAC7DA,IAIF,IADIA,EAAO,GAAKL,GAAmB,KAAKG,EAAEE,EAAO,CAAC,CAAC,GAAGA,IAC/CC,EAAQD,EAAOF,EAAE,QAAUG,EAAQD,EAAOD,EAAE,QAAUD,EAAEA,EAAE,OAASG,EAAQ,CAAC,IAAMF,EAAEA,EAAE,OAASE,EAAQ,CAAC,GAC7GA,IAGF,OAAIA,EAAQ,GAAKL,GAAkB,KAAKE,EAAEA,EAAE,OAASG,CAAK,CAAC,GAAGA,IACvD,CACL,MAAOD,EACP,OAAQF,EAAE,OAASE,EAAOC,EAC1B,OAAQF,EAAE,MAAMC,EAAMD,EAAE,OAASE,CAAK,CACxC,CACF,EAMaC,GAAaL,GC3DnB,IAAMM,GAAiB,IAAIC,GAAU,QAAQ,EAOvCC,GAAiB,IAAID,GAAU,QAAQ,EAOvCE,GAAmB,IAAIF,GAAU,YAAY,ECKnD,IAAMG,GAAY,CAACC,EAAMC,IAC9BA,IAAa,OACT,CAACD,EAAK,QACLC,EAAS,GAAG,IAAID,EAAK,GAAG,MAAM,GAC9BC,EAAS,GAAG,IAAID,EAAK,GAAG,MAAM,EAAKA,EAAK,GAAG,OAC5C,CAAGE,GAAUD,EAAS,GAAID,EAAK,EAAE,EAwBjCG,GAAgB,CAAC,CAAE,MAAO,YAAa,KAAM,SAAU,CAAC,EAQxDC,GAAe,CAACC,EAAcC,EAAQC,IAAS,CAEnD,GAAI,CAACF,EAAa,IAAIE,CAAI,EAAG,CAC3B,GAAIF,EAAa,KAAOC,EAAO,OAAQ,CACrC,IAAME,EAAiBC,GAAO,EAC9BJ,EAAa,QAASK,GAAUF,EAAW,IAAIE,CAAK,CAAC,EACrDJ,EAASA,EAAO,OAAQI,GAAU,CAACF,EAAW,IAAIE,CAAK,CAAC,CAC1D,CACAL,EAAa,IAAIE,EAAaI,GAAML,CAAM,CAAC,CAC7C,CACA,OAAgCD,EAAa,IAAIE,CAAI,CACvD,EAUaK,GAAc,CAACC,EAAc,CACxC,OAAAP,EAASH,GACT,aAAAE,EAAe,IAAI,IACnB,kBAAAS,EAAoB,KACpB,cAAAC,EAAgB,IAAM,CAAC,CACzB,EAAI,CAAC,IAAM,CACT,IAAIC,EAAwB,GACxBC,EACEC,EAAS,IAAIC,GAAO,CACxB,MAAO,CACL,SAAWC,GAAU,CACnB,IAAMC,EAAYC,GAAe,SAASF,CAAK,EAC/C,OAAOC,EAAU,UAAY,MAAQA,EAAU,cAAgB,IACjE,CACF,EACA,IAAKC,GACL,MAAO,CAIL,KAAM,CAACC,EAAWC,KACT,CACL,KAAMX,EACN,IAAKA,EAAa,IAClB,QAAS,KACT,SAAU,KACV,aAAc,KACd,eAAgB,GAChB,oBAAqB,GACrB,aAAc,GACd,OAAAP,EACA,aAAAD,EACA,kBAAAS,CACF,GAEF,MAAO,CAACW,EAAIC,IAAgB,CAC1B,IAAMC,EAASF,EAAG,QAAQH,EAAc,EACxC,GAAIK,IAAW,OAAW,CACxBD,EAAc,OAAO,OAAO,CAAC,EAAGA,CAAW,EAC3C,QAAWE,KAAOD,EAChBD,EAAYE,CAAG,EAAID,EAAOC,CAAG,CAEjC,CACA,OAAAF,EAAY,aAAeD,EAAG,QAAQ,cAAc,IAAM,GAE1DC,EAAY,eAAiBC,IAAW,QACtC,CAAC,CAACA,EAAO,eACXD,EAAY,oBAAsBC,IAAW,QAAa,CAAC,CAACA,EAAO,gBAAkB,CAAC,CAACA,EAAO,oBAC1FD,EAAY,UAAY,MAExBC,IAAW,SACVA,EAAO,UAAY,MAAQA,EAAO,cAAgB,OAGzCE,GAAQ,EAAG,IAAM,CAEvBH,EAAY,SAAW,MAAQA,EAAY,QAAQ,cAIjDC,EAAO,SAAW,KACpBD,EAAY,QAAQ,gBAClBC,EAAO,SACPA,EAAO,aACPD,CACF,GAEAA,EAAY,QAAQ,gBAClBC,EAAO,SACPA,EAAO,SACPD,CACF,EAEA,OAAOA,EAAY,QACnB,OAAOA,EAAY,SACnB,OAAOA,EAAY,aACnBA,EAAY,QAAQ,IAAI,IAAM,CAC5BA,EAAY,QAAQ,oBAClBA,EAAY,QAAQ,gBAAgB,MAAM,GAC5C,CACF,CAAC,GAEL,CAAC,EAGEA,CACT,CACF,EACA,KAAOI,GAAS,CACd,IAAMC,EAAU,IAAIC,GAAmBnB,EAAciB,CAAI,EACzD,OAAIb,GAAmB,MACrBA,EAAgB,QAAQ,EAG1BA,EAA4BY,GAAQ,EAAG,IAAM,CAC3CE,EAAQ,eAAe,EACvBD,EAAK,SAASA,EAAK,MAAM,GAAG,QAAQR,GAAgB,CAAE,QAAAS,CAAQ,CAAC,CAAC,EAChEhB,EAAc,CAChB,CAAC,EACM,CACL,OAAQ,IAAM,CACZ,IAAMW,EAAcR,EAAO,SAASY,EAAK,KAAK,EAC9C,GACEJ,EAAY,UAAY,MAAQA,EAAY,cAAgB,OAG1DV,GACAc,EAAK,MAAM,IAAI,QAAQ,cACrBA,EAAK,MAAM,IAAI,KAAK,cAAc,EAAE,OACtC,IAAM,MACN,CAEA,GADAd,EAAwB,GAEtBU,EAAY,eAAiB,IAC7B,CAACA,EAAY,eACb,CACA,IAAMO,EAAmBC,GAAe,SAASJ,EAAK,KAAK,EAIrDK,EAAKF,GAAoBA,EAAiB,YAC5CE,GACFA,EAAG,cAAc,CAErB,CACAJ,EAAQ,IAAI,IAAM,CACML,EAAY,IAAK,SAAUD,GAAO,CACtDA,EAAG,KAAK,IAAI,eAAgBC,EAAY,YAAY,EACpDK,EAAQ,oBAAoBD,EAAK,MAAM,GAAG,CAC5C,EAAGR,EAAc,CACnB,CAAC,CACH,CAEJ,EACA,QAAS,IAAM,CACbL,EAAgB,QAAQ,EACxBc,EAAQ,QAAQ,CAClB,CACF,CACF,CACF,CAAC,EACD,OAAOb,CACT,EAOMkB,GAA2B,CAACX,EAAIY,EAAQN,IAAY,CACxD,GAAIM,IAAW,MAAQA,EAAO,SAAW,MAAQA,EAAO,OAAS,KAAM,CACrE,IAAMC,EAASC,GACbR,EAAQ,IACRA,EAAQ,KACRM,EAAO,OACPN,EAAQ,OACV,EACMS,EAAOD,GACXR,EAAQ,IACRA,EAAQ,KACRM,EAAO,KACPN,EAAQ,OACV,EACIO,IAAW,MAAQE,IAAS,OAC9Bf,EAAKA,EAAG,aAAagB,EAAc,OAAOhB,EAAG,IAAKa,EAAQE,CAAI,CAAC,EAEnE,CACF,EAEaE,GAAuB,CAACC,EAAWvB,KAAW,CACzD,OAAQwB,GACNxB,EAAM,UAAU,OAChBuB,EAAU,KACVA,EAAU,OACZ,EACA,KAAMC,GACJxB,EAAM,UAAU,KAChBuB,EAAU,KACVA,EAAU,OACZ,CACF,GAOaX,GAAN,KAAyB,CAK9B,YAAanB,EAAcgC,EAAiB,CAC1C,KAAK,KAAOhC,EACZ,KAAK,gBAAkBgC,EACvB,KAAK,IAAMC,GAAY,EACvB,KAAK,YAAc,GAInB,KAAK,QAAU,IAAI,IACnB,KAAK,iBAAmB,KAAK,aAAa,KAAK,IAAI,EAKnD,KAAK,IAAMjC,EAAa,IAIxB,KAAK,2BAA6B,KAClC,KAAK,sBAAwB,IAAM,CAC7B,KAAK,6BAA+B,OACtC,KAAK,2BAA6B6B,GAChC,KACAG,EAAgB,KAClB,EAEJ,EACA,KAAK,qBAAuB,IAAM,CAChC,KAAK,2BAA6B,IACpC,EAEA,KAAK,IAAI,GAAG,wBAAyB,KAAK,qBAAqB,EAC/D,KAAK,IAAI,GAAG,uBAAwB,KAAK,oBAAoB,EAC7DhC,EAAa,YAAY,KAAK,gBAAgB,EAE9C,KAAK,oBAAsB,IAC7B,CAOA,IAAI,KAAO,CACT,OAAO,KAAK,gBAAgB,MAAM,GAAG,QAAQ,eAAgB,EAAK,CACpE,CAEA,sBAAwB,CACtB,OAAK,KAAK,gBAAgB,SAAS,GACnBkC,IAAa,KAAK,sBAAwB,OAE9ClB,GAAQ,EAAG,IAAM,CACzB,KAAK,oBAAsB,IAC7B,CAAC,EACD,KAAK,oBAAsB,KAAK,sBAAsB,GAEjD,KAAK,qBARiC,EAS/C,CAEA,uBAAyB,CACvB,IAAMmB,EAAY,KAAK,gBAAgB,MAAM,aAAa,EAEpDC,EAAQ,KAAK,gBAAgB,MAAM,YAAY,EACrDA,EAAM,SAASD,EAAU,WAAYA,EAAU,YAAY,EAC3DC,EAAM,OAAOD,EAAU,UAAWA,EAAU,WAAW,EAKzCC,EAAM,eAAe,EACzB,SAAW,GAEfA,EAAM,gBAAkBA,EAAM,WAChCA,EAAM,mBAAmBA,EAAM,cAAc,EAIjD,IAAMC,EAAWD,EAAM,sBAAsB,EACvCE,EAAsBC,GAAI,gBAEhC,OAAOF,EAAS,QAAU,GAAKA,EAAS,OAAS,GAC/CA,EAAS,OACN,OAAO,YAAcC,EAAgB,aAAe,IACvDD,EAAS,MAAQ,OAAO,aAAeC,EAAgB,cAAgB,EAC3E,CAMA,eAAgBlD,EAAUoD,EAAc,CACjCA,IACHA,EAAiBC,GAAiBC,GAAgB,EAAG,IAAI,GAAK,GAEhE,KAAK,gBAAgB,SACnB,KAAK,IAAI,QAAQjC,GAAgB,CAAE,SAAArB,EAAU,aAAAoD,CAAa,CAAC,CAC7D,CACF,CAEA,kBAAoB,CAClB,KAAK,QAAU,IAAI,IACnB,KAAK,IAAI,IAAM,CACb,IAAMG,EAAkB,KAAK,KAAK,QAAQ,EAAE,IAAKC,GAC/CC,GAC+BD,EAC7B,KAAK,gBAAgB,MAAM,OAC3B,KAAK,OACP,CACF,EAAE,OAAQE,GAAMA,IAAM,IAAI,EAEpBlC,EAAK,KAAK,IAAI,QAClB,EACA,KAAK,gBAAgB,MAAM,IAAI,QAAQ,KACvC,IAAWmC,EAAaC,EAAS,KAAKL,CAAe,EAAG,EAAG,CAAC,CAC9D,EACA/B,EAAG,QAAQH,GAAgB,CAAE,SAAU,KAAM,aAAc,IAAK,CAAC,EACjE,KAAK,gBAAgB,SAASG,CAAE,CAClC,CAAC,CACH,CAEA,gBAAkB,CAChB,KAAK,QAAU,IAAI,IACnB,KAAK,IAAI,IAAM,CACb,IAAM+B,EAAkB,KAAK,KAAK,QAAQ,EAAE,IAAKC,GAC/CC,GAC+BD,EAC7B,KAAK,gBAAgB,MAAM,OAC3B,KAAK,OACP,CACF,EAAE,OAAQE,GAAMA,IAAM,IAAI,EAEpBlC,EAAK,KAAK,IAAI,QAClB,EACA,KAAK,gBAAgB,MAAM,IAAI,QAAQ,KACvC,IAAWmC,EAAaC,EAAS,KAAKL,CAAe,EAAG,EAAG,CAAC,CAC9D,EACA,KAAK,gBAAgB,SACnB/B,EAAG,QAAQH,GAAgB,CAAE,eAAgB,EAAK,CAAC,CACrD,CACF,CAAC,CACH,CAOA,gBAAiBrB,EAAUoD,EAAc3B,EAAa,CAC/CzB,IACHA,EAAaA,GAAS,KAAK,GAAG,GAGhC,KAAK,QAAU,IAAI,IACnB,KAAK,IAAI,IAAM,CACb,KAAK,IAAI,SAAU6D,GAAgB,CAGjC,IAAMC,EAAMrC,EAAY,kBACpBqC,GACFA,EAAI,IAAI,QAASC,GAAO,CACpBC,GAAsBH,EAAaE,EAAKE,GAAU,CAAC,CAAC,CACxD,CAAC,EAMH,IAAMC,EAAiB,CAACC,EAAMC,IAAO,CACnC,IAAM9D,EAAO6D,IAAS,QAClBL,EAAI,kBAAkBM,EAAG,MAAM,EAC/BN,EAAI,mBAAmBM,CAAE,EAC7B,MAAO,CACL,KAAA9D,EACA,KAAA6D,EACA,MAAOhE,GACLsB,EAAY,aACZA,EAAY,OACZnB,CACF,CACF,CACF,EAEMiD,EAAoBc,GACxB,KAAK,KACL,IAAMC,GAASlB,EAAa,GAAIpD,EAAS,EAAE,CAC7C,EAAE,IAAKwD,GAEH,CAACA,EAAE,MAAM,SAAW1D,GAAU0D,EAAE,MAAOxD,CAAQ,GAC/CF,GAAU0D,EAAE,MAAOJ,CAAY,EAExBK,GACLD,EACA,KAAK,gBAAgB,MAAM,OAC3B,IAAI,IACJxD,EACAoD,EACAc,CACF,EAIO,IAEV,EAAE,OAAQR,GAAMA,IAAM,IAAI,EAErBlC,EAAK,KAAK,IAAI,QAClB,EACA,KAAK,gBAAgB,MAAM,IAAI,QAAQ,KACvC,IAAWmC,EAAaC,EAAS,KAAKL,CAAe,EAAG,EAAG,CAAC,CAC9D,EACA,KAAK,gBAAgB,SACnB/B,EAAG,QAAQH,GAAgB,CAAE,eAAgB,EAAK,CAAC,CACrD,CACF,EAAGA,EAAc,CACnB,CAAC,CACH,CAMA,aAAckD,EAAQV,EAAa,CACjC,IAAMzC,EAAYC,GAAe,SAAS,KAAK,gBAAgB,KAAK,EACpE,GACEkD,EAAO,SAAW,GAAKnD,EAAU,UAAY,MAC7CA,EAAU,cAAgB,KAC1B,CAEA,KAAK,eAAeA,EAAU,SAAUA,EAAU,YAAY,EAC9D,MACF,CACA,KAAK,IAAI,IAAM,CAKb,IAAMoD,EAAU,CAACC,EAAGN,IAAS,KAAK,QAAQ,OAAOA,CAAI,EACnDH,GACAH,EACAA,EAAY,UACXa,GAAW,CACV,GAAIA,EAAO,cAAkBC,GAAM,CACjC,IAAMR,EAA4DO,EAAQ,QAAS,KACnFP,GAAQ,KAAK,QAAQ,OAAOA,CAAI,CAClC,CACF,CACF,EACAN,EAAY,QAAQ,QAAQW,CAAO,EACnCX,EAAY,mBAAmB,QAAQW,CAAO,EAC9C,IAAMjB,EAAkB,KAAK,KAAK,QAAQ,EAAE,IAAKC,GAC/CoB,GAC2CpB,EACzC,KAAK,gBAAgB,MAAM,OAC3B,KAAK,OACP,CACF,EAAE,OAAQE,GAAMA,IAAM,IAAI,EAEtBlC,EAAK,KAAK,IAAI,QAChB,EACA,KAAK,gBAAgB,MAAM,IAAI,QAAQ,KACvC,IAAWmC,EAAaC,EAAS,KAAKL,CAAe,EAAG,EAAG,CAAC,CAC9D,EACApB,GAAyBX,EAAI,KAAK,2BAA4B,IAAI,EAClEA,EAAKA,EAAG,QAAQH,GAAgB,CAAE,eAAgB,GAAM,oBAAqBwC,EAAY,kBAAoBgB,EAAY,CAAC,EAExH,KAAK,6BAA+B,MAAQ,KAAK,qBAAqB,GAEtErD,EAAG,eAAe,EAEpB,KAAK,gBAAgB,SAASA,CAAE,CAClC,CAAC,CACH,CAEA,oBAAqB2B,EAAK,CACxB,KAAK,IAAI,SAAS,IAAM,CACtB2B,GAAgB,KAAK,IAAK,KAAK,KAAM3B,EAAK,KAAK,OAAO,EACtD,KAAK,2BAA6BV,GAChC,KACA,KAAK,gBAAgB,KACvB,CACF,EAAGpB,EAAc,CACnB,CAEA,SAAW,CACT,KAAK,YAAc,GACnB,KAAK,KAAK,cAAc,KAAK,gBAAgB,EAC7C,KAAK,IAAI,IAAI,wBAAyB,KAAK,qBAAqB,EAChE,KAAK,IAAI,IAAI,uBAAwB,KAAK,oBAAoB,CAChE,CACF,EAYMuD,GAAwB,CAC5BG,EACAC,EACAC,EACAjF,EACAoD,EACAc,IACG,CACH,IAAMgB,EAAmCD,EAAQ,IAAIF,CAAE,EACvD,GAAIG,IAAS,OAAW,CACtB,GAAIH,aAAgBI,GAClB,OAAO1B,GACLsB,EACAC,EACAC,EACAjF,EACAoD,EACAc,CACF,EAEA,MAAYkB,GAAoB,CAEpC,CACA,OAAOF,CACT,EAYMzB,GAAyB,CAC7BsB,EACAC,EACAC,EACAjF,EACAoD,EACAc,IACG,CACH,IAAMmB,EAAW,CAAC,EACZC,EAAkBnB,GAAS,CAC/B,GAAIA,EAAK,cAAkBgB,GAAY,CACrC,IAAMzB,EAAIkB,GACRT,EACAa,EACAC,EACAjF,EACAoD,EACAc,CACF,EACIR,IAAM,MACR2B,EAAS,KAAK3B,CAAC,CAEnB,KAAO,CACL,IAAM6B,EAAKC,GACTrB,EACAa,EACAC,EACAjF,EACAoD,EACAc,CACF,EACIqB,IAAO,MACTA,EAAG,QAASE,GAAc,CACpBA,IAAc,MAChBJ,EAAS,KAAKI,CAAS,CAE3B,CAAC,CAEL,CACF,EACIzF,IAAa,QAAaoD,IAAiB,OAC7C2B,EAAG,QAAQ,EAAE,QAAQO,CAAc,EAEjCjB,GAAwBU,EAAI,IAAMT,GAASlB,EAAa,GAAIpD,EAAS,EAAE,CAAC,EACvE,QAAQsF,CAAc,EAE3B,GAAI,CACF,IAAMI,EAAQX,EAAG,cAAc/E,CAAQ,EACnCA,IAAa,SACVF,GAAiCiF,EAAG,MAAQ/E,CAAQ,EAI7CF,GAAiCiF,EAAG,MAAQ3B,CAAY,IAClEsC,EAAM,QAAUxB,EACZA,EAAe,QAAgCa,EAAG,MAAO,EAAE,EAC3D,CAAE,KAAM,OAAQ,GANpBW,EAAM,QAAUxB,EACZA,EAAe,UAAkCa,EAAG,MAAO,EAAE,EAC7D,CAAE,KAAM,SAAU,GAO1B,IAAMG,EAAOF,EAAO,KAAKD,EAAG,SAAUW,EAAOL,CAAQ,EACrD,OAAAJ,EAAQ,IAAIF,EAAIG,CAAI,EACbA,CACT,OAASS,EAAG,CAEW,OAACZ,EAAG,IAAK,SAAUlB,GAAgB,CAC/BkB,EAAG,MAAO,OAAOlB,CAAW,CACrD,EAAGxC,EAAc,EACjB4D,EAAQ,OAAOF,CAAE,EACV,IACT,CACF,EAYMS,GAA2B,CAC/BI,EACAZ,EACAa,EACA7F,EACAoD,EACAc,IACG,CACH,IAAM4B,EAAQ,CAAC,EACTC,EAASH,EAAK,QAAQ5F,EAAUoD,EAAcc,CAAc,EAClE,GAAI,CACF,QAAS8B,EAAI,EAAGA,EAAID,EAAO,OAAQC,IAAK,CACtC,IAAMC,EAAQF,EAAOC,CAAC,EAChBE,EAAQ,CAAC,EACf,QAAWC,KAAYF,EAAM,WAC3BC,EAAM,KAAKlB,EAAO,KAAKmB,EAAUF,EAAM,WAAWE,CAAQ,CAAC,CAAC,EAE9DL,EAAM,KAAKd,EAAO,KAAKiB,EAAM,OAAQC,CAAK,CAAC,CAC7C,CACF,OAASP,EAAG,CAEW,OAACC,EAAK,IAAK,SAAU/B,GAAgB,CACjC+B,EAAK,MAAO,OAAO/B,CAAW,CACvD,EAAGxC,EAAc,EACV,IACT,CAEA,OAAOyE,CACT,EAQMM,GAA0B,CAACN,EAAOb,IAAY,CAClD,IAAMd,EAAO,IAAMkC,GACbJ,EAAQH,EAAM,IAAKZ,IAAU,CAEjC,OAAQA,EAAK,KACb,WAAYoB,GAAkBpB,EAAK,KAAK,CAC1C,EAAE,EACF,OAAAf,EAAK,WAAW8B,CAAK,EACrBhB,EAAQ,IAAId,EAAM2B,CAAK,EAChB3B,CACT,EAQMoC,GAA4B,CAACrB,EAAMD,IAAY,CACnD,IAAMd,EAAO,IAAMgB,GAAWD,EAAK,KAAK,IAAI,EAC5C,QAAWvD,KAAOuD,EAAK,MAAO,CAC5B,IAAMsB,EAAMtB,EAAK,MAAMvD,CAAG,EACtB6E,IAAQ,MAAQ7E,IAAQ,WAC1BwC,EAAK,aAAaxC,EAAK6E,CAAG,CAE9B,CACA,OAAArC,EAAK,OACH,EACAsC,GAAsBvB,CAAI,EAAE,IAAKxB,GAC/BgD,GAAgChD,EAAGuB,CAAO,CAC5C,CACF,EACAA,EAAQ,IAAId,EAAMe,CAAI,EACff,CACT,EAQMuC,GAAkC,CAACxB,EAAMD,IAC7CC,aAAgB,MACZkB,GAAwBlB,EAAMD,CAAO,EACrCsB,GAA0BrB,EAAMD,CAAO,EAEvC0B,GAAYH,GAAQ,OAAOA,GAAQ,UAAYA,IAAQ,KAEvDI,GAAa,CAACC,EAAQC,IAAW,CACrC,IAAMC,EAAO,OAAO,KAAKF,CAAM,EAAE,OAAQlF,GAAQkF,EAAOlF,CAAG,IAAM,IAAI,EACjEqF,EACFD,EAAK,SACH,OAAO,KAAKD,CAAM,EAAE,OAAQnF,GAAQmF,EAAOnF,CAAG,IAAM,IAAI,EAAE,OAC9D,QAAS,EAAI,EAAG,EAAIoF,EAAK,QAAUC,EAAI,IAAK,CAC1C,IAAMrF,EAAMoF,EAAK,CAAC,EACZE,EAAIJ,EAAOlF,CAAG,EACduF,EAAIJ,EAAOnF,CAAG,EACpBqF,EAAKrF,IAAQ,WAAasF,IAAMC,GAC7BP,GAASM,CAAC,GAAKN,GAASO,CAAC,GAAKN,GAAWK,EAAGC,CAAC,CAClD,CACA,OAAOF,CACT,EAUMP,GAAyBU,GAAU,CACvC,IAAMC,EAAID,EAAM,QAAQ,QAClBE,EAAM,CAAC,EACb,QAASrB,EAAI,EAAGA,EAAIoB,EAAE,OAAQpB,IAAK,CACjC,IAAMtC,EAAI0D,EAAEpB,CAAC,EACb,GAAItC,EAAE,OAAQ,CACZ,IAAM4D,EAAY,CAAC,EACnB,QAASC,EAAQH,EAAEpB,CAAC,EAAGA,EAAIoB,EAAE,QAAUG,EAAM,OAAQA,EAAQH,EAAE,EAAEpB,CAAC,EAChEsB,EAAU,KAAKC,CAAK,EAEtBvB,IACAqB,EAAI,KAAKC,CAAS,CACpB,MACED,EAAI,KAAK3D,CAAC,CAEd,CACA,OAAO2D,CACT,EAMMG,GAAkB,CAACC,EAAOC,IAAW,CACzC,IAAMzB,EAAQwB,EAAM,QAAQ,EAC5B,OAAOxB,EAAM,SAAWyB,EAAO,QAC7BzB,EAAM,MAAM,CAAC0B,EAAG,IACdA,EAAE,SAA+BD,EAAO,CAAC,EAAG,MACrCX,GAAKY,EAAE,YAAc,CAAC,CAAC,EAAE,SAAWD,EAAO,CAAC,EAAE,MAAM,QAC3DA,EAAO,CAAC,EAAE,MAAM,MAAOE,GACrBhB,GAAWe,EAAE,WAAWC,EAAK,KAAK,IAAI,GAAK,CAAC,EAAGA,EAAK,KAAK,CAC3D,CACF,CACJ,EAMMC,GAAkB,CAACC,EAAOX,IAAU,CACxC,GACEW,aAAmB3C,IAAc,EAAEgC,aAAiB,QACpDY,GAAcD,EAAOX,CAAK,EAC1B,CACA,IAAMa,EAAoBvB,GAAsBU,CAAK,EACrD,OAAOW,EAAM,UAAYE,EAAkB,QACzCpB,GAAWkB,EAAM,cAAc,EAAGX,EAAM,KAAK,GAC7CW,EAAM,QAAQ,EAAE,MAAM,CAACG,EAAQ,IAC7BJ,GAAgBI,EAAQD,EAAkB,CAAC,CAAC,CAC9C,CACJ,CACA,OAAOF,aAAmBzB,IAAWc,aAAiB,OACpDK,GAAgBM,EAAOX,CAAK,CAChC,EAMMe,GAAiB,CAACC,EAAQC,IAC9BD,IAAWC,GACVD,aAAkB,OAASC,aAAoB,OAC9CD,EAAO,SAAWC,EAAS,QAAUD,EAAO,MAAM,CAACE,EAAGrC,IACtDoC,EAASpC,CAAC,IAAMqC,CAClB,EAQIC,GAA6B,CAACR,EAAOX,EAAOlC,IAAY,CAC5D,IAAMsD,EAAYT,EAAM,QAAQ,EAC1BU,EAAY/B,GAAsBU,CAAK,EACvCsB,EAAYD,EAAU,OACtBE,EAAYH,EAAU,OACtBI,EAAcC,GAAIF,EAAWD,CAAS,EACxCI,EAAO,EACPC,EAAQ,EACRC,EAAmB,GACvB,KAAOF,EAAOF,EAAQE,IAAQ,CAC5B,IAAMG,EAAQT,EAAUM,CAAI,EACtBI,EAAQT,EAAUK,CAAI,EAC5B,GAAIX,GAAejD,EAAQ,IAAI+D,CAAK,EAAGC,CAAK,EAC1CF,EAAmB,WACV,CAAClB,GAAgBmB,EAAOC,CAAK,EACtC,KAEJ,CACA,KAAOJ,EAAOC,EAAQH,EAAQG,IAAS,CACrC,IAAMI,EAASX,EAAUG,EAAYI,EAAQ,CAAC,EACxCK,EAASX,EAAUC,EAAYK,EAAQ,CAAC,EAC9C,GAAIZ,GAAejD,EAAQ,IAAIiE,CAAM,EAAGC,CAAM,EAC5CJ,EAAmB,WACV,CAAClB,GAAgBqB,EAAQC,CAAM,EACxC,KAEJ,CACA,MAAO,CACL,eAAgBN,EAAOC,EACvB,iBAAAC,CACF,CACF,EAEMK,GAAc3B,GAAU,CAC5B,IAAI4B,EAAM,GAIN,EAAI5B,EAAM,OACR6B,EAAS,CAAC,EAChB,KAAO,IAAM,MACN,EAAE,UACD,EAAE,WAAa,EAAE,mBAAqBC,GACxCF,GAAO,EAAE,QAAQ,IACR,EAAE,mBAAqBG,KAChCF,EAAO,EAAE,QAAQ,GAAG,EAAI,OAG5B,EAAI,EAAE,MAER,MAAO,CACL,IAAAD,EACA,OAAAC,CACF,CACF,EASMG,GAAc,CAAChC,EAAOC,EAAQzC,IAAY,CAC9CA,EAAQ,IAAIwC,EAAOC,CAAM,EACzB,GAAM,CAAE,OAAA4B,EAAQ,IAAAD,CAAI,EAAID,GAAW3B,CAAK,EAClCiC,EAAUhC,EAAO,IAAKiC,IAAO,CACjC,OAA4BA,EAAG,KAC/B,WAAY,OAAO,OAAO,CAAC,EAAGL,EAAQhD,GAAkBqD,EAAE,KAAK,CAAC,CAClE,EAAE,EACI,CAAE,OAAAC,EAAQ,OAAAC,EAAQ,MAAAC,CAAM,EAAIC,GAChCV,EACAK,EAAQ,IAAK,GAAM,EAAE,MAAM,EAAE,KAAK,EAAE,CACtC,EACAjC,EAAM,OAAOqC,EAAOD,CAAM,EAC1BpC,EAAM,OAAOqC,EAAOF,CAAM,EAC1BnC,EAAM,WACJiC,EAAQ,IAAK,IAAO,CAAE,OAAQ,EAAE,OAAO,OAAQ,WAAY,EAAE,UAAW,EAAE,CAC5E,CACF,EAEMpD,GAAqBJ,GAAU,CACnC,IAAMW,EAAS,CAAC,EAChB,OAAAX,EAAM,QAAS0B,GAAS,CAClBA,EAAK,KAAK,OAAS,YACrBf,EAAOe,EAAK,KAAK,IAAI,EAAIA,EAAK,MAElC,CAAC,EACMf,CACT,EASa/B,GAAkB,CAACkF,EAAGC,EAAcC,EAAOjF,IAAY,CAClE,GACEgF,aAA0B9E,IAC1B8E,EAAa,WAAaC,EAAM,KAAK,KAErC,MAAM,IAAI,MAAM,qBAAqB,EAIvC,GAFAjF,EAAQ,IAAIgF,EAAcC,CAAK,EAE3BD,aAA0B9E,GAAY,CACxC,IAAMgF,EAAYF,EAAa,cAAc,EACvCG,EAASF,EAAM,MACrB,QAAWvI,KAAOyI,EACZA,EAAOzI,CAAG,IAAM,KACdwI,EAAUxI,CAAG,IAAMyI,EAAOzI,CAAG,GAAKA,IAAQ,WAC5CsI,EAAa,aAAatI,EAAKyI,EAAOzI,CAAG,CAAC,EAG5CsI,EAAa,gBAAgBtI,CAAG,EAIpC,QAAWA,KAAOwI,EACZC,EAAOzI,CAAG,IAAM,QAClBsI,EAAa,gBAAgBtI,CAAG,CAGtC,CAEA,IAAM6G,EAAY/B,GAAsByD,CAAK,EACvCzB,EAAYD,EAAU,OACtBD,EAAY0B,EAAa,QAAQ,EACjCvB,EAAYH,EAAU,OACtBI,EAAcC,GAAIH,EAAWC,CAAS,EACxCG,EAAO,EACPC,EAAQ,EAEZ,KAAOD,EAAOF,EAAQE,IAAQ,CAC5B,IAAMG,EAAQT,EAAUM,CAAI,EACtBI,EAAQT,EAAUK,CAAI,EAC5B,GAAI,CAACX,GAAejD,EAAQ,IAAI+D,CAAK,EAAGC,CAAK,EAC3C,GAAIpB,GAAgBmB,EAAOC,CAAK,EAE9BhE,EAAQ,IAAI+D,EAAOC,CAAK,MAExB,MAGN,CAEA,KAAOH,EAAQD,EAAO,EAAIF,EAAQG,IAAS,CACzC,IAAMI,EAASX,EAAUG,EAAYI,EAAQ,CAAC,EACxCK,EAASX,EAAUC,EAAYK,EAAQ,CAAC,EAC9C,GAAI,CAACZ,GAAejD,EAAQ,IAAIiE,CAAM,EAAGC,CAAM,EAC7C,GAAItB,GAAgBqB,EAAQC,CAAM,EAEhClE,EAAQ,IAAIiE,EAAQC,CAAM,MAE1B,MAGN,CACAa,EAAE,SAAS,IAAM,CAEf,KAAOtB,EAAYG,EAAOC,EAAQ,GAAKL,EAAYI,EAAOC,EAAQ,GAAG,CACnE,IAAME,EAAQT,EAAUM,CAAI,EACtBI,EAAQT,EAAUK,CAAI,EACtBK,EAASX,EAAUG,EAAYI,EAAQ,CAAC,EACxCK,EAASX,EAAUC,EAAYK,EAAQ,CAAC,EAC9C,GAAIE,aAAmB3C,IAAW4C,aAAiB,MAC5CzB,GAAgBwB,EAAOC,CAAK,GAC/BQ,GAAYT,EAAOC,EAAOhE,CAAO,EAEnC4D,GAAQ,MACH,CACL,IAAIwB,EAAarB,aAAmB7D,IAClC4C,GAAciB,EAAOC,CAAK,EACxBqB,EAAcpB,aAAoB/D,IACpC4C,GAAcmB,EAAQC,CAAM,EAC9B,GAAIkB,GAAcC,EAAa,CAE7B,IAAMC,EAAejC,GACUU,EACDC,EAC5BhE,CACF,EACMuF,EAAgBlC,GACSY,EACDC,EAC5BlE,CACF,EAEEsF,EAAa,kBAAoB,CAACC,EAAc,iBAEhDF,EAAc,GAEd,CAACC,EAAa,kBAAoBC,EAAc,kBAIhDD,EAAa,eAAiBC,EAAc,eAF5CH,EAAa,GAMbC,EAAc,EAElB,CACID,GACFvF,GACEkF,EAC8BhB,EACFC,EAC5BhE,CACF,EACA4D,GAAQ,GACCyB,GACTxF,GACEkF,EAC8Bd,EACFC,EAC5BlE,CACF,EACA6D,GAAS,IAET7D,EAAQ,OAAOgF,EAAa,IAAIpB,CAAI,CAAC,EACrCoB,EAAa,OAAOpB,EAAM,CAAC,EAC3BoB,EAAa,OAAOpB,EAAM,CACxBnC,GAAgCuC,EAAOhE,CAAO,CAChD,CAAC,EACD4D,GAAQ,EAEZ,CACF,CACA,IAAM4B,EAAU/B,EAAYG,EAAOC,EAYnC,GAVEJ,IAAc,GAAKD,IAAc,GAAKF,EAAU,CAAC,YAAelC,IAEhEpB,EAAQ,OAAOsD,EAAU,CAAC,CAAC,EAG3BA,EAAU,CAAC,EAAE,OAAO,EAAGA,EAAU,CAAC,EAAE,MAAM,GACjCkC,EAAU,IACnBR,EAAa,MAAMpB,EAAMA,EAAO4B,CAAO,EAAE,QAAQtG,GAAQc,EAAQ,OAAOd,CAAI,CAAC,EAC7E8F,EAAa,OAAOpB,EAAM4B,CAAO,GAE/B5B,EAAOC,EAAQL,EAAW,CAC5B,IAAMiC,EAAM,CAAC,EACb,QAAS1E,EAAI6C,EAAM7C,EAAIyC,EAAYK,EAAO9C,IACxC0E,EAAI,KAAKhE,GAAgC8B,EAAUxC,CAAC,EAAGf,CAAO,CAAC,EAEjEgF,EAAa,OAAOpB,EAAM6B,CAAG,CAC/B,CACF,EAAGrJ,EAAc,CACnB,EAOM0G,GAAgB,CAAC4C,EAAUT,IAC/B,EAAEA,aAAiB,QAAUS,EAAS,WAAaT,EAAM,KAAK,KC3lChE,IAAIU,GAAgB,KAEdC,GAAc,IAAM,CACxB,IAAMC,EAAqDF,GAC3DA,GAAgB,KAChBE,EAAI,QAAQ,CAACC,EAAOC,IAAS,CAC3B,IAAMC,EAAKD,EAAK,MAAM,GAChBE,EAAYC,GAAe,SAASH,EAAK,KAAK,EAChDE,GAAaA,EAAU,SAAW,CAACA,EAAU,QAAQ,cACvDH,EAAM,QAAQ,CAACK,EAAKC,IAAQ,CAC1BJ,EAAG,QAAQI,EAAKD,CAAG,CACrB,CAAC,EACDJ,EAAK,SAASC,CAAE,EAEpB,CAAC,CACH,EAEaK,GAAU,CAACN,EAAMK,EAAKE,IAAU,CACtCX,KACHA,GAAgB,IAAI,IACVY,GAAQ,EAAGX,EAAW,GAE9BY,GAAeb,GAAeI,EAAUU,EAAM,EAAE,IAAIL,EAAKE,CAAK,CACpE,EAUaI,GAAqC,CAACC,EAAKC,EAAMC,IAAY,CACxE,GAAIF,IAAQ,EACV,OAASG,GAAoCF,EAAM,CAAC,EAKtD,IAAIG,EAAIH,EAAK,SAAW,KAAO,KAAqCA,EAAK,OAAO,QAAS,KACzF,KAAOG,IAAM,MAAQH,IAASG,GAAG,CAC/B,GAAIA,aAAeC,GAAS,CAC1B,GAAID,EAAE,SAAWJ,EACf,OAASG,GAAoCC,EAAGJ,CAAG,EAIrD,GAFEA,GAAOI,EAAE,QAEPA,EAAE,QAAU,MAAQA,EAAE,MAAM,OAAS,KACvCA,EAAkCA,EAAE,MAAM,KAAK,QAAS,SACnD,CACL,GACEA,EAAIA,EAAE,QAAU,KAAO,KAAOA,EAAE,MAAM,OACtCJ,UACOI,IAAMH,GAAQG,IAAM,MAAQA,EAAE,QAAU,MAAQA,EAAE,MAAM,OAAS,MACtEA,IAAM,MAAQA,IAAMH,IAEtBG,EAAIA,EAAE,QAAU,KAAO,KAA0DA,EAAE,MAAM,KAAM,QAAS,KAE5G,CACF,KAAO,CACL,IAAME,GAAgCJ,EAAQ,IAAIE,CAAC,GAAK,CAAE,SAAU,CAAE,GAAG,SACzE,GAAIA,EAAE,SAAW,MAAQJ,EAAMM,EAC7BF,EAAkCA,EAAE,OAAO,QAAS,KACpDJ,QACK,CACL,GAAIA,IAAQ,GAAKI,EAAE,UAAY,GAAKE,EAAY,EAE9C,OAAO,IAAMC,GAAiBH,EAAE,QAAU,KAAO,KAAOA,EAAE,MAAM,GAAIA,EAAE,QAAU,KAASI,GAAgBJ,CAAC,EAAI,KAAM,IAAI,EAG1H,GADAJ,GAAOM,EACHF,EAAE,QAAU,MAAQA,EAAE,MAAM,OAAS,KACvCA,EAAkCA,EAAE,MAAM,KAAK,QAAS,SACnD,CACL,GAAIJ,IAAQ,EAEV,OAAAI,EAAIA,EAAE,QAAU,KAAOA,EAAIA,EAAE,MAAM,OAC5B,IAAMG,GAAiBH,EAAE,QAAU,KAAO,KAAOA,EAAE,MAAM,GAAIA,EAAE,QAAU,KAASI,GAAgBJ,CAAC,EAAI,KAAM,IAAI,EAE1H,GACEA,EAA2BA,EAAE,MAAO,OACpCJ,UACOI,IAAMH,GAA+BG,EAAE,MAAO,OAAS,MAE5DA,IAAMH,IAERG,EAAgFA,EAAE,MAAO,KAAM,QAAS,KAE5G,CACF,CACF,CACA,GAAIA,IAAM,KACR,MAAYK,GAAe,EAE7B,GAAIT,IAAQ,GAAKI,EAAE,cAAkBC,IAAWD,IAAMH,EACpD,OAAOS,GAAuBN,EAAE,MAAM,OAAQA,EAAE,KAAK,CAEzD,CACA,OAASD,GAAoCF,EAAMA,EAAK,OAAO,CACjE,EAEMS,GAAyB,CAACT,EAAMU,IAAS,CAC7C,IAAIC,EAAS,KACTC,EAAQ,KACZ,OAAIZ,EAAK,QAAU,KACjBY,EAAUL,GAAgBP,CAAI,EAE9BW,EAAWE,GAASb,EAAK,MAAM,GAAG,OAAQA,EAAK,MAAM,GAAG,KAAK,EAExD,IAAMM,GAAiBK,EAAQC,EAAOF,EAAK,EAAE,CACtD,EASaI,GAAqC,CAACC,EAAGC,EAAcC,EAAQhB,IAAY,CACtF,IAAMiB,EAAeC,GAA2CF,EAAQF,CAAC,EACzE,GAAIG,IAAe,MAASA,EAAW,OAASF,GAAgB,CAAGI,GAAWJ,EAAcE,EAAW,KAAK,KAAK,EAC/G,OAAO,KAET,IAAIlB,EAAOkB,EAAW,KAClBnB,EAAM,EACV,GAAIC,EAAK,cAAkBI,GACzBL,EAAMmB,EAAW,cACRlB,EAAK,QAAU,MAAQ,CAACA,EAAK,MAAM,QAAS,CACrD,IAAIG,EAAIH,EAAK,OACTqB,EAAI,EACR,KAAOA,EAAIrB,EAAK,SAAWqB,EAAIH,EAAW,OAASf,IAAM,MAAM,CAC7D,GAAI,CAACA,EAAE,QAAS,CACd,IAAMmB,EAAkCnB,EAAE,QAAS,KACnDkB,IACIC,aAAelB,GACjBL,GAAOuB,EAAE,QAETvB,GAA2BE,EAAQ,IAAIqB,CAAC,EAAG,QAE/C,CACAnB,EAA2BA,EAAE,KAC/B,CACAJ,GAAO,CACT,CACA,KAAOC,IAASgB,GAAgBhB,EAAK,QAAU,MAAM,CAEnD,IAAMuB,EAASvB,EAAK,MAAM,OAE1B,GAAIuB,EAAO,QAAU,MAAQ,CAACA,EAAO,MAAM,QAAS,CAClDxB,GAAO,EACP,IAAII,EAAmCoB,EAAQ,OAE/C,KAAOpB,IAAM,MAAM,CACjB,IAAMqB,EAA4CrB,EAAE,QAAS,KAC7D,GAAIqB,IAAgBxB,EAClB,MAEGG,EAAE,UACDqB,aAAyBpB,GAC3BL,GAAOyB,EAAY,QAEnBzB,GAA2BE,EAAQ,IAAIuB,CAAW,EAAG,UAGzDrB,EAAIA,EAAE,KACR,CACF,CACAH,EAAsCuB,CACxC,CACA,OAAOxB,EAAM,CACf,EC1KO,IAAM0B,GAA8B,CAACC,EAAiBC,EAAcC,IAAUF,IAAoBC,EAQ5FE,GAAwBC,GAAS,CAC5C,IAAMC,EAAS,SAAS,cAAc,MAAM,EAC5CA,EAAO,UAAU,IAAI,wBAAwB,EAC7CA,EAAO,aAAa,QAAS,iBAAiBD,EAAK,KAAK,EAAE,EAC1D,IAAME,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,aAAa,QAAS,qBAAqBF,EAAK,KAAK,EAAE,EAC/DE,EAAQ,aAAa,SAAS,eAAeF,EAAK,IAAI,EAAG,IAAI,EAC7D,IAAMG,EAAoB,SAAS,eAAe,QAAQ,EACpDC,EAAoB,SAAS,eAAe,QAAQ,EAC1D,OAAAH,EAAO,aAAaE,EAAmB,IAAI,EAC3CF,EAAO,aAAaC,EAAS,IAAI,EACjCD,EAAO,aAAaG,EAAmB,IAAI,EACpCH,CACT,EAQaI,GAA2BL,IAC/B,CACL,MAAO,qBAAqBA,EAAK,KAAK,KACtC,MAAO,2BACT,GAGIM,GAAe,oBAURC,GAAoB,CAC/BC,EACAC,EACAC,EACAC,EACAC,IACG,CACH,IAAMC,EAASC,GAAe,SAASN,CAAK,EACtCO,EAAIF,EAAO,IACXG,EAAc,CAAC,EACrB,OACEH,EAAO,UAAY,MAAQA,EAAO,cAAgB,MAClDA,EAAO,UAAY,KAGZI,GAAc,OAAOT,EAAM,IAAK,CAAC,CAAC,GAE3CC,EAAU,UAAU,EAAE,QAAQ,CAACS,EAAIC,IAAa,CAC9C,GAAKT,EAAgBK,EAAE,SAAUI,EAAUD,CAAE,GAIzCA,EAAG,QAAU,KAAM,CACrB,IAAMlB,EAAOkB,EAAG,MAAQ,CAAC,EACrBlB,EAAK,OAAS,KAChBA,EAAK,MAAQ,UACHM,GAAa,KAAKN,EAAK,KAAK,GAEtC,QAAQ,KAAK,0CAA2CA,CAAI,EAE1DA,EAAK,MAAQ,OACfA,EAAK,KAAO,SAASmB,CAAQ,IAE/B,IAAIC,EAASC,GACXN,EACAF,EAAO,KACLS,GAA+BJ,EAAG,OAAO,MAAM,EACjDL,EAAO,QAAQ,OACjB,EACIU,EAAOF,GACTN,EACAF,EAAO,KACLS,GAA+BJ,EAAG,OAAO,IAAI,EAC/CL,EAAO,QAAQ,OACjB,EACA,GAAIO,IAAW,MAAQG,IAAS,KAAM,CACpC,IAAMC,EAAeC,GAAIjB,EAAM,IAAI,QAAQ,KAAO,EAAG,CAAC,EACtDY,EAAcM,GAAIN,EAAQI,CAAO,EACjCD,EAAYG,GAAIH,EAAMC,CAAO,EAC7BR,EAAY,KACVW,GAAW,OAAOJ,EAAM,IAAMZ,EAAaX,CAAI,EAAG,CAChD,IAAKmB,EAAW,GAChB,KAAM,EACR,CAAC,CACH,EACA,IAAMS,EAAYF,GAAIN,EAAQG,CAAI,EAC5BM,EAAUJ,GAAIL,EAAQG,CAAI,EAChCP,EAAY,KACVW,GAAW,OAAOC,EAAMC,EAAIjB,EAAgBZ,CAAI,EAAG,CACjD,aAAc,GACd,eAAgB,EAClB,CAAC,CACH,CACF,CACF,CACF,CAAC,EACMiB,GAAc,OAAOT,EAAM,IAAKQ,CAAW,EACpD,EAgBac,GAAgB,CAC3BrB,EACA,CACE,qBAAAsB,EAAuBpC,GACvB,cAAAqC,EAAgBjC,GAChB,iBAAAkC,EAAmB5B,GACnB,aAAA6B,EAAgB1B,GAAUA,EAAM,SAClC,EAAI,CAAC,EACL2B,EAAmB,WAEnB,IAAIC,GAAO,CACT,IAAKC,GACL,MAAO,CACL,KAAMC,EAAG9B,EAAO,CACd,OAAOD,GACLC,EACAC,EACAsB,EACAC,EACAC,CACF,CACF,EACA,MAAOM,EAAIC,EAAWC,EAAWC,EAAU,CACzC,IAAM7B,EAASC,GAAe,SAAS4B,CAAQ,EACzCC,EAAeJ,EAAG,QAAQF,EAAgB,EAChD,OACGxB,GAAUA,EAAO,gBACjB8B,GAAgBA,EAAa,iBAEvBpC,GACLmC,EACAjC,EACAsB,EACAC,EACAC,CACF,EAEKO,EAAU,IAAID,EAAG,QAASA,EAAG,GAAG,CACzC,CACF,EACA,MAAO,CACL,YAAc/B,GACL6B,GAAiB,SAAS7B,CAAK,CAE1C,EACA,KAAOoC,GAAS,CACd,IAAMC,EAAoB,IAAM,CAE1BD,EAAK,SACPE,GAAQF,EAAMP,GAAkB,CAAE,iBAAkB,EAAK,CAAC,CAE9D,EACMU,EAAmB,IAAM,CAC7B,IAAMlC,EAASC,GAAe,SAAS8B,EAAK,KAAK,EAE3CI,EAAUvC,EAAU,cAAc,GAAK,CAAC,EAC9C,GAAII,EAAO,SAAW,KAGtB,GAAI+B,EAAK,SAAS,EAAG,CACnB,IAAMK,EAAYf,EAAaU,EAAK,KAAK,EAInCxB,EAAS8B,GACbD,EAAU,OACVpC,EAAO,KACPA,EAAO,QAAQ,OACjB,EAIMU,EAAO2B,GACXD,EAAU,KACVpC,EAAO,KACPA,EAAO,QAAQ,OACjB,GAEEmC,EAAQ,QAAU,MAClB,CAAGG,GACC7B,GAA+B0B,EAAQ,OAAO,MAAM,EACtD5B,CACF,GACA,CAAG+B,GACC7B,GAA+B0B,EAAQ,OAAO,IAAI,EACpDzB,CACF,IAEAd,EAAU,mBAAmB0B,EAAkB,CAC7C,OAAAf,EACA,KAAAG,CACF,CAAC,CAEL,MACEyB,EAAQ,QAAU,MAClB3B,GACER,EAAO,IACPA,EAAO,KACLS,GAA+B0B,EAAQ,OAAO,MAAM,EACtDnC,EAAO,QAAQ,OACjB,IAAM,MAGNJ,EAAU,mBAAmB0B,EAAkB,IAAI,CAEvD,EACA,OAAA1B,EAAU,GAAG,SAAUoC,CAAiB,EACxCD,EAAK,IAAI,iBAAiB,UAAWG,CAAgB,EACrDH,EAAK,IAAI,iBAAiB,WAAYG,CAAgB,EAC/C,CACL,OAAQA,EACR,QAAS,IAAM,CACbH,EAAK,IAAI,oBAAoB,UAAWG,CAAgB,EACxDH,EAAK,IAAI,oBAAoB,WAAYG,CAAgB,EACzDtC,EAAU,IAAI,SAAUoC,CAAiB,EACzCpC,EAAU,mBAAmB0B,EAAkB,IAAI,CACrD,CACF,CACF,CACF,CAAC,ECtQI,IAAMiB,GAAOC,GAAS,CAC3B,IAAMC,EAAcC,GAAe,SAASF,CAAK,EAAE,YACnD,GAAIC,GAAe,KACjB,OAAAA,EAAY,KAAK,EACV,EAEX,EAEaE,GAAOH,GAAS,CAC3B,IAAMC,EAAcC,GAAe,SAASF,CAAK,EAAE,YACnD,GAAIC,GAAe,KACjB,OAAAA,EAAY,KAAK,EACV,EAEX,EAEaG,GAAwB,IAAI,IAAI,CAAC,WAAW,CAAC,EAE7CC,GAAsB,CAACC,EAAMC,IAAmB,EAAED,aAAgBE,KAC/E,EAAEF,EAAK,mBAAmBG,KAC1B,EAAEH,EAAK,QAAQ,gBAAgBI,IAC5BJ,EAAK,QAAQ,gBAAgBK,IAAcJ,EAAe,IAAID,EAAK,QAAQ,KAAK,QAAQ,IAC3FA,EAAK,QAAQ,KAAK,UAAY,EAEjBM,GAAc,CAAC,CAAE,eAAAL,EAAiBH,GAAuB,eAAAS,EAAiB,CAAC,EAAG,YAAAZ,EAAc,IAAK,EAAI,CAAC,IAAM,IAAIa,GAAO,CAClI,IAAKZ,GACL,MAAO,CACL,KAAM,CAACa,EAAUf,IAAU,CAEzB,IAAMgB,EAASC,GAAe,SAASjB,CAAK,EACtCkB,EAAejB,GAAe,IAAIkB,GAAYH,EAAO,KAAM,CAC/D,eAAgB,IAAI,IAAI,CAACC,EAAc,EAAE,OAAOJ,CAAc,CAAC,EAC/D,aAAeP,GAASD,GAAoBC,EAAMC,CAAc,EAChE,mBAAoBa,GAAMA,EAAG,KAAK,IAAI,cAAc,IAAM,EAC5D,CAAC,EACD,MAAO,CACL,YAAaF,EACb,QAAS,KACT,WAAYA,EAAa,UAAU,OAAS,EAC5C,WAAYA,EAAa,UAAU,OAAS,CAC9C,CACF,EAIA,MAAO,CAACE,EAAIC,EAAKC,EAAUtB,IAAU,CACnC,IAAMuB,EAAUN,GAAe,SAASjB,CAAK,EAAE,QACzCC,EAAcoB,EAAI,YAClBG,EAAavB,EAAY,UAAU,OAAS,EAC5CwB,EAAaxB,EAAY,UAAU,OAAS,EAClD,OAAIsB,EACK,CACL,YAAAtB,EACA,QAASyB,GAAqBH,EAASD,CAAQ,EAC/C,WAAAE,EACA,WAAAC,CACF,EAEID,IAAeH,EAAI,YAAcI,IAAeJ,EAAI,WAC/C,OAAO,OAAO,CAAC,EAAGA,EAAK,CAC5B,WAAYpB,EAAY,UAAU,OAAS,EAC3C,WAAYA,EAAY,UAAU,OAAS,CAC7C,CAAC,EAEMoB,CAGb,CACF,EACA,KAAMM,GAAQ,CACZ,IAAMX,EAASC,GAAe,SAASU,EAAK,KAAK,EAC3C1B,EAAcC,GAAe,SAASyB,EAAK,KAAK,EAAE,YACxD,OAAA1B,EAAY,GAAG,mBAAoB,CAAC,CAAE,UAAA2B,CAAU,IAAM,CACpD,IAAML,EAAUP,EAAO,QACnBO,GACFK,EAAU,KAAK,IAAIL,EAASrB,GAAe,SAASyB,EAAK,KAAK,EAAE,OAAO,CAE3E,CAAC,EACD1B,EAAY,GAAG,oBAAqB,CAAC,CAAE,UAAA2B,CAAU,IAAM,CACrD,IAAML,EAAUP,EAAO,QACnBO,IACFA,EAAQ,2BAA6BK,EAAU,KAAK,IAAIL,CAAO,GAAKA,EAAQ,2BAEhF,CAAC,EACM,CACL,QAAS,IAAM,CACbtB,EAAY,QAAQ,CACtB,CACF,CACF,CACF,CAAC,ECpDY,IAAA4B,GAAgBC,GAAU,OAA6B,CAClE,KAAM,gBAEN,SAAU,IAEV,YAAU,CACR,MAAO,CACL,SAAU,KACV,MAAO,UACP,SAAU,OAId,UAAQ,CACF,KAAK,OAAO,iBAAiB,WAAW,KAAKC,GAAaA,EAAU,OAAS,SAAS,GACxF,QAAQ,KAAK,6IAA6I,GAI9J,aAAW,CACT,MAAO,CACL,KAAM,IAAM,CAAC,CAAE,GAAAC,EAAI,MAAAC,EAAO,SAAAC,CAAQ,KAChCF,EAAG,QAAQ,kBAAmB,EAAI,EAEDG,GAAe,SAASF,CAAK,EAAE,YAEhD,UAAU,SAAW,EAC5B,GAGJC,EAIEE,GAAKH,CAAK,EAHR,IAKX,KAAM,IAAM,CAAC,CAAE,GAAAD,EAAI,MAAAC,EAAO,SAAAC,CAAQ,KAChCF,EAAG,QAAQ,kBAAmB,EAAI,EAEDG,GAAe,SAASF,CAAK,EAAE,YAEhD,UAAU,SAAW,EAC5B,GAGJC,EAIEG,GAAKJ,CAAK,EAHR,MAQf,sBAAoB,CAClB,MAAO,CACL,QAAS,IAAM,KAAK,OAAO,SAAS,KAAI,EACxC,QAAS,IAAM,KAAK,OAAO,SAAS,KAAI,EACxC,cAAe,IAAM,KAAK,OAAO,SAAS,KAAI,IAIlD,uBAAqB,CACnB,IAAMK,EAAW,KAAK,QAAQ,SAC1B,KAAK,QAAQ,SACb,KAAK,QAAQ,SAAS,eAAe,KAAK,QAAQ,KAAK,EAIrDC,EAAsBC,GAAW,EACjCC,EAAyBF,EAAoB,KAAK,KAExDA,EAAoB,KAAK,KAAQG,GAAoB,CACnD,GAAM,CAAE,YAAAC,CAAW,EAAKR,GAAe,SAASO,EAAK,KAAK,EAEtDC,EAAY,UACdA,EAAY,QAAO,EAEnBA,EAAY,QAAU,IAAK,CAAA,GAG7B,IAAMC,EAAUH,EAAyBA,EAAuBC,CAAI,EAAI,OAExE,MAAO,CACL,QAAS,IAAK,CACZ,IAAMG,EAAiBF,EAAY,eAAe,IAAIA,CAAW,EAE3DG,EAAYH,EAAY,WAE9BA,EAAY,QAAU,IAAK,CACrBE,GACFF,EAAY,eAAe,IAAIA,CAAW,EAG5CA,EAAY,IAAI,GAAG,mBAAoBA,EAAY,uBAAuB,EAE1EA,EAAY,WAAaG,CAC3B,EAEIF,GAAA,MAAAA,EAAS,SACXA,EAAQ,QAAO,GAIvB,EAEA,IAAMG,EAAgB,KAAK,QAAQ,cAInC,MAAO,CAFqBC,GAAYV,EADbS,EAAgB,CAAE,cAAAA,CAAa,EAAK,CAAA,CACK,EAEvCR,CAAmB,EAEnD,CAAA,EEzHD,IAAMU,GAA0BC,GACvB,MAAM,KAAKA,EAAO,QAAO,CAAE,EAAE,IAAI,CAAC,CAACC,EAAKC,CAAK,IAC3CC,EAAA,CACL,SAAUF,GACPC,EAAM,KAEZ,EAGGE,GAAkB,IAAM,KAEjBC,GAAsBC,GAAU,OAA+D,CAC1G,KAAM,sBAEN,YAAU,CACR,MAAO,CACL,SAAU,KACV,KAAM,CACJ,KAAM,KACN,MAAO,IACR,EACD,OAAQC,GAAO,CACb,IAAMC,EAAS,SAAS,cAAc,MAAM,EAE5CA,EAAO,UAAU,IAAI,6BAA6B,EAClDA,EAAO,aAAa,QAAS,iBAAiBD,EAAK,KAAK,EAAE,EAE1D,IAAME,EAAQ,SAAS,cAAc,KAAK,EAE1C,OAAAA,EAAM,UAAU,IAAI,6BAA6B,EACjDA,EAAM,aAAa,QAAS,qBAAqBF,EAAK,KAAK,EAAE,EAC7DE,EAAM,aAAa,SAAS,eAAeF,EAAK,IAAI,EAAG,IAAI,EAC3DC,EAAO,aAAaC,EAAO,IAAI,EAExBD,GAET,gBAAiBE,GACjB,SAAUN,KAId,UAAQ,CACF,KAAK,QAAQ,WAAaA,IAC5B,QAAQ,KAAK,kMAAkM,GAInN,YAAU,CACR,MAAO,CACL,MAAO,CAAA,IAIX,aAAW,CACT,MAAO,CACL,WAAYO,GAAc,KACxB,KAAK,QAAQ,KAAOA,EAEpB,KAAK,QAAQ,SAAS,UAAU,mBAAmB,OAAQ,KAAK,QAAQ,IAAI,EAErE,IAET,KAAMA,GAAc,CAAC,CAAE,OAAAC,CAAM,KAC3B,QAAQ,KAAK,iKAAiK,EAEvKA,EAAO,SAAS,WAAWD,CAAU,KAKlD,uBAAqB,CACnB,MAAO,CACLE,IACG,KACC,KAAK,QAAQ,SAAS,UAAU,mBAAmB,OAAQ,KAAK,QAAQ,IAAI,EAE5E,KAAK,QAAQ,MAAQd,GAAuB,KAAK,QAAQ,SAAS,UAAU,MAAM,EAElF,KAAK,QAAQ,SAAS,UAAU,GAAG,SAAU,IAAK,CAChD,KAAK,QAAQ,MAAQA,GAAuB,KAAK,QAAQ,SAAS,UAAU,MAAM,CACpF,CAAC,EAEM,KAAK,QAAQ,SAAS,YAC9B,EAED,CACE,cAAe,KAAK,QAAQ,OAC5B,iBAAkB,KAAK,QAAQ,gBAChC,GAIR,CAAA,EC1HM,IAAMe,GAAQ,KAAK,MAwBbC,GAAM,CAACC,EAAGC,IAAMD,EAAIC,EAAID,EAAIC,EAQ5BC,GAAM,CAACF,EAAGC,IAAMD,EAAIC,EAAID,EAAIC,EClB5BE,GAAO,IAsCPC,GAAQ,ICjDRC,GAAmB,OAAO,iBC0C1BC,GAAsBC,GAAO,CACxC,IAAMC,EAAgB,SAAS,mBAAmBD,CAAG,CAAC,EAChDE,EAAMD,EAAc,OACpBE,EAAM,IAAI,WAAWD,CAAG,EAC9B,QAAS,EAAI,EAAG,EAAIA,EAAK,IACvBC,EAAI,CAAC,EAA2BF,EAAc,YAAY,CAAC,EAE7D,OAAOE,CACT,EAGaC,GAA8C,OAAO,aAAgB,YAAc,IAAI,YAAgB,KAMvGC,GAAoBL,GAAOI,GAAgB,OAAOJ,CAAG,EAOrDM,GAAaF,GAAkBC,GAAoBN,GAsBrDQ,GAAkB,OAAO,aAAgB,YAAc,KAAO,IAAI,YAAY,QAAS,CAAE,MAAO,GAAM,UAAW,EAAI,CAAE,EAG9HA,IAAmBA,GAAgB,OAAO,IAAI,UAAY,EAAE,SAAW,IAOzEA,GAAkB,MCsBb,IAAMC,GAAQ,CAACC,EAASC,IAAQ,CACrC,IAAMC,EAAYF,EAAQ,KAAK,OAC3BA,EAAQ,OAASE,IACnBF,EAAQ,KAAK,KAAKA,EAAQ,IAAI,EAC9BA,EAAQ,KAAO,IAAI,WAAWE,EAAY,CAAC,EAC3CF,EAAQ,KAAO,GAEjBA,EAAQ,KAAKA,EAAQ,MAAM,EAAIC,CACjC,EA0HaE,GAAe,CAACH,EAASC,IAAQ,CAC5C,KAAOA,EAAMG,IACXL,GAAMC,EAASK,GAAeD,GAAeH,CAAI,EACjDA,EAAMK,GAAWL,EAAM,GAAG,EAE5BF,GAAMC,EAASI,GAAeH,CAAG,CACnC,EA8BMM,GAAa,IAAI,WAAW,GAAK,EACjCC,GAAeD,GAAW,OAAS,EAS5BE,GAAwB,CAACT,EAAST,IAAQ,CACrD,GAAIA,EAAI,OAASiB,GAAc,CAG7B,IAAME,EAAUC,GAAuB,WAAWpB,EAAKgB,EAAU,EAAE,SAAW,EAC9EJ,GAAaH,EAASU,CAAO,EAC7B,QAASE,EAAI,EAAGA,EAAIF,EAASE,IAC3Bb,GAAMC,EAASO,GAAWK,CAAC,CAAC,CAElC,MACIC,GAAmBb,EAASc,GAAkBvB,CAAG,CAAC,CAEtD,EASawB,GAA0B,CAACf,EAAST,IAAQ,CACvD,IAAMC,EAAgB,SAAS,mBAAmBD,CAAG,CAAC,EAChDE,EAAMD,EAAc,OAC1BW,GAAaH,EAASP,CAAG,EACzB,QAAS,EAAI,EAAG,EAAIA,EAAK,IACvBM,GAAMC,EAAgCR,EAAc,YAAY,CAAC,CAAC,CAEtE,EAUawB,GAAkBL,IAA8CA,GAAwB,WAAcF,GAAwBM,GAgE9HE,GAAkB,CAACjB,EAASkB,IAAe,CACtD,IAAMhB,EAAYF,EAAQ,KAAK,OACzBmB,EAAOnB,EAAQ,KACfoB,EAAcC,GAASnB,EAAYiB,EAAMD,EAAW,MAAM,EAC1DI,EAAeJ,EAAW,OAASE,EACzCpB,EAAQ,KAAK,IAAIkB,EAAW,SAAS,EAAGE,CAAW,EAAGD,CAAI,EAC1DnB,EAAQ,MAAQoB,EACZE,EAAe,IAGjBtB,EAAQ,KAAK,KAAKA,EAAQ,IAAI,EAE9BA,EAAQ,KAAO,IAAI,WAAWuB,GAASrB,EAAY,EAAGoB,CAAY,CAAC,EAEnEtB,EAAQ,KAAK,IAAIkB,EAAW,SAASE,CAAW,CAAC,EACjDpB,EAAQ,KAAOsB,EAEnB,EASaT,GAAqB,CAACb,EAASkB,IAAe,CACzDf,GAAaH,EAASkB,EAAW,UAAU,EAC3CD,GAAgBjB,EAASkB,CAAU,CACrC,ECzaaM,GAASC,GAAK,IAAI,MAAMA,CAAC,ECwBhCC,GAA4BC,GAAa,yBAAyB,EAClEC,GAAyBD,GAAa,sBAAsB,EAiErDE,GAAiB,CAACC,EAASrC,IAAQ,CAC9C,IAAMsC,EAAO,IAAI,WAAWD,EAAQ,IAAI,OAAQA,EAAQ,IAAMA,EAAQ,IAAI,WAAYrC,CAAG,EACzF,OAAAqC,EAAQ,KAAOrC,EACRsC,CACT,EAYaC,GAAoBF,GAAWD,GAAeC,EAASG,GAAYH,CAAO,CAAC,EAwB3EI,GAAYJ,GAAWA,EAAQ,IAAIA,EAAQ,KAAK,EAmGhDG,GAAcH,GAAW,CACpC,IAAI7B,EAAM,EACNkC,EAAO,EACL1C,EAAMqC,EAAQ,IAAI,OACxB,KAAOA,EAAQ,IAAMrC,GAAK,CACxB,IAAM2C,EAAIN,EAAQ,IAAIA,EAAQ,KAAK,EAInC,GAFA7B,EAAMA,GAAOmC,EAAIhC,IAAgB+B,EACjCA,GAAQ,IACJC,EAAI/B,GACN,OAAOJ,EAGT,GAAIA,EAAMoC,GACR,MAAMT,EAGZ,CACE,MAAMF,EACR,EAkFaY,GAAyBR,GAAW,CAC/C,IAAIS,EAAeN,GAAYH,CAAO,EACtC,GAAIS,IAAiB,EACnB,MAAO,GACF,CACL,IAAI/C,EAAgB,OAAO,cAAc0C,GAAUJ,CAAO,CAAC,EAC3D,GAAI,EAAES,EAAe,IACnB,KAAOA,KACL/C,GAAiB,OAAO,cAAc0C,GAAUJ,CAAO,CAAC,MAG1D,MAAOS,EAAe,GAAG,CACvB,IAAMC,EAAUD,EAAe,IAAQA,EAAe,IAEhDE,EAAQX,EAAQ,IAAI,SAASA,EAAQ,IAAKA,EAAQ,IAAMU,CAAO,EACrEV,EAAQ,KAAOU,EAEfhD,GAAiB,OAAO,cAAc,MAAM,KAA0BiD,CAAK,EAC3EF,GAAgBC,CACxB,CAEI,OAAO,mBAAmB,OAAOhD,CAAa,CAAC,CACnD,CACA,EAQakD,GAAuBZ,GAChBa,GAAwB,OAAOX,GAAkBF,CAAO,CAAC,EAYhEc,GAAgBD,GAAyBD,GAAuBJ,GC9XxEO,IAAL,SAAKA,EAAe,CAClBA,EAAAA,EAAA,MAAA,CAAA,EAAA,QACAA,EAAAA,EAAA,iBAAA,CAAA,EAAA,mBACAA,EAAAA,EAAA,cAAA,CAAA,EAAA,eACF,GAJKA,KAAAA,GAIJ,CAAA,EAAA,MAEYC,GAAsB,CAAC9C,EAA2B+C,IAAgB,CAC7EC,GAAsBhD,EAAS6C,GAAgB,KAAK,EACpDI,GAAwBjD,EAAS+C,CAAI,CACvC,EAYa,IAAAG,GAAkB,CAC7BC,EACAC,EACAC,IACE,CACF,OAAQC,GAAqBH,CAAO,EAAC,CACnC,KAAKI,GAAgB,iBAAkB,CACrCH,EAAwBI,GAAuBL,CAAO,CAAC,EACvD,KACD,CACD,KAAKI,GAAgB,cAAe,CAClCF,EAAqBG,GAAuBL,CAAO,CAAC,EACpD,KACD,CAEF,CACH,EC9BaM,GAA4B,CACvC,KAAM,KACN,OAAQ,mBAgBG,IAAAC,GAA2B,CACtC,KAAM,KACN,OAAQ,gBAOGC,GAAwB,CACnC,KAAM,KACN,OAAQ,aCvCG,IAAAC,GAA0BC,GAC9B,MAAM,KAAKA,EAAO,QAAO,CAAE,EAAE,IAAI,CAAC,CAACC,EAAKC,CAAK,IAC3CC,EAAA,CACL,SAAUF,GACPC,EAEN,ECFSE,IAAZ,SAAYA,EAAa,CACvBA,EAAAA,EAAA,WAAA,CAAA,EAAA,aACAA,EAAAA,EAAA,KAAA,CAAA,EAAA,OACAA,EAAAA,EAAA,QAAA,CAAA,EAAA,UACAA,EAAAA,EAAA,OAAA,CAAA,EAAA,QACF,GALYA,KAAAA,GAKX,CAAA,EAAA,ECTD,SAASC,GAAcC,EAAS,CAC5B,OAAKA,IACDA,EAAU,CAAC,GAER,CACH,MAAQA,EAAQ,QAAU,OAAa,IAAMA,EAAQ,MACrD,aAAeA,EAAQ,eAAiB,OAAa,EAAIA,EAAQ,aACjE,SAAWA,EAAQ,WAAa,OAAa,EAAIA,EAAQ,SACzD,SAAWA,EAAQ,WAAa,OAAa,EAAIA,EAAQ,SACzD,OAASA,EAAQ,SAAW,OAAa,EAAIA,EAAQ,OACrD,YAAcA,EAAQ,cAAgB,OAAa,EAAIA,EAAQ,YAC/D,QAAUA,EAAQ,UAAY,OAAa,EAAIA,EAAQ,QACvD,OAASA,EAAQ,SAAW,GAC5B,YAAcA,EAAQ,cAAgB,OAAa,KAAOA,EAAQ,YAClE,cAAgBA,EAAQ,gBAAkB,OAAa,KAAOA,EAAQ,cACtE,cAAgBA,EAAQ,gBAAkB,OAAa,KAAOA,EAAQ,cACtE,eAAiBA,EAAQ,iBAAmB,OAAa,KAAOA,EAAQ,cAC5E,CACJ,CACA,eAAsBC,GAAMC,EAAO,CAC/B,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,WAAWD,EAASD,CAAK,CAC7B,CAAC,CACL,CACO,SAASG,GAAsBC,EAASN,EAAS,CACpD,IAAIE,EAAQF,EAAQ,MACpB,GAAIE,IAAU,EAEV,MAAO,GAQX,GANIF,EAAQ,SACRE,GAAS,KAAK,IAAIF,EAAQ,OAAQM,EAAQ,WAAa,CAAC,EACpDN,EAAQ,WAAa,IACrBE,EAAQ,KAAK,IAAIA,EAAOF,EAAQ,QAAQ,IAG5CA,EAAQ,OAAQ,CAKhB,IAAMO,EAAM,KAAK,KAAKP,EAAQ,QAAQ,EAChCQ,EAAM,KAAK,MAAMN,CAAK,EAC5BA,EAAQ,KAAK,MAAM,KAAK,OAAO,GAAKM,EAAMD,EAAM,EAAE,EAAIA,CAC1D,CACA,OAAO,KAAK,MAAML,CAAK,CAC3B,CACA,eAAsBO,GAAMC,EAAaC,EAAgB,CACrD,IAAMX,EAAUD,GAAcY,CAAc,EAC5C,QAAWC,IAAQ,CACf,QACA,eACA,WACA,WACA,cACA,SACJ,EAAG,CACC,IAAMC,EAAQb,EAAQY,CAAI,EAC1B,GAAI,CAAC,OAAO,UAAUC,CAAK,GAAMA,EAAQ,EACrC,MAAM,IAAI,MAAM,aAAaD,CAAI,gDAAgD,CAEzF,CACA,GAAKZ,EAAQ,OAAO,cAAgB,QAAYA,EAAQ,OAAS,EAC7D,MAAM,IAAI,MAAM,8DAA8D,EAElF,GAAIA,EAAQ,MAAQA,EAAQ,SACxB,MAAM,IAAI,MAAM,8CAA8CA,EAAQ,KAAK,eAAeA,EAAQ,QAAQ,EAAE,EAEhH,IAAMM,EAAU,CACZ,WAAY,EACZ,kBAAmBN,EAAQ,YAAcA,EAAQ,YAAc,GAC/D,QAAS,GACT,OAAQ,CACJM,EAAQ,QAAU,EACtB,CACJ,EACMQ,EAAiBd,EAAQ,gBAAkBK,GACjD,eAAeU,GAAc,CAIzB,GAHIf,EAAQ,eACRA,EAAQ,cAAcM,EAASN,CAAO,EAEtCM,EAAQ,QAAS,CACjB,IAAMU,EAAM,IAAI,MAAM,iBAAiB,EACvC,MAAAA,EAAI,KAAO,kBACLA,CACV,CACA,IAAMC,EAAU,MAAOD,GAAQ,CAI3B,GAHIhB,EAAQ,aACR,MAAMA,EAAQ,YAAYgB,EAAKV,EAASN,CAAO,EAE/CM,EAAQ,SAAYA,EAAQ,oBAAsB,EAClD,MAAMU,EAGVV,EAAQ,aACR,IAAMJ,EAAQY,EAAeR,EAASN,CAAO,EAC7C,OAAIE,GACA,MAAMD,GAAMC,CAAK,EAEda,EAAY,CACvB,EAIA,OAHIT,EAAQ,kBAAoB,GAC5BA,EAAQ,oBAERN,EAAQ,QACD,IAAI,QAAQ,CAACG,EAASC,IAAW,CACpC,IAAMc,EAAQ,WAAW,IAAM,CAC3B,GAAIlB,EAAQ,cAGR,GAAI,CACAG,EAAQH,EAAQ,cAAcM,EAASN,CAAO,CAAC,CACnD,OACOmB,EAAG,CACNf,EAAOe,CAAC,CACZ,KAEC,CACD,IAAMH,EAAM,IAAI,MAAM,8BAA8BV,EAAQ,UAAU,cAAcN,EAAQ,OAAO,GAAG,EACtGgB,EAAI,KAAO,kBACXZ,EAAOY,CAAG,CACd,CACJ,EAAGhB,EAAQ,OAAO,EAClBU,EAAYJ,EAASN,CAAO,EAAE,KAAMoB,GAAW,CAC3C,aAAaF,CAAK,EAClBf,EAAQiB,CAAM,CAClB,CAAC,EAAE,MAAOJ,GAAQ,CACd,aAAaE,CAAK,EAIlBD,EAAQD,CAAG,EAAE,KAAKb,CAAO,EAAE,MAAMC,CAAM,CAC3C,CAAC,CACL,CAAC,EAKMM,EAAYJ,EAASN,CAAO,EAAE,MAAMiB,CAAO,CAE1D,CACA,IAAMI,EAAerB,EAAQ,eACvBA,EAAQ,eAAeM,EAASN,CAAO,EACvCA,EAAQ,aACd,OAAIqB,GACA,MAAMpB,GAAMoB,CAAY,EAErBN,EAAY,CACvB,CCtIO,IAAMO,GAAS,IAAM,IAAI,IAgCnBC,GAAiB,CAACC,EAAKC,EAAKC,IAAY,CACnD,IAAIC,EAAMH,EAAI,IAAIC,CAAG,EACrB,OAAIE,IAAQ,QACVH,EAAI,IAAIC,EAAKE,EAAMD,EAAO,CAAE,EAEvBC,CACT,EC9CaL,GAAS,IAAM,IAAI,IC6CnBM,GAAO,MAAM,KC3CbC,GAAe,OAAO,aAa7BC,GAAcC,GAAKA,EAAE,YAAW,EAEhCC,GAAgB,QAMTC,GAAWF,GAAKA,EAAE,QAAQC,GAAe,EAAE,EAElDE,GAAqB,WAOdC,GAAgB,CAACJ,EAAGK,IAAcH,GAASF,EAAE,QAAQG,GAAoBG,GAAS,GAAGD,CAAS,GAAGN,GAAYO,CAAK,CAAC,EAAE,CAAC,EAatHC,GAAsBC,GAAO,CACxC,IAAMC,EAAgB,SAAS,mBAAmBD,CAAG,CAAC,EAChDE,EAAMD,EAAc,OACpBE,EAAM,IAAI,WAAWD,CAAG,EAC9B,QAAS,EAAI,EAAG,EAAIA,EAAK,IACvBC,EAAI,CAAC,EAA2BF,EAAc,YAAY,CAAC,EAE7D,OAAOE,CACT,EAGaC,GAA8C,OAAO,aAAgB,YAAc,IAAI,YAAgB,KAMvGC,GAAoBL,GAAOI,GAAgB,OAAOJ,CAAG,EAOrDM,GAAaF,GAAkBC,GAAoBN,GAsBrDQ,GAAkB,OAAO,aAAgB,YAAc,KAAO,IAAI,YAAY,QAAS,CAAE,MAAO,GAAM,UAAW,EAAI,CAAE,EAG9HA,IAAmBA,GAAgB,OAAO,IAAI,UAAY,EAAE,SAAW,IAOzEA,GAAkB,MC/Fb,IAAMC,GAAkBC,GAAKA,IAAM,OAAY,KAAOA,ECDvDC,GAAN,KAAyB,CACvB,aAAe,CACb,KAAK,IAAM,IAAI,GACnB,CAME,QAASxB,EAAKyB,EAAU,CACtB,KAAK,IAAI,IAAIzB,EAAKyB,CAAQ,CAC9B,CAKE,QAASzB,EAAK,CACZ,OAAO,KAAK,IAAI,IAAIA,CAAG,CAC3B,CACA,EAMI0B,GAAgB,IAAIF,GACpBG,GAAc,GAGlB,GAAI,CAEE,OAAO,cAAiB,aAAe,eACzCD,GAAgB,aAChBC,GAAc,GAElB,OAASC,EAAG,CAAA,CAOL,IAAMC,GAAaH,GASbI,GAAWC,GAAgBJ,IAAe,iBAAiB,UAA+BI,CAAY,EAStGC,GAAYD,GAAgBJ,IAAe,oBAAoB,UAA+BI,CAAY,ECpD1GE,GAAO,OAAO,KAqBdlC,GAAM,CAACmC,EAAKC,IAAM,CAC7B,IAAMC,EAAU,CAAA,EAChB,QAAWpC,KAAOkC,EAChBE,EAAQ,KAAKD,EAAED,EAAIlC,CAAG,EAAGA,CAAG,CAAC,EAE/B,OAAOoC,CACT,EAMaC,GAASH,GAAOD,GAAKC,CAAG,EAAE,OAgD1BI,GAAc,CAACJ,EAAKlC,IAAQ,OAAO,UAAU,eAAe,KAAKkC,EAAKlC,CAAG,ECjDzEuC,GAAiB,CAACC,EAAGC,IAAMD,IAAMC,EAkBjCC,GAAe,CAACF,EAAGC,IAAM,CACpC,GAAID,GAAK,MAAQC,GAAK,KACpB,OAAOF,GAAeC,EAAGC,CAAC,EAE5B,GAAID,EAAE,cAAgBC,EAAE,YACtB,MAAO,GAET,GAAID,IAAMC,EACR,MAAO,GAET,OAAQD,EAAE,YAAW,CACnB,KAAK,YACHA,EAAI,IAAI,WAAWA,CAAC,EACpBC,EAAI,IAAI,WAAWA,CAAC,EAEtB,KAAK,WAAY,CACf,GAAID,EAAE,aAAeC,EAAE,WACrB,MAAO,GAET,QAASE,EAAI,EAAGA,EAAIH,EAAE,OAAQG,IAC5B,GAAIH,EAAEG,CAAC,IAAMF,EAAEE,CAAC,EACd,MAAO,GAGX,KACN,CACI,KAAK,IAAK,CACR,GAAIH,EAAE,OAASC,EAAE,KACf,MAAO,GAET,QAAWG,KAASJ,EAClB,GAAI,CAACC,EAAE,IAAIG,CAAK,EACd,MAAO,GAGX,KACN,CACI,KAAK,IAAK,CACR,GAAIJ,EAAE,OAASC,EAAE,KACf,MAAO,GAET,QAAWzC,KAAOwC,EAAE,KAAI,EACtB,GAAI,CAACC,EAAE,IAAIzC,CAAG,GAAK,CAAC0C,GAAaF,EAAE,IAAIxC,CAAG,EAAGyC,EAAE,IAAIzC,CAAG,CAAC,EACrD,MAAO,GAGX,KACN,CACI,KAAK,OACH,GAAI6C,GAAcL,CAAC,IAAMK,GAAcJ,CAAC,EACtC,MAAO,GAET,QAAWzC,KAAOwC,EAChB,GAAI,CAACM,GAAmBN,EAAGxC,CAAG,GAAK,CAAC0C,GAAaF,EAAExC,CAAG,EAAGyC,EAAEzC,CAAG,CAAC,EAC7D,MAAO,GAGX,MACF,KAAK,MACH,GAAIwC,EAAE,SAAWC,EAAE,OACjB,MAAO,GAET,QAASE,EAAI,EAAGA,EAAIH,EAAE,OAAQG,IAC5B,GAAI,CAACD,GAAaF,EAAEG,CAAC,EAAGF,EAAEE,CAAC,CAAC,EAC1B,MAAO,GAGX,MACF,QACE,MAAO,EACb,CACE,MAAO,EACT,EAUaI,GAAU,CAACH,EAAOI,IAAYA,EAAQ,SAASJ,CAAK,ECzIpDK,GAAS,OAAO,SAAY,aAAe,QAAQ,SAAW,cAAc,KAAK,QAAQ,QAAQ,IAAI,GAAK,OAAO,UAAU,SAAS,KAAK,OAAO,SAAY,YAAc,QAAU,CAAC,IAAM,mBAG3LC,GAAY,OAAO,QAAW,aAAe,OAAO,UAAa,aAAe,CAACD,GAEzE,OAAO,WAAc,aACtC,MAAM,KAAK,UAAU,QAAQ,EAMjC,IAAIE,GAIEC,GAAgB,IAAM,CAC1B,GAAID,KAAW,OACb,GAAIF,GAAQ,CACVE,GAASE,GAAU,EACnB,IAAMC,EAAQ,QAAQ,KAClBC,EAAgB,KACpB,QAASZ,EAAI,EAAGA,EAAIW,EAAM,OAAQX,IAAK,CACrC,IAAMa,EAAOF,EAAMX,CAAC,EAChBa,EAAK,CAAC,IAAM,KACVD,IAAkB,MACpBJ,GAAO,IAAII,EAAe,EAAE,EAE9BA,EAAgBC,GAEZD,IAAkB,OACpBJ,GAAO,IAAII,EAAeC,CAAI,EAC9BD,EAAgB,KAK5B,CACUA,IAAkB,MACpBJ,GAAO,IAAII,EAAe,EAAE,CAGpC,MAAe,OAAO,UAAa,UAC7BJ,GAASE,GAAU,GAClB,SAAS,QAAU,KAAK,MAAM,CAAC,EAAE,MAAM,GAAG,EAAE,QAASI,GAAO,CAC3D,GAAIA,EAAG,SAAW,EAAG,CACnB,GAAM,CAACzD,EAAK4C,CAAK,EAAIa,EAAG,MAAM,GAAG,EACjCN,GAAO,IAAI,KAAKO,GAAqB1D,EAAK,GAAG,CAAC,GAAI4C,CAAK,EACvDO,GAAO,IAAI,IAAIO,GAAqB1D,EAAK,GAAG,CAAC,GAAI4C,CAAK,CAChE,CACA,CAAO,GAEDO,GAASE,GAAU,EAGvB,OAAOF,EACT,EAQaQ,GAAYC,GAASR,GAAa,EAAG,IAAIQ,CAAI,EAgB7CC,GAAeD,GAEtBE,GADJb,GAC+B,QAAQ,IAAIW,EAAK,YAAW,CAAE,EAC9BG,GAAmB,QAAQH,CAAI,CADA,EAgBnDI,GAAWJ,GACtBD,GAAS,KAAOC,CAAI,GAAKC,GAAYD,CAAI,IAAM,KAGvBI,GAAQ,YAAY,EAG9C,IAAMC,GAAahB,IACjBiB,GAAU,QAAQ,IAAI,YAAa,CAAC,OAAQ,IAAK,GAAG,CAAC,EAG1B,CAACP,GAAS,WAAW,IAC/C,CAACV,IAAU,QAAQ,OAAO,OAASgB,MACpC,CAAChB,IAAUU,GAAS,OAAO,GAAKM,IAC9BJ,GAAY,WAAW,IAAM,OAC5BA,GAAY,MAAM,GAAK,IAAI,SAAS,OAAO,GCzHzC,IAAMM,GAAQ,KAAK,MAwBbC,GAAM,CAAC5B,EAAGC,IAAMD,EAAIC,EAAID,EAAIC,EAQ5B4B,GAAM,CAAC7B,EAAGC,IAAMD,EAAIC,EAAID,EAAIC,ECnB5B6B,GAAO,GACPC,GAAO,IAqCPC,GAAQ,GACRC,GAAQ,ICjDRC,GAAmB,OAAO,iBC4B1BC,GAAN,KAAc,CACnB,aAAe,CACb,KAAK,KAAO,EACZ,KAAK,KAAO,IAAI,WAAW,GAAG,EAI9B,KAAK,KAAO,CAAA,CAChB,CACA,EAMaC,GAAgB,IAAM,IAAID,GAkB1BtC,GAASwC,GAAW,CAC/B,IAAI7D,EAAM6D,EAAQ,KAClB,QAASlC,EAAI,EAAGA,EAAIkC,EAAQ,KAAK,OAAQlC,IACvC3B,GAAO6D,EAAQ,KAAKlC,CAAC,EAAE,OAEzB,OAAO3B,CACT,EAkBa8D,GAAeD,GAAW,CACrC,IAAME,EAAW,IAAI,WAAW1C,GAAOwC,CAAO,CAAC,EAC3CG,EAAS,EACb,QAASrC,EAAI,EAAGA,EAAIkC,EAAQ,KAAK,OAAQlC,IAAK,CAC5C,IAAMsC,EAAIJ,EAAQ,KAAKlC,CAAC,EACxBoC,EAAS,IAAIE,EAAGD,CAAM,EACtBA,GAAUC,EAAE,MAChB,CACE,OAAAF,EAAS,IAAI,IAAI,WAAWF,EAAQ,KAAK,OAAQ,EAAGA,EAAQ,IAAI,EAAGG,CAAM,EAClED,CACT,EAyBaG,GAAQ,CAACL,EAASM,IAAQ,CACrC,IAAMC,EAAYP,EAAQ,KAAK,OAC3BA,EAAQ,OAASO,IACnBP,EAAQ,KAAK,KAAKA,EAAQ,IAAI,EAC9BA,EAAQ,KAAO,IAAI,WAAWO,EAAY,CAAC,EAC3CP,EAAQ,KAAO,GAEjBA,EAAQ,KAAKA,EAAQ,MAAM,EAAIM,CACjC,EA0HaE,GAAe,CAACR,EAASM,IAAQ,CAC5C,KAAOA,EAAMG,IACXJ,GAAML,EAASU,GAAeD,GAAeH,CAAI,EACjDA,EAAMK,GAAWL,EAAM,GAAG,EAE5BD,GAAML,EAASS,GAAeH,CAAG,CACnC,EA8BMM,GAAa,IAAI,WAAW,GAAK,EACjCC,GAAeD,GAAW,OAAS,EAS5BE,GAAwB,CAACd,EAAS/D,IAAQ,CACrD,GAAIA,EAAI,OAAS4E,GAAc,CAG7B,IAAME,EAAUC,GAAuB,WAAW/E,EAAK2E,EAAU,EAAE,SAAW,EAC9EJ,GAAaR,EAASe,CAAO,EAC7B,QAASjD,EAAI,EAAGA,EAAIiD,EAASjD,IAC3BuC,GAAML,EAASY,GAAW9C,CAAC,CAAC,CAElC,MACImD,GAAmBjB,EAASkB,GAAkBjF,CAAG,CAAC,CAEtD,EASakF,GAA0B,CAACnB,EAAS/D,IAAQ,CACvD,IAAMC,EAAgB,SAAS,mBAAmBD,CAAG,CAAC,EAChDE,EAAMD,EAAc,OAC1BsE,GAAaR,EAAS7D,CAAG,EACzB,QAAS,EAAI,EAAG,EAAIA,EAAK,IACvBkE,GAAML,EAAgC9D,EAAc,YAAY,CAAC,CAAC,CAEtE,EAUakF,GAAkBJ,IAA8CA,GAAwB,WAAcF,GAAwBK,GAgE9HE,GAAkB,CAACrB,EAASsB,IAAe,CACtD,IAAMf,EAAYP,EAAQ,KAAK,OACzBuB,EAAOvB,EAAQ,KACfwB,EAAcC,GAASlB,EAAYgB,EAAMD,EAAW,MAAM,EAC1DI,EAAeJ,EAAW,OAASE,EACzCxB,EAAQ,KAAK,IAAIsB,EAAW,SAAS,EAAGE,CAAW,EAAGD,CAAI,EAC1DvB,EAAQ,MAAQwB,EACZE,EAAe,IAGjB1B,EAAQ,KAAK,KAAKA,EAAQ,IAAI,EAE9BA,EAAQ,KAAO,IAAI,WAAW2B,GAASpB,EAAY,EAAGmB,CAAY,CAAC,EAEnE1B,EAAQ,KAAK,IAAIsB,EAAW,SAASE,CAAW,CAAC,EACjDxB,EAAQ,KAAO0B,EAEnB,EASaT,GAAqB,CAACjB,EAASsB,IAAe,CACzDd,GAAaR,EAASsB,EAAW,UAAU,EAC3CD,GAAgBrB,EAASsB,CAAU,CACrC,ECzaatG,GAASS,GAAK,IAAI,MAAMA,CAAC,ECwBhCmG,GAA4BC,GAAa,yBAAyB,EAClEC,GAAyBD,GAAa,sBAAsB,EAKrDE,GAAN,KAAc,CAInB,YAAaT,EAAY,CAMvB,KAAK,IAAMA,EAMX,KAAK,IAAM,CACf,CACA,EAOaU,GAAgBV,GAAc,IAAIS,GAAQT,CAAU,EAmCpDW,GAAiB,CAACC,EAAS/F,IAAQ,CAC9C,IAAMgG,EAAO,IAAI,WAAWD,EAAQ,IAAI,OAAQA,EAAQ,IAAMA,EAAQ,IAAI,WAAY/F,CAAG,EACzF,OAAA+F,EAAQ,KAAO/F,EACRgG,CACT,EAYaC,GAAoBF,GAAWD,GAAeC,EAASG,GAAYH,CAAO,CAAC,EAwB3EI,GAAYJ,GAAWA,EAAQ,IAAIA,EAAQ,KAAK,EAmGhDG,GAAcH,GAAW,CACpC,IAAI5B,EAAM,EACNiC,EAAO,EACLpG,EAAM+F,EAAQ,IAAI,OACxB,KAAOA,EAAQ,IAAM/F,GAAK,CACxB,IAAMqG,EAAIN,EAAQ,IAAIA,EAAQ,KAAK,EAInC,GAFA5B,EAAMA,GAAOkC,EAAI/B,IAAgB8B,EACjCA,GAAQ,IACJC,EAAI9B,GACN,OAAOJ,EAGT,GAAIA,EAAMmC,GACR,MAAMX,EAGZ,CACE,MAAMF,EACR,EAaac,GAAaR,GAAW,CACnC,IAAIM,EAAIN,EAAQ,IAAIA,EAAQ,KAAK,EAC7B5B,EAAMkC,EAAIG,GACVJ,EAAO,GACLK,GAAQJ,EAAIK,IAAe,EAAI,GAAK,EAC1C,GAAK,EAAAL,EAAI9B,IAEP,OAAOkC,EAAOtC,EAEhB,IAAMnE,EAAM+F,EAAQ,IAAI,OACxB,KAAOA,EAAQ,IAAM/F,GAAK,CAKxB,GAJAqG,EAAIN,EAAQ,IAAIA,EAAQ,KAAK,EAE7B5B,EAAMA,GAAOkC,EAAI/B,IAAgB8B,EACjCA,GAAQ,IACJC,EAAI9B,GACN,OAAOkC,EAAOtC,EAGhB,GAAIA,EAAMmC,GACR,MAAMX,EAGZ,CACE,MAAMF,EACR,EA4CakB,GAAyBZ,GAAW,CAC/C,IAAIa,EAAeV,GAAYH,CAAO,EACtC,GAAIa,IAAiB,EACnB,MAAO,GACF,CACL,IAAI7G,EAAgB,OAAO,cAAcoG,GAAUJ,CAAO,CAAC,EAC3D,GAAI,EAAEa,EAAe,IACnB,KAAOA,KACL7G,GAAiB,OAAO,cAAcoG,GAAUJ,CAAO,CAAC,MAG1D,MAAOa,EAAe,GAAG,CACvB,IAAMC,EAAUD,EAAe,IAAQA,EAAe,IAEhDE,EAAQf,EAAQ,IAAI,SAASA,EAAQ,IAAKA,EAAQ,IAAMc,CAAO,EACrEd,EAAQ,KAAOc,EAEf9G,GAAiB,OAAO,cAAc,MAAM,KAA0B+G,CAAK,EAC3EF,GAAgBC,CACxB,CAEI,OAAO,mBAAmB,OAAO9G,CAAa,CAAC,CACnD,CACA,EAQagH,GAAuBhB,GAChBiB,GAAwB,OAAOf,GAAkBF,CAAO,CAAC,EAYhEkB,GAAgBD,GAAyBD,GAAuBJ,GAkChEO,GAAgBnB,GAAW,CACtC,IAAMoB,EAAMpB,EAAQ,IACdzG,EAAI2H,GAAclB,CAAO,EAC/B,OAAAA,EAAQ,IAAMoB,EACP7H,CACT,ECxZa8H,GAA0BpH,GAAO,IAAI,WAAWA,CAAG,EASnDqH,GAAsC,CAACC,EAAQC,EAAYlG,IAAW,IAAI,WAAWiG,EAAQC,EAAYlG,CAAM,EAO/GmG,GAAkCF,GAAU,IAAI,WAAWA,CAAM,EAOxEG,GAAkBX,GAAS,CAC/B,IAAIxH,EAAI,GACR,QAASqC,EAAI,EAAGA,EAAImF,EAAM,WAAYnF,IACpCrC,GAAKoI,GAAoBZ,EAAMnF,CAAC,CAAC,EAGnC,OAAO,KAAKrC,CAAC,CACf,EAOMqI,GAAeb,GAAS,OAAO,KAAKA,EAAM,OAAQA,EAAM,WAAYA,EAAM,UAAU,EAAE,SAAS,QAAQ,EAOvGc,GAAoBtI,GAAK,CAE7B,IAAMkC,EAAI,KAAKlC,CAAC,EACVwH,EAAQM,GAAwB5F,EAAE,MAAM,EAC9C,QAASG,EAAI,EAAGA,EAAIH,EAAE,OAAQG,IAC5BmF,EAAMnF,CAAC,EAAIH,EAAE,WAAWG,CAAC,EAE3B,OAAOmF,CACT,EAMMe,GAAiBvI,GAAK,CAC1B,IAAMW,EAAM,OAAO,KAAKX,EAAG,QAAQ,EACnC,OAAO+H,GAAoCpH,EAAI,OAAQA,EAAI,WAAYA,EAAI,UAAU,CACvF,EAGa6H,GAAWC,GAAgBN,GAAkBE,GAG7CK,GAAaD,GAAgBH,GAAoBC,GClDxDI,GAAW,IAAI,IAGfC,GAAN,KAA2B,CAIzB,YAAaC,EAAM,CACjB,KAAK,KAAOA,EAIZ,KAAK,UAAY,KAIjB,KAAK,UAAYvH,GAAKA,EAAE,MAAQuH,GAAQ,KAAK,YAAc,MAAQ,KAAK,UAAU,CAAE,KAAMC,GAAkBxH,EAAE,UAAY,EAAE,CAAC,CAAE,EAC/HyH,GAAiB,KAAK,SAAS,CACnC,CAKE,YAAapI,EAAK,CAChB8C,GAAmB,QAAQ,KAAK,KAAMuF,GAAgBC,GAAuCtI,CAAG,CAAC,CAAC,CACtG,CAEE,OAAS,CACPuI,GAAkB,KAAK,SAAS,CACpC,CACA,EAKMC,GAAK,OAAO,kBAAqB,YAAcP,GAAuB,iBAMtEQ,GAAaP,GACjBQ,GAAmBV,GAAUE,EAAM,IAAM,CACvC,IAAMS,EAAOC,GAAU,EACjBC,EAAK,IAAIL,GAAGN,CAAI,EAKtB,OAAAW,EAAG,UAAYlI,GAAKgI,EAAK,QAAQG,GAAOA,EAAInI,EAAE,KAAM,kBAAkB,CAAC,EAChE,CACL,GAAAkI,EAAI,KAAAF,CACV,CACA,CAAG,EASUI,GAAY,CAACb,EAAMhH,KAC9BuH,GAAWP,CAAI,EAAE,KAAK,IAAIhH,CAAC,EACpBA,GAUI8H,GAAc,CAACd,EAAMhH,IAAM,CACtC,IAAM+H,EAAUR,GAAWP,CAAI,EACzBgB,EAAeD,EAAQ,KAAK,OAAO/H,CAAC,EAC1C,OAAIgI,GAAgBD,EAAQ,KAAK,OAAS,IACxCA,EAAQ,GAAG,MAAK,EAChBjB,GAAS,OAAOE,CAAI,GAEfgB,CACT,EAUaC,GAAU,CAACjB,EAAMkB,EAAMC,EAAS,OAAS,CACpD,IAAMC,EAAIb,GAAWP,CAAI,EACzBoB,EAAE,GAAG,YAAYF,CAAI,EACrBE,EAAE,KAAK,QAAQR,GAAOA,EAAIM,EAAMC,CAAM,CAAC,CACzC,ECrGaE,GAAc,IAAM,CAC/B,IAAIC,EAAQ,GACZ,MAAO,CAACtI,EAAGuI,IAAM,CACf,GAAID,EAAO,CACTA,EAAQ,GACR,GAAI,CACFtI,EAAC,CACT,QAAO,CACCsI,EAAQ,EAChB,CACA,MAAeC,IAAM,QACfA,EAAC,CAEP,CACA,ECrBaC,GAAc,KAAK,IC2EnBC,GAAN,KAAiB,CACtB,aAAe,CAKb,KAAK,WAAavH,GAAU,CAChC,CAME,GAAIO,EAAMzB,EAAG,CACXwH,GAAmB,KAAK,WAAY/F,EAAMiG,EAAU,EAAE,IAAI1H,CAAC,CAC/D,CAME,KAAMyB,EAAMzB,EAAG,CAIb,IAAM0I,EAAK,IAAIC,IAAS,CACtB,KAAK,IAAIlH,EAAMiH,CAAE,EACjB1I,EAAE,GAAG2I,CAAI,CACf,EACI,KAAK,GAAGlH,EAAMiH,CAAE,CACpB,CAME,IAAKjH,EAAMzB,EAAG,CACZ,IAAM4I,EAAY,KAAK,WAAW,IAAInH,CAAI,EACtCmH,IAAc,SAChBA,EAAU,OAAO5I,CAAC,EACd4I,EAAU,OAAS,GACrB,KAAK,WAAW,OAAOnH,CAAI,EAGnC,CAWE,KAAMA,EAAMkH,EAAM,CAEhB,OAAOE,IAAY,KAAK,WAAW,IAAIpH,CAAI,GAAKP,GAAU,GAAI,OAAM,CAAE,EAAE,QAAQlB,GAAKA,EAAE,GAAG2I,CAAI,CAAC,CACnG,CAEE,SAAW,CACT,KAAK,WAAazH,GAAU,CAChC,CACA,ECnJa4H,GAAkB,IA0BlBC,GAAN,cAAwBN,EAAW,CAIxC,YAAaO,EAAK,CAChB,MAAK,EACL,KAAK,IAAMA,EAIX,KAAK,SAAWA,EAAI,SAKpB,KAAK,OAAS,IAAI,IAIlB,KAAK,KAAO,IAAI,IAChB,KAAK,eAAqC,YAAY,IAAM,CAC1D,IAAMC,EAAMC,GAAgB,EACxB,KAAK,cAAa,IAAO,MAASJ,GAAkB,GAAKG,EAA2C,KAAK,KAAK,IAAI,KAAK,QAAQ,EAAG,aAEpI,KAAK,cAAc,KAAK,cAAa,CAAE,EAKzC,IAAME,EAAS,CAAA,EACf,KAAK,KAAK,QAAQ,CAACC,EAAMC,IAAa,CAChCA,IAAa,KAAK,UAAYP,IAAmBG,EAAMG,EAAK,aAAe,KAAK,OAAO,IAAIC,CAAQ,GACrGF,EAAO,KAAKE,CAAQ,CAE9B,CAAO,EACGF,EAAO,OAAS,GAClBG,GAAsB,KAAMH,EAAQ,SAAS,CAErD,EAAO9F,GAAWyF,GAAkB,EAAE,CAAC,EACnCE,EAAI,GAAG,UAAW,IAAM,CACtB,KAAK,QAAO,CAClB,CAAK,EACD,KAAK,cAAc,CAAA,CAAE,CACzB,CAEE,SAAW,CACT,KAAK,KAAK,UAAW,CAAC,IAAI,CAAC,EAC3B,KAAK,cAAc,IAAI,EACvB,MAAM,QAAO,EACb,cAAc,KAAK,cAAc,CACrC,CAKE,eAAiB,CACf,OAAO,KAAK,OAAO,IAAI,KAAK,QAAQ,GAAK,IAC7C,CAKE,cAAeO,EAAO,CACpB,IAAMC,EAAW,KAAK,SAChBC,EAAgB,KAAK,KAAK,IAAID,CAAQ,EACtCE,EAAQD,IAAkB,OAAY,EAAIA,EAAc,MAAQ,EAChEE,EAAY,KAAK,OAAO,IAAIH,CAAQ,EACtCD,IAAU,KACZ,KAAK,OAAO,OAAOC,CAAQ,EAE3B,KAAK,OAAO,IAAIA,EAAUD,CAAK,EAEjC,KAAK,KAAK,IAAIC,EAAU,CACtB,MAAAE,EACA,YAAaR,GAAgB,CACnC,CAAK,EACD,IAAMU,EAAQ,CAAA,EACRC,EAAU,CAAA,EACVC,EAAkB,CAAA,EAClBC,EAAU,CAAA,EACZR,IAAU,KACZQ,EAAQ,KAAKP,CAAQ,EACZG,GAAa,KAClBJ,GAAS,MACXK,EAAM,KAAKJ,CAAQ,GAGrBK,EAAQ,KAAKL,CAAQ,EAChBQ,GAAeL,EAAWJ,CAAK,GAClCO,EAAgB,KAAKN,CAAQ,IAG7BI,EAAM,OAAS,GAAKE,EAAgB,OAAS,GAAKC,EAAQ,OAAS,IACrE,KAAK,KAAK,SAAU,CAAC,CAAE,MAAAH,EAAO,QAASE,EAAiB,QAAAC,CAAO,EAAI,OAAO,CAAC,EAE7E,KAAK,KAAK,SAAU,CAAC,CAAE,MAAAH,EAAO,QAAAC,EAAS,QAAAE,CAAO,EAAI,OAAO,CAAC,CAC9D,CAME,mBAAoBE,EAAOxJ,EAAO,CAChC,IAAM8I,EAAQ,KAAK,cAAa,EAC5BA,IAAU,MACZ,KAAK,cAAcW,EAAAC,EAAA,GACdZ,GADc,CAEjB,CAACU,CAAK,EAAGxJ,CACjB,EAAO,CAEP,CAKE,WAAa,CACX,OAAO,KAAK,MAChB,CACA,EAUa6I,GAAwB,CAACc,EAAWC,EAASlC,IAAW,CACnE,IAAM4B,EAAU,CAAA,EAChB,QAAS,EAAI,EAAG,EAAIM,EAAQ,OAAQ,IAAK,CACvC,IAAMb,EAAWa,EAAQ,CAAC,EAC1B,GAAID,EAAU,OAAO,IAAIZ,CAAQ,EAAG,CAElC,GADAY,EAAU,OAAO,OAAOZ,CAAQ,EAC5BA,IAAaY,EAAU,SAAU,CACnC,IAAME,EAA0CF,EAAU,KAAK,IAAIZ,CAAQ,EAC3EY,EAAU,KAAK,IAAIZ,EAAU,CAC3B,MAAOc,EAAQ,MAAQ,EACvB,YAAapB,GAAgB,CACvC,CAAS,CACT,CACMa,EAAQ,KAAKP,CAAQ,CAC3B,CACA,CACMO,EAAQ,OAAS,IACnBK,EAAU,KAAK,SAAU,CAAC,CAAE,MAAO,CAAA,EAAI,QAAS,CAAA,EAAI,QAAAL,CAAO,EAAI5B,CAAM,CAAC,EACtEiC,EAAU,KAAK,SAAU,CAAC,CAAE,MAAO,CAAA,EAAI,QAAS,CAAA,EAAI,QAAAL,CAAO,EAAI5B,CAAM,CAAC,EAE1E,EAOaoC,GAAwB,CAACH,EAAWC,EAASG,EAASJ,EAAU,SAAW,CACtF,IAAMvL,EAAMwL,EAAQ,OACd3H,EAAU+H,GAAsB,EACtCC,GAAsBhI,EAAS7D,CAAG,EAClC,QAAS2B,EAAI,EAAGA,EAAI3B,EAAK2B,IAAK,CAC5B,IAAMgJ,EAAWa,EAAQ7J,CAAC,EACpB+I,EAAQiB,EAAO,IAAIhB,CAAQ,GAAK,KAChCE,EAAwCU,EAAU,KAAK,IAAIZ,CAAQ,EAAG,MAC5EkB,GAAsBhI,EAAS8G,CAAQ,EACvCkB,GAAsBhI,EAASgH,CAAK,EACpCiB,GAAwBjI,EAAS,KAAK,UAAU6G,CAAK,CAAC,CAC1D,CACE,OAAOqB,GAAsBlI,CAAO,CACtC,EAkCamI,GAAuB,CAACT,EAAWU,EAAQ3C,IAAW,CACjE,IAAMvD,EAAUmG,GAAuBD,CAAM,EACvCE,EAAY9B,GAAgB,EAC5BU,EAAQ,CAAA,EACRC,EAAU,CAAA,EACVC,EAAkB,CAAA,EAClBC,EAAU,CAAA,EACVlL,EAAMoM,GAAqBrG,CAAO,EACxC,QAASpE,EAAI,EAAGA,EAAI3B,EAAK2B,IAAK,CAC5B,IAAMgJ,EAAWyB,GAAqBrG,CAAO,EACzC8E,EAAQuB,GAAqBrG,CAAO,EAClC2E,EAAQ,KAAK,MAAM2B,GAAuBtG,CAAO,CAAC,EAClDuG,EAAaf,EAAU,KAAK,IAAIZ,CAAQ,EACxCG,EAAYS,EAAU,OAAO,IAAIZ,CAAQ,EACzC4B,EAAYD,IAAe,OAAY,EAAIA,EAAW,OACxDC,EAAY1B,GAAU0B,IAAc1B,GAASH,IAAU,MAAQa,EAAU,OAAO,IAAIZ,CAAQ,KAC1FD,IAAU,KAERC,IAAaY,EAAU,UAAYA,EAAU,cAAa,GAAM,KAGlEV,IAEAU,EAAU,OAAO,OAAOZ,CAAQ,EAGlCY,EAAU,OAAO,IAAIZ,EAAUD,CAAK,EAEtCa,EAAU,KAAK,IAAIZ,EAAU,CAC3B,MAAAE,EACA,YAAasB,CACrB,CAAO,EACGG,IAAe,QAAa5B,IAAU,KACxCK,EAAM,KAAKJ,CAAQ,EACV2B,IAAe,QAAa5B,IAAU,KAC/CQ,EAAQ,KAAKP,CAAQ,EACZD,IAAU,OACdS,GAAeT,EAAOI,CAAS,GAClCG,EAAgB,KAAKN,CAAQ,EAE/BK,EAAQ,KAAKL,CAAQ,GAG7B,EACMI,EAAM,OAAS,GAAKE,EAAgB,OAAS,GAAKC,EAAQ,OAAS,IACrEK,EAAU,KAAK,SAAU,CAAC,CACxB,MAAAR,EAAO,QAASE,EAAiB,QAAAC,CACvC,EAAO5B,CAAM,CAAC,GAERyB,EAAM,OAAS,GAAKC,EAAQ,OAAS,GAAKE,EAAQ,OAAS,IAC7DK,EAAU,KAAK,SAAU,CAAC,CACxB,MAAAR,EAAO,QAAAC,EAAS,QAAAE,CACtB,EAAO5B,CAAM,CAAC,CAEd,ECtSqBkD,GAAP,KAAmB,CAAjC,aAAA,CAES,KAAS,UAAkC,CAAA,EAE3C,GAAGC,EAAeC,EAAY,CACnC,OAAK,KAAK,UAAUD,CAAK,IACvB,KAAK,UAAUA,CAAK,EAAI,CAAA,GAG1B,KAAK,UAAUA,CAAK,EAAE,KAAKC,CAAE,EAEtB,KAGC,KAAKD,KAAkB3C,EAAS,CACxC,IAAM6C,EAAY,KAAK,UAAUF,CAAK,EAEtC,OAAIE,GACFA,EAAU,QAAQC,GAAYA,EAAS,MAAM,KAAM9C,CAAI,CAAC,EAGnD,KAGF,IAAI2C,EAAeC,EAAa,CACrC,IAAMC,EAAY,KAAK,UAAUF,CAAK,EAEtC,OAAIE,IACED,EACF,KAAK,UAAUD,CAAK,EAAIE,EAAU,OAAOC,GAAYA,IAAaF,CAAE,EAEpE,OAAO,KAAK,UAAUD,CAAK,GAIxB,KAGT,oBAAkB,CAChB,KAAK,UAAY,CAAA,EAEpB,ECNYI,GAAoB1K,GAC/B2K,GAAW3K,EAAQ,CAAC4K,EAAK/N,IAAQ,GAAG,mBAAmBA,CAAG,CAAC,IAAI,mBAAmB+N,CAAG,CAAC,EAAE,EAAE,KAAK,GAAG,ECtBxFC,IAAZ,SAAYA,EAAW,CACrBA,EAAAA,EAAA,KAAA,CAAA,EAAA,OACAA,EAAAA,EAAA,UAAA,CAAA,EAAA,YACAA,EAAAA,EAAA,KAAA,CAAA,EAAA,OACAA,EAAAA,EAAA,eAAA,CAAA,EAAA,iBACAA,EAAAA,EAAA,UAAA,CAAA,EAAA,YACAA,EAAAA,EAAA,MAAA,CAAA,EAAA,QACAA,EAAAA,EAAA,WAAA,CAAA,EAAA,YACF,GARYA,KAAAA,GAQX,CAAA,EAAA,MAEWC,IAAZ,SAAYA,EAAe,CACzBA,EAAA,WAAA,aACAA,EAAA,UAAA,YACAA,EAAA,aAAA,cACF,GAJYA,KAAAA,GAIX,CAAA,EAAA,MCVYC,QAAe,CAQ1B,YAAY7D,EAAS,CACnB,KAAK,KAAOA,EACZ,KAAK,QAAUzF,GAAa,EAC5B,KAAK,QAAUiC,GAAc,IAAI,WAAW,KAAK,IAAI,CAAC,EAGxD,eAAa,CACX,OAAOqB,GAAc,KAAK,OAAO,EAGnC,aAAW,CACT,OAAOhB,GAAY,KAAK,OAAO,EAGjC,eAAa,CACX,OAAOe,GAAc,KAAK,OAAO,EAGnC,mBAAiB,CACf,OAAOhB,GAAkB,KAAK,OAAO,EAGvC,aAAakH,EAAiB,CAC5B,OAAO9I,GAAa,KAAK,QAAS8I,CAAI,EAGxC,eAAeC,EAAc,CAC3B,OAAOnI,GAAe,KAAK,QAASmI,CAAM,EAG5C,mBAAmB/D,EAAgB,CACjC,OAAOvE,GAAmB,KAAK,QAASuE,CAAI,EAG9C,QAAM,CACJ,OAAOhI,GAAO,KAAK,OAAO,EAE7B,ECqCYgM,GAAP,cAA2Cb,EAAY,CAkE3D,YAAYc,EAAuD,CACjE,MAAK,EAlEC,KAAY,aAAU,CAAA,EAEvB,KAAA,cAAkE,CACvE,IAAK,GAEL,SAAU,OACV,kBAAmB,OACnB,WAAY,CAAA,EACZ,QAAS,GACT,UAAW,GACX,kBAAmB,GAEnB,wBAAyB,IAEzB,MAAO,IAEP,aAAc,EAEd,OAAQ,EAER,YAAa,EAEb,SAAU,IAEV,SAAU,IAEV,OAAQ,GAER,QAAS,EACT,OAAQ,IAAM,KACd,UAAW,IAAM,KACjB,UAAW,IAAM,KACjB,kBAAmB,IAAM,KACzB,SAAU,IAAM,KAChB,aAAc,IAAM,KACpB,QAAS,IAAM,KACf,UAAW,IAAM,KACjB,kBAAmB,IAAM,KACzB,kBAAmB,IAAM,KACzB,MAAO,GACP,YAAa,IAAI,KAGnB,KAAS,UAA+B,KAExC,KAAiB,kBAA2B,CAAA,EAE5C,KAAa,cAAG,GAEhB,KAAA,OAASL,GAAgB,aAEzB,KAAmB,oBAAG,EAEtB,KAAU,WAAG,EAEb,KAAA,UAAiB,CACf,UAAW,KACX,kBAAmB,MAGrB,KAAiB,kBAGN,KA0CX,KAAqB,sBAAuB,OAE5C,KAAuB,wBAAoC,OAiM3D,KAAU,WAAG,EAzOX,KAAK,iBAAiBK,CAAa,EAEnC,KAAK,cAAc,kBAAoBA,EAAc,kBACjDA,EAAc,kBACd,UAEJ,KAAK,GAAG,OAAQ,KAAK,cAAc,MAAM,EACzC,KAAK,GAAG,OAAQ,KAAK,OAAO,KAAK,IAAI,CAAC,EACtC,KAAK,GAAG,UAAW,KAAK,cAAc,SAAS,EAC/C,KAAK,GAAG,UAAW,KAAK,cAAc,SAAS,EAC/C,KAAK,GAAG,kBAAmB,KAAK,cAAc,iBAAiB,EAC/D,KAAK,GAAG,SAAU,KAAK,cAAc,QAAQ,EAC7C,KAAK,GAAG,SAAU,KAAK,SAAS,KAAK,IAAI,CAAC,EAC1C,KAAK,GAAG,aAAc,KAAK,cAAc,YAAY,EACrD,KAAK,GAAG,QAAS,KAAK,cAAc,OAAO,EAC3C,KAAK,GAAG,UAAW,KAAK,cAAc,SAAS,EAC/C,KAAK,GAAG,kBAAmB,KAAK,cAAc,iBAAiB,EAC/D,KAAK,GAAG,kBAAmB,KAAK,cAAc,iBAAiB,EAE/D,KAAK,GAAG,QAAS,KAAK,QAAQ,KAAK,IAAI,CAAC,EACxC,KAAK,GAAG,UAAW,KAAK,UAAU,KAAK,IAAI,CAAC,EAE5C,KAAK,UAAU,kBAAoB,YACjC,KAAK,gBAAgB,KAAK,IAAI,EAC9B,KAAK,cAAc,wBAA0B,EAAE,EAG7C,OAAOA,EAAc,SAAY,cACnC,KAAK,cAAgBA,EAAc,SAGhC,KAAK,eAIV,KAAK,QAAO,EAOd,MAAM,OAAOb,EAAY,CACvB,KAAK,sBAAwBA,EAG/B,MAAM,SAASpD,EAAwB,CACrC,KAAK,wBAA0BA,EAGjC,OAAOkE,EAA4B,CACjC,KAAK,cAAc,YAAY,IAAIA,EAAS,cAAc,KAAMA,CAAQ,EAEpE,KAAK,SAAWN,GAAgB,cAAgB,KAAK,eACvD,KAAK,QAAO,EAGV,KAAK,uBACPM,EAAS,OAAO,KAAK,qBAAqB,EAGxC,KAAK,yBACPA,EAAS,SAAS,KAAK,uBAAuB,EAIlD,OAAOA,EAA4B,CACjC,KAAK,cAAc,YAAY,OAAOA,EAAS,cAAc,IAAI,EAG5D,iBACLD,EAAmE,CAAA,EAAE,CAErE,KAAK,cAAgBhC,IAAA,GAAK,KAAK,eAAkBgC,GAKnD,MAAM,SAAO,CACX,GAAI,KAAK,SAAWL,GAAgB,UAClC,OAIE,KAAK,uBACP,KAAK,qBAAoB,EACzB,KAAK,qBAAuB,QAG9B,KAAK,sBAAwB,OAC7B,KAAK,wBAA0B,OAC/B,KAAK,cAAgB,GAErB,IAAMO,EAAiB,IAAK,CAC1B,IAAIC,EAAgB,GAwBpB,MAAO,CACL,aAvBmBC,GAAM,KAAK,0BAA0B,KAAK,IAAI,EAAG,CACpE,MAAO,KAAK,cAAc,MAC1B,aAAc,KAAK,cAAc,aACjC,OAAQ,KAAK,cAAc,OAC3B,YAAa,KAAK,cAAc,YAChC,SAAU,KAAK,cAAc,SAC7B,SAAU,KAAK,cAAc,SAC7B,OAAQ,KAAK,cAAc,OAC3B,QAAS,KAAK,cAAc,QAC5B,cAAeC,GAAU,EACnB,CAAC,KAAK,eAAiBF,IACzBE,EAAQ,MAAK,EAGlB,CAAA,EAAE,MAAOC,GAAc,CAGtB,GAAIA,GAASA,EAAM,OAAS,kBAC1B,MAAMA,CAEV,CAAC,EAIC,WAAY,IAAK,CACfH,EAAgB,IAGtB,EAEM,CAAE,aAAAI,EAAc,WAAAC,CAAU,EAAKN,EAAc,EACnD,YAAK,qBAAuBM,EAErBD,EAGT,yBAAyBE,EAAyBC,EAAgB,CAChE,GAAM,CAAE,WAAAC,CAAU,EAAKF,EACjBG,EAAoBC,GAAiB,KAAK,KAAK,UAAWA,CAAO,EACjEC,EAAkBD,GAAiB,KAAK,KAAK,QAAS,CAAE,MAAOA,CAAO,CAAE,EACxEE,EAAiBF,GAAiB,KAAK,KAAK,OAAQA,CAAO,EAC3DG,EAAkBC,GAAY,CAClCP,EAAOO,CAAG,CACZ,EAEA,KAAK,kBAAkBN,CAAU,EAAI,CACnC,QAASC,EACT,MAAOE,EACP,KAAMC,EACN,MAAOC,GAGT,IAAME,EAAW,KAAK,kBAAkBT,EAAG,UAAU,EAErD,OAAO,KAAKS,CAAQ,EAAE,QAAQ5L,GAAO,CACnCmL,EAAG,iBAAiBnL,EAAM4L,EAAS5L,CAAI,CAAC,CAC1C,CAAC,EAGH,kBAAgB,CACd,GAAI,CAAC,KAAK,UACR,OAEF,GAAM,CAAE,WAAAqL,CAAU,EAAK,KAAK,UACtBO,EAAW,KAAK,kBAAkBP,CAAU,EAElD,OAAO,KAAKO,CAAQ,EAAE,QAAQ5L,GAAO,QACnC6L,EAAA,KAAK,aAAS,MAAAA,IAAA,QAAAA,EAAE,oBAAoB7L,EAAM4L,EAAS5L,CAAI,CAAC,EACxD,OAAO,KAAK,kBAAkBqL,CAAU,CAC1C,CAAC,EACD,KAAK,UAAU,MAAK,EACpB,KAAK,UAAY,KAGnB,2BAAyB,CACvB,OAAO,IAAI,QAAQ,CAACS,EAASV,IAAU,CACjC,KAAK,YACP,KAAK,aAAe,CAAA,EACpB,KAAK,iBAAgB,GAEvB,KAAK,oBAAsB,EAC3B,KAAK,YAAc,EAGnB,IAAMD,EAAK,IAAI,KAAK,cAAc,kBAAkB,KAAK,GAAG,EAC5DA,EAAG,WAAa,cAChBA,EAAG,WAAa,KAAK,WAErB,KAAK,yBAAyBA,EAAIC,CAAM,EAExC,KAAK,UAAYD,EAGjB,KAAK,OAASd,GAAgB,WAC9B,KAAK,KAAK,SAAU,CAAE,OAAQA,GAAgB,UAAU,CAAE,EAG1D,KAAK,kBAAoB,CACvB,QAAAyB,EACA,OAAAV,EAEJ,CAAC,EAGH,UAAUvB,EAAmB,OAC3B,KAAK,yBAAwB,EAE7B,KAAK,oBAAsBpC,GAAgB,EAG3C,IAAMsE,EADU,IAAIzB,GAAgBT,EAAM,IAAI,EACjB,cAAa,GAE1CgC,EAAA,KAAK,cAAc,YAAY,IAAIE,CAAY,KAAG,MAAAF,IAAA,QAAAA,EAAA,UAAUhC,CAAK,EAGnE,0BAAwB,CAClB,KAAK,oBACP,KAAK,kBAAkB,QAAO,EAC9B,KAAK,kBAAoB,KAEzB,KAAK,OAASQ,GAAgB,UAC9B,KAAK,KAAK,SAAU,CAAE,OAAQA,GAAgB,SAAS,CAAE,EACzD,KAAK,KAAK,SAAS,EACnB,KAAK,aAAa,QAAQ2B,GAAW,KAAK,KAAKA,CAAO,CAAC,EACvD,KAAK,aAAe,CAAA,GAIxB,uBAAqB,CACnB,KAAK,kBAAoB,KAG3B,yBAAuB,QACrBH,EAAA,KAAK,qBAAmB,MAAAA,IAAA,QAAAA,EAAA,OAAM,EAC9B,KAAK,kBAAoB,KAK3B,iBAAe,OAET,KAAK,SAAWxB,GAAgB,WAK/B,KAAK,sBAMR,KAAK,cAAc,yBAChB5C,GAAgB,EAAK,KAAK,sBAQ/B,KAAK,YAAc,EAEf,KAAK,WAAa,GACpB,KAAK,QAAQ,CACX,MAAO,CACL,KAAM,KACN,OAAQ,QACT,CACF,CAAA,EACD,KAAK,WAAa,KAElBoE,EAAA,KAAK,aAAW,MAAAA,IAAA,QAAAA,EAAA,MAAK,EACrB,KAAK,aAAe,CAAA,KAKxB,IAAI,WAAS,CACX,KAAO,KAAK,cAAc,IAAI,KAAK,cAAc,IAAI,OAAS,CAAC,IAAM,KACnE,OAAO,KAAK,cAAc,IAAI,MAAM,EAAG,KAAK,cAAc,IAAI,OAAS,CAAC,EAG1E,OAAO,KAAK,cAAc,IAG5B,IAAI,KAAG,CACL,IAAMI,EAAgBC,GAAsB,KAAK,cAAc,UAAU,EAEzE,MAAO,GAAG,KAAK,SAAS,GAAGD,EAAc,SAAW,EAAI,GAAK,IAAIA,CAAa,EAAE,GAGlF,YAAU,CAGR,GAFA,KAAK,cAAgB,GAEjB,KAAK,YAAc,KAIvB,GAAI,CACF,KAAK,UAAU,MAAK,EACpB,KAAK,aAAe,CAAA,CACrB,OAAO,GAEP,EAGH,KAAKD,EAAY,SACXH,EAAA,KAAK,aAAW,MAAAA,IAAA,OAAA,OAAAA,EAAA,cAAeM,GAAc,KAC/C,KAAK,UAAU,KAAKH,CAAO,EAE3B,KAAK,aAAa,KAAKA,CAAO,EAIlC,QAAQ,CAAE,MAAAnC,CAAK,EAAqB,CAwBlC,GAvBA,KAAK,WAAa,EAClB,KAAK,iBAAgB,EAEjB,KAAK,SAAWQ,GAAgB,YAClC,KAAK,OAASA,GAAgB,aAC9B,KAAK,KAAK,SAAU,CAAE,OAAQA,GAAgB,YAAY,CAAE,EAC5D,KAAK,KAAK,aAAc,CAAE,MAAAR,CAAK,CAAE,GAG/BA,EAAM,OAASuC,GAAa,OAC1BvC,EAAM,SAAWuC,GAAa,OAChC,QAAQ,KACN,8KAAoK,EAGtK,QAAQ,KACN,oEAAoEvC,EAAM,MAAM,EAAE,EAItF,KAAK,cAAgB,IAGnBA,EAAM,OAASwC,GAAU,MACvB,CAAC,KAAK,cAAc,MAAO,CAC7B,QAAQ,KACN,sHAAiH,EAEnH,MACD,CAGCxC,EAAM,OAASyC,GAAc,OAC/B,QAAQ,KACN,qEAAqEzC,EAAM,MAAM,EAAE,EAErF,KAAK,cAAgB,IAGnB,KAAK,kBAEP,KAAK,wBAAuB,EACnB,KAAK,eAEd,KAAK,QAAO,EAIV,MAAK,eAKL,KAAK,SAAWQ,GAAgB,eAKpC,KAAK,OAASA,GAAgB,aAC9B,KAAK,KAAK,SAAU,CAAE,OAAQA,GAAgB,YAAY,CAAE,EAC5D,KAAK,KAAK,aAAc,CAAE,MAAAR,CAAK,CAAE,GAGnC,SAAO,CACL,KAAK,KAAK,SAAS,EAEf,KAAK,UAAU,WACjB,cAAc,KAAK,UAAU,SAAS,EAGxC,cAAc,KAAK,UAAU,iBAAiB,EAK9C,KAAK,sBAAqB,EAE1B,KAAK,WAAU,EAEf,KAAK,mBAAkB,EAEvB,KAAK,iBAAgB,EAExB,EC9gBY0C,GAAsB,EACtBC,GAAsB,EACtBC,GAAmB,EAQnBC,GAAiB,CAACzL,EAASsG,IAAQ,CAC9C0B,GAAsBhI,EAASsL,EAAmB,EAClD,IAAMI,EAAOC,GAAkBrF,CAAG,EAClCsF,GAA4B5L,EAAS0L,CAAE,CACzC,EAOaG,GAAiB,CAAC7L,EAASsG,EAAKwF,IAAuB,CAClE9D,GAAsBhI,EAASuL,EAAmB,EAClDK,GAA4B5L,EAAW+L,GAAoBzF,EAAKwF,CAAkB,CAAC,CACrF,EASaE,GAAgB,CAAC9J,EAASlC,EAASsG,IAC9CuF,GAAe7L,EAASsG,EAAK2F,GAA2B/J,CAAO,CAAC,EASrDgK,GAAgB,CAAChK,EAASoE,EAAK6F,IAAsB,CAChE,GAAI,CACAC,GAAY9F,EAAK2F,GAA2B/J,CAAO,EAAGiK,CAAiB,CAC7E,OAAWpC,EAAO,CAEd,QAAQ,MAAM,2CAA4CA,CAAK,CACnE,CACA,EAMasC,GAAc,CAACrM,EAASoI,IAAW,CAC9CJ,GAAsBhI,EAASwL,EAAgB,EAC/CI,GAA4B5L,EAASoI,CAAM,CAC7C,EASakE,GAAaJ,GAQbK,GAAkB,CAACrK,EAASlC,EAASsG,EAAK6F,IAAsB,CAC3E,IAAMK,EAAcjE,GAAqBrG,CAAO,EAChD,OAAQsK,EAAW,CACjB,KAAKlB,GACHU,GAAc9J,EAASlC,EAASsG,CAAG,EACnC,MACF,KAAKiF,GACHW,GAAchK,EAASoE,EAAK6F,CAAiB,EAC7C,MACF,KAAKX,GACHc,GAAWpK,EAASoE,EAAK6F,CAAiB,EAC1C,MACF,QACE,MAAM,IAAI,MAAM,sBAAsB,CAC5C,CACE,OAAOK,CACT,EC9HaC,QAAe,CAK1B,aAAA,CACE,KAAK,QAAU1M,GAAa,EAG9B,IAAIkG,EAAuC,CACzC,OAAOA,EAAK,QAGd,cAAY,CACV,OAAOhG,GAAa,KAAK,OAAO,EAEnC,ECVYyM,QAAe,CAM1B,YAAY3B,EAAwB,CAFpC,KAAW,YAAG,GAGZ,KAAK,QAAUA,EAGV,eAAehN,EAAc,CAClC,YAAK,YAAcA,EAEZ,KAGF,MAAM2L,EAA8BiD,EAAmB,CAC5D,GAAM,CAAE,QAAA5B,CAAO,EAAK,KACdzB,EAAOyB,EAAQ,YAAW,EAE1B6B,EAAqB7B,EAAQ,OAAM,EAEzC,OAAQzB,EAAI,CACV,KAAKH,GAAY,KACf,KAAK,iBAAiBO,EAAUiD,CAAU,EAC1C,MAEF,KAAKxD,GAAY,UACf,KAAK,sBAAsBO,CAAQ,EACnC,MAEF,KAAKP,GAAY,KACf,KAAK,iBAAiBO,CAAQ,EAC9B,MAEF,KAAKP,GAAY,eACf,KAAK,2BAA2BO,CAAQ,EACxC,MAEF,KAAKP,GAAY,UACfO,EAAS,iBAAiBtG,GAAc2H,EAAQ,OAAO,CAAC,EACxD,MAEF,KAAK5B,GAAY,WACf,KAAK,uBAAuBO,EAAUhH,GAAWqI,EAAQ,OAAO,IAAM,CAAC,EACvE,MACF,QACE,MAAM,IAAI,MAAM,6CAAwCzB,CAAI,EAAE,CACjE,CAGGyB,EAAQ,OAAM,EAAK6B,EAAqB,IACtC,KAAK,YAGPlD,EAAS,UAAU+C,GAAiB,CAAE,QAAS1B,EAAQ,OAAO,CAAE,EAIhErB,EAAS,KAAK+C,GAAiB,CAAE,QAAS1B,EAAQ,OAAO,CAAE,GAKzD,iBAAiBrB,EAA8BiD,EAAmB,CACxE,GAAM,CAAE,QAAA5B,CAAO,EAAK,KAEpBA,EAAQ,aAAa5B,GAAY,IAAI,EAGrC,IAAM0D,EAAkBN,GACtBxB,EAAQ,QACRA,EAAQ,QACRrB,EAAS,SACTA,CAAQ,EAINiD,GAAcE,IAAoBtB,KACpC7B,EAAS,OAAS,IAItB,uBAAuBA,EAA8BoD,EAAgB,CAC/DA,GACFpD,EAAS,yBAAwB,EAI7B,sBAAsBA,EAA4B,CACxD,GAAI,CAACA,EAAS,UAAW,OAEzB,GAAM,CAAE,QAAAqB,CAAO,EAAK,KAEpBgC,GACErD,EAAS,UACTqB,EAAQ,kBAAiB,EACzBrB,CAAQ,EAIJ,iBAAiBA,EAA4B,CACnD,GAAM,CAAE,QAAAqB,CAAO,EAAK,KAEpBiC,GACEjC,EAAQ,QACRrB,EAAS,wBAAwB,KAAKA,CAAQ,EAC9CA,EAAS,qBAAqB,KAAKA,CAAQ,CAAC,EAIxC,2BAA2BA,EAA4B,CAC7D,GAAI,CAACA,EAAS,UAAW,OAEzB,GAAM,CAAE,QAAAqB,CAAO,EAAK,KAEpBA,EAAQ,aAAa5B,GAAY,SAAS,EAC1C4B,EAAQ,mBACNkC,GACEvD,EAAS,UACT,MAAM,KAAKA,EAAS,UAAU,UAAS,EAAG,KAAI,CAAE,CAAC,CAClD,EAGN,ECjIYwD,QAAa,CAMxB,YAAYC,EAAuClH,EAAY,CAAA,EAAE,CAC/D,KAAK,QAAU,IAAIkH,EACnB,KAAK,QAAU,KAAK,QAAQ,IAAIlH,CAAI,EAGtC,QAAM,CACJ,OAAOhG,GAAa,KAAK,OAAO,EAGlC,KAAKmN,EAAc,CACjBA,GAAA,MAAAA,EAAW,KAAK,KAAK,OAAM,CAAE,EAG/B,UAAU/H,EAAe,CACvBgI,GAAWhI,EAAS,KAAK,OAAM,CAAE,EAEpC,ECrBYiI,GAAP,cAAqCb,EAAe,CAA1D,aAAA,qBACE,KAAA,KAAOtD,GAAY,KAEnB,KAAW,YAAG,iBAEd,IAAIlD,EAAuC,CACzC,GAAI,OAAOA,EAAK,OAAU,YACxB,MAAM,IAAI,MAAM,6DAA6D,EAG/E,OAAA7E,GAAe,KAAK,QAAS6E,EAAK,YAAa,EAC/CzF,GAAa,KAAK,QAAS,KAAK,IAAI,EACpC+M,GAAoB,KAAK,QAAStH,EAAK,KAAK,EAErC,KAAK,QAEf,EChBYuH,GAAP,cAAgCf,EAAe,CAArD,aAAA,qBACE,KAAA,KAAOtD,GAAY,UAEnB,KAAW,YAAG,0BAEd,IAAIlD,EAAuC,CACzC,GAAI,OAAOA,EAAK,WAAc,YAC5B,MAAM,IAAI,MAAM,yDAAyD,EAG3E,GAAI,OAAOA,EAAK,SAAY,YAC1B,MAAM,IAAI,MAAM,uDAAuD,EAGzEgC,GAAwB,KAAK,QAAShC,EAAK,YAAa,EACxD+B,GAAsB,KAAK,QAAS,KAAK,IAAI,EAE7C,IAAIyF,EACJ,OAAIxH,EAAK,SAAW,OAClBwH,EAAkB5F,GAAsB5B,EAAK,UAAWA,EAAK,OAAO,EAEpEwH,EAAkB5F,GAAsB5B,EAAK,UAAWA,EAAK,QAASA,EAAK,MAAM,EAGnF2F,GAA4B,KAAK,QAAS6B,CAAe,EAElD,KAAK,QAEf,EC7BYC,GAAP,cAA4BjB,EAAe,CAAjD,aAAA,qBACE,KAAA,KAAOtD,GAAY,MAEnB,KAAW,YAAG,yCAEd,IAAIlD,EAAuC,CACzCgC,OAAAA,GAAwB,KAAK,QAAShC,EAAK,YAAa,EACxD+B,GAAsB,KAAK,QAAS,KAAK,IAAI,EAEtC,KAAK,QAEf,ECXY2F,GAAP,cAAqClB,EAAe,CAA1D,aAAA,qBACE,KAAA,KAAOtD,GAAY,eAEnB,KAAW,YAAG,2BAEd,IAAIlD,EAAuC,CAEzCgC,OAAAA,GAAwB,KAAK,QAAShC,EAAK,YAAa,EACxD+B,GAAsB,KAAK,QAAS,KAAK,IAAI,EAEtC,KAAK,QAEf,ECZY4F,GAAP,cAAgCnB,EAAe,CAArD,aAAA,qBACE,KAAA,KAAOtD,GAAY,UAEnB,KAAW,YAAG,sBAEd,IAAIlD,EAAuC,OACzC,OAAA7E,GAAe,KAAK,QAAS6E,EAAK,YAAa,EAC/CzF,GAAa,KAAK,QAAS,KAAK,IAAI,EACpCY,GAAe,KAAK,SAASwJ,EAAA3E,EAAK,WAAO,MAAA2E,IAAA,OAAAA,EAAI,EAAE,EAExC,KAAK,QAEf,ECXYiD,GAAP,cAAkCpB,EAAe,CAAvD,aAAA,qBACE,KAAA,KAAOtD,GAAY,KAEnB,KAAW,YAAG,kBAEd,IAAIlD,EAAuC,CACzC,GAAI,OAAOA,EAAK,UAAa,YAC3B,MAAM,IAAI,MAAM,4DAA4D,EAG9EgC,OAAAA,GAAwB,KAAK,QAAShC,EAAK,YAAa,EACxD+B,GAAsB,KAAK,QAAS,KAAK,IAAI,EAC7C8F,GAA4B,KAAK,QAAS7H,EAAK,QAAQ,EAEhD,KAAK,QAEf,EChBY8H,GAAP,cAAkCtB,EAAe,CAAvD,aAAA,qBACE,KAAA,KAAOtD,GAAY,KAEnB,KAAW,YAAG,mBAEd,IAAIlD,EAAuC,CACzC,GAAI,OAAOA,EAAK,UAAa,YAC3B,MAAM,IAAI,MAAM,4DAA4D,EAG9EgC,OAAAA,GAAwB,KAAK,QAAShC,EAAK,YAAa,EACxD+B,GAAsB,KAAK,QAAS,KAAK,IAAI,EAC7CgG,GAA4B,KAAK,QAAS/H,EAAK,QAAQ,EAEhD,KAAK,QAEf,EChBYgI,GAAP,cAA6BxB,EAAe,CAAlD,aAAA,qBACE,KAAA,KAAOtD,GAAY,KAEnB,KAAW,YAAG,oBAEd,IAAIlD,EAAuC,CACzC,OAAA7E,GAAe,KAAK,QAAS6E,EAAK,YAAa,EAC/CzF,GAAa,KAAK,QAAS,KAAK,IAAI,EAEpC6L,GAAY,KAAK,QAASpG,EAAK,MAAM,EAE9B,KAAK,QAEf,ECiGYiI,GAAP,cAA8B,KAAK,CAAzC,aAAA,qBACE,KAAI,KAAG,KACR,EAEYC,GAAP,cAAkCxF,EAAY,CAkDlD,YAAYc,EAA8C,WACxD,MAAK,EAlDA,KAAA,cAAyD,CAC9D,KAAM,GAEN,SAAU,OAEV,UAAW,OACX,MAAO,KACP,WAAY,CAAA,EACZ,UAAW,GACX,kBAAmB,GACnB,gBAAiB,IAAM,KACvB,uBAAwB,IAAM,KAC9B,OAAQ,IAAM,KACd,UAAW,IAAM,KACjB,UAAW,IAAM,KACjB,kBAAmB,IAAM,KACzB,SAAU,IAAM,KAChB,SAAU,IAAM,KAChB,aAAc,IAAM,KACpB,QAAS,IAAM,KACf,UAAW,IAAM,KACjB,kBAAmB,IAAM,KACzB,kBAAmB,IAAM,KACzB,YAAa,IAAM,KACnB,MAAO,GACP,QAAS,GACT,mBAAoB,IAGtB,KAA4B,6BAAG,GAE/B,KAAQ,SAAG,GAEX,KAAe,gBAAG,EAElB,KAAA,OAASL,GAAgB,aAEzB,KAAe,gBAAG,GAElB,KAAe,gBAAuB,OAEtC,KAAA,IAAMgF,GAAiB,EAEvB,KAAA,UAAiB,CACf,UAAW,MAGb,KAAW,YAAG,GA6Dd,KAA+B,gCAAG,KAAK,2BAA2B,KAAK,IAAI,EAE3E,KAAe,gBAAG,KAAK,WAAW,KAAK,IAAI,EAE3C,KAAW,YAAG,KAAK,OAAO,KAAK,IAAI,EAEnC,KAAY,aAAG,KAAK,QAAQ,KAAK,IAAI,EAErC,KAAa,cAAG,KAAK,SAAS,KAAK,IAAI,EAEvC,KAAA,eAAkBrR,GAAW,KAAK,KAAK,UAAWA,CAAC,EAEnD,KAAA,YAAeA,GAAW,KAAK,KAAK,OAAQA,CAAC,EAE7C,KAAA,aAAgBA,GAAW,KAAK,KAAK,QAASA,CAAC,EAE/C,KAAA,kBAAqBA,GAAW,KAAK,KAAK,aAAcA,CAAC,EAEzD,KAAA,eAAkBA,GAAW,KAAK,KAAK,UAAWA,CAAC,EA3EjD,KAAK,iBAAiB0M,CAAa,EAEnC,KAAK,cAAc,SAAWA,EAAc,SAAWA,EAAc,SAAW,IAAM4E,GACtF,KAAK,cAAc,UAAY5E,EAAc,YAAc,OAAYA,EAAc,UAAY,IAAIpD,GAAU,KAAK,QAAQ,EAE5H,KAAK,GAAG,OAAQ,KAAK,cAAc,MAAM,EACzC,KAAK,GAAG,UAAW,KAAK,cAAc,SAAS,EAC/C,KAAK,GAAG,kBAAmB,KAAK,cAAc,iBAAiB,EAC/D,KAAK,GAAG,SAAU,KAAK,cAAc,QAAQ,EAC7C,KAAK,GAAG,UAAW,KAAK,cAAc,SAAS,EAC/C,KAAK,GAAG,kBAAmB,KAAK,cAAc,iBAAiB,EAC/D,KAAK,GAAG,kBAAmB,KAAK,cAAc,iBAAiB,EAC/D,KAAK,GAAG,YAAa,KAAK,cAAc,WAAW,EAEnD,KAAK,GAAG,gBAAiB,KAAK,cAAc,eAAe,EAC3D,KAAK,GAAG,uBAAwB,KAAK,cAAc,sBAAsB,EAEzE,KAAK,cAAc,kBAAkB,GAAG,UAAW,KAAK,cAAc,SAAS,EAC/E,KAAK,cAAc,kBAAkB,GAAG,UAAW,KAAK,cAAc,EAEtE,KAAK,cAAc,kBAAkB,GAAG,OAAQ,KAAK,WAAW,EAChE,KAAK,cAAc,kBAAkB,GAAG,OAAQ,KAAK,WAAW,EAEhE,KAAK,cAAc,kBAAkB,GAAG,QAAS,KAAK,YAAY,EAClE,KAAK,cAAc,kBAAkB,GAAG,QAAS,KAAK,cAAc,OAAO,EAC3E,KAAK,cAAc,kBAAkB,GAAG,QAAS,KAAK,YAAY,EAElE,KAAK,cAAc,kBAAkB,GAAG,SAAU,KAAK,aAAa,EAEpE,KAAK,cAAc,kBAAkB,GAAG,aAAc,KAAK,cAAc,YAAY,EACrF,KAAK,cAAc,kBAAkB,GAAG,aAAc,KAAK,iBAAiB,EAE5E,KAAK,cAAc,kBAAkB,GAAG,UAAW,KAAK,cAAc,SAAS,EAC/E,KAAK,cAAc,kBAAkB,GAAG,UAAW,KAAK,cAAc,GAEtEuE,EAAA,KAAK,aAAS,MAAAA,IAAA,QAAAA,EAAE,GAAG,SAAU,IAAK,CAChC,KAAK,KAAK,kBAAmB,CAAE,OAAQ0D,GAAuB,KAAK,UAAW,UAAS,CAAE,CAAC,CAAE,CAC9F,CAAC,GAEDC,EAAA,KAAK,aAAS,MAAAA,IAAA,QAAAA,EAAE,GAAG,SAAU,IAAK,CAChC,KAAK,KAAK,kBAAmB,CAAE,OAAQD,GAAuB,KAAK,UAAW,UAAS,CAAE,CAAC,CAAE,CAC9F,CAAC,EAED,KAAK,SAAS,GAAG,SAAU,KAAK,sBAAsB,KAAK,IAAI,CAAC,GAChEE,EAAA,KAAK,aAAW,MAAAA,IAAA,QAAAA,EAAA,GAAG,SAAU,KAAK,uBAAuB,KAAK,IAAI,CAAC,EACnE,KAAK,uBAAsB,EAEvB,KAAK,cAAc,oBACrB,KAAK,UAAU,UAAY,YACzB,KAAK,UAAU,KAAK,IAAI,EACxB,KAAK,cAAc,iBAAiB,GAIxC,KAAK,cAAc,kBAAkB,OAAO,IAAI,EAuB3C,SAAS,CAAE,OAAAC,CAAM,EAAuB,CAC7C,KAAK,OAASA,EAEd,KAAK,cAAc,SAAS,CAAE,OAAAA,CAAM,CAAE,EACtC,KAAK,KAAK,SAAU,CAAE,OAAAA,CAAM,CAAE,EAGzB,iBAAiBhF,EAA0D,CAAA,EAAE,CAClF,GAAI,CAACA,EAAc,mBAAsBA,EAAmE,IAAK,CAC/G,IAAMiF,EAA0BjF,EAEhC,KAAK,cAAc,kBAAoB,IAAID,GAA4B,CACrE,IAAKkF,EAAwB,IAC7B,QAASA,EAAwB,QACjC,WAAYA,EAAwB,UACrC,CAAA,CACF,CAED,KAAK,cAAgBjH,IAAA,GAAK,KAAK,eAAkBgC,GAGnD,IAAI,UAAQ,CACV,OAAO,KAAK,cAAc,SAG5B,IAAI,WAAS,CACX,OAAO,KAAK,cAAc,UAG5B,IAAI,oBAAkB,CACpB,OAAO,KAAK,gBAAkB,EAGhC,0BAAwB,CACtB,KAAK,iBAAmB,EACxB,KAAK,KAAK,kBAAmB,KAAK,eAAe,EAGnD,0BAAwB,CACtB,KAAK,iBAAmB,EACpB,KAAK,kBAAoB,IAC3B,KAAK,OAAS,IAEhB,KAAK,KAAK,kBAAmB,KAAK,eAAe,EAGnD,WAAS,CACP,KAAK,KAAKoE,GAAoB,CAAE,SAAU,KAAK,SAAU,aAAc,KAAK,cAAc,IAAI,CAAE,EAGlG,YAAU,CACJ,KAAK,WACPjH,GAAsB,KAAK,UAAW,CAAC,KAAK,SAAS,QAAQ,EAAG,eAAe,EAInF,wBAAsB,CAChB,OAAO,QAAW,aAItB,OAAO,iBAAiB,SAAU,KAAK,eAAe,EAGxD,cAAc0D,EAAe,CAC3B,KAAK,KAAKsD,GAAkB,CAAE,aAAc,KAAK,cAAc,KAAM,QAAAtD,CAAO,CAAE,EAGhF,sBAAsBlC,EAAoB3C,EAAW,CAC/CA,IAAW,OAIf,KAAK,yBAAwB,EAC7B,KAAK,KAAKwI,GAAe,CAAE,OAAA7F,EAAQ,aAAc,KAAK,cAAc,IAAI,EAAI,EAAI,GAGlF,uBAAuB,CAAE,MAAAlB,EAAO,QAAAC,EAAS,QAAAE,CAAO,EAAS5B,EAAW,CAClE,IAAMkJ,EAAiBzH,EAAM,OAAOC,CAAO,EAAE,OAAOE,CAAO,EAE3D,KAAK,KAAKmG,GAAkB,CAC1B,UAAW,KAAK,UAChB,QAASmB,EACT,aAAc,KAAK,cAAc,MAChC,EAAI,EAST,IAAI,QAAM,CACR,OAAO,KAAK,SAGd,IAAI,OAAO9H,EAAK,CACV,KAAK,WAAaA,IAItB,KAAK,SAAWA,EAChB,KAAK,KAAK,SAAU,CAAE,MAAAA,CAAK,CAAE,EAC7B,KAAK,KAAK,OAAQ,CAAE,MAAAA,CAAK,CAAE,GAG7B,iBAAiByD,EAAe,CAC9B,KAAK,KAAK,YAAa,CAAE,QAAAA,CAAO,CAAE,EAGpC,IAAI,0BAAwB,CAC1B,MAAO,CAAC,CAAC,KAAK,cAAc,OAAS,CAAC,KAAK,gBAI7C,MAAM,SAAO,CACX,OAAI,KAAK,cAAc,WACrB,KAAK,4BAA2B,EAG3B,KAAK,cAAc,kBAAkB,QAAO,EAGrD,YAAU,CACR,KAAK,2BAA0B,EAC/B,KAAK,cAAc,kBAAkB,OAAO,IAAI,EAChD,KAAK,YAAc,GAEd,KAAK,cAAc,oBACtB,KAAK,cAAc,kBAAkB,WAAU,EAKnD,MAAM,OAAO1B,EAAY,CACvB,KAAK,gBAAkB,GACvB,KAAK,YAAc,GAEnB,KAAK,KAAK,OAAQ,CAAE,MAAAA,CAAK,CAAE,EAE3B,IAAIhD,EACJ,GAAI,CACFA,EAAQ,MAAM,KAAK,SAAQ,CAC5B,OAAQmE,EAAO,CACd,KAAK,wBAAwB,wBAAwBA,CAAK,EAAE,EAC5D,MACD,CAEG,KAAK,0BACP,KAAK,KAAKuD,GAAuB,CAC/B,MAAA1H,EACA,aAAc,KAAK,cAAc,IAClC,CAAA,EAGH,KAAK,UAAS,EAGhB,MAAM,UAAQ,CACZ,OAAI,OAAO,KAAK,cAAc,OAAU,WACxB,MAAM,KAAK,cAAc,MAAK,EAIvC,KAAK,cAAc,MAG5B,WAAS,CACP,KAAK,yBAAwB,EAC7B,KAAK,KAAKiI,GAAoB,CAAE,SAAU,KAAK,SAAU,aAAc,KAAK,cAAc,IAAI,CAAE,EAE5F,KAAK,WAAa,KAAK,UAAU,cAAa,IAAO,MACvD,KAAK,KAAKL,GAAkB,CAC1B,UAAW,KAAK,UAChB,QAAS,CAAC,KAAK,SAAS,QAAQ,EAChC,aAAc,KAAK,cAAc,IAClC,CAAA,EAIL,KAAKzC,EAAuC9E,EAAW2I,EAAY,GAAK,CACtE,GAAI,CAAC,KAAK,YACR,OAGEA,GACF,KAAK,IAAI,IAAK,CAAG,KAAK,UAAU7D,EAAS9E,CAAI,CAAC,CAAE,EAGlD,IAAM4I,EAAgB,IAAI3B,GAAcnC,EAAS9E,CAAI,EAErD,KAAK,KAAK,kBAAmB,CAAE,QAAS4I,EAAc,OAAO,CAAE,EAC/DA,EAAc,KAAK,KAAK,cAAc,iBAAiB,EAGzD,UAAUjG,EAAmB,CAC3B,IAAMmC,EAAU,IAAI1B,GAAgBT,EAAM,IAAI,EAExCkC,EAAeC,EAAQ,cAAa,EAE1CA,EAAQ,eAAeD,CAAY,EAEnC,KAAK,KAAK,UAAW,CAAE,MAAAlC,EAAO,QAAS,IAAIS,GAAgBT,EAAM,IAAI,CAAC,CAAE,EAExE,IAAI8D,GAAgB3B,CAAO,EAAE,MAAM,KAAM,EAAI,EAG/C,QAAQnC,EAAiB,CACvB,KAAK,gBAAkB,GACvB,KAAK,OAAS,GAGV,KAAK,WACPhC,GACE,KAAK,UACL,MAAM,KAAK,KAAK,UAAU,UAAS,EAAG,KAAI,CAAE,EAAE,OAAOkI,GAAUA,IAAW,KAAK,SAAS,QAAQ,EAChG,IAAI,EAKV,SAAO,CACL,KAAK,KAAK,SAAS,EAEf,KAAK,UAAU,WACjB,cAAc,KAAK,UAAU,SAAS,EAGpC,KAAK,YACPlI,GAAsB,KAAK,UAAW,CAAC,KAAK,SAAS,QAAQ,EAAG,kBAAkB,EAClF,KAAK,UAAU,IAAI,SAAU,KAAK,sBAAsB,EACxD,KAAK,UAAU,QAAO,GAGxB,KAAK,SAAS,IAAI,SAAU,KAAK,qBAAqB,EAEtD,KAAK,mBAAkB,EAEvB,KAAK,cAAc,kBAAkB,IAAI,UAAW,KAAK,cAAc,SAAS,EAChF,KAAK,cAAc,kBAAkB,IAAI,UAAW,KAAK,cAAc,EACvE,KAAK,cAAc,kBAAkB,IAAI,OAAQ,KAAK,WAAW,EACjE,KAAK,cAAc,kBAAkB,IAAI,OAAQ,KAAK,WAAW,EACjE,KAAK,cAAc,kBAAkB,IAAI,QAAS,KAAK,YAAY,EACnE,KAAK,cAAc,kBAAkB,IAAI,QAAS,KAAK,cAAc,OAAO,EAC5E,KAAK,cAAc,kBAAkB,IAAI,QAAS,KAAK,YAAY,EACnE,KAAK,cAAc,kBAAkB,IAAI,SAAU,KAAK,aAAa,EACrE,KAAK,cAAc,kBAAkB,IAAI,aAAc,KAAK,cAAc,YAAY,EACtF,KAAK,cAAc,kBAAkB,IAAI,aAAc,KAAK,iBAAiB,EAC7E,KAAK,cAAc,kBAAkB,IAAI,UAAW,KAAK,cAAc,SAAS,EAChF,KAAK,cAAc,kBAAkB,IAAI,UAAW,KAAK,cAAc,EAEvE,KAAK,KAAK8G,GAAc,CAAE,aAAc,KAAK,cAAc,IAAI,CAAE,EACjE,KAAK,WAAU,EAEX,OAAO,QAAW,aAItB,OAAO,oBAAoB,SAAU,KAAK,eAAe,EAG3D,wBAAwBqB,EAAc,CACpC,KAAK,KAAK,uBAAwB,CAAE,OAAAA,CAAM,CAAE,EAC5C,KAAK,gBAAkB,GACvB,KAAK,WAAU,EACf,KAAK,OAAS3F,GAAgB,aAGhC,qBAAqB4F,EAAa,CAChC,KAAK,gBAAkB,GACvB,KAAK,gBAAkBA,EAEvB,KAAK,KAAK,eAAe,EAG3B,IAAI,kBAAgB,CAClB,MAAO,GAAG,KAAK,cAAc,IAAI,GAGnC,2BAA2BxJ,EAAiB,CAC1C,KAAK,IAAI,IAAK,CACZ,IAAMuF,EAAU,IAAI1B,GAAgB7D,CAAI,EAElCsF,EAAeC,EAAQ,cAAa,EAE1CA,EAAQ,eAAeD,CAAY,EAEnC,IAAI4B,GAAgB3B,CAAO,EACxB,eAAe,EAAI,EACnB,MAAM,KAAM,EAAK,CACtB,CAAC,EAGH,6BAA2B,CACpB,KAAK,+BACRkE,GAAa,KAAK,iBAAkB,KAAK,+BAA+B,EACxE,KAAK,6BAA+B,IAGtC,KAAK,IAAI,IAAK,CACZ,KAAK,UAAUpB,GAAoB,CAAE,SAAU,KAAK,SAAU,aAAc,KAAK,cAAc,IAAI,CAAE,EACrG,KAAK,UAAUE,GAAoB,CAAE,SAAU,KAAK,SAAU,aAAc,KAAK,cAAc,IAAI,CAAE,EACrG,KAAK,UAAUJ,GAAuB,CAAE,SAAU,KAAK,SAAU,aAAc,KAAK,cAAc,IAAI,CAAE,EACpG,KAAK,WACP,KAAK,UAAUH,GAAkB,CAC/B,UAAW,KAAK,UAChB,QAAS,CAAC,KAAK,SAAS,QAAQ,EAChC,SAAU,KAAK,SACf,aAAc,KAAK,cAAc,IAClC,CAAA,CAEL,CAAC,EAGH,4BAA0B,CAEpB,KAAK,WACP,KAAK,KAAKA,GAAkB,CAC1B,UAAW,KAAK,UAChB,QAAS,CAAC,KAAK,SAAS,QAAQ,EAChC,OAAQ,IAAI,IACZ,aAAc,KAAK,cAAc,MAChC,EAAI,EAGL,KAAK,+BACP0B,GAAe,KAAK,iBAAkB,KAAK,+BAA+B,EAC1E,KAAK,6BAA+B,IAIxC,UAAU/B,EAAuClH,EAAU,CACpD,KAAK,cAAc,WAInB,KAAK,8BAIV,IAAIiH,GAAcC,EAASlH,CAAI,EAAE,UAAU,KAAK,gBAAgB,EAGlE,kBAAkB9K,EAAa4C,EAAU,CACvC,GAAI,CAAC,KAAK,UACR,MAAM,IAAImQ,GAAe,+BAA+B/S,CAAG,QAAQ,KAAK,UAAU4C,CAAK,CAAC,sHAAsH,EAEhN,KAAK,UAAU,mBAAmB5C,EAAK4C,CAAK,EAE/C,ECtkBYoR,GAAP,cAA6C3F,EAA2B,CAC5E,YAAYC,EAAyD,CACnE,MAAMjC,EAAAC,EAAA,GAAKgC,GAAL,CAAgE,IAAK,SAASA,EAAc,KAAK,sBAAsB,EAAE,EAElI,ECIY2F,GAAP,cAAoCjB,EAAkB,CAG1D,YAAY1E,EAAgD,CACrDA,EAAc,oBACjBA,EAAc,kBAAoB,IAAI0F,GAA8B,CAAE,MAAQ1F,EAAuF,KAAK,CAAE,GAGzKA,EAAc,QACjBA,EAAc,MAAQ,WAGxB,MAAMA,CAAgD,EAXxD,KAA+B,gCAAG,mBAiBlC,cAAc1K,EAAa,CACzB,OAAO,KAAK,cAAc,KAAK,UAAU,CAAE,OAAQ,iBAAkB,KAAAA,CAAI,CAAE,CAAC,EAM9E,gBAAgBsQ,EAAqB,CACnC,OAAO,KAAK,cAAc,KAAK,UAAU,CAAE,OAAQ,kBAAmB,QAASA,CAAa,CAAE,CAAC,EAQjG,eAAeA,EAAqB,CAClC,OAAO,KAAK,cAAc,KAAK,UAAU,CAAE,OAAQ,kBAAmB,QAASA,CAAa,CAAE,CAAC,EAMjG,aAAW,CACT,OAAO,KAAK,cAAc,SAAS,SAA0B,GAAG,KAAK,+BAA+B,UAAU,EAAE,QAAO,EAGzH,cAActG,EAA8E,CAC1F,OAAO,KAAK,cAAc,SAAS,SAA0B,0BAA0B,EAAE,QAAQA,CAAQ,EAG3G,gBAAgBA,EAAgF,CAC9F,OAAO,KAAK,cAAc,SAAS,SAA0B,0BAA0B,EAAE,UAAUA,CAAQ,EAG7G,kBAAgB,CACd,MAAO,CAAC,CAAC,KAAK,cAAc,SAAS,OAAe,GAAG,KAAK,+BAA+B,QAAQ,EAAE,IAAI,gBAAgB,EAG3H,sBAAoB,CAClB,OAAO,KAAK,cAAc,SAAS,OAAe,GAAG,KAAK,+BAA+B,QAAQ,EAAE,IAAI,iBAAkB,CAAC,EAG5H,uBAAqB,CACnB,OAAO,KAAK,cAAc,SAAS,OAAe,GAAG,KAAK,+BAA+B,QAAQ,EAAE,IAAI,iBAAkB,CAAC,EAG7H,2FCtFYuG,GAAW,mBACXC,GAAiD,SACjDC,GAAgD,MCHvDC,GACJ,OAAO,YAAe,YAClB,WACA,OAAO,QAAW,YAChB,OACA,OAAO,QAAW,YAChB,OACA,CAAC,EAGLC,GAAkB,iDAClBC,GAAY,0CACZC,GAAQ,IAEd,SAASC,GAAMC,EAAmB,CAG9B,QAAQ,MAAMA,CAAG,CAIrB,CAMO,SAASC,GACdC,EACAC,EACAC,EACM,CACN,IAAMC,EAAQ,OAAO,IAAIH,CAAO,EAC1BI,EAAeF,EACjB,GAAGD,GAAc,KAAK,KAAKC,CAAS,IACpCD,GAAc,MAElB,GAAI,CAACR,GAAEU,CAAK,EACVV,GAAEU,CAAK,EAAIC,UACFX,GAAEU,CAAK,IAAMC,EAEjB,CACL,IAAMN,EAAM,CACV,+FACEH,GAAYC,EACd,GACA,GACA,aACA,KAAKI,CAAO,IAAIP,GAAEU,CAAK,CAAC,oBACxB,KAAKH,CAAO,IAAII,CAAY,4BAC9B,EAAE,KAAK;CAAI,EACXP,GAAMC,CAAG,CACX,CAEIG,GAAcV,IAAeU,IAAeV,IAC9CM,GACE,CACE,2EACEH,GAAkBE,EACpB,GACA,GACA,aACA,KAAKN,EAAQ,UAAUC,EAAW,GAClC,KAAKS,CAAO,UAAUC,CAAU,GAChC,GACA,oEACF,EAAE,KAAK;CAAI,CACb,CAEJ,CCnDO,SAASI,GAAYC,EAAeC,EAAuB,CAChE,MAAM,IAAI,MAAMA,CAAM,CACxB,CAiCO,SAASC,GACdC,EACAC,EAAiB,oCACD,CAChB,OAAOD,GAAU,KACVA,CACT,CCnDO,SAASE,IAGd,CACA,IAAIC,EACEC,EAAU,IAAI,QAAYC,GAAQ,CACtCF,EAAUE,CACZ,CAAC,EACD,GAAI,CAACF,EACH,MAAM,IAAI,MAAM,qBAAqB,EAEvC,MAAO,CAACC,EAASD,CAAO,CAC1B,CCwDO,SAASG,IAAqC,CACnD,IAAMC,EAAoB,IAAI,IACxBC,EAAa,IAAI,IACnBC,EAAsB,KAE1B,SAASC,GAAc,CACrBD,EAAU,CAAC,CACb,CAEA,SAASE,GAAgB,CACvB,GAAIF,IAAY,KAKhB,SAAWG,KAASH,EAClBI,EAAOD,CAAK,EAEdH,EAAU,KACZ,CAEA,SAASK,EAAUC,EAA4C,CAC7D,OAAAP,EAAW,IAAIO,CAAQ,EAChB,IAAMP,EAAW,OAAOO,CAAQ,CACzC,CAEA,SAASC,EAAcD,EAA4C,CACjE,OAAAR,EAAkB,IAAIQ,CAAQ,EACvB,IAAMR,EAAkB,OAAOQ,CAAQ,CAChD,CAEA,eAAeE,EAAUC,EAA+C,CACtE,IAAIC,EACJ,OAAO,IAAI,QAAYd,GAAQ,CAC7Bc,EAAQL,EAAWF,GAAU,EACvBM,IAAc,QAAaA,EAAUN,CAAK,IAC5CP,EAAIO,CAAK,CAEb,CAAC,CACH,CAAC,EAAE,QAAQ,IAAMO,GAAA,YAAAA,GAAS,CAC5B,CAEA,SAASC,EAAeR,EAAU,CAC5BH,IAAY,KACdA,EAAQ,KAAKG,CAAK,EAElBC,EAAOD,CAAK,CAEhB,CAEA,SAASC,EAAOD,EAAU,CACxBL,EAAkB,QAASQ,GAAaA,EAASH,CAAK,CAAC,EACvDL,EAAkB,MAAM,EAExBC,EAAW,QAASO,GAAaA,EAASH,CAAK,CAAC,CAClD,CAEA,SAASS,GAAQ,CACfd,EAAkB,MAAM,EACxBC,EAAW,MAAM,CACnB,CAEA,SAASc,GAAQ,CACf,OAAOf,EAAkB,KAAOC,EAAW,IAC7C,CAEA,MAAO,CAEL,OAAQY,EACR,UAAAN,EACA,cAAAE,EACA,MAAAK,EACA,MAAAC,EAEA,UAAAL,EACA,MAAAP,EACA,QAAAC,EAGA,WAAY,CACV,UAAAG,EACA,cAAAE,EACA,UAAAC,CACF,CACF,CACF,CCnKA,IAAAM,GAAA,CAAA,EAAAC,GAAAD,GAAA,CAAA,MAAA,IAAAE,GAAA,eAAA,IAAAC,GAAA,KAAA,IAAAC,GAAA,cAAA,IAAAC,EAAA,CAAA,EAEA,IAAMC,GACJ,6GACIC,GAAO,kBAEb,SAASC,GACPC,EACwD,CACxD,OAAO,OAAO,QAAW,YACrB,QAAQA,CAAM,EAEd,CAACC,KAAYC,IACX,QAAQF,CAAM,EAAE,eAAgBH,GAAOI,EAAS,GAAGC,CAAI,CAC/D,CAGO,IAAMP,GAAOI,GAAK,MAAM,EAClBN,GAAQM,GAAK,OAAO,EAEjC,SAASI,GACPH,EACuE,CACvE,OAAO,OAAO,QAAW,YACrB,QAAQA,CAAM,EAEd,CAACI,EAAOH,KAAYC,IAClB,QAAQF,CAAM,EACZ,kBAAkBI,CAAK,GACvBP,GACAC,GACAG,EACA,GAAGC,CACL,CACR,CAGO,IAAMN,GAAgBO,GAAc,MAAM,EACpCT,GAAiBS,GAAc,OAAO,EC8CnD,SAASE,GAASC,EAAgBC,EAAkC,CAClE,GAAID,IAAWC,EACb,MAAO,CAAC,EAAG,CAAC,EAGd,IAAMC,EAAUF,EAAO,MAAM,GAAG,EAC1BG,EAAUF,EAAO,MAAM,GAAG,EAC1BG,EAAS,KAAK,IAAIF,EAAQ,OAAQC,EAAQ,MAAM,EAClDE,EAAS,EACb,KAAOA,EAASD,GACVF,EAAQG,CAAM,IAAMF,EAAQE,CAAM,EADhBA,IACtB,CAKF,IAAMC,EAAKJ,EAAQ,OAASG,EACtBE,EAAOJ,EAAQ,OAASE,EAC9B,MAAO,CAACC,EAAIC,CAAI,CAClB,CAEA,SAASC,GACPC,EACAC,EAC+B,CAC/B,IAAMC,EAAQF,EAAY,MAAM,GAAG,EACnC,GAAIC,EAAS,GAAKA,EAASC,EAAM,OAAS,EACxC,MAAM,IAAI,MAAM,0BAA0B,EAG5C,IAAMC,EAAwC,CAAC,EAC3CF,EAASC,EAAM,QACjBC,EAAO,KAAK,GAAG,EAGjB,QAAS,EAAID,EAAM,OAASD,EAAS,EAAG,EAAIC,EAAM,OAAQ,IAAK,CAC7D,IAAME,EAAQF,EAAM,MAAM,EAAG,CAAC,EAC1BE,EAAM,OAAS,GACjBD,EAAO,KAAMC,EAAM,KAAK,GAAG,EAAI,IAAyB,CAE5D,CAEA,OAAAD,EAAO,KAAKH,CAAW,EAEhBG,CACT,CAEA,IAAME,GAAN,KAA2C,CAGzC,YAAYC,EAA0B,CACpC,KAAK,KAAOA,CACd,CAEA,IAAI,SAA8B,CAChC,OAAO,KAAK,IACd,CAOA,cAActC,EAAwD,CAEpE,IAAMuC,EAAO,KACTC,EAAU,GAERC,EAAmBC,EAAAC,EAAA,GACpB,KAAK,MADe,CAEvB,MAAMC,EAAgC,CACpC,GAAIJ,EAAS,CACXD,EAAK,KAAO,OAAO,OAAO,CAAC,EAAGA,EAAK,KAAMK,CAAK,EAI9C,QAAWC,KAAQ,OAAO,QAAQD,CAAK,EAAG,CACxC,GAAM,CAACE,EAAK7D,CAAK,EAAI4D,EAIjBC,IAAQ,UACT,KAAkBA,CAAG,EAAI7D,EAE9B,CACF,KACE,OAAM,IAAI,MAAM,mCAAmC,CAEvD,CACF,GACAe,EAASyC,CAAgB,EAIzBD,EAAU,EAEZ,CACF,EAQIO,GAAS,EAEAC,GAAN,KAIL,CA4DA,IAAY,cAAuB,CAEjC,IAAMb,EAAS,KAAK,OAAO,OAAO,EAAE,OAAO,QAAQ,EAAE,EAAE,KAAK,EAC5D,GAAIA,EAAO,KACT,MAAM,IAAI,MAAM,uBAAuB,EAEvC,OAAOA,EAAO,KAElB,CAEA,IAAW,cAAuB,CAChC,GAAI,KAAK,qBAAuB,KAC9B,MAAI,KAAK,eAAiB,EAClB,IAAI,MAAM,iBAAiB,EAE3B,IAAI,MAAM,iBAAiB,EAGrC,OAAO,KAAK,kBACd,CAKO,OAAc,CACnB,GAAI,KAAK,eAAiB,EACxB,MAAM,IAAI,MAAM,mCAAmC,EAGrD,YAAK,aAAe,EACpB,KAAK,mBAAqB,KAAK,aAC/B,KAAK,MAAM,IAAI,EACR,IACT,CAMO,MAAa,CAClB,GAAI,KAAK,eAAiB,EACxB,MAAM,IAAI,MAAM,qDAAqD,EAEvE,KAAK,KAAK,IAAI,EACd,KAAK,aAAe,EACpB,KAAK,mBAAqB,IAC5B,CAEA,YAAYG,EAAoC,CAC9C,KAAK,GAAKS,KACV,KAAK,aAAe,EACpB,KAAK,mBAAqB,KAC1B,KAAK,OAAS,IAAI,IAClB,KAAK,SAAW,IAAI,IACpB,KAAK,aAAe,CAAC,EACrB,KAAK,gBAAkB,IAAI,IAC3B,KAAK,mBAAqB,IAAI,IAC9B,KAAK,eAAiB,IAAIV,GAAYC,CAAc,EACpD,KAAK,SAAW,CACd,gBAAiB/C,GAAgB,EACjC,eAAgBA,GAAgB,EAChC,eAAgBA,GAAgB,EAChC,cAAeA,GAAgB,EAC/B,cAAeA,GAAgB,CACjC,EACA,KAAK,OAAS,CACZ,gBAAiB,KAAK,SAAS,gBAAgB,WAC/C,eAAgB,KAAK,SAAS,eAAe,WAC7C,eAAgB,KAAK,SAAS,eAAe,WAC7C,cAAe,KAAK,SAAS,cAAc,WAC3C,cAAe,KAAK,SAAS,cAAc,UAC7C,CACF,CAEA,IAAW,SAA8B,CACvC,OAAO,KAAK,eAAe,OAC7B,CAKO,SAAS0D,EAAqB,CACnC,GAAI,KAAK,eAAiB,EACxB,MAAM,IAAI,MAAM,iBAAiB,EAEnC,YAAK,OAAO,IAAIA,CAAK,EACd,IACT,CAEO,QACLC,EACAC,EACM,CACN,GAAI,KAAK,eAAiB,EACxB,MAAM,IAAI,MAAM,iBAAiB,EACnC,GAAW,KAAK,SAAS,IAAID,CAAa,EACxC,MAAM,IAAI,MAIR,2BAA2BA,CAAa,iBAC1C,EAGF,YAAK,SAAS,IAAIA,EAAeC,CAAO,EACjC,IACT,CAEO,aACLD,EACAE,EACAC,EACAC,EACM,CACN,OAAO,KAAK,QAAQJ,EAAe,IAAM,CACvC,IAAMK,EAAkB,IAAI,gBACtBC,EAASD,EAAgB,OAE3BE,EAAO,GACX,OAAKL,EAAU,KAAK,eAAe,QAASI,CAAM,EAAE,KAEjDE,GAAY,CACNF,EAAO,UACVC,EAAO,GACP,KAAK,WAAW,CAAE,KAAM,WAAY,KAAAC,CAAK,EAAGL,CAAI,EAEpD,EAGCM,GAAoB,CACdH,EAAO,UACVC,EAAO,GACP,KAAK,WAAW,CAAE,KAAM,cAAe,OAAAE,CAAO,EAAGL,CAAO,EAE5D,CACF,EAEO,IAAM,CACNG,GACHF,EAAgB,MAAM,CAE1B,CACF,CAAC,CACH,CAEQ,kBACNL,EACU,CACV,IAAMU,EAAoB,CAAC,EAI3B,GAAIV,IAAkB,IACpB,QAAWD,KAAS,KAAK,OACvBW,EAAQ,KAAKX,CAAK,UAEXC,EAAc,SAAS,IAAI,EAAG,CACvC,IAAMW,EAASX,EAAc,MAAM,EAAG,EAAE,EACxC,QAAWD,KAAS,KAAK,OACnBA,EAAM,WAAWY,CAAM,GACzBD,EAAQ,KAAKX,CAAK,CAGxB,KAAO,CAEL,IAAMa,EAAOZ,EACT,KAAK,OAAO,IAAIY,CAAI,GACtBF,EAAQ,KAAKE,CAAI,CAErB,CAEA,GAAIF,EAAQ,SAAW,EACrB,MAAM,IAAI,MAAM,mBAAmB,KAAK,UAAUV,CAAa,CAAC,EAAE,EAGpE,OAAOU,CACT,CAcO,eACLV,EACAa,EAGM,CACN,GAAI,KAAK,eAAiB,EACxB,MAAM,IAAI,MAAM,iBAAiB,EAGnC,QAAWC,KAAY,KAAK,kBAAkBd,CAAa,EAAG,CAC5D,IAAIe,EAAM,KAAK,mBAAmB,IAAID,CAAQ,EAC1CC,IAAQ,SACVA,EAAM,IAAI,IACV,KAAK,mBAAmB,IAAID,EAAUC,CAAG,GAG3C,OAAW,CAACC,EAAMC,CAAO,IAAK,OAAO,QAAQJ,CAAO,EAAG,CACrD,GAAIE,EAAI,IAAIC,CAAI,EACd,MAAM,IAAI,MACR,6BAA6BA,CAAI,SAASF,CAAQ,WAAWd,CAAa,4CAC5E,EAGF,IAAMkB,EAASD,EAMf,GAFA,KAAK,gBAAgB,IAAID,CAAI,EAEzBE,IAAW,OAAW,CACxB,IAAMC,EAAW,OAAOD,GAAW,WAAaA,EAAS,IAAMA,EAC/DH,EAAI,IAAIC,EAAMG,CAAQ,CACxB,CACF,CACF,CACA,OAAO,IACT,CAYO,mBACLC,EACAC,EACAH,EACM,CACN,OAAO,KAAK,QAAQE,EAAgB,IAAM,CACxC,IAAME,EACJ,OAAOD,GAAU,WACbA,EAAM,KAAK,eAAe,OAAO,EACjCA,EACAE,EAAY,WAAW,IAAM,CACjC,KAAK,WAAW,CAAE,KAAM,OAAQ,EAAGL,CAAM,CAC3C,EAAGI,CAAE,EAEL,MAAO,IAAM,CACX,aAAaC,CAAS,CACxB,CACF,CAAC,CACH,CAEQ,YACNC,EACgD,OAChD,OAAOC,EAAA,KAAK,mBAAmB,IAAI,KAAK,YAAY,IAA7C,YAAAA,EAAgD,IAAID,EAC7D,CAYQ,KAAKzC,EAAuB,CAClC,KAAK,SAAS,cAAc,OAAO,KAAK,YAAY,EAEpD,KAAK,eAAe,cAAeQ,GAAqB,OACtDR,EAASA,GAAA,KAAAA,EAAU,KAAK,aAAa,OACrC,QAAS2C,EAAI,EAAGA,EAAI3C,EAAQ2C,KAC1BD,EAAA,KAAK,aAAa,IAAI,IAAtB,MAAAA,EAA0BlC,EAE9B,CAAC,CACH,CAMQ,MAAMR,EAAuB,CACnC,IAAM4C,EAAgB9C,GACpB,KAAK,aACLE,GAAA,KAAAA,EAAU,KAAK,aAAa,MAAM,GAAG,EAAE,OAAS,CAClD,EAEA,KAAK,eAAe,cAAeQ,GAAqB,CACtD,QAAWqC,KAAWD,EAAe,CACnC,IAAM1B,EAAU,KAAK,SAAS,IAAI2B,CAAO,EACnCC,EAAY5B,GAAA,YAAAA,EAAUV,GACxB,OAAOsC,GAAc,WACvB,KAAK,aAAa,KAAKA,CAAS,EAEhC,KAAK,aAAa,KAAK,IAAI,CAE/B,CACF,CAAC,EAED,KAAK,SAAS,cAAc,OAAO,KAAK,YAAY,CACtD,CAMO,KAAKlF,EAAqB,CAE/B,GAAI,CAAC,KAAK,gBAAgB,IAAIA,EAAM,IAAI,EACtC,MAAM,IAAI,MAAM,iBAAiB,KAAK,UAAUA,EAAM,IAAI,CAAC,EAAE,EAG/D,GAAI,KAAK,eAAiB,EAOxB,OAGF,IAAMwE,EAAW,KAAK,YAAYxE,EAAM,IAAI,EAC5C,GAAIwE,IAAa,OACf,OAAO,KAAK,WAAWxE,EAAOwE,CAAQ,EAGtC,KAAK,SAAS,eAAe,OAAOxE,CAAK,CAE7C,CAEQ,WACNA,EACAuE,EACA,CACA,KAAK,SAAS,gBAAgB,OAAOvE,CAAK,EAE1C,IAAMmF,EAAW,KAAK,aAGhBC,GADW,OAAOb,GAAW,WAAaA,EAAS,IAAMA,GACnCvE,EAAO,KAAK,eAAe,OAAO,EAC1DqF,EACAC,EACJ,GAAIF,IAAe,KAAM,CAEvB,KAAK,SAAS,eAAe,OAAOpF,CAAK,EACzC,MACF,CAWA,GATI,OAAOoF,GAAe,SACxBC,EAAYD,GAEZC,EAAYD,EAAW,OACvBE,EAAU,MAAM,QAAQF,EAAW,MAAM,EACrCA,EAAW,OACX,CAACA,EAAW,MAAM,GAGpB,CAAC,KAAK,OAAO,IAAIC,CAAS,EAC5B,MAAM,IAAI,MAAM,4BAA4B,KAAK,UAAUA,CAAS,CAAC,EAAE,EAGzE,KAAK,SAAS,eAAe,OAAO,CAAE,KAAMF,EAAU,GAAIE,CAAU,CAAC,EAErE,GAAM,CAACrD,EAAIC,CAAI,EAAIR,GAAS,KAAK,aAAc4D,CAAS,EAMxD,GALIrD,EAAK,GACP,KAAK,KAAKA,CAAE,EAGd,KAAK,mBAAqBqD,EACtBC,IAAY,OAAW,CACzB,IAAMC,EAAeD,EACrB,KAAK,eAAe,cAAe1C,GAAqB,CACtD,QAAW4C,KAAUD,EACf,OAAOC,GAAW,WAEpBA,EAAO5C,EAAkB5C,CAAK,EAE9B4C,EAAiB,MAAM4C,CAAM,CAGnC,CAAC,CACH,CAEIvD,EAAO,GACT,KAAK,MAAMA,CAAI,CAEnB,CACF,EC/nBO,SAASwD,GACdC,EACoC,CAGpC,OACEA,IAAS,MACT,OAAOA,GAAS,UAChB,OAAO,UAAU,SAAS,KAAKA,CAAI,IAAM,iBAE7C,CAKO,SAASC,GAGdC,EAAqB,CACrB,OAAO,OAAO,QAAQA,CAAG,CAC3B,CA6CO,SAASC,GAAaC,EAAsC,CACjE,GAAI,CAEF,OAAO,KAAK,MAAMA,CAAU,CAC9B,OAAS,EAAG,CACV,MACF,CACF,CAQO,SAASC,GAA0BC,EAAa,CAIrD,OAAO,KAAK,MAAM,KAAK,UAAUA,CAAK,CAAC,CACzC,CAKO,SAASC,GAAUC,EAA0B,CAClD,GAAI,CACF,IAAMC,EAAiBD,EAAS,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EAUpE,OATqB,mBACnB,KAAKC,CAAc,EAChB,MAAM,EAAE,EACR,IAAI,SAAUC,EAAG,CAChB,MAAO,KAAO,KAAOA,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,MAAM,EAAE,CAC7D,CAAC,EACA,KAAK,EAAE,CACZ,CAGF,OAASC,EAAK,CACZ,OAAO,KAAKH,CAAQ,CACtB,CACF,CAmBO,SAASI,GAAWC,EAAuC,CAChE,OAAOA,EAAM,OACVC,GAAoCA,GAAS,IAChD,CACF,CAMO,SAASC,GAAiDb,EAAW,CAC1E,IAAMc,EAASC,EAAA,GAAKf,GACpB,cAAO,KAAKA,CAAG,EAAE,QAASgB,GAAM,CAC9B,IAAMC,EAAMD,EACRF,EAAOG,CAAG,IAAM,QAClB,OAAOH,EAAOG,CAAG,CAErB,CAAC,EACMH,CACT,CAOA,eAAsBI,GACpBC,EACAC,EACAC,EACY,CACZ,IAAIC,EACEC,EAAS,IAAI,QAAe,CAACC,EAAGC,IAAW,CAC/CH,EAAU,WAAW,IAAM,CACzBG,EAAO,IAAI,MAAMJ,CAAM,CAAC,CAC1B,EAAGD,CAAM,CACX,CAAC,EACD,OACE,QAGG,KAAK,CAACD,EAASI,CAAM,CAAC,EAGtB,QAAQ,IAAM,aAAaD,CAAO,CAAC,CAE1C,CElGO,SAASI,GAAiBC,EAAoC,CACnE,OACEA,IAAS,MACPA,GAAmB,KAASA,EAAkB,IAEpD,CAEO,SAASC,GAAaD,EAAoC,CAC/D,OAAQA,GAAmB,MAASA,EAAkB,IACxD,CAEO,SAASE,GAAyBF,EAAoC,CAC3E,OACEA,IAAS,MACPA,GAAmB,MAASA,EAAkB,IAEpD,CClDO,SAASG,GAAOC,EAAsD,CAC3E,OAAOA,IAAW,WAAaA,IAAW,cAC5C,CAgBO,SAASC,GAAkBD,EAAwC,CACxE,OAAQA,EAAQ,CACd,IAAK,aACH,MAAO,aAET,IAAK,YACH,MAAO,OAET,IAAK,eACH,MAAO,cAET,IAAK,eACH,MAAO,SAET,IAAK,UACH,MAAO,SAGT,QACE,MAAO,QACX,CACF,CAKA,SAASE,GAAsBC,EAA6C,CAC1E,IAAMC,EAAQD,EAAQ,aACtB,OAAQC,EAAO,CACb,IAAK,gBACL,IAAK,oBACH,MAAO,YAET,IAAK,gBACH,MAAO,UAET,IAAK,aACL,IAAK,gBACL,IAAK,mBACL,IAAK,sBACL,IAAK,eACH,OAAOD,EAAQ,QAAQ,aAAe,EAAI,eAAiB,aAE7D,IAAK,eACH,MAAO,eAGT,QACE,OAAOE,GAAYD,EAAO,eAAe,CAC7C,CACF,CAwEA,IAAME,GAAiB,CAAC,IAAK,IAAK,IAAO,IAAO,IAAO,IAAO,GAAM,EAM9DC,GAAcD,GAAe,CAAC,EAAI,EAMlCE,GAAsB,CAAC,IAAO,IAAQ,IAAQ,GAAO,EAOrDC,GAAqB,IACrBC,GAAe,IAMfC,GAAe,IAMfC,GAAyB,IAMlBC,GAAN,cAA2B,KAAM,CACtC,YAAYC,EAAgB,CAC1B,MAAMA,CAAM,CACd,CACF,EAEaC,GAAN,cAA8B,KAAM,CAEzC,YACEC,EACOpB,EACP,CACA,MAAMoB,CAAO,EAFN,KAAA,KAAApB,CAGT,CACF,EAEA,SAASqB,GACPC,EACAC,EAA4Bb,GACpB,OACR,OACEc,EAAAD,EAAO,KAAME,GAAUA,EAAQH,CAAY,IAA3C,KAAAE,EAAgDD,EAAOA,EAAO,OAAS,CAAC,CAE5E,CAEA,SAASG,GAAqBC,EAA6B,CACzDA,EAAQ,MAAM,CAAE,aAAcN,GAAiBM,EAAQ,YAAY,CAAE,CAAC,CACxE,CAEA,SAASC,GAAiCD,EAA6B,CACrEA,EAAQ,MAAM,CACZ,aAAcN,GAAiBM,EAAQ,aAAcf,EAAmB,CAC1E,CAAC,CACH,CAEA,SAASiB,GAAkBF,EAA6B,CACtDA,EAAQ,MAAM,CAAE,aAAc,CAAE,CAAC,CACnC,CAWA,SAASG,GAAIC,EAAiBX,EAAiB,CAC7C,IAAMY,EACJD,IAAU,EACEE,GACRF,IAAU,EACAG,GACS,IAAM,CAAC,EAChC,MAAO,IAAM,CACXF,EAAOZ,CAAO,CAChB,CACF,CAEA,SAASe,GAA8BC,EAA4B,CAEjE,IAAMC,EAAO,4CACb,OAAQC,GAA2B,CAC7BF,aAAa,MACPF,GAAK,GAAGG,CAAI,8BAA8B,OAAOD,CAAC,CAAC,EAAE,EAErDF,GACNK,GAAaH,CAAC,EACV,GAAGC,CAAI,8BAA8BD,EAAE,IAAI,kBAAkBE,EAAI,YAAY,MAC7E,GAAGD,CAAI,4BACb,CAEJ,CACF,CAEA,SAASG,GAAcC,EAA6B,CAClD,OAAQH,GAA2B,CACzBJ,GACN,2DAA2DO,EAAM,IAAI,kBAAkBH,EAAI,YAAY,KACzG,CACF,CACF,CAEA,IAAMI,GAAoBZ,GACxB,EACA,0DACF,EAEA,SAASS,GACPN,EAC+B,CAC/B,MAAO,EAAEA,aAAiB,QAAUA,EAAM,OAAS,OACrD,CASA,SAASU,GAAcpC,EAAqC,CAC1D,IAAMqC,EAAQ,IAAI,KAAK,EAAE,QAAQ,EAEjC,SAASd,KAAOe,EAAiB,CACvBX,GACN,KAAK,IAAI,KAAK,EAAE,QAAQ,EAAIU,GAAS,KAAM,QAAQ,CAAC,CAAC,UACnDrC,EAAQ,EACV,IACA,GAAGsC,CACL,CACF,CACA,IAAMC,EAAS,CACbvC,EAAQ,OAAO,gBAAgB,UAAW6B,GAAMN,EAAI,SAASM,EAAE,IAAI,EAAE,CAAC,EACtE7B,EAAQ,OAAO,eAAe,UAAU,CAAC,CAAE,KAAAwC,EAAM,GAAAC,CAAG,IAClDlB,EAAI,gBAAiBiB,EAAM,SAAKC,CAAE,CACpC,EACAzC,EAAQ,OAAO,eAAe,UAAW6B,GACvCN,EAAI,gBAAiBM,EAAE,KAAMA,EAAG,iCAAiC,CACnE,CAGF,EACA,MAAO,IAAM,CACX,QAAWa,KAASH,EAClBG,EAAM,CAEV,CACF,CAEA,SAASC,GAAyB3C,EAAqC,CAErE,IAAM4C,EAAkBC,GAAwB,EAC1CC,EAAaD,GAAsB,EACnCE,EAAgBF,GAAsB,EAExCG,EAA4B,KAE1BC,EAAcjD,EAAQ,OAAO,cAAc,UAAU,IAAM,CAC/D,IAAMkD,EAAanD,GAAsBC,CAAO,EAC5CkD,IAAeF,GACjBJ,EAAgB,OAAOM,CAAU,EAG/BF,IAAe,aAAeE,IAAe,YAC/CH,EAAc,OAAO,EACZC,IAAe,aAAeE,IAAe,aACtDJ,EAAW,OAAO,EAEpBE,EAAaE,CACf,CAAC,EAED,MAAO,CACL,gBAAiBN,EAAgB,WACjC,WAAYE,EAAW,WACvB,cAAeC,EAAc,WAC7B,YAAAE,CACF,CACF,CAEA,IAAME,GAAUC,GAA6BrB,GAC3CA,EAAI,MAAMqB,CAAK,EAEjB,SAASC,GACPC,EACAC,EAWA,CAGA,IAAMC,EAAYX,GAAwC,EAC1DW,EAAU,MAAM,EAIhB,IAAMC,EAAoBZ,GAAiC,EAE3D,SAASa,EAAeC,EAAgBC,EAAiB,CACvD,MAAO,IAAM,CACX,IAAMC,EAAM,IAAIjD,GAAgB+C,EAAQC,CAAO,EAC/CH,EAAkB,OAAOI,CAAG,CAC9B,CACF,CAEA,IAAMC,EAAoD,CACxD,aAAc,EACd,UAAW,KACX,OAAQ,KACR,aAAc1D,EAChB,EAIMJ,EAAU,IAAI+D,GAA2BD,CAAc,EAC1D,SAAS,eAAe,EACxB,SAAS,cAAc,EACvB,SAAS,cAAc,EACvB,SAAS,YAAY,EACrB,SAAS,eAAe,EACxB,SAAS,kBAAkB,EAC3B,SAAS,qBAAqB,EAC9B,SAAS,eAAe,EACxB,SAAS,mBAAmB,EAQ/B9D,EAAQ,eAAe,IAAK,CAC1B,UAAW,CACT,OAAQ,gBACR,OAAQ,CAACmB,GAAsBG,EAAiB,CAClD,EAEA,WAAY,eACd,CAAC,EAKDtB,EACG,QAAQ,UAAWsB,EAAiB,EAEpC,eAAe,UAAW,CACzB,QAAS,CAAC0C,EAAGjC,IAGXA,EAAI,YAAc,KAAO,mBAAqB,YAClD,CAAC,EAKH/B,EACG,eAAe,gBAAiB,CAC/B,iBAAkB,CAChB,OAAQ,aACR,OAAQmD,GAAO,CAAE,aAAc/C,EAAY,CAAC,CAC9C,CACF,CAAC,EACA,mBACC,gBACC2B,GAAQA,EAAI,aACb,YACF,EAEC,aACC,aAEA,IACEkC,GACEX,EAAU,aAAa,EACvB9C,GACA,uBACF,EAGD0D,IAAa,CACZ,OAAQ,mBACR,OAAQf,GAAO,CACb,UAAWe,EAAQ,KACnB,aAAc9D,EAChB,CAAC,CACH,GAGC+D,GACKA,EAAY,kBAAkBzD,GACzB,CACL,OAAQ,eACR,OAAQ,CACNa,GAAI,EAAgB4C,EAAY,OAAO,OAAO,EAC9CT,EAAeS,EAAY,OAAO,QAAS,EAAE,CAC/C,CACF,EAGK,CACL,OAAQ,gBACR,OAAQ,CACNhD,GACAI,GACE,EACA,0BACE4C,EAAY,kBAAkB,MAC1BA,EAAY,OAAO,QACnB,OAAOA,EAAY,MAAM,CAC/B,EACF,CACF,CACF,CAEJ,EAOF,IAAMC,EAAiBlC,GACrBlC,EAAQ,KAAK,CAAE,KAAM,wBAAyB,MAAAkC,CAAM,CAAC,EAEjDmC,EAAiBnC,GACrBlC,EAAQ,KAAK,CAAE,KAAM,wBAAyB,MAAAkC,CAAM,CAAC,EAEjDoC,EAAmBpC,GACvBA,EAAM,OAAS,OACXlC,EAAQ,KAAK,CAAE,KAAM,MAAO,CAAC,EAC7BwD,EAAU,OAAOtB,CAAK,EAE5B,SAASqC,EAAeC,EAAmC,CACrDA,IACFA,EAAO,oBAAoB,QAASJ,CAAa,EACjDI,EAAO,oBAAoB,QAASH,CAAa,EACjDG,EAAO,oBAAoB,UAAWF,CAAe,EACrDE,EAAO,MAAM,EAEjB,CAEAxE,EACG,eAAe,sBAAuB,CACrC,iBAAkB,CAChB,OAAQ,mBACR,OAAQmD,GAAO,CAAE,aAAc/C,EAAY,CAAC,CAC9C,CACF,CAAC,EACA,mBACC,sBACC2B,GAAQA,EAAI,aACb,kBACF,EAEC,aACC,mBAWA,MAAOA,EAAK0C,IAAW,CACrB,IAAIC,EAAiD,KACjDC,EAA+C,KAE7CC,EAAW,IAAI,QACnB,CAACC,EAASC,IAAQ,CAEhB,GAAI/C,EAAI,YAAc,KACpB,MAAM,IAAI,MAAM,mBAAmB,EAGrC,IAAMyC,EAASlB,EAAU,aAAavB,EAAI,SAAc,EACxD4C,EAAoBH,EAEpB,SAASO,EAAO7C,EAAwB,CACtCwC,EAAyBxC,EACzBsC,EAAO,oBAAoB,UAAWF,CAAe,EACrDQ,EAAI5C,CAAK,CACX,CAEA,GAAM,CAAC8C,GAAQC,EAAe,EAAIC,GAAwB,EACrD3B,EAAQ,gBAGX0B,GAAgB,EAIlB,SAASE,GAAejD,EAA+B,CACrD,IAAMkD,EAAYC,GAAanD,EAAM,IAAc,GAG/CkD,GAAA,YAAAA,EAAW,QAAA,KACbH,GAAgB,CAEpB,CAQAT,EAAO,iBAAiB,UAAWF,CAAe,EAC9Cf,EAAQ,gBACViB,EAAO,iBAAiB,UAAWW,EAAc,EAEnDX,EAAO,iBAAiB,QAASO,CAAM,EACvCP,EAAO,iBAAiB,QAASO,CAAM,EACvCP,EAAO,iBAAiB,OAAQ,IAAM,CA0BpCA,EAAO,iBAAiB,QAASJ,CAAa,EAC9CI,EAAO,iBAAiB,QAASH,CAAa,EAC9C,IAAM3B,EAAQ,IAAM,CAClB8B,EAAO,oBAAoB,QAASO,CAAM,EAC1CP,EAAO,oBAAoB,QAASO,CAAM,EAC1CP,EAAO,oBAAoB,UAAWW,EAAc,CACtD,EAUKH,GAAO,KAAK,IAAM,CACrBH,EAAQ,CAACL,EAAQ9B,CAAK,CAAC,CACzB,CAAC,CACH,CAAC,CACH,CACF,EAEA,OAAOuB,GACLW,EACAnE,GACA,uCACF,EACG,KAcC,CAAC,CAAC+D,EAAQ9B,CAAK,IAAM,CAGnB,GAFAA,EAAM,EAEF+B,EAAO,QAIT,MAAM,IAAI,MAAM,SAAS,EAG3B,GAAIC,EACF,MAAMA,EAGR,OAAOF,CACT,CACF,EACC,MAAO3C,GAAM,CACZ,MAAA0C,EAAeI,CAAiB,EAC1B9C,CACR,CAAC,CACL,EAGCqC,IAAa,CACZ,OAAQ,gBACR,OAAQf,GAAO,CACb,OAAQe,EAAQ,KAChB,aAAc9D,EAChB,CAAC,CACH,GAGCkF,GAAY,CACX,IAAMzB,EAAMyB,EAAQ,OAKpB,GAAIzB,aAAenD,GACjB,MAAO,CACL,OAAQ,eACR,OAAQ,CACNa,GAAI,EAAgBsC,EAAI,OAAO,EAC/BH,EAAeG,EAAI,QAAS,EAAE,CAChC,CACF,EAIF,GAAI7B,GAAa6B,CAAG,EAAG,CAIrB,GAAIA,EAAI,OAAA,KACN,MAAO,aAGT,GAAIlE,GAAyBkE,EAAI,IAAI,EAEnC,MAAO,CACL,OAAQ,sBACR,OAAQ,CACNxC,GACAO,GAA8BiC,CAAG,CACnC,CACF,EAKF,GAAIrE,GAAiBqE,EAAI,IAAI,EAC3B,MAAO,CACL,OAAQ,eACR,OAAQ,CACNtC,GAAI,EAAgBsC,EAAI,MAAM,EAC9BH,EAAeG,EAAI,OAAQA,EAAI,IAAI,CACrC,CACF,CAEJ,CAGA,MAAO,CACL,OAAQ,gBACR,OAAQ,CAAC1C,GAAsBS,GAA8BiC,CAAG,CAAC,CACnE,CACF,CACF,EAcF,IAAM0B,EAA8D,CAClE,OAAQ,oBACR,OAASxD,GAAQ,QACfd,EAAAc,EAAI,SAAJ,MAAAd,EAAY,KAAK,OACnB,CACF,EAEMuE,EAA+D,IAAM,CAGzE,IAAMC,EAAM,OAAO,UAAa,YAAc,SAAW,OAGzD,OADEA,GAAA,YAAAA,EAAK,mBAAoB,UAAYnC,EAAU,UAAU,EACxC,eAAiBiC,CACtC,EA2GA,GAzGAvF,EACG,mBAAmB,gBAAiBM,GAAoBkF,CAAc,EACtE,eAAe,gBAAiB,CAC/B,kBAAmBA,EACnB,iBAAkBD,CACpB,CAAC,EAEHvF,EAAQ,eAAe,eAAgB,CACrC,iBAAkB,qBACpB,CAAC,EAEDA,EACG,QAAQ,QAAU+B,GAAQ,CACzBA,EAAI,MAAM,CAAE,aAAcA,EAAI,aAAe,CAAE,CAAC,EAEhD,IAAM2D,EAAU,WAIdlC,EAAU,QACV,CACF,EAIA,OAAQzB,GAAQ,CACdwC,EAAexC,EAAI,MAAM,EACzBA,EAAI,MAAM,CAAE,OAAQ,IAAK,CAAC,EAC1B,aAAa2D,CAAO,EACpBlC,EAAU,MAAM,CAClB,CACF,CAAC,EAEA,eAAe,oBAAqB,CAAE,KAAM,eAAgB,CAAC,EAC7D,mBAAmB,oBAAqBjD,GAAc,CACrD,OAAQ,mBAER,OAAQgB,GACN,EACA,gEACF,CACF,CAAC,EAEA,eAAe,QAAS,CAIvB,sBAAuB,CAACyC,EAAG5C,IAAY,OACrC,QAAIH,EAAAG,EAAQ,SAAR,YAAAH,EAAgB,cAAe,EAE1B,KAGF,CACL,OAAQ,sBACR,OAAQE,EACV,CACF,EAEA,sBAAwBU,GAElBrC,GAAiBqC,EAAE,MAAM,IAAI,EACxB,CACL,OAAQ,eACR,OAAQ,CACNM,GACAuB,EAAe7B,EAAE,MAAM,OAAQA,EAAE,MAAM,IAAI,CAC7C,CACF,EAGEnC,GAAamC,EAAE,MAAM,IAAI,EACvBA,EAAE,MAAM,OAAA,KAGH,aAEA,CACL,OAAQ,gBACR,OAAQ,CAACV,GAAsBc,GAAcJ,EAAE,KAAK,CAAC,CACvD,EAIAlC,GAAyBkC,EAAE,MAAM,IAAI,EAGhC,CACL,OAAQ,sBACR,OAAQ,CAACR,GAAkCY,GAAcJ,EAAE,KAAK,CAAC,CACnE,EAKK,CACL,OAAQ,sBACR,OAAQ,CAACV,GAAsBc,GAAcJ,EAAE,KAAK,CAAC,CACvD,CAEJ,CAAC,EAKC,OAAO,UAAa,YAAa,CACnC,IAAM4D,EAAM,OAAO,UAAa,YAAc,SAAW,OACnDE,EAAM,OAAO,QAAW,YAAc,OAAS,OAC/CC,EAAOD,GAAA,KAAAA,EAAOF,EAEpBzF,EAAQ,QAAQ,IAAM+B,GAAQ,CAC5B,SAAS8D,GAAmB,CAC1B7F,EAAQ,KAAK,CAAE,KAAM,mBAAoB,CAAC,CAC5C,CAEA,SAAS8F,GAAsB,CAC7B9F,EAAQ,KAAK,CAAE,KAAM,kBAAmB,CAAC,CAC3C,CAEA,SAAS+F,GAAqB,EACxBN,GAAA,YAAAA,EAAK,mBAAoB,WAC3BzF,EAAQ,KAAK,CAAE,KAAM,kBAAmB,CAAC,CAE7C,CAEA,OAAA2F,GAAA,MAAAA,EAAK,iBAAiB,SAAUG,GAChCH,GAAA,MAAAA,EAAK,iBAAiB,UAAWE,GACjCD,GAAA,MAAAA,EAAM,iBAAiB,mBAAoBG,GACpC,IAAM,CACXH,GAAA,MAAAA,EAAM,oBAAoB,mBAAoBG,GAC9CJ,GAAA,MAAAA,EAAK,oBAAoB,SAAUG,GACnCH,GAAA,MAAAA,EAAK,oBAAoB,UAAWE,GAGpCtB,EAAexC,EAAI,MAAM,CAC3B,CACF,CAAC,CACH,CAEA,IAAMiE,EAAW,CAAC,EAEZ,CAAE,gBAAApD,EAAiB,WAAAE,EAAY,cAAAC,EAAe,YAAAE,CAAY,EAC9DN,GAAyB3C,CAAO,EAClC,OAAAgG,EAAS,KAAK/C,CAAW,EAIrBM,EAAQ,oBACVyC,EAAS,KAAK5D,GAAcpC,CAAO,CAAC,EAItCA,EAAQ,MAAM,EAEP,CACL,QAAAA,EACA,SAAAgG,EAGA,OAAQ,CACN,gBAAApD,EACA,WAAAE,EACA,cAAAC,EACA,UAAWS,EAAU,WACrB,kBAAmBC,EAAkB,UACvC,CACF,CACF,CAUO,IAAMwC,GAAN,KAA8C,CAmCnD,YACE3C,EACA4C,EAA8B,GAC9Bf,EAA0B,GAC1B,CACA,GAAM,CAAE,QAAAnF,EAAS,OAAAmG,EAAQ,SAAAH,CAAS,EAAI3C,GACpCC,EACA,CAAE,eAAA6B,EAAgB,mBAAAe,CAAmB,CACvC,EACA,KAAK,QAAUlG,EACf,KAAK,OAASmG,EACd,KAAK,SAAWH,CAClB,CAEA,iBAA0C,CACxC,OAAOlG,GAAkB,KAAK,UAAU,CAAC,CAC3C,CAEA,WAAoB,CAClB,GAAI,CACF,OAAOC,GAAsB,KAAK,OAAO,CAC3C,OAAQ8B,EAAA,CACN,MAAO,SACT,CACF,CAKA,IAAI,WAAsB,CACxB,OAAO,KAAK,QAAQ,QAAQ,SAC9B,CAMO,SAAgB,CACrB,KAAK,QAAQ,KAAK,CAAE,KAAM,SAAU,CAAC,CACvC,CAMO,WAAkB,CACvB,KAAK,QAAQ,KAAK,CAAE,KAAM,WAAY,CAAC,CACzC,CAMO,YAAmB,CACxB,KAAK,QAAQ,KAAK,CAAE,KAAM,YAAa,CAAC,CAC1C,CAOO,SAAgB,CACrB,KAAK,QAAQ,KAAK,EAElB,IAAIuE,EACJ,KAAQA,EAAU,KAAK,SAAS,IAAI,GAClCA,EAAQ,CAEZ,CAMO,KAAKC,EAAoB,OAC9B,IAAM7B,GAASvD,EAAA,KAAK,QAAQ,UAAb,YAAAA,EAAsB,OACjCuD,IAAW,KACL7C,GAAK,iCAAkC0E,CAAI,EAC1C7B,EAAO,aAAe,EACvB7C,GAAK,wCAAyC0E,CAAI,EAE1D7B,EAAO,KAAK6B,CAAI,CAEpB,CAMO,yBAAyBnE,EAAoB,CAClD,KAAK,QAAQ,KAAKA,CAAK,CACzB,CACF,EC7kCO,SAASoE,GAAgBC,EAAoC,CAClE,OAAOA,EAAO,SAAS,YAAgB,CACzC,CAEO,SAASC,GAAWD,EAAoC,CAC7D,OACEA,EAAO,SAAS,gBAAwB,GACxCA,EAAO,SAAS,YAAgB,CAEpC,CAyDA,SAASE,GACPJ,EACmD,CACnD,OACEK,GAAcL,CAAI,IACjBA,EAAK,IAAM,OACVA,EAAK,IAAM,MACXA,EAAK,IAAM,aAEjB,CASO,SAASM,GAAeC,EAAyC,CACtE,IAAMC,EAAaD,EAAe,MAAM,GAAG,EAC3C,GAAIC,EAAW,SAAW,EACxB,MAAM,IAAI,MAAM,yCAAyC,EAG3D,IAAMC,EAAUzB,GAAa0B,GAAUF,EAAW,CAAC,CAAC,CAAC,EACrD,GAAI,EAAEC,GAAWL,GAAwBK,CAAO,GAC9C,MAAM,IAAI,MACR,+PACF,EAGF,MAAO,CACL,IAAKF,EACL,OAAQE,CACV,CACF,CCzFO,SAASE,GACdC,EACa,CACb,IAAMC,EAAiBC,GAAsBF,CAAW,EAElDG,EAA0B,IAAI,IAE9BC,EAA4B,CAAC,EAC7BC,EAAwB,CAAC,EAEzBC,EAAkB,IAAI,IAE5B,SAASC,GAAQ,CACfJ,EAAW,MAAM,EACjBC,EAAO,OAAS,EAChBC,EAAY,OAAS,EACrBC,EAAgB,MAAM,CACxB,CAEA,SAASE,EACPC,EACAnB,EACA,CACA,OAAImB,IAAmB,gBAEnBnB,EAAO,SAAA,eAAgC,GACvCA,EAAO,SAAA,gBAAiC,GACxCA,EAAO,SAAA,WAAwB,GAC/BA,EAAO,SAAA,YAAyB,EAEzBmB,IAAmB,YAE1BnB,EAAO,SAAA,WAAwB,GAAKA,EAAO,SAAA,YAAyB,EAIjE,EACT,CAEA,SAASoB,EAAeC,EAGQ,CAC9B,IAAMC,EAAM,KAAK,KAAK,KAAK,IAAI,EAAI,GAAI,EAEvC,QAASC,EAAIT,EAAO,OAAS,EAAGS,GAAK,EAAGA,IAAK,CAC3C,IAAMC,EAAQV,EAAOS,CAAC,EAKtB,GAJkBR,EAAYQ,CAAC,GAIdD,EAAK,CACpBR,EAAO,OAAOS,EAAG,CAAC,EAClBR,EAAY,OAAOQ,EAAG,CAAC,EACvB,QACF,CAEA,GAAIC,EAAM,OAAO,IAAA,KAEf,OAAOA,EACT,GAAWA,EAAM,OAAO,IAAA,MAA8B,CAEpD,GACE,CAACH,EAAe,QAChB,OAAO,QAAQG,EAAM,OAAO,KAAK,EAAE,SAAW,EAE9C,OAAOA,EAGT,OAAW,CAACC,EAAUzB,CAAM,IAAK,OAAO,QAAQwB,EAAM,OAAO,KAAK,EAIhE,GAAKH,EAAe,QAOpB,GACGI,EAAS,SAAS,GAAG,GACpBJ,EAAe,OAAO,WAAWI,EAAS,QAAQ,IAAK,EAAE,CAAC,GAC3DJ,EAAe,SAAWI,GACzBP,EAAuBG,EAAe,eAAgBrB,CAAM,EAE9D,OAAOwB,UAXLC,EAAS,SAAS,GAAG,GACrBP,EAAuBG,EAAe,eAAgBrB,CAAM,EAE5D,OAAOwB,CAWf,CACF,CAGF,CAEA,eAAeE,EAAgB1E,EAGF,SAC3B,IAAM2E,GACJC,GAAAlH,EAAAgG,EAAY,YAAZ,YAAAhG,EAAuB,QAAvB,KAAAkH,EACC,OAAO,QAAW,YAAc,OAAY,OAAO,MAEtD,GAAIjB,EAAe,OAAS,UAAW,CACrC,GAAIgB,IAAY,OACd,MAAM,IAAIxH,GACR,sHACF,EAGF,IAAM0H,EAAW,MAAMC,GAAkBH,EAAShB,EAAe,IAAK,CACpE,KAAM3D,EAAQ,MAChB,CAAC,EACK+E,EAAS3B,GAAeyB,EAAS,KAAK,EAI5C,GAFAG,EAAuBD,EAAQ/E,CAAO,EAElC6D,EAAW,IAAIkB,EAAO,GAAG,EAC3B,MAAM,IAAI5H,GACR,gHACF,EAGF,OAAO4H,CACT,CAEA,GAAIpB,EAAe,OAAS,SAAU,CACpC,IAAMkB,EAAW,MAAMlB,EAAe,SAAS3D,EAAQ,MAAM,EAC7D,GAAI6E,GAAY,OAAOA,GAAa,UAClC,GAAI,OAAOA,EAAS,OAAU,SAAU,CACtC,IAAME,EAAS3B,GAAeyB,EAAS,KAAK,EAC5C,OAAAG,EAAuBD,EAAQ/E,CAAO,EAC/B+E,CACT,SAAW,OAAOF,EAAS,OAAU,SAAU,CAC7C,IAAMzH,EAAS,0BACb,WAAYyH,GAAY,OAAOA,EAAS,QAAW,SAC/CA,EAAS,OACT,WACN,GAGA,MAAIA,EAAS,QAAU,YACf,IAAI1H,GAAaC,CAAM,EAEvB,IAAI,MAAMA,CAAM,CAE1B,EAGF,MAAM,IAAI,MACR,wIACF,CACF,CAGA,MAAM,IAAI,MACR,4DACF,CACF,CAMA,SAAS4H,EACPC,EACAjF,EAIA,CAIA,GAAI,CAACA,EAAQ,QAAUiF,EAAY,OAAO,IAAA,MAA8B,CAEtE,GAAI,OAAO,QAAQA,EAAY,OAAO,KAAK,EAAE,SAAW,EACtD,OAEF,OAAW,CAACR,EAAUzB,CAAM,IAAK,OAAO,QACtCiC,EAAY,OAAO,KACrB,EACE,GACER,EAAS,SAAS,GAAG,GACrBP,EAAuBlE,EAAQ,eAAgBgD,CAAM,EAErD,OAGJ,MAAM,IAAI7F,GACR,sLACF,CACF,CACF,CAEA,eAAe+H,EAAab,EAGL,CACrB,GAAIV,EAAe,OAAS,SAC1B,MAAO,CAAE,KAAM,SAAU,aAAcA,EAAe,YAAa,EAGrE,IAAMwB,EAAcf,EAAeC,CAAc,EACjD,GAAIc,IAAgB,OAClB,MAAO,CAAE,KAAM,SAAU,MAAOA,CAAY,EAG9C,IAAIC,EACAf,EAAe,QACjBe,EAAiBpB,EAAgB,IAAIK,EAAe,MAAM,EACtDe,IAAmB,SACrBA,EAAiBV,EAAgBL,CAAc,EAC/CL,EAAgB,IAAIK,EAAe,OAAQe,CAAc,KAG3DA,EAAiBpB,EAAgB,IAAI,uBAAuB,EACxDoB,IAAmB,SACrBA,EAAiBV,EAAgBL,CAAc,EAC/CL,EAAgB,IAAI,wBAAyBoB,CAAc,IAI/D,GAAI,CACF,IAAMZ,EAAQ,MAAMY,EAEdC,EAAS,GACTC,EACJ,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,GAC3Bd,EAAM,OAAO,IAAMA,EAAM,OAAO,KACjCa,EAEF,OAAAxB,EAAW,IAAIW,EAAM,GAAG,EAGpBA,EAAM,OAAO,IAAA,eACfV,EAAO,KAAKU,CAAK,EACjBT,EAAY,KAAKuB,CAAS,GAGrB,CAAE,KAAM,SAAU,MAAAd,CAAM,CACjC,QAAA,CACMH,EAAe,OACjBL,EAAgB,OAAOK,EAAe,MAAM,EAE5CL,EAAgB,OAAO,uBAAuB,CAElD,CACF,CAEA,MAAO,CACL,MAAAC,EACA,aAAAiB,CACF,CACF,CAEA,SAAStB,GACPF,EACgB,CAChB,GAAM,CAAE,aAAA6B,EAAc,aAAAC,CAAa,EAAI9B,EAEvC,GAAI8B,IAAiB,QAAaD,IAAiB,OACjD,MAAM,IAAI,MACR,gOACF,EAGF,GAAI,OAAOA,GAAiB,SAAU,CACpC,GAAIA,EAAa,WAAW,KAAK,EAC/B,MAAM,IAAI,MACR,gQACF,EACF,GAAW,CAACA,EAAa,WAAW,KAAK,EACvC,MAAM,IAAI,MACR,wKACF,EAEF,MAAO,CACL,KAAM,SACN,aAAAA,CACF,CACF,CAEA,GAAI,OAAOC,GAAiB,SAC1B,MAAO,CACL,KAAM,UACN,IAAKA,CACP,EACF,GAAW,OAAOA,GAAiB,WACjC,MAAO,CACL,KAAM,SACN,SAAUA,CACZ,EACF,MAAWA,IAAiB,OACpB,IAAI,MACR,qKACF,EAGI,IAAI,MACR,8NACF,CACF,CAEA,eAAeV,GACbW,EACAC,EACAC,EAG4B,CAC5B,IAAMC,EAAM,MAAMH,EAAMC,EAAU,CAChC,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUC,CAAI,CAC3B,CAAC,EACD,GAAI,CAACC,EAAI,GAAI,CACX,IAAMxI,EAAS,IACZ,MAAMwI,EAAI,KAAK,GAAG,KAAK,GAAK,sCAC/B,KAAKA,EAAI,MAAM,qBAAqBF,CAAQ,IAE5C,MAAIE,EAAI,SAAW,KAAOA,EAAI,SAAW,IAGjC,IAAIzI,GAAa,iBAAiBC,CAAM,EAAE,EAE1C,IAAI,MAAM,2BAA2BA,CAAM,EAAE,CAEvD,CAEA,IAAI0F,EACJ,GAAI,CACFA,EAAO,MAAO8C,EAAI,KAAK,CACzB,OAASC,EAAI,CACX,MAAM,IAAI,MACR,0DAA0DH,CAAQ,MAAM,OACtEG,CACF,CAAC,EACH,CACF,CAEA,GAAI,CAAC1C,GAAcL,CAAI,GAAK,OAAOA,EAAK,OAAU,SAChD,MAAM,IAAI,MACR,2FAA2F4C,CAAQ,cAAc,KAAK,UACpH5C,CACF,CAAC,EACH,EAEF,GAAM,CAAE,MAAA0B,CAAM,EAAI1B,EAClB,MAAO,CAAE,MAAA0B,CAAM,CACjB,CCpYO,IAAMsB,GAAmB,4BCiBnBC,GAAY,OAAO,ECwChC,IAAMC,GAAcC,GAAmD,EAwB1DC,GAAqBF,GAAY,WCsD9C,IAAMG,GAAW,KAAK,IAAI,EC/HnB,SAASC,GACdC,KACGC,EACK,CACR,GAAI,OAAOD,GAAW,UAAYA,IAAW,MAAQ,MAAM,QAAQA,CAAM,EACvE,OAAO,KAAK,UAAUA,EAAQ,GAAGC,CAAI,EAGvC,IAAMC,EAAe,OAAO,KAAKF,CAAM,EACpC,KAAK,EACL,OACC,CAACE,EAAcC,KACbD,EAAaC,CAAG,EAAIH,EAAOG,CAAG,EAEvBD,GAET,CAAC,CACH,EAEF,OAAO,KAAK,UAAUA,EAAc,GAAGD,CAAI,CAC7C,CCxBA,IAAMG,GAAe,GACfC,GAAgB,IAoDhBC,GAAO,IAAM,CAAC,EAEdC,GAAN,KAAwC,CAMtC,YAAYN,EAAS,CAJrB,KAAA,QAAsBK,GACtB,KAAA,OAAiBA,GACjB,KAAA,QAAsB,IAAI,QAAQA,EAAI,EAGpC,KAAK,KAAOL,CACd,CACF,EAKaO,GAAN,KAAyC,CAQ9C,YAAYC,EAA+BC,EAAmB,SAP9D,KAAQ,MAA2B,CAAC,EAKpC,KAAO,MAAQ,GAGb,KAAK,SAAWD,EAChB,KAAK,MAAOE,EAAAD,GAAA,YAAAA,EAAS,OAAT,KAAAC,EAAiBP,GAC7B,KAAK,OAAQQ,EAAAF,GAAA,YAAAA,EAAS,QAAT,KAAAE,EAAkBP,EACjC,CAEQ,mBAA0B,CAC5B,KAAK,iBAAmB,SAC1B,aAAa,KAAK,cAAc,EAChC,KAAK,eAAiB,OAE1B,CAEQ,UAAW,CACb,KAAK,MAAM,SAAW,KAAK,KAExB,KAAK,MAAM,EACP,KAAK,MAAM,SAAW,IAE/B,KAAK,kBAAkB,EACvB,KAAK,eAAiB,WAAW,IAAM,KAAK,KAAK,MAAM,EAAG,KAAK,KAAK,EAExE,CAEA,MAAc,OAAuB,CAEnC,GAAI,KAAK,MAAM,SAAW,EACxB,OAIF,IAAMQ,EAAQ,KAAK,MAAM,OAAO,CAAC,EAC3BZ,EAAOY,EAAM,IAAKC,GAASA,EAAK,IAAI,EAE1C,GAAI,CAEF,IAAMC,EAAU,MAAM,KAAK,SAASd,CAAI,EACxC,KAAK,MAAQ,GAGbY,EAAM,QAAQ,CAACC,EAAME,IAAU,CAC7B,IAAMC,EAASF,GAAA,YAAAA,EAAUC,GAErBC,aAAkB,MACpBH,EAAK,OAAOG,CAAM,EACTA,IAAW,OACpBH,EAAK,QAAQG,CAAM,EAEf,MAAM,QAAQF,CAAO,EACvBD,EAAK,OACH,IAAI,MACF,wGAAwGD,EAAM,MAAM,aAAaE,EAAQ,MAAM,GACjJ,CACF,EAEAD,EAAK,OAAO,IAAI,MAAM,sCAAsC,CAAC,CAGnE,CAAC,CACH,OAASI,EAAO,CACd,KAAK,MAAQ,GAGbL,EAAM,QAASC,GAAS,CACtBA,EAAK,OAAOI,CAAK,CACnB,CAAC,CACH,CACF,CAEA,OAAOjB,EAAqB,CAE1B,IAAMkB,EAAe,KAAK,MAAM,KAC7BL,GAASf,GAAUe,EAAK,IAAI,IAAMf,GAAUE,CAAI,CACnD,EAGA,GAAIkB,EACF,OAAOA,EAAa,QAItB,IAAML,EAAO,IAAIP,GAAgBN,CAAI,EACrC,OAAAa,EAAK,QAAU,IAAI,QAAW,CAACM,EAASC,IAAW,CACjDP,EAAK,QAAUM,EACfN,EAAK,OAASO,CAChB,CAAC,EACD,KAAK,MAAM,KAAKP,CAAI,EACpB,KAAK,SAAS,EAEPA,EAAK,OACd,CAEA,OAAc,CACZ,KAAK,MAAQ,CAAC,EACd,KAAK,MAAQ,GACb,KAAK,kBAAkB,CACzB,CACF,EAMO,SAASQ,GACdb,EACAC,EACkB,CAClB,IAAMa,EAAQ,IAAIf,GAAMC,EAAUC,CAAO,EACnCc,EAAQ,IAAI,IACZC,EAAcC,GAAgD,EAEpE,SAASC,EAAY1B,EAAiB,CACpC,OAAOF,GAAUE,CAAI,CACvB,CAEA,SAAS2B,EACPC,EACAC,EACA,CAEIA,EACFN,EAAM,IAAIK,EAAUC,CAAK,EAEzBN,EAAM,OAAOK,CAAQ,EAIvBJ,EAAY,OAAOK,CAAK,CAC1B,CAEA,eAAeC,KAAO9B,EAAS,CAC7B,IAAM4B,EAAWF,EAAY1B,CAAI,EAGjC,GAAI,CAAAuB,EAAM,IAAIK,CAAQ,EAItB,GAAI,CAEFD,EAAkBC,EAAU,CAAE,UAAW,EAAK,CAAC,EAG/C,IAAMZ,EAAS,MAAMM,EAAM,IAAI,GAAGtB,CAAI,EAGtC2B,EAAkBC,EAAU,CAAE,UAAW,GAAO,KAAMZ,CAAO,CAAC,CAChE,OAASC,EAAO,CAgBdU,EAAkBC,EAAU,CAC1B,UAAW,GACX,MAAOX,CACT,CAAC,CACH,CACF,CAEA,SAASc,KAAY/B,EAAS,CAC5B,IAAM4B,EAAWF,EAAY1B,CAAI,EAEjC,OAAOuB,EAAM,IAAIK,CAAQ,CAC3B,CAEA,OAAOI,EAAAC,EAAA,GACFT,GADE,CAEL,IAAAM,EACA,SAAAC,CACF,EACF,CC7PO,SAASG,GAAeC,EAA2B,CACxD,IAAIN,EAAQM,EACNC,EAAc,IAAI,IAKxB,SAASN,GAAM,CACb,OAAOD,CACT,CAKA,SAASQ,EAAI7B,EAAkC,CAC7C,IAAM8B,EAAW9B,EAASqB,CAAK,EAC/B,GAAIA,IAAUS,EAId,CAAAT,EAAQS,EAER,QAAWC,KAAcH,EACvBG,EAAWV,CAAK,EAEpB,CAOA,SAASW,EAAUhC,EAA0C,CAC3D,OAAA4B,EAAY,IAAI5B,CAAQ,EAExBA,EAASqB,CAAK,EAEP,IAAM,CACXO,EAAY,OAAO5B,CAAQ,CAC7B,CACF,CAEA,MAAO,CACL,IAAAsB,EACA,IAAAO,EACA,UAAAG,CACF,CACF,CE9BO,SAASC,GAAqBC,EAAqC,CACxE,IAAMC,EAAWD,EAAK,SAAW,IAAI,KAAKA,EAAK,QAAQ,EAAI,OACrDE,EAAY,IAAI,KAAKF,EAAK,SAAS,EACnCG,EAAYH,EAAK,UAAU,IAAKI,GAAcC,EAAAC,EAAA,GAC/CF,GAD+C,CAElD,UAAW,IAAI,KAAKA,EAAS,SAAS,CACxC,EAAE,EAEF,GAAIJ,EAAK,KACP,OAAOK,EAAAC,EAAA,GACFN,GADE,CAEL,UAAAG,EACA,UAAAD,EACA,SAAAD,CACF,GACK,CACL,IAAMM,EAAY,IAAI,KAAKP,EAAK,SAAS,EACzC,OAAOK,EAAAC,EAAA,GACFN,GADE,CAEL,UAAAG,EACA,UAAAD,EACA,SAAAD,EACA,UAAAM,CACF,EACF,CACF,CAQO,SAASC,GAEdR,EAAqE,CACrE,IAAMS,EAAYT,EAAK,UAAY,IAAI,KAAKA,EAAK,SAAS,EAAI,OACxDE,EAAY,IAAI,KAAKF,EAAK,SAAS,EAEnCU,EAAWV,EAAK,SAAS,IAAKW,GAClCZ,GAAqBY,CAAO,CAC9B,EAEA,OAAON,EAAAC,EAAA,GACFN,GADE,CAEL,UAAAE,EACA,UAAAO,EACA,SAAAC,CACF,EACF,CAQO,SAASE,GACdZ,EACqB,CACrB,OAAOK,EAAAC,EAAA,GACFN,GADE,CAEL,UAAW,IAAI,KAAKA,EAAK,SAAS,CACpC,EACF,CAQO,SAASa,GACdb,EACuB,CACvB,IAAMc,EAAa,IAAI,KAAKd,EAAK,UAAU,EACrCe,EAASf,EAAK,OAAS,IAAI,KAAKA,EAAK,MAAM,EAAI,KAErD,OAAOK,EAAAC,EAAA,GACFN,GADE,CAEL,WAAAc,EACA,OAAAC,CACF,EACF,CAEO,SAASC,GACdhB,EACkB,CAClB,IAAMO,EAAY,IAAI,KAAKP,EAAK,SAAS,EAEzC,OAAOK,EAAAC,EAAA,GACFN,GADE,CAEL,UAAAO,CACF,EACF,CAEO,SAASU,GACdjB,EAC6B,CAC7B,IAAMO,EAAY,IAAI,KAAKP,EAAK,SAAS,EAEzC,OAAOK,EAAAC,EAAA,GACFN,GADE,CAEL,UAAAO,CACF,EACF,CC5GA,SAASW,GACPC,EACiB,CACjB,IAAMC,EAAS,IAAI,gBACnB,OAAW,CAACC,EAAKC,CAAK,IAAK,OAAO,QAAQH,CAAM,EACnBG,GAAU,MACnCF,EAAO,IAAIC,EAAKC,EAAM,SAAS,CAAC,EAGpC,OAAOF,CACT,CAKO,SAASG,GACdC,EACAC,EACAN,EACQ,CAER,IAAMO,EAAM,IAAI,IAAID,EAAMD,CAAO,EACjC,OAAIL,IAAW,SACbO,EAAI,QACFP,aAAkB,gBAAkBA,EAASD,GAAkBC,CAAM,GACrE,SAAS,GAENO,EAAI,SAAS,CACtB,CC9BA,IAAMC,GAA+C,GAO9C,SAASC,GAAuB,CACrC,QAAAJ,EACA,YAAAK,EACA,mBAAAC,EACA,QAAAC,CACF,EAKqB,CACnB,eAAeC,EACbC,EACAC,EACAf,EACY,CACZ,IAAMgB,EAAY,MAAMN,EAAY,aAAa,CAC/C,eAAgB,eAClB,CAAC,EAED,GACEM,EAAU,OAAS,UACnBA,EAAU,MAAM,OAAO,IAAA,MACvB,CACA,IAAMC,EAASD,EAAU,MAAM,OAAO,IACtCL,EAAmB,IAAI,IAAMM,CAAM,CACrC,CAEA,IAAMV,EAAMH,GAAQC,EAAS,QAAQS,CAAQ,GAAId,CAAM,EACjDkB,EAAW,MAAMN,EAAQL,EAAI,SAAS,EAAGrB,EAAAC,EAAA,GAC1C4B,GAD0C,CAE7C,QAAS7B,EAAAC,EAAA,GACJ4B,GAAA,YAAAA,EAAS,SADL,CAEP,cAAe,UAAUI,GAAiCH,CAAS,CAAC,EACtE,EACF,EAAC,EAED,GAAI,CAACE,EAAS,IACRA,EAAS,QAAU,KAAOA,EAAS,OAAS,IAAK,CACnD,IAAIE,EAEJ,GAAI,CACF,IAAMC,EAAa,MAAMH,EAAS,KAAK,EAEvCE,EAAQ,IAAIE,GACVD,EAAU,QACVH,EAAS,OACTG,CACF,CACF,OAAQE,EAAA,CACNH,EAAQ,IAAIE,GACVJ,EAAS,WACTA,EAAS,MACX,CACF,CAEA,MAAME,CACR,CAGF,IAAII,EAEJ,GAAI,CACFA,EAAQ,MAAMN,EAAS,KAAK,CAC9B,OAAQK,EAAA,CACNC,EAAO,CAAC,CACV,CAEA,OAAOA,CACT,CAEA,eAAeC,EAAsBV,EAAwC,OAC3E,IAAMW,EAAO,MAAMb,EAQhB,uBAAwB,OAAW,CACpC,MAAOE,GAAA,YAAAA,EAAS,MAChB,OAAOY,EAAAZ,GAAA,YAAAA,EAAS,QAAT,YAAAY,EAAgB,aACzB,CAAC,EAED,MAAO,CACL,QAASD,EAAK,QAAQ,IAAKE,GAAWvC,GAAoBuC,CAAM,CAAC,EACjE,mBAAoBF,EAAK,mBAAmB,IAAKG,GAC/CnC,GAA+BmC,CAAY,CAC7C,EACA,eAAgBH,EAAK,eAAe,IAAKI,GACvCjC,GAA0BiC,CAAI,CAChC,EACA,0BAA2BJ,EAAK,0BAA0B,IAAKI,GAC7DhC,GAAqCgC,CAAI,CAC3C,EACA,KAAM,CACJ,YAAa,IAAI,KAAKJ,EAAK,KAAK,WAAW,CAC7C,CACF,CACF,CAEA,eAAeK,GAAmC,CAChD,GAAM,CAAE,MAAAC,CAAM,EAAI,MAAMnB,EAErB,4BAA4B,EAE/B,OAAOmB,CACT,CAEA,eAAeC,GAAkC,CAC/C,MAAMpB,EAAU,4BAA6B,CAC3C,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CAAE,qBAAsB,KAAM,CAAC,CACtD,CAAC,CACH,CAEA,eAAeqB,EAA6BC,EAAgC,CAC1E,MAAMtB,EAAU,4BAA6B,CAC3C,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CAAE,qBAAAsB,CAAqB,CAAC,CAC/C,CAAC,CACH,CAEA,IAAMC,EAAsC,IAAIC,GAC9C,MAAOC,GAA4C,CACjD,IAAMH,EAAuBG,EAA4B,KAAK,EAE9D,aAAMJ,EAA6BC,CAAoB,EAEhDA,CACT,EACA,CAAE,MAAO3B,EAA6C,CACxD,EAEA,eAAe+B,EAA4BC,EAA6B,CACtE,MAAMJ,EAAoC,IAAII,CAAmB,CACnE,CAEA,MAAO,CACL,sBAAAf,EACA,iCAAAM,EACA,gCAAAE,EACA,4BAAAM,CACF,CACF,CC7HA,IAAME,GAAW,GACXC,GAAW,IAEXC,GAAaD,GAAWD,GAAW,EAEnCG,GAAeC,GAAS,CAAC,EAMzBC,GAAWD,GAAS,CAAC,EAErBE,GAAaH,GAAOC,GAAS,EAAE,EAUrC,SAASA,GAASG,EAAgB,CAChC,IAAMC,EAAOR,IAAYO,EAAI,EAAIL,GAAaK,EAAIA,GAClD,GAAIC,EAAOR,IAAYQ,EAAOP,GAC5B,MAAM,IAAI,MAAM,oBAAoBM,CAAC,EAAE,EAEzC,OAAO,OAAO,aAAaC,CAAI,CACjC,CAQA,SAASC,GAAaC,EAASC,EAAc,CAC3C,OAAID,IAAM,QAAaC,IAAM,OACpBC,GAAQF,EAAGC,CAAC,EACVD,IAAM,OACRG,GAAMH,CAAC,EACLC,IAAM,OACRG,GAAOH,CAAC,EAERN,EAEX,CA6BA,SAASS,GAAOC,EAAe,CAC7B,IAAMC,EAAYD,EAAI,OAAS,EAC/B,QAASE,EAAI,EAAGA,GAAKD,EAAWC,IAAK,CACnC,IAAMT,EAAOO,EAAI,WAAWE,CAAC,EAG7B,GAAI,EAAAT,GAAQR,IAaZ,OAAIiB,IAAMD,EACJR,IAASR,GAAW,EACde,EAAI,UAAU,EAAGE,CAAC,EAAIX,GAEtBS,EAAI,UAAU,EAAGE,CAAC,EAAI,OAAO,aAAaT,EAAO,CAAC,EAGrDO,EAAI,UAAU,EAAGE,EAAI,CAAC,CAEjC,CAIA,OAAOZ,EACT,CAsBA,SAASQ,GAAME,EAAe,CAC5B,QAASE,EAAI,EAAGA,GAAKF,EAAI,OAAS,EAAGE,IAAK,CACxC,IAAMT,EAAOO,EAAI,WAAWE,CAAC,EAG7B,GAAI,EAAAT,GAAQP,IAKZ,OAAQc,EAAI,UAAU,EAAGE,CAAC,EAAI,OAAO,aAAaT,EAAO,CAAC,CAC5D,CAIA,OAAQO,EAAMV,EAChB,CAmBA,SAASO,GAAQM,EAASC,EAAc,CACtC,GAAID,EAAKC,EACP,OAAOC,GAASF,EAAIC,CAAE,EACxB,GAAWD,EAAKC,EACd,OAAOC,GAASD,EAAID,CAAE,EAEtB,MAAM,IAAI,MAAM,kDAAkD,CAEtE,CAKA,SAASE,GAASF,EAASC,EAAmB,CAC5C,IAAIE,EAAQ,EAENC,EAAQJ,EAAG,OACXK,EAAQJ,EAAG,OACjB,OAAa,CACX,IAAMK,EAASH,EAAQC,EAAQJ,EAAG,WAAWG,CAAK,EAAIrB,GAChDyB,EAASJ,EAAQE,EAAQJ,EAAG,WAAWE,CAAK,EAAIpB,GAEtD,GAAIuB,IAAWC,EAAQ,CACrBJ,IACA,QACF,CAGA,GAAII,EAASD,IAAW,EAAG,CACzB,IAAME,EAAOL,EAAQ,EACjBM,EAAST,EAAG,UAAU,EAAGQ,CAAI,EAC7BC,EAAO,OAASD,IAClBC,GAAUxB,GAAK,OAAOuB,EAAOC,EAAO,MAAM,GAE5C,IAAMC,EAASV,EAAG,UAAUQ,CAAI,EAEhC,OAAQC,EAASP,GAASQ,EADZ,EACyB,CACzC,KAEE,QAAQC,GAAMX,EAAIG,CAAK,EACrB,OAAO,aAAcI,EAASD,GAAW,CAAC,CAEhD,CACF,CAEA,SAASK,GAAMd,EAAaR,EAAmB,CAC7C,OAAOA,EAAIQ,EAAI,OACXA,EAAI,UAAU,EAAGR,CAAC,EAClBQ,EAAMZ,GAAK,OAAOI,EAAIQ,EAAI,MAAM,CACtC,CAEA,IAAMe,GAAoB9B,GAAW,EAUrC,SAAS+B,GAAMC,EAAyB,CAEtC,GAAIA,IAAQ,GACV,MAAO,GAIT,IAAMC,EAAUD,EAAI,OAAS,EACvBE,EAAOF,EAAI,WAAWC,CAAO,EACnC,GAAIC,EAAOJ,IAAqBI,EAAOjC,GACrC,MAAO,GAGT,QAASgB,EAAI,EAAGA,EAAIgB,EAAShB,IAAK,CAChC,IAAMT,EAAOwB,EAAI,WAAWf,CAAC,EAC7B,GAAIT,EAAOR,IAAYQ,EAAOP,GAC5B,MAAO,EAEX,CAEA,MAAO,EACT,CAEA,SAASkC,GAAaH,EAAkB,CACtC,IAAMI,EAAkB,CAAC,EAGzB,QAASnB,EAAI,EAAGA,EAAIe,EAAI,OAAQf,IAAK,CACnC,IAAMT,EAAOwB,EAAI,WAAWf,CAAC,EAG7BmB,EAAM,KAAK5B,EAAOR,GAAWA,GAAWQ,EAAOP,GAAWA,GAAWO,CAAI,CAC3E,CAGA,KAAO4B,EAAM,OAAS,GAAKA,EAAMA,EAAM,OAAS,CAAC,IAAMpC,IACrDoC,EAAM,SAGR,OAAOA,EAAM,OAAS,EACjB,OAAO,aAAa,GAAGA,CAAK,EAE7B/B,EACN,CAMA,SAASgC,GAAML,EAAkB,CAG/B,OAAOD,GAAMC,CAAG,EAAIA,EAAMG,GAAaH,CAAG,CAC5C,CChNO,SAASM,GAAQC,EAAqB,CAC3C,OAAOA,EAAG,OAAS,GAAsBA,EAAG,KAAO,KACrD,CCpCA,SAASC,GACPC,EACAC,EACAC,EAAWC,GAAMF,CAAG,EACT,CACX,OAAO,OAAO,OAAO,CAAE,KAAM,YAAa,KAAAD,EAAM,IAAAC,EAAK,IAAAC,CAAI,CAAC,CAC5D,CAEA,IAAME,GAAqB,OAAO,OAAO,CAAE,KAAM,UAAW,CAAC,EAE7D,SAASC,GAASC,EAAgBC,EAAcJ,GAAMG,CAAM,EAAa,CACvE,OAAO,OAAO,OAAO,CAAE,KAAM,WAAY,OAAAA,EAAQ,OAAAC,CAAO,CAAC,CAC3D,CAuBO,IAAeC,GAAf,KAA4B,CAA5B,aAAA,CAQL,KAAQ,QAAsBJ,EAAA,CAG9B,sBAA+B,CAC7B,OAAQ,KAAK,OAAO,KAAM,CACxB,IAAK,YACH,OAAO,KAAK,OAAO,IAErB,IAAK,WACH,MAAM,IAAI,MAAM,uBAAuB,EAEzC,IAAK,WACH,OAAO,KAAK,OAAO,OAErB,QACE,OAAOK,GAAY,KAAK,OAAQ,eAAe,CACnD,CACF,CAGA,IAAI,YAAkB,CACpB,OAAQ,KAAK,OAAO,KAAM,CACxB,IAAK,YACH,OAAO,KAAK,OAAO,IAErB,IAAK,WACH,MAAM,IAAI,MAAM,uBAAuB,EAEzC,IAAK,WACH,OAAO,KAAK,OAAO,OAErB,QACE,OAAOA,GAAY,KAAK,OAAQ,eAAe,CACnD,CACF,CAGA,IAAc,OAAiC,CAC7C,OAAO,KAAK,MACd,CAEA,IAAI,QAAwB,CAC1B,OAAO,KAAK,OAAS,KAAK,OAAO,OAAS,IAC5C,CAGA,IAAI,KAA0B,CAC5B,OAAO,KAAK,IACd,CAGA,IAAI,QAAqB,CACvB,OAAO,KAAK,OACd,CAGA,IAAI,YAA4B,CAC9B,OAAQ,KAAK,OAAO,KAAM,CACxB,IAAK,YACH,OAAO,KAAK,OAAO,IAErB,IAAK,WACH,OAAO,KAET,IAAK,WACH,OAAO,KAAK,OAAO,OAErB,QACE,OAAOA,GAAY,KAAK,OAAQ,eAAe,CACnD,CACF,CAGA,OAAOC,EAAQC,EAAgC,CAC7C,OAAQD,EAAG,KAAM,CACf,IAAA,GACE,OAAI,KAAK,OAAO,OAAS,YAChB,KAAK,OAAO,KAAK,aAA4B,IAAK,EAGpD,CAAE,SAAU,EAAM,CAE7B,CAEA,MAAO,CAAE,SAAU,EAAM,CAC3B,CAGA,eAAeE,EAAyBC,EAA4B,CAClE,OAAQ,KAAK,OAAO,KAAM,CACxB,IAAK,YACH,GAAI,KAAK,OAAO,OAASD,EACvB,MAAM,IAAI,MAAM,8CAA8C,EAG9D,KAAK,QAAUb,GAAUa,EAAeC,CAAY,EACpD,OAGJ,IAAK,WACL,IAAK,WAAY,CACf,KAAK,QAAUd,GAAUa,EAAeC,CAAY,EACpD,MACF,CAEA,QACE,OAAOJ,GAAY,KAAK,OAAQ,eAAe,CACnD,CACF,CAGA,QAAQK,EAAYC,EAAyB,CAC3C,GAAI,KAAK,MAAQ,KAAK,OACpB,MAAM,IAAI,MAAM,sCAAsC,EAGxDA,EAAK,QAAQD,EAAmB,IAAK,EAErC,KAAK,KAAOA,EACZ,KAAK,OAASC,CAChB,CAMA,SAAgB,CAKd,OAJI,KAAK,QAAU,KAAK,MACtB,KAAK,OAAO,WAAW,KAAK,IAAI,EAG1B,KAAK,OAAO,KAAM,CACxB,IAAK,YAAa,CAChB,KAAK,QAAUV,GAAS,KAAK,OAAO,IAAK,KAAK,OAAO,GAAG,EACxD,KACF,CAEA,IAAK,WAAY,CACf,KAAK,QAAUD,GACf,KACF,CAEA,IAAK,WAEH,MAGF,QACEK,GAAY,KAAK,OAAQ,eAAe,CAC5C,CAEA,KAAK,OAAS,MAChB,CAqCA,YAAmB,EAEf,KAAK,mBAAqB,QAC1B,KAAK,kBAAoB,UAEzB,KAAK,iBAAmB,OACxB,KAAK,gBAAkB,OAEnB,KAAK,OAAO,OAAS,aACvB,KAAK,OAAO,KAAK,WAAW,EAGlC,CAUA,WAAWR,EAAoC,CAC7C,OAAI,KAAK,kBAAoB,QAAa,KAAK,qBAAuBA,KACpE,KAAK,mBAAqBA,EAC1B,KAAK,gBAAkB,KAAK,YAAYA,CAAG,GAItC,KAAK,eACd,CAQA,aAAyB,CACvB,OAAI,KAAK,mBAAqB,SAC5B,KAAK,iBAAmB,KAAK,aAAa,GAIrC,KAAK,gBACd,CAOF,EClUO,SAASe,GAAWC,EAAoD,CAC7E,OAAOA,EAAK,OAAS,GAAmB,CAACC,GAAYD,CAAI,CAC3D,CAEO,SAASC,GAAYD,EAA+C,CACzE,OAAOA,EAAK,WAAa,QAAaA,EAAK,YAAc,MAC3D,CC5DO,SAASE,GAAOC,EAAiB,EAAW,CACjD,IAAMC,EACJ,qFACIC,EAAMD,EAAS,OACrB,OAAO,MAAM,KAAK,CAAE,OAAAD,CAAO,EAAG,IAC5BC,EAAS,OAAO,KAAK,MAAM,KAAK,OAAO,EAAIC,CAAG,CAAC,CACjD,EAAE,KAAK,EAAE,CACX,CCWO,IAAMC,GAAN,MAAMC,WAA0CC,EAAa,CAIlE,YAAYC,EAAc,CACxB,MAAM,EACN,KAAK,MAAQA,CACf,CAEA,IAAI,MAAe,CACjB,OAAO,KAAK,KACd,CAGA,OAAO,aACL,CAACC,EAAIC,CAAI,EACTC,EACAC,EACoB,CACpB,IAAMC,EAAW,IAAIP,GAAaI,EAAK,IAAI,EAC3C,OAAAG,EAAS,QAAQJ,EAAIG,CAAI,EAClBC,CACT,CAGA,OACEC,EACAC,EACAH,EACoB,CACpB,GAAI,KAAK,MAAQ,OACf,MAAM,IAAI,MACR,iEACF,EAGF,MAAO,CACL,CACE,KAAA,EACA,KAAMA,GAAA,YAAAA,EAAM,eACZ,GAAI,KAAK,IACT,SAAAE,EACA,UAAAC,EACA,KAAM,KAAK,IACb,CACF,CACF,CAGA,YAAiC,CAC/B,GAAI,KAAK,OAAO,OAAS,YACvB,MAAM,IAAI,MAAM,oDAAoD,EAGtE,MAAO,CACL,KAAA,EACA,SAAUC,GAAG,KAAK,OAAO,KAAK,IAAK,iCAAiC,EACpE,UAAW,KAAK,OAAO,IACvB,KAAM,KAAK,IACb,CACF,CAGA,aAAaC,EAA4B,CACvC,MAAM,IAAI,MAAM,yBAAyB,CAC3C,CAGA,aAAaC,EAA8B,CACzC,MAAM,IAAI,MAAM,yBAAyB,CAC3C,CAGA,OAAOC,EAAQC,EAA+B,CAC5C,OAAO,MAAM,OAAOD,EAAIC,CAAO,CACjC,CAGA,YAAYC,EAAoC,OAC9C,MAAO,CACL,KAAM,OACN,IAAIC,EAAA,KAAK,MAAL,KAAAA,EAAYrB,GAAO,EACvB,IAAAoB,EACA,QAAS,KAAK,KAChB,CACF,CAGA,cAA0B,CACxB,OAAO,KAAK,KACd,CAEA,OAAgB,CACd,OAAOE,GAAU,KAAK,IAAI,CAC5B,CACF,EC3EA,SAASC,GAAoBC,EAAiBC,EAAiB,CAC7D,IAAMC,EAAOF,EAAM,WACbG,EAAOF,EAAM,WACnB,OAAOC,IAASC,EAAO,EAAID,EAAOC,EAAO,GAAK,CAChD,CAKO,IAAMC,GAAN,MAAMC,WAAqCvB,EAAa,CAW7D,YAAYwB,EAAiB,CAAC,EAAG,CAC/B,MAAM,EACN,KAAK,OAAS,CAAC,EACf,KAAK,wBAA0B,IAAI,QACnC,KAAK,oBAAsB,IAAI,IAE/B,IAAIC,EACJ,QAAWtB,KAAQqB,EAAO,CACxB,IAAME,EAAcC,GAAaF,CAAQ,EACnCG,EAAOC,GAAe1B,CAAI,EAChCyB,EAAK,eAAe,KAAMF,CAAW,EACrC,KAAK,OAAO,KAAKE,CAAI,EACrBH,EAAWC,CACb,CACF,CAGA,OAAO,aACL,CAACxB,CAAE,EACH4B,EACAzB,EACgB,CAChB,IAAM0B,EAAO,IAAIR,GACjBQ,EAAK,QAAQ7B,EAAIG,CAAI,EAErB,IAAM2B,EAAWF,EAAiB,IAAI5B,CAAE,EACxC,GAAI8B,IAAa,OACf,OAAOD,EAGT,OAAW,CAAC7B,EAAIV,CAAI,IAAKwC,EAAU,CACjC,IAAMC,EAAQC,GAAY,CAAChC,EAAIV,CAAI,EAAGsC,EAAkBzB,CAAI,EAE5D4B,EAAM,eAAeF,EAAMvC,EAAK,SAAS,EACzCuC,EAAK,eAAeE,CAAK,CAC3B,CAEA,OAAOF,CACT,CAWA,OAAOxB,EAAkBC,EAAmBH,EAAgC,CAC1E,GAAI,KAAK,MAAQ,OACf,MAAM,IAAI,MAAM,uCAAuC,EAGzD,IAAM8B,EAAkB,CAAC,EACnBvB,EAAmB,CACvB,GAAI,KAAK,IACT,KAAMP,GAAA,YAAAA,EAAM,eACZ,KAAA,EACA,SAAAE,EACA,UAAAC,CACF,EAEA2B,EAAI,KAAKvB,CAAE,EAEX,QAAWT,KAAQ,KAAK,OAAQ,CAC9B,IAAMK,EAAYL,EAAK,qBAAqB,EACtCiC,EAAWC,GACflC,EAAK,OAAO,KAAK,IAAKK,EAAWH,CAAI,EACrC,MACF,EACMiC,EAAYF,EAAS,CAAC,EAAE,KAC1BE,IAAc,QAChB,KAAK,oBAAoB,IAAI9B,EAAW8B,CAAS,EAEnDH,EAAI,KAAK,GAAGC,CAAQ,CACtB,CAEA,OAAOD,CACT,CAOA,eAAehC,EAAsB,CACnC,KAAK,OAAO,KAAKA,CAAI,EACrB,KAAK,WAAW,CAClB,CAGA,YAAmB,CACjB,KAAK,OAAO,KAAKc,EAAmB,EACpC,KAAK,WAAW,CAClB,CAGA,iBAAiBQ,EAA0B,CACzC,OAAO,KAAK,OAAO,UAChBtB,GAASA,EAAK,qBAAqB,IAAMsB,CAC5C,CACF,CAGA,QAAQvB,EAAYG,EAAyB,CAC3C,MAAM,QAAQH,EAAIG,CAAI,EAEtB,QAAWF,KAAQ,KAAK,OACtBA,EAAK,QAAQE,EAAK,WAAW,EAAGA,CAAI,CAExC,CAGA,SAAgB,CACd,MAAM,QAAQ,EAEd,QAAWF,KAAQ,KAAK,OACtBA,EAAK,QAAQ,CAEjB,CAGQ,gBAAgBS,EAA2B,CACjD,GAAI,KAAK,QAAU,OACjB,MAAM,IAAI,MAAM,mDAAmD,EAGrE,GAAM,CAAE,GAAAV,EAAI,UAAWY,CAAI,EAAIF,EACzBqB,EAAQM,GAAqB3B,CAAE,EACrCqB,EAAM,QAAQ/B,EAAI,KAAK,KAAK,EAC5B+B,EAAM,eAAe,KAAMnB,CAAG,EAE9B,IAAM0B,EAAY5B,EAAG,UAEf6B,EAA8B,KAAK,iBAAiB3B,CAAG,EAG7D,GAAI2B,IAAgC,GAAI,CACtC,IAAMC,EAAuB,KAAK,OAAOD,CAA2B,EAGpE,GAAIC,EAAqB,MAAQF,EAC/B,OAAAE,EAAqB,QAAQ,EAG7B,KAAK,OAAOD,CAA2B,EAAIR,EAEpC,CACL,SAAUU,GAAW,KAAM,CACzBC,GAASH,EAA6BR,CAAK,CAC7C,CAAC,EACD,QAAS,CAAC,CACZ,EACK,CAIL,KAAK,wBAAwB,IAAIS,CAAoB,EAGrD,KAAK,OAAOD,CAA2B,EAAIR,EAE3C,IAAMY,EAA+B,CACnCD,GAASH,EAA6BR,CAAK,CAC7C,EAIMa,EAAc,KAAK,oCACvBlC,EAAG,SACL,EAEA,OAAIkC,GACFD,EAAM,KAAKC,CAAW,EAGjB,CACL,SAAUH,GAAW,KAAME,CAAK,EAChC,QAAS,CAAC,CACZ,CACF,CACF,KAAO,CAEL,IAAME,EAAiC,CAAC,EAClCD,EAAc,KAAK,oCACvBlC,EAAG,SACL,EACA,OAAIkC,GACFC,EAAQ,KAAKD,CAAW,EAG1B,KAAK,eAAeb,CAAK,EAEzBc,EAAQ,KAAKC,GAAY,KAAK,iBAAiBlC,CAAG,EAAGmB,CAAK,CAAC,EAEpD,CACL,QAAS,CAAC,EACV,SAAUU,GAAW,KAAMI,CAAO,CACpC,CACF,CACF,CAGQ,aAAanC,EAA2B,CAC9C,GAAI,KAAK,QAAU,OACjB,MAAM,IAAI,MAAM,mDAAmD,EAGrE,IAAMiC,EAA+B,CAAC,EAGhCI,EAAe,KAAK,oCAAoCrC,EAAG,SAAS,EACtEqC,GACFJ,EAAM,KAAKI,CAAY,EAGzB,IAAMC,EAAqB,KAAK,oBAAoB,IAAItC,EAAG,SAAS,EAEpE,GAAIsC,IAAuB,OAAW,CACpC,GAAIA,IAAuBtC,EAAG,KAC5B,OAAOiC,EAAM,SAAW,EACpB,CAAE,SAAU,EAAM,EAClB,CAAE,SAAUF,GAAW,KAAME,CAAK,EAAG,QAAS,CAAC,CAAE,EAErD,KAAK,oBAAoB,OAAOjC,EAAG,SAAS,CAEhD,CAEA,IAAM6B,EAA8B,KAAK,iBAAiB7B,EAAG,SAAS,EAEhEuC,EAAe,KAAK,OAAO,KAAMhD,GAASA,EAAK,MAAQS,EAAG,EAAE,EAGlE,GAAIuC,IAAiB,OAAW,CAE9B,GAAIA,EAAa,aAAevC,EAAG,UAEjC,MAAO,CACL,SAAUiC,EAAM,OAAS,EAAIF,GAAW,KAAME,CAAK,EAAI,GACvD,QAAS,CAAC,CACZ,EAIEJ,IAAgC,KAClC,KAAK,wBAAwB,IAC3B,KAAK,OAAOA,CAA2B,CACzC,EACA,KAAK,OAAO,OAAOA,EAA6B,CAAC,EACjDI,EAAM,KAAKC,GAAYL,CAA2B,CAAC,GAGrD,IAAMW,EAAgB,KAAK,OAAO,QAAQD,CAAY,EAEtDA,EAAa,eAAe,KAAMvC,EAAG,SAAS,EAC9C,KAAK,WAAW,EAEhB,IAAMyC,EAAW,KAAK,OAAO,QAAQF,CAAY,EAEjD,OAAIE,IAAaD,GACfP,EAAM,KAAKS,GAAUF,EAAeC,EAAUF,CAAY,CAAC,EAGtD,CACL,SAAUN,EAAM,OAAS,EAAIF,GAAW,KAAME,CAAK,EAAI,GACvD,QAAS,CAAC,CACZ,CACF,KAAO,CAEL,IAAMU,EAAS,KAAK,MAAM,QAAQ3C,EAAG,EAAE,EACvC,GAAI2C,GAAU,KAAK,wBAAwB,IAAIA,CAAM,EAAG,CAEtDA,EAAO,eAAe,KAAM3C,EAAG,SAAS,EAExC,KAAK,wBAAwB,OAAO2C,CAAM,EAE1C,KAAK,eAAeA,CAAM,EAE1B,IAAMC,EAAqB,KAAK,OAAO,QAAQD,CAAM,EAErD,MAAO,CACL,SAAUZ,GAAW,KAAM,CAEzBF,IAAgC,GAC5BO,GAAYQ,EAAoBD,CAAM,EACtCX,GAASY,EAAoBD,CAAM,EACvC,GAAGV,CACL,CAAC,EACD,QAAS,CAAC,CACZ,CACF,KAAO,CACDJ,IAAgC,IAClC,KAAK,OAAO,OAAOA,EAA6B,CAAC,EAGnD,GAAM,CAAE,QAAAgB,EAAS,SAAAJ,CAAS,EAAI,KAAK,yBACjCzC,EACAA,EAAG,SACL,EAEA,MAAO,CACL,SAAU+B,GAAW,KAAM,CAEzBF,IAAgC,GAC5BO,GAAYK,EAAUI,CAAO,EAC7Bb,GAASS,EAAUI,CAAO,EAC9B,GAAGZ,CACL,CAAC,EACD,QAAS,CAAC,CACZ,CACF,CACF,CACF,CAMQ,oCACNL,EAC4B,CAC5B,GAAIA,IAAc,QAAa,KAAK,QAAU,OAC5C,OAAO,KAGT,IAAMkB,EAAc,KAAK,MAAM,QAAQlB,CAAS,EAChD,GAAIkB,IAAgB,OAClB,OAAO,KAGT,IAAMC,EAAS,KAAK,aAAaD,CAAW,EAC5C,OAAIC,EAAO,WAAa,GACf,KAGFA,EAAO,SAAS,QAAQ,CAAC,CAClC,CAGQ,mBAAmB/C,EAA2B,CACpD,GAAI,KAAK,QAAU,OACjB,MAAM,IAAI,MAAM,mDAAmD,EAGrE,IAAME,EAAM8C,GAAMhD,EAAG,SAAS,EAExBiD,EAAoB,KAAK,iBAAiB/C,CAAG,EAE/C+C,IAAsB,IAExB,KAAK,mBAAmBA,EAAmB/C,CAAG,EAGhD,GAAM,CAAE,QAAA2C,EAAS,SAAAJ,CAAS,EAAI,KAAK,yBAAyBzC,EAAIE,CAAG,EAGnE,MAAO,CACL,SAAU6B,GAAW,KAAM,CAACK,GAAYK,EAAUI,CAAO,CAAC,CAAC,EAC3D,QAAS,CAAC,CACZ,CACF,CAGQ,gBAAgB7C,EAA2B,CACjD,IAAMuC,EAAe,KAAK,OAAO,KAAMhD,GAASA,EAAK,MAAQS,EAAG,EAAE,EAC5DE,EAAM8C,GAAMhD,EAAG,SAAS,EAExBkD,EAAsB,KAAK,iBAAiBhD,CAAG,EAErD,GAAIqC,EAAc,CAChB,GAAIA,EAAa,aAAerC,EAE9B,MAAO,CACL,SAAU,EACZ,EACK,CACL,IAAMiD,EAAmB,KAAK,OAAO,QAAQZ,CAAY,EACrDW,IAAwB,IAC1B,KAAK,mBAAmBA,EAAqBhD,CAAG,EAGlDqC,EAAa,eAAe,KAAMrC,CAAG,EACrC,KAAK,WAAW,EAEhB,IAAMuC,EAAW,KAAK,iBAAiBvC,CAAG,EAE1C,OAAIuC,IAAaU,EACR,CAAE,SAAU,EAAM,EAGpB,CACL,SAAUpB,GAAW,KAAM,CACzBW,GAAUS,EAAkBV,EAAUF,CAAY,CACpD,CAAC,EACD,QAAS,CAAC,CACZ,CACF,CACF,KAAO,CACL,IAAMI,EAAS9C,GAAG,KAAK,KAAK,EAAE,QAAQG,EAAG,EAAE,EAC3C,GAAI2C,GAAU,KAAK,wBAAwB,IAAIA,CAAM,EAAG,CAEtDA,EAAO,eAAe,KAAMzC,CAAG,EAC/B,KAAK,wBAAwB,OAAOyC,CAAM,EAE1C,KAAK,eAAeA,CAAM,EAE1B,IAAMF,EAAW,KAAK,iBAAiBvC,CAAG,EAE1C,MAAO,CACL,SAAU6B,GAAW,KAAM,CAACK,GAAYK,EAAUE,CAAM,CAAC,CAAC,EAC1D,QAAS,CAAC,CACZ,CACF,KAAO,CACDO,IAAwB,IAC1B,KAAK,mBAAmBA,EAAqBhD,CAAG,EAGlD,GAAM,CAAE,QAAA2C,EAAS,SAAAJ,CAAS,EAAI,KAAK,yBAAyBzC,EAAIE,CAAG,EAEnE,MAAO,CACL,SAAU6B,GAAW,KAAM,CAACK,GAAYK,EAAUI,CAAO,CAAC,CAAC,EAC3D,QAAS,CAAC,CACZ,CACF,CACF,CACF,CAGQ,qBAAqB7C,EAA2B,WACtD,GAAM,CAAE,GAAAV,EAAI,UAAWY,CAAI,EAAIF,EACzBqB,EAAQM,GAAqB3B,CAAE,EAErC,KAAIG,EAAA,KAAK,QAAL,YAAAA,EAAY,QAAQb,MAAQ,OAC9B,MAAO,CAAE,SAAU,EAAM,EAG3B+B,EAAM,QAAQ/B,EAAIO,GAAG,KAAK,KAAK,CAAC,EAChCwB,EAAM,eAAe,KAAMnB,CAAG,EAE9B,IAAM+C,EAAoB,KAAK,iBAAiB/C,CAAG,EAE/CkD,EAASlD,EAEb,GAAI+C,IAAsB,GAAI,CAC5B,IAAMI,GAASC,EAAA,KAAK,OAAOL,CAAiB,IAA7B,YAAAK,EAAgC,WACzCC,GAAQC,EAAA,KAAK,OAAOP,EAAoB,CAAC,IAAjC,YAAAO,EAAoC,WAElDJ,EAASrC,GAAasC,EAAQE,CAAK,EACnClC,EAAM,eAAe,KAAM+B,CAAM,CACnC,CAEA,KAAK,eAAe/B,CAAK,EAEzB,IAAMoB,EAAW,KAAK,iBAAiBW,CAAM,EAE7C,MAAO,CACL,SAAUrB,GAAW,KAAM,CAACK,GAAYK,EAAUpB,CAAK,CAAC,CAAC,EACzD,QAAS,CAAC,CAAE,KAAA,EAA0B,GAAA/B,CAAG,CAAC,CAC5C,CACF,CAGQ,kBAAkBU,EAA2B,OACnD,GAAM,CAAE,GAAAV,EAAI,UAAWY,CAAI,EAAIF,EACzBqB,EAAQM,GAAqB3B,CAAE,EAErC,KAAIG,EAAA,KAAK,QAAL,YAAAA,EAAY,QAAQb,MAAQ,OAC9B,MAAO,CAAE,SAAU,EAAM,EAG3B,KAAK,oBAAoB,IAAIY,EAAKL,GAAGG,EAAG,IAAI,CAAC,EAE7C,IAAMyD,EAAyB,KAAK,iBAAiBvD,CAAG,EAExDmB,EAAM,QAAQ/B,EAAIO,GAAG,KAAK,KAAK,CAAC,EAChCwB,EAAM,eAAe,KAAMnB,CAAG,EAE9B,IAAMkD,EAASlD,EAGf,GAAIuD,IAA2B,GAAI,CAEjC,IAAMlB,EAAe,KAAK,OAAOkB,CAAsB,EACvDlB,EAAa,QAAQ,EAErB,KAAK,OAAOkB,CAAsB,EAAIpC,EAEtC,IAAMqC,EAAUjC,GACdc,EAAa,OAAO1C,GAAG,KAAK,GAAG,EAAGK,EAAK,KAAK,KAAK,EACjDF,EAAG,EACL,EAEMiC,EAAQ,CAACD,GAASyB,EAAwBpC,CAAK,CAAC,EAChDgB,EAAe,KAAK,oCACxBrC,EAAG,SACL,EACA,OAAIqC,GACFJ,EAAM,KAAKI,CAAY,EAGlB,CACL,SAAUN,GAAW,KAAME,CAAK,EAChC,QAAAyB,CACF,CACF,KAAO,CACL,KAAK,eAAerC,CAAK,EAGzB,KAAK,oCAAoCrB,EAAG,SAAS,EAErD,IAAMyC,EAAW,KAAK,iBAAiBW,CAAM,EAE7C,MAAO,CACL,QAAS,CAAC,CAAE,KAAA,EAA0B,GAAA9D,CAAG,CAAC,EAC1C,SAAUyC,GAAW,KAAM,CAACK,GAAYK,EAAUpB,CAAK,CAAC,CAAC,CAC3D,CACF,CACF,CAGA,aAAarB,EAAc2D,EAA+B,CACxD,GAAI,KAAK,QAAU,OACjB,MAAM,IAAI,MAAM,mDAAmD,EAGrE,IAAIZ,EAEJ,OAAI/C,EAAG,SAAW,MACZ2D,IAAA,EACFZ,EAAS,KAAK,gBAAgB/C,CAAE,EACvB2D,IAAA,EACTZ,EAAS,KAAK,aAAa/C,CAAE,EAE7B+C,EAAS,KAAK,kBAAkB/C,CAAE,EAGhC2D,IAAA,EACFZ,EAAS,KAAK,mBAAmB/C,CAAE,EAC1B2D,IAAA,EACTZ,EAAS,KAAK,gBAAgB/C,CAAE,EAEhC+C,EAAS,KAAK,qBAAqB/C,CAAE,EAIrC+C,EAAO,WAAa,IACtB,KAAK,WAAW,EAGXA,CACT,CAGA,aACE1B,EAC2E,CAC3E,GAAIA,EAAO,CACT,IAAMzB,EAAYC,GAAGwB,EAAM,UAAU,EAC/BqC,EAAUrC,EAAM,OAAOxB,GAAG,KAAK,GAAG,EAAGD,EAAW,KAAK,KAAK,EAE1DgE,EAAgB,KAAK,OAAO,QAAQvC,CAAK,EAE/C,OAAIuC,IAAkB,GACb,CACL,SAAU,EACZ,GAGF,KAAK,OAAO,OAAOA,EAAe,CAAC,EACnC,KAAK,WAAW,EAEhBvC,EAAM,QAAQ,EAEP,CACL,SAAUU,GAAW,KAAM,CAACG,GAAY0B,CAAa,CAAC,CAAC,EACvD,QAAAF,CACF,EACF,CAEA,MAAO,CAAE,SAAU,EAAM,CAC3B,CAGQ,wBAAwBN,EAAa/B,EAA8B,OACzE,GAAI,KAAK,wBAAwB,IAAIA,CAAK,EAAG,CAC3C,KAAK,wBAAwB,OAAOA,CAAK,EAEzCA,EAAM,eAAe,KAAM+B,CAAM,EACjC,KAAK,eAAe/B,CAAK,EAEzB,IAAMoB,EAAW,KAAK,OAAO,QAAQpB,CAAK,EAI1C,MAAO,CACL,SAAUU,GAAW,KAAM,CAACK,GAAYK,EAAUpB,CAAK,CAAC,CAAC,EACzD,QAAS,CAAC,CACZ,CACF,CAEA,IAAMwC,EAAcxC,EAAM,WAE1B,GAAI+B,IAAWS,EACb,MAAO,CACL,SAAU,EACZ,EAIF,IAAMZ,EAAoB,KAAK,iBAAiBG,CAAM,EAGtD,GAAIH,IAAsB,GAAI,CAC5B,IAAMT,EAAgB,KAAK,OAAO,QAAQnB,CAAK,EAC/CA,EAAM,eAAe,KAAM+B,CAAM,EACjC,KAAK,WAAW,EAChB,IAAMX,EAAW,KAAK,OAAO,QAAQpB,CAAK,EAE1C,OAAIoB,IAAaD,EACR,CACL,SAAU,EACZ,EAGK,CACL,SAAUT,GAAW,KAAM,CAACW,GAAUF,EAAeC,EAAUpB,CAAK,CAAC,CAAC,EACtE,QAAS,CAAC,CACZ,CACF,KAAO,CACL,KAAK,OAAO4B,CAAiB,EAAE,eAC7B,KACAlC,GAAaqC,GAAQjD,EAAA,KAAK,OAAO8C,EAAoB,CAAC,IAAjC,YAAA9C,EAAoC,UAAU,CACrE,EAEA,IAAMqC,EAAgB,KAAK,OAAO,QAAQnB,CAAK,EAC/CA,EAAM,eAAe,KAAM+B,CAAM,EACjC,KAAK,WAAW,EAChB,IAAMX,EAAW,KAAK,OAAO,QAAQpB,CAAK,EAE1C,OAAIoB,IAAaD,EACR,CACL,SAAU,EACZ,EAGK,CACL,SAAUT,GAAW,KAAM,CAACW,GAAUF,EAAeC,EAAUpB,CAAK,CAAC,CAAC,EACtE,QAAS,CAAC,CACZ,CACF,CACF,CAGQ,qBAAqB+B,EAAa/B,EAA8B,SACtE,IAAMwC,EAAchE,GAAGwB,EAAM,UAAU,EAEvC,GAAI,KAAK,wBAAwB,IAAIA,CAAK,EAAG,CAC3C,IAAM4B,EAAoB,KAAK,iBAAiBG,CAAM,EAEtD,YAAK,wBAAwB,OAAO/B,CAAK,EAErC4B,IAAsB,IACxB,KAAK,OAAOA,CAAiB,EAAE,eAC7B,KACAlC,GAAaqC,GAAQjD,EAAA,KAAK,OAAO8C,EAAoB,CAAC,IAAjC,YAAA9C,EAAoC,UAAU,CACrE,EAGFkB,EAAM,eAAe,KAAM+B,CAAM,EACjC,KAAK,eAAe/B,CAAK,EAGlB,CACL,SAAU,EACZ,CACF,KAAO,CACL,GAAI+B,IAAWS,EACb,MAAO,CACL,SAAU,EACZ,EAMF,IAAMrB,EAAgB,KAAK,OAAO,QAAQnB,CAAK,EAEzC4B,EAAoB,KAAK,iBAAiBG,CAAM,EAElDH,IAAsB,IACxB,KAAK,OAAOA,CAAiB,EAAE,eAC7B,KACAlC,GAAaqC,GAAQE,EAAA,KAAK,OAAOL,EAAoB,CAAC,IAAjC,YAAAK,EAAoC,UAAU,CACrE,EAGFjC,EAAM,eAAe,KAAM+B,CAAM,EACjC,KAAK,WAAW,EAEhB,IAAMX,EAAW,KAAK,OAAO,QAAQpB,CAAK,EAE1C,OAAImB,IAAkBC,EAEb,CACL,SAAU,EACZ,EAEO,CACL,SAAUV,GAAW,KAAM,CACzBW,GAAUF,EAAeC,EAAUpB,CAAK,CAC1C,CAAC,EACD,QAAS,CAAC,CACZ,CAEJ,CACF,CAGQ,0BAA0B+B,EAAa/B,EAA8B,OAC3E,IAAMwC,EAAchE,GAAGwB,EAAM,UAAU,EAEjCmB,EAAgB,KAAK,OAAO,QAAQnB,CAAK,EACzC4B,EAAoB,KAAK,iBAAiBG,CAAM,EAGlDH,IAAsB,IACxB,KAAK,OAAOA,CAAiB,EAAE,eAC7B,KACAlC,GAAaqC,GAAQjD,EAAA,KAAK,OAAO8C,EAAoB,CAAC,IAAjC,YAAA9C,EAAoC,UAAU,CACrE,EAGFkB,EAAM,eAAe,KAAM+B,CAAM,EAEjC,KAAK,WAAW,EAEhB,IAAMX,EAAW,KAAK,OAAO,QAAQpB,CAAK,EAE1C,OAAImB,IAAkBC,EACb,CACL,SAAU,EACZ,EAGK,CACL,SAAUV,GAAW,KAAM,CAACW,GAAUF,EAAeC,EAAUpB,CAAK,CAAC,CAAC,EACtE,QAAS,CACP,CACE,KAAA,EACA,GAAIxB,GAAGwB,EAAM,GAAG,EAChB,UAAWwC,CACb,CACF,CACF,CACF,CAGA,aAAaT,EAAa/B,EAAiBsC,EAA+B,CACxE,OAAIA,IAAA,EACK,KAAK,wBAAwBP,EAAQ/B,CAAK,EACxCsC,IAAA,EACF,KAAK,qBAAqBP,EAAQ/B,CAAK,EAEvC,KAAK,0BAA0B+B,EAAQ/B,CAAK,CAEvD,CAGA,OAAOrB,EAAQC,EAA+B,CAC5C,OAAO,MAAM,OAAOD,EAAIC,CAAO,CACjC,CAGA,YAA6B,CAC3B,GAAI,KAAK,OAAO,OAAS,YACvB,MAAM,IAAI,MAAM,gDAAgD,EAGlE,MAAO,CACL,KAAA,EACA,SAAUJ,GAAG,KAAK,OAAO,KAAK,IAAK,iCAAiC,EACpE,UAAW,KAAK,OAAO,GACzB,CACF,CAKA,IAAI,QAAiB,CACnB,OAAO,KAAK,OAAO,MACrB,CAMA,KAAKiE,EAAsB,OACzB,OAAA3D,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACL,KAAK,OAAO2D,EAAS,KAAK,MAAM,CACzC,CAOA,OAAOA,EAAgBC,EAAqB,OAE1C,IADA5D,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACR4D,EAAQ,GAAKA,EAAQ,KAAK,OAAO,OACnC,MAAM,IAAI,MACR,sCAAsCA,CAAK,oCAAoC,KAAK,OAAO,MAAM,EACnG,EAGF,IAAMV,EAAS,KAAK,OAAOU,EAAQ,CAAC,EAChC,KAAK,OAAOA,EAAQ,CAAC,EAAE,WACvB,OACER,EAAQ,KAAK,OAAOQ,CAAK,EAC3B,KAAK,OAAOA,CAAK,EAAE,WACnB,OAEElD,EAAWE,GAAasC,EAAQE,CAAK,EAErCS,EAAQ/C,GAAe6C,CAAO,EAKpC,GAJAE,EAAM,eAAe,KAAMnD,CAAQ,EAEnC,KAAK,eAAemD,CAAK,EAErB,KAAK,OAAS,KAAK,IAAK,CAC1B,IAAM1E,EAAK,KAAK,MAAM,WAAW,EACjC0E,EAAM,QAAQ1E,EAAI,KAAK,KAAK,EAE5B,KAAK,MAAM,SACT0E,EAAM,OAAO,KAAK,IAAKnD,EAAU,KAAK,KAAK,EAC3C,CAAC,CAAE,KAAA,EAA0B,GAAAvB,CAAG,CAAC,EACjC,IAAI,IAAoC,CACtC,CAAC,KAAK,IAAKyC,GAAW,KAAM,CAACK,GAAY2B,EAAOC,CAAK,CAAC,CAAC,CAAC,CAC1D,CAAC,CACH,CACF,CACF,CAOA,KAAKD,EAAeE,EAA2B,OAE7C,IADA9D,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACR8D,EAAc,EAChB,MAAM,IAAI,MAAM,mCAAmC,EAGrD,GAAIA,GAAe,KAAK,OAAO,OAC7B,MAAM,IAAI,MACR,6DACF,EAGF,GAAIF,EAAQ,EACV,MAAM,IAAI,MAAM,6BAA6B,EAG/C,GAAIA,GAAS,KAAK,OAAO,OACvB,MAAM,IAAI,MAAM,uDAAuD,EAGzE,IAAIG,EAAiB,KACjBC,EAAgB,KAEhBJ,EAAQE,GACVE,EACEF,IAAgB,KAAK,OAAO,OAAS,EACjC,OACA,KAAK,OAAOA,EAAc,CAAC,EAAE,WACnCC,EAAiB,KAAK,OAAOD,CAAW,EAAE,aAE1CE,EAAgB,KAAK,OAAOF,CAAW,EAAE,WACzCC,EACED,IAAgB,EAAI,OAAY,KAAK,OAAOA,EAAc,CAAC,EAAE,YAGjE,IAAMpD,EAAWE,GAAamD,EAAgBC,CAAa,EAErD5E,EAAO,KAAK,OAAOwE,CAAK,EACxBK,EAAmB7E,EAAK,qBAAqB,EAInD,GAHAA,EAAK,eAAe,KAAMsB,CAAQ,EAClC,KAAK,WAAW,EAEZ,KAAK,OAAS,KAAK,IAAK,CAC1B,IAAMwD,EAAiB,IAAI,IAAoC,CAC7D,CAAC,KAAK,IAAKtC,GAAW,KAAM,CAACW,GAAUqB,EAAOE,EAAa1E,CAAI,CAAC,CAAC,CAAC,CACpE,CAAC,EAED,KAAK,MAAM,SACT,CACE,CACE,KAAA,EACA,GAAIM,GAAGN,EAAK,GAAG,EACf,KAAM,KAAK,MAAM,aAAa,EAC9B,UAAWsB,CACb,CACF,EACA,CACE,CACE,KAAA,EACA,GAAIhB,GAAGN,EAAK,GAAG,EACf,UAAW6E,CACb,CACF,EACAC,CACF,CACF,CACF,CAMA,OAAON,EAAqB,OAE1B,IADA5D,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACR4D,EAAQ,GAAKA,GAAS,KAAK,OAAO,OACpC,MAAM,IAAI,MACR,qCAAqCA,CAAK,oCACxC,KAAK,OAAO,OAAS,CACvB,EACF,EAGF,IAAMxE,EAAO,KAAK,OAAOwE,CAAK,EAK9B,GAJAxE,EAAK,QAAQ,EACb,KAAK,OAAO,OAAOwE,EAAO,CAAC,EAC3B,KAAK,WAAW,EAEZ,KAAK,MAAO,CACd,IAAMO,EAAgB/E,EAAK,IAC3B,GAAI+E,EAAe,CACjB,IAAMD,EAAiB,IAAI,IAC3BA,EAAe,IACbxE,GAAG,KAAK,GAAG,EACXkC,GAAW,KAAM,CAACG,GAAY6B,CAAK,CAAC,CAAC,CACvC,EAEA,KAAK,MAAM,SACT,CACE,CACE,GAAIO,EACJ,KAAM,KAAK,MAAM,aAAa,EAC9B,KAAA,CACF,CACF,EACA/E,EAAK,OAAOM,GAAG,KAAK,GAAG,EAAGN,EAAK,qBAAqB,CAAC,EACrD8E,CACF,CACF,CACF,CACF,CAEA,OAAc,OAEZ,IADAlE,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACR,KAAK,MAAO,CACd,IAAMoB,EAAY,CAAC,EACbgD,EAAmB,CAAC,EAEpBC,EAAqC,CAAC,EAE5C,QAAWjF,KAAQ,KAAK,OAAQ,CAC9BA,EAAK,QAAQ,EACb,IAAMkF,EAAUlF,EAAK,IACjBkF,IACFlD,EAAI,KAAK,CACP,KAAA,EACA,GAAIkD,EACJ,KAAM,KAAK,MAAM,aAAa,CAChC,CAAC,EACDF,EAAW,KACT,GAAGhF,EAAK,OAAOM,GAAG,KAAK,GAAG,EAAGN,EAAK,qBAAqB,CAAC,CAC1D,EAIAiF,EAAY,KAAKtC,GAAY,CAAC,CAAC,EAEnC,CAEA,KAAK,OAAS,CAAC,EACf,KAAK,WAAW,EAEhB,IAAMmC,EAAiB,IAAI,IAC3BA,EAAe,IAAIxE,GAAG,KAAK,GAAG,EAAGkC,GAAW,KAAMyC,CAAW,CAAC,EAE9D,KAAK,MAAM,SAASjD,EAAKgD,EAAYF,CAAc,CACrD,KAAO,CACL,QAAW9E,KAAQ,KAAK,OACtBA,EAAK,QAAQ,EAEf,KAAK,OAAS,CAAC,EACf,KAAK,WAAW,CAClB,CACF,CAEA,IAAIwE,EAAexE,EAAmB,OAEpC,IADAY,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACR4D,EAAQ,GAAKA,GAAS,KAAK,OAAO,OACpC,MAAM,IAAI,MACR,mCAAmCA,CAAK,oCACtC,KAAK,OAAO,OAAS,CACvB,EACF,EAGF,IAAMxB,EAAe,KAAK,OAAOwB,CAAK,EAChClD,EAAW0B,EAAa,qBAAqB,EAE7CmC,EAAanC,EAAa,IAChCA,EAAa,QAAQ,EAErB,IAAMyB,EAAQ/C,GAAe1B,CAAI,EAKjC,GAJAyE,EAAM,eAAe,KAAMnD,CAAQ,EACnC,KAAK,OAAOkD,CAAK,EAAIC,EACrB,KAAK,WAAW,EAEZ,KAAK,OAAS,KAAK,IAAK,CAC1B,IAAM1E,EAAK,KAAK,MAAM,WAAW,EACjC0E,EAAM,QAAQ1E,EAAI,KAAK,KAAK,EAE5B,IAAM+E,EAAiB,IAAI,IAC3BA,EAAe,IAAI,KAAK,IAAKtC,GAAW,KAAM,CAACC,GAAS+B,EAAOC,CAAK,CAAC,CAAC,CAAC,EAEvE,IAAMzC,EAAME,GACVuC,EAAM,OAAO,KAAK,IAAKnD,EAAU,KAAK,KAAK,EAC3C6D,CACF,EACA,KAAK,oBAAoB,IAAI7D,EAAUhB,GAAG0B,EAAI,CAAC,EAAE,IAAI,CAAC,EACtD,IAAMgD,EAAa9C,GACjBc,EAAa,OAAO,KAAK,IAAK1B,EAAU,MAAS,EACjDvB,CACF,EAEA,KAAK,MAAM,SAASiC,EAAKgD,EAAYF,CAAc,CACrD,CACF,CAKA,SAAmB,CACjB,OAAO,KAAK,OAAO,IAChBM,GAAUC,GAAeD,CAAK,CAGjC,CACF,CAOA,MAAME,EAA8D,CAClE,OAAO,KAAK,QAAQ,EAAE,MAAMA,CAAS,CACvC,CAOA,OAAOA,EAA8D,CACnE,OAAO,KAAK,QAAQ,EAAE,OAAOA,CAAS,CACxC,CAOA,KAAKA,EAAwE,CAC3E,OAAO,KAAK,QAAQ,EAAE,KAAKA,CAAS,CACtC,CAOA,UAAUA,EAA6D,CACrE,OAAO,KAAK,QAAQ,EAAE,UAAUA,CAAS,CAC3C,CAMA,QAAQC,EAAyD,CAC/D,OAAO,KAAK,QAAQ,EAAE,QAAQA,CAAU,CAC1C,CAOA,IAAIf,EAAkC,CACpC,GAAI,EAAAA,EAAQ,GAAKA,GAAS,KAAK,OAAO,QAItC,OAAOa,GAAe,KAAK,OAAOb,CAAK,CAAC,CAG1C,CAQA,QAAQgB,EAAsBC,EAA4B,CACxD,OAAO,KAAK,QAAQ,EAAE,QAAQD,EAAeC,CAAS,CACxD,CAQA,YAAYD,EAAsBC,EAA4B,CAC5D,OAAO,KAAK,QAAQ,EAAE,YAAYD,EAAeC,CAAS,CAC5D,CAOA,IAAOC,EAAmD,CACxD,OAAO,KAAK,OAAO,IAAI,CAACN,EAAOO,IAC7BD,EACEL,GAAeD,CAAK,EAGpBO,CACF,CACF,CACF,CAOA,KAAKL,EAA8D,CACjE,OAAO,KAAK,QAAQ,EAAE,KAAKA,CAAS,CACtC,CAEA,CAAC,OAAO,QAAQ,GAA6B,CAC3C,OAAO,IAAIM,GAAiB,KAAK,MAAM,CACzC,CAGQ,yBACNnF,EACAE,EAIA,CACA,IAAM2C,EAAUlB,GAAqB3B,CAAE,EAEvC6C,EAAQ,QAAQ7C,EAAG,GAAIH,GAAG,KAAK,KAAK,CAAC,EACrCgD,EAAQ,eAAe,KAAM3C,CAAG,EAEhC,KAAK,eAAe2C,CAAO,EAE3B,IAAMJ,EAAW,KAAK,iBAAiBvC,CAAG,EAE1C,MAAO,CAAE,QAAA2C,EAAS,SAAAJ,CAAS,CAC7B,CAGQ,mBAAmBsB,EAAe7D,EAAU,OAClD,IAAMkF,EAAkBrE,GACtBb,EACA,KAAK,OAAO,OAAS6D,EAAQ,GACzB5D,EAAA,KAAK,OAAO4D,EAAQ,CAAC,IAArB,YAAA5D,EAAwB,WACxB,MACN,EAEA,KAAK,OAAO4D,CAAK,EAAE,eAAe,KAAMqB,CAAe,CACzD,CAGA,YAAYlF,EAAoC,OAC9C,MAAO,CACL,KAAM,WACN,IAAIC,EAAA,KAAK,MAAL,KAAAA,EAAYrB,GAAO,EACvB,IAAAoB,EACA,QAAS,KAAK,OAAO,IAAI,CAACX,EAAMwE,IAC9BxE,EAAK,WAAWwE,EAAM,SAAS,CAAC,CAClC,CACF,CACF,CAEA,aAA6C,CAI3C,OAAO,MAAM,YAAY,CAC3B,CAGA,cAA8C,CAE5C,OADe,KAAK,OAAO,IAAK/C,GAASA,EAAK,YAAY,CAAC,CAI7D,CAEA,OAAyB,CACvB,OAAO,IAAIL,GAAS,KAAK,OAAO,IAAKpB,GAASA,EAAK,MAAM,CAAU,CAAC,CACtE,CACF,EAEM4F,GAAN,KAAsE,CAGpE,YAAYvE,EAAwB,CAClC,KAAK,eAAiBA,EAAM,OAAO,QAAQ,EAAE,CAC/C,CAEA,CAAC,OAAO,QAAQ,GAAyB,CACvC,OAAO,IACT,CAEA,MAA0B,CACxB,IAAMmC,EAAS,KAAK,eAAe,KAAK,EAExC,OAAIA,EAAO,KACF,CACL,KAAM,GACN,MAAO,MACT,EAMK,CAAE,MAHK6B,GAAe7B,EAAO,KAAK,CAG1B,CACjB,CACF,EAEA,SAAShB,GACPsD,EACAC,EACwB,CACxB,MAAO,CACL,KAAMD,EACN,KAAM,WACN,QAASC,CACX,CACF,CAEA,SAAStD,GAAS+B,EAAexE,EAAqC,CACpE,MAAO,CACL,MAAAwE,EACA,KAAM,MACN,KAAMxE,aAAgBL,GAAeK,EAAK,KAAOA,CACnD,CACF,CAEA,SAAS2C,GAAY6B,EAAoC,CACvD,MAAO,CACL,MAAAA,EACA,KAAM,QACR,CACF,CAEA,SAAS3B,GAAY2B,EAAexE,EAAqC,CACvE,MAAO,CACL,MAAAwE,EACA,KAAM,SACN,KAAMxE,aAAgBL,GAAeK,EAAK,KAAOA,CACnD,CACF,CAEA,SAASmD,GACPF,EACAuB,EACAxE,EACqB,CACrB,MAAO,CACL,MAAAwE,EACA,KAAM,OACN,cAAAvB,EACA,KAAMjD,aAAgBL,GAAeK,EAAK,KAAOA,CACnD,CACF,CAOA,SAASkC,GACPF,EACAK,EACY,CACZ,OAAOL,EAAI,IAAI,CAACvB,EAAI+D,IACdA,IAAU,EAGLwB,EAAAC,EAAA,GADSxF,GACT,CAEL,OAAQ,MACR,UAAA4B,CACF,GAEO5B,CAEV,CACH,CCl2CO,IAAMyF,GAEuBC,GAAeA,ECkCtCC,GAAN,MAAMC,WAGHxG,EAAa,CAMrB,YAAYyG,EAA4D,CAItE,GAHA,MAAM,EACN,KAAK,kBAAoB,IAAI,IAEzBA,EAAS,CACX,IAAMC,EAAoC,CAAC,EAC3C,OAAW,CAAC5F,EAAK8D,CAAK,IAAK6B,EAAS,CAClC,IAAM7E,EAAOC,GAAe+C,CAAK,EACjChD,EAAK,eAAe,KAAMd,CAAG,EAC7B4F,EAAc,KAAK,CAAC5F,EAAKc,CAAI,CAAC,CAChC,CACA,KAAK,KAAO,IAAI,IAAI8E,CAAa,CACnC,MACE,KAAK,KAAO,IAAI,GAEpB,CAKA,OAAOnG,EAAkBC,EAAmBH,EAAgC,CAC1E,GAAI,KAAK,MAAQ,OACf,MAAM,IAAI,MAAM,uCAAuC,EAGzD,IAAM8B,EAAkB,CAAC,EACnBvB,EAAkB,CACtB,GAAI,KAAK,IACT,KAAMP,GAAA,YAAAA,EAAM,eACZ,KAAA,EACA,SAAAE,EACA,UAAAC,CACF,EAEA2B,EAAI,KAAKvB,CAAE,EAEX,OAAW,CAACE,EAAK8D,CAAK,IAAK,KAAK,KAC9BzC,EAAI,KAAK,GAAGyC,EAAM,OAAO,KAAK,IAAK9D,EAAKT,CAAI,CAAC,EAG/C,OAAO8B,CACT,CAKA,OAAO,aACL,CAACjC,EAAIyG,CAAK,EACV7E,EACAzB,EACuB,CACvB,IAAMuG,EAAM,IAAIJ,GAChBI,EAAI,QAAQ1G,EAAIG,CAAI,EAEpB,IAAM2B,EAAWF,EAAiB,IAAI5B,CAAE,EACxC,GAAI8B,IAAa,OACf,OAAO4E,EAGT,OAAW,CAAC1G,EAAIV,CAAI,IAAKwC,EAAU,CACjC,IAAMC,EAAQC,GAAY,CAAChC,EAAIV,CAAI,EAAGsC,EAAkBzB,CAAI,EAC5D4B,EAAM,eAAe2E,EAAKpH,EAAK,SAAS,EACxCoH,EAAI,KAAK,IAAIpH,EAAK,UAAWyC,CAAK,EAClC2E,EAAI,WAAW,CACjB,CAEA,OAAOA,CACT,CAKA,QAAQ1G,EAAYG,EAAyB,CAC3C,MAAM,QAAQH,EAAIG,CAAI,EAEtB,OAAW,CAACwG,EAAMjC,CAAK,IAAK,KAAK,KAC3BkC,GAAWlC,CAAK,GAClBA,EAAM,QAAQvE,EAAK,WAAW,EAAGA,CAAI,CAG3C,CAKA,aAAaO,EAAc2D,EAA+B,CACxD,GAAI,KAAK,QAAU,OACjB,MAAM,IAAI,MAAM,mDAAmD,EAGrE,GAAM,CAAE,GAAArE,EAAI,UAAAM,EAAW,KAAAuG,CAAK,EAAInG,EAE1BE,EAAMN,EAGNyB,EAAQM,GAAqB3B,CAAE,EAErC,GAAI,KAAK,MAAM,QAAQV,CAAE,IAAM,OAC7B,MAAO,CAAE,SAAU,EAAM,EAG3B,GAAIqE,IAAA,EAAyB,CAC3B,IAAMyC,EAAiB,KAAK,kBAAkB,IAAIlG,CAAG,EACrD,GAAIkG,IAAmBD,EAErB,YAAK,kBAAkB,OAAOjG,CAAG,EAC1B,CAAE,SAAU,EAAM,EAC3B,GAAWkG,IAAmB,OAE5B,MAAO,CAAE,SAAU,EAAM,CAE7B,MAAWzC,IAAA,GAIT,KAAK,kBAAkB,OAAOzD,CAAG,EAGnC,IAAMmG,EAAgB,KAAK,KAAK,IAAInG,CAAG,EACnCwD,EACJ,GAAI2C,EAAe,CACjB,IAAMC,EAASzG,GAAG,KAAK,GAAG,EAC1B6D,EAAU2C,EAAc,OAAOC,EAAQpG,CAAG,EAC1CmG,EAAc,QAAQ,CACxB,MACE3C,EAAU,CAAC,CAAE,KAAA,EAA0B,GAAApE,CAAG,CAAC,EAG7C,OAAA+B,EAAM,eAAe,KAAMnB,CAAG,EAC9BmB,EAAM,QAAQ/B,EAAI,KAAK,KAAK,EAC5B,KAAK,KAAK,IAAIY,EAAKmB,CAAK,EACxB,KAAK,WAAW,EAET,CACL,SAAU,CACR,KAAM,KACN,KAAM,UACN,QAAS,CAAE,CAACnB,CAAG,EAAG,CAAE,KAAM,QAAS,CAAE,CACvC,EACA,QAAAwD,CACF,CACF,CAKA,SAAgB,CACd,MAAM,QAAQ,EAEd,QAAWnE,KAAQ,KAAK,KAAK,OAAO,EAClCA,EAAK,QAAQ,CAEjB,CAKA,aAAa8B,EAA8B,CACzC,IAAM/B,EAAKO,GAAG,KAAK,GAAG,EAChBD,EAAYC,GAAGwB,EAAM,UAAU,EAC/BqC,EAAUrC,EAAM,OAAO/B,EAAIM,EAAW,KAAK,KAAK,EAEtD,OAAW,CAACM,EAAK8D,CAAK,IAAK,KAAK,KAC1BA,IAAU3C,IACZ,KAAK,KAAK,OAAOnB,CAAG,EACpB,KAAK,WAAW,GAIpB,OAAAmB,EAAM,QAAQ,EAQP,CAAE,SAN2C,CAClD,KAAM,KACN,KAAM,UACN,QAAS,CAAE,CAACzB,CAAS,EAAG,CAAE,KAAM,QAAS,CAAE,CAC7C,EAEkC,QAAA8D,CAAQ,CAC5C,CAKA,YAA4B,CAC1B,GAAI,KAAK,OAAO,OAAS,YACvB,MAAM,IAAI,MAAM,+CAA+C,EAGjE,MAAO,CACL,KAAA,EACA,SAAU7D,GAAG,KAAK,OAAO,KAAK,IAAK,iCAAiC,EACpE,UAAW,KAAK,OAAO,GACzB,CACF,CAOA,IAAIK,EAA+B,CACjC,IAAM8D,EAAQ,KAAK,KAAK,IAAI9D,CAAG,EAC/B,GAAI8D,IAAU,OAGd,OAAOY,GAAeZ,CAAK,CAG7B,CAOA,IAAI9D,EAAW8D,EAAqB,QAClC7D,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACZ,IAAMoG,EAAW,KAAK,KAAK,IAAIrG,CAAG,EAE9BqG,GACFA,EAAS,QAAQ,EAGnB,IAAMhH,EAAO0B,GAAe+C,CAAK,EAMjC,GALAzE,EAAK,eAAe,KAAMW,CAAG,EAE7B,KAAK,KAAK,IAAIA,EAAKX,CAAI,EACvB,KAAK,WAAW,EAEZ,KAAK,OAAS,KAAK,IAAK,CAC1B,IAAMD,EAAK,KAAK,MAAM,WAAW,EACjCC,EAAK,QAAQD,EAAI,KAAK,KAAK,EAE3B,IAAM+E,EAAiB,IAAI,IAC3BA,EAAe,IAAI,KAAK,IAAK,CAC3B,KAAM,KACN,KAAM,UACN,QAAS,CAAE,CAACnE,CAAG,EAAG,CAAE,KAAM,QAAS,CAAE,CACvC,CAAC,EAED,IAAMqB,EAAMhC,EAAK,OAAO,KAAK,IAAKW,EAAK,KAAK,KAAK,EAEjD,KAAK,kBAAkB,IAAIA,EAAKL,GAAG0B,EAAI,CAAC,EAAE,IAAI,CAAC,EAE/C,KAAK,MAAM,SACThC,EAAK,OAAO,KAAK,IAAKW,EAAK,KAAK,KAAK,EACrCqG,EACIA,EAAS,OAAO,KAAK,IAAKrG,CAAG,EAC7B,CAAC,CAAE,KAAA,EAA0B,GAAAZ,CAAG,CAAC,EACrC+E,CACF,CACF,CACF,CAKA,IAAI,MAAe,CACjB,OAAO,KAAK,KAAK,IACnB,CAMA,IAAInE,EAAoB,CACtB,OAAO,KAAK,KAAK,IAAIA,CAAG,CAC1B,CAOA,OAAOA,EAAoB,QACzBC,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACZ,IAAMZ,EAAO,KAAK,KAAK,IAAIW,CAAG,EAE9B,GAAIX,IAAS,OACX,MAAO,GAOT,GAJAA,EAAK,QAAQ,EACb,KAAK,KAAK,OAAOW,CAAG,EACpB,KAAK,WAAW,EAEZ,KAAK,OAASX,EAAK,IAAK,CAC1B,IAAM+G,EAASzG,GAAG,KAAK,GAAG,EACpBwE,EAAiB,IAAI,IAC3BA,EAAe,IAAIiC,EAAQ,CACzB,KAAM,KACN,KAAM,UACN,QAAS,CAAE,CAACpG,CAAG,EAAG,CAAE,KAAM,QAAS,CAAE,CACvC,CAAC,EACD,KAAK,MAAM,SACT,CACE,CACE,KAAA,EACA,GAAIX,EAAK,IACT,KAAM,KAAK,MAAM,aAAa,CAChC,CACF,EACAA,EAAK,OAAO+G,EAAQpG,CAAG,EACvBmE,CACF,CACF,CAEA,MAAO,EACT,CAKA,SAA4C,CAC1C,IAAMmC,EAAgB,KAAK,KAAK,QAAQ,EAExC,MAAO,CACL,CAAC,OAAO,QAAQ,GAAI,CAClB,OAAO,IACT,EACA,MAAO,CACL,IAAMC,EAAgBD,EAAc,KAAK,EAEzC,GAAIC,EAAc,KAChB,MAAO,CACL,KAAM,GACN,MAAO,MACT,EAKF,IAAMvG,EAFQuG,EAAc,MAEV,CAAC,EACbzC,EAAQY,GAAe6B,EAAc,MAAM,CAAC,CAAC,EAGnD,MAAO,CACL,MAAO,CAACvG,EAAK8D,CAAK,CACpB,CACF,CACF,CACF,CAKA,CAAC,OAAO,QAAQ,GAAsC,CACpD,OAAO,KAAK,QAAQ,CACtB,CAKA,MAA+B,CAC7B,OAAO,KAAK,KAAK,KAAK,CACxB,CAKA,QAAmC,CACjC,IAAMwC,EAAgB,KAAK,KAAK,OAAO,EAEvC,MAAO,CACL,CAAC,OAAO,QAAQ,GAAI,CAClB,OAAO,IACT,EACA,MAAO,CACL,IAAMC,EAAgBD,EAAc,KAAK,EAEzC,OAAIC,EAAc,KACT,CACL,KAAM,GACN,MAAO,MACT,EAOK,CAAE,MAJK7B,GAAe6B,EAAc,KAAK,CAIjC,CACjB,CACF,CACF,CAMA,QACExB,EACM,CACN,QAAWN,KAAS,KAClBM,EAASN,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAG,IAAI,CAErC,CAGA,YAAYzE,EAAoC,OAC9C,MAAO,CACL,KAAM,UACN,IAAIC,EAAA,KAAK,MAAL,KAAAA,EAAYrB,GAAO,EACvB,IAAAoB,EACA,QAAS,MAAM,KAAK,KAAK,KAAK,QAAQ,CAAC,EAAE,IAAI,CAAC,CAACA,EAAKwG,CAAG,IACrDA,EAAI,WAAWxG,CAAG,CACpB,CACF,CACF,CAEA,aAAsD,CAIpD,OAAO,MAAM,YAAY,CAC3B,CAGA,cAAuD,CACrD,IAAM6C,EAAyC,IAAI,IACnD,OAAW,CAAC7C,EAAK8D,CAAK,IAAK,KAAK,KAC9BjB,EAAO,IAAI7C,EAAK8D,EAAM,YAAY,CAAwB,EAE5D,OAAOyB,GAAO1C,CAAM,CACtB,CAEA,OAA+B,CAC7B,OAAO,IAAI6C,GACT,MAAM,KAAK,KAAK,IAAI,EAAE,IAAI,CAAC,CAAC1F,EAAKc,CAAI,IAAM,CAACd,EAAKc,EAAK,MAAM,CAAW,CAAC,CAC1E,CACF,CACF,EC3aa2F,GAAN,MAAMC,WAAyCxH,EAAa,CAiDjE,YAAYyH,EAAS,CAAC,EAAQ,CAC5B,MAAM,EAEN,KAAK,kBAAoB,IAAI,IAE7B,QAAW3G,KAAO2G,EAAK,CACrB,IAAM7C,EAAQ6C,EAAI3G,CAAG,EACjB8D,IAAU,QAEHkC,GAAWlC,CAAK,GACzBA,EAAM,eAAe,KAAM9D,CAAG,CAElC,CAEA,KAAK,KAAO,IAAI,IAAI,OAAO,QAAQ2G,CAAG,CAAC,CACzC,CAxDA,OAAe,8BACbjG,EACuD,CACvD,IAAMM,EAAyC,IAAI,IAC/C4F,EAA6C,KAEjD,OAAW,CAACxH,EAAIV,CAAI,IAAKgC,EACvB,GAAIjC,GAAWC,CAAI,EACjBkI,EAAO,CAACxH,EAAIV,CAAI,MACX,CACL,IAAMmI,EAAkC,CAACzH,EAAIV,CAAI,EAC3CwC,EAAWF,EAAiB,IAAItC,EAAK,QAAQ,EAC/CwC,IAAa,OACfA,EAAS,KAAK2F,CAAK,EAEnB7F,EAAiB,IAAItC,EAAK,SAAU,CAACmI,CAAK,CAAC,CAE/C,CAGF,GAAID,IAAS,KACX,MAAM,IAAI,MAAM,oBAAoB,EAGtC,MAAO,CAACA,EAAM5F,CAAgB,CAChC,CAGA,OAAO,WACLN,EACAnB,EACe,CACf,GAAM,CAACqH,EAAM5F,CAAgB,EAC3B0F,GAAW,8BAA8BhG,CAAK,EAChD,OAAOgG,GAAW,aAChBE,EACA5F,EACAzB,CACF,CACF,CAoBA,OAAOE,EAAkBC,EAAmBH,EAAgC,CAC1E,GAAI,KAAK,MAAQ,OACf,MAAM,IAAI,MAAM,uCAAuC,EAGzD,IAAM0G,EAAO1G,GAAA,YAAAA,EAAM,eAEb8B,EAAkB,CAAC,EACnBvB,EAAqB,CACzB,KAAA,EACA,GAAI,KAAK,IACT,KAAAmG,EACA,SAAAxG,EACA,UAAAC,EACA,KAAM,CAAC,CACT,EAEA2B,EAAI,KAAKvB,CAAE,EAEX,OAAW,CAACE,EAAK8D,CAAK,IAAK,KAAK,KAC1BkC,GAAWlC,CAAK,EAClBzC,EAAI,KAAK,GAAGyC,EAAM,OAAO,KAAK,IAAK9D,EAAKT,CAAI,CAAC,EAE7CO,EAAG,KAAKE,CAAG,EAAI8D,EAInB,OAAOzC,CACT,CAGA,OAAO,aACL,CAACjC,EAAIC,CAAI,EACT2B,EACAzB,EACwB,CACxB,IAAMuH,EAAU,IAAIJ,GAAWrH,EAAK,IAAI,EACxC,OAAAyH,EAAQ,QAAQ1H,EAAIG,CAAI,EACjB,KAAK,qBAAqBuH,EAAS9F,EAAkBzB,CAAI,CAClE,CAGA,OAAO,qBACLuH,EACA9F,EACAzB,EACwB,CACxB,IAAM2B,EAAWF,EAAiB,IAAIrB,GAAGmH,EAAQ,GAAG,CAAC,EACrD,GAAI5F,IAAa,OACf,OAAO4F,EAGT,OAAW,CAAC1H,EAAIV,CAAI,IAAKwC,EAAU,CACjC,IAAMC,EAAQ4F,GAAkB,CAAC3H,EAAIV,CAAI,EAAGsC,EAAkBzB,CAAI,EAC9DyH,GAAgB7F,CAAK,GACvBA,EAAM,eAAe2F,EAASpI,EAAK,SAAS,EAE9CoI,EAAQ,KAAK,IAAIpI,EAAK,UAAWyC,CAAK,EACtC2F,EAAQ,WAAW,CACrB,CAEA,OAAOA,CACT,CAGA,QAAQ1H,EAAYG,EAAyB,CAC3C,MAAM,QAAQH,EAAIG,CAAI,EAEtB,OAAW,CAACwG,EAAMjC,CAAK,IAAK,KAAK,KAC3BkC,GAAWlC,CAAK,GAClBA,EAAM,QAAQvE,EAAK,WAAW,EAAGA,CAAI,CAG3C,CAGA,aAAaO,EAAc2D,EAA+B,CACxD,GAAI,KAAK,QAAU,OACjB,MAAM,IAAI,MAAM,mDAAmD,EAGrE,GAAM,CAAE,GAAArE,EAAI,KAAA6G,EAAM,UAAWjG,CAAI,EAAIF,EAC/BqB,EAAQ8F,GAAiBnH,CAAE,EAEjC,GAAI,KAAK,MAAM,QAAQV,CAAE,IAAM,OAC7B,OAAI,KAAK,kBAAkB,IAAIY,CAAG,IAAMiG,GAEtC,KAAK,kBAAkB,OAAOjG,CAAG,EAG5B,CAAE,SAAU,EAAM,EAG3B,GAAIyD,IAAA,EACF,KAAK,kBAAkB,IAAIzD,EAAKL,GAAGsG,CAAI,CAAC,UAC/B,KAAK,kBAAkB,IAAIjG,CAAG,IAAM,OAE/C,OAAW,KAAK,kBAAkB,IAAIA,CAAG,IAAMiG,GAE7C,KAAK,kBAAkB,OAAOjG,CAAG,EAC1B,CAAE,SAAU,EAAM,GAGlB,CAAE,SAAU,EAAM,EAG3B,IAAMoG,EAASzG,GAAG,KAAK,GAAG,EACpBwG,EAAgB,KAAK,KAAK,IAAInG,CAAG,EACnCwD,EACJ,OAAIwC,GAAWG,CAAa,GAC1B3C,EAAU2C,EAAc,OAAOC,EAAQpG,CAAG,EAC1CmG,EAAc,QAAQ,GACbA,IAAkB,OAC3B3C,EAAU,CAAC,CAAE,KAAA,EAAgC,GAAI4C,EAAQ,IAAApG,CAAI,CAAC,EAE9DwD,EAAU,CACR,CACE,KAAA,EACA,GAAI4C,EACJ,KAAM,CAAE,CAACpG,CAAG,EAAGmG,CAAc,CAC/B,CACF,EAGF,KAAK,KAAK,IAAInG,EAAKmB,CAAK,EACxB,KAAK,WAAW,EAEZ6F,GAAgB7F,CAAK,IACvBA,EAAM,eAAe,KAAMnB,CAAG,EAC9BmB,EAAM,QAAQ/B,EAAI,KAAK,KAAK,GAGvB,CACL,QAAAoE,EACA,SAAU,CACR,KAAM,KACN,KAAM,aACN,QAAS,CAAE,CAACxD,CAAG,EAAG,CAAE,KAAM,QAAS,CAAE,CACvC,CACF,CACF,CAGA,aAAamB,EAA8B,CACzC,GAAIA,EAAO,CACT,IAAM/B,EAAKO,GAAG,KAAK,GAAG,EAChBD,EAAYC,GAAGwB,EAAM,UAAU,EAC/BqC,EAAUrC,EAAM,OAAO/B,EAAIM,EAAW,KAAK,KAAK,EAEtD,OAAW,CAACM,EAAK8D,CAAK,IAAK,KAAK,KAC1BA,IAAU3C,IACZ,KAAK,KAAK,OAAOnB,CAAG,EACpB,KAAK,WAAW,GAIpB,OAAAmB,EAAM,QAAQ,EAUP,CAAE,SARmC,CAC1C,KAAM,KACN,KAAM,aACN,QAAS,CACP,CAACzB,CAAS,EAAG,CAAE,KAAM,QAAS,CAChC,CACF,EAEkC,QAAA8D,CAAQ,CAC5C,CAEA,MAAO,CAAE,SAAU,EAAM,CAC3B,CAKA,SAAgB,CACd,MAAM,QAAQ,EAEd,QAAWM,KAAS,KAAK,KAAK,OAAO,EAC/BkC,GAAWlC,CAAK,GAClBA,EAAM,QAAQ,CAGpB,CAGA,OAAOhE,EAAQC,EAA+B,CAC5C,OAAID,EAAG,OAAA,EACE,KAAK,aAAaA,EAAIC,CAAO,EAC3BD,EAAG,OAAA,EACL,KAAK,sBAAsBA,EAAIC,CAAO,EAGxC,MAAM,OAAOD,EAAIC,CAAO,CACjC,CAKA,YAAsD,CACpD,IAAMZ,EAAmB,CAAC,EAG1B,OAAW,CAACa,EAAK8D,CAAK,IAAK,KAAK,KACzBkC,GAAWlC,CAAK,IACnB3E,EAAKa,CAAG,EAAI8D,GAIhB,OAAI,KAAK,OAAO,OAAS,aAAe,KAAK,OAAO,KAAK,IAChD,CACL,KAAA,EACA,SAAU,KAAK,OAAO,KAAK,IAC3B,UAAW,KAAK,OAAO,IACvB,KAAA3E,CACF,EAGO,CACL,KAAA,EACA,KAAAA,CACF,CAEJ,CAGQ,aAAaW,EAAoBC,EAA+B,CACtE,IAAImH,EAAa,GACX9H,EAAKO,GAAG,KAAK,GAAG,EAChB6D,EAAgB,CAAC,EACjB2D,EAAgC,CACpC,KAAA,EACA,GAAA/H,EACA,KAAM,CAAC,CACT,EAEA,QAAWY,KAAOF,EAAG,KAAoB,CACvC,IAAMuG,EAAW,KAAK,KAAK,IAAIrG,CAAG,EAC9BgG,GAAWK,CAAQ,GACrB7C,EAAQ,KAAK,GAAG6C,EAAS,OAAOjH,EAAIY,CAAG,CAAC,EACxCqG,EAAS,QAAQ,GACRA,IAAa,OACtBc,EAAc,KAAKnH,CAAG,EAAIqG,EACjBA,IAAa,QACtB7C,EAAQ,KAAK,CAAE,KAAA,EAAgC,GAAApE,EAAI,IAAAY,CAAI,CAAC,CAE5D,CAEA,IAAMsE,EAAwC,CAAC,EAC/C,QAAWtE,KAAOF,EAAG,KAAoB,CACvC,IAAMgE,EAAQhE,EAAG,KAAKE,CAAG,EACzB,GAAI8D,IAAU,OACZ,SAGF,GAAI/D,EACF,KAAK,kBAAkB,IAAIC,EAAKL,GAAGG,EAAG,IAAI,CAAC,UAClC,KAAK,kBAAkB,IAAIE,CAAG,IAAM,OAE7CkH,EAAa,WACJ,KAAK,kBAAkB,IAAIlH,CAAG,IAAMF,EAAG,KAAM,CAEtD,KAAK,kBAAkB,OAAOE,CAAG,EACjC,QACF,KAEE,UAGF,IAAMqG,EAAW,KAAK,KAAK,IAAIrG,CAAG,EAE9BgG,GAAWK,CAAQ,GACrBA,EAAS,QAAQ,EAGnBa,EAAa,GACb5C,EAAYtE,CAAG,EAAI,CAAE,KAAM,QAAS,EACpC,KAAK,KAAK,IAAIA,EAAK8D,CAAK,EACxB,KAAK,WAAW,CAClB,CAEA,OAAI,OAAO,KAAKqD,EAAc,IAAI,EAAE,SAAW,GAC7C3D,EAAQ,QAAQ2D,CAAa,EAGxBD,EACH,CACE,SAAU,CACR,KAAM,KACN,KAAM,aACN,QAAS5C,CACX,EACA,QAAAd,CACF,EACA,CAAE,SAAU,EAAM,CACxB,CAGQ,sBACN1D,EACAC,EACa,CACb,IAAMC,EAAMF,EAAG,IAGf,GAAI,KAAK,KAAK,IAAIE,CAAG,IAAM,GACzB,MAAO,CAAE,SAAU,EAAM,EAK3B,GAAI,CAACD,GAAW,KAAK,kBAAkB,IAAIC,CAAG,IAAM,OAClD,MAAO,CAAE,SAAU,EAAM,EAG3B,IAAMqG,EAAW,KAAK,KAAK,IAAIrG,CAAG,EAE5BZ,EAAKO,GAAG,KAAK,GAAG,EAClB6D,EAAgB,CAAC,EACrB,OAAIwC,GAAWK,CAAQ,GACrB7C,EAAU6C,EAAS,OAAOjH,EAAIU,EAAG,GAAG,EACpCuG,EAAS,QAAQ,GACRA,IAAa,SACtB7C,EAAU,CACR,CACE,KAAA,EACA,GAAApE,EACA,KAAM,CAAE,CAACY,CAAG,EAAGqG,CAAS,CAC1B,CACF,GAGF,KAAK,KAAK,OAAOrG,CAAG,EACpB,KAAK,WAAW,EACT,CACL,SAAU,CACR,KAAM,KACN,KAAM,aACN,QAAS,CAAE,CAACF,EAAG,GAAG,EAAG,CAAE,KAAM,QAAS,CAAE,CAC1C,EACA,QAAA0D,CACF,CACF,CAKA,UAAc,CACZ,OAAO,OAAO,YAAY,KAAK,IAAI,CACrC,CAOA,IAA0BxD,EAAW8D,EAAsB,QAEzD7D,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACZ,KAAK,OAAO,CAAE,CAACD,CAAG,EAAG8D,CAAM,CAA0B,CACvD,CAMA,IAA0B9D,EAAoB,CAC5C,OAAO,KAAK,KAAK,IAAIA,CAAa,CACpC,CAMA,OAAOA,EAAoB,QACzBC,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACZ,IAAMmH,EAAcpH,EACdqG,EAAW,KAAK,KAAK,IAAIe,CAAW,EAE1C,GAAIf,IAAa,OACf,OAGF,GAAI,KAAK,QAAU,QAAa,KAAK,MAAQ,OAAW,CAClDL,GAAWK,CAAQ,GACrBA,EAAS,QAAQ,EAEnB,KAAK,KAAK,OAAOe,CAAW,EAC5B,KAAK,WAAW,EAChB,MACF,CAEA,IAAI5D,EAEAwC,GAAWK,CAAQ,GACrBA,EAAS,QAAQ,EACjB7C,EAAU6C,EAAS,OAAO,KAAK,IAAKe,CAAW,GAE/C5D,EAAU,CACR,CACE,KAAA,EACA,KAAM,CAAE,CAAC4D,CAAW,EAAGf,CAAS,EAChC,GAAI,KAAK,GACX,CACF,EAGF,KAAK,KAAK,OAAOe,CAAW,EAC5B,KAAK,WAAW,EAEhB,IAAMjD,EAAiB,IAAI,IAC3BA,EAAe,IAAI,KAAK,IAAK,CAC3B,KAAM,KACN,KAAM,aACN,QAAS,CAAE,CAACnE,CAAG,EAAG,CAAE,KAAM,QAAS,CAAE,CAGvC,CAAC,EAED,KAAK,MAAM,SACT,CACE,CACE,KAAA,EACA,IAAKoH,EACL,GAAI,KAAK,IACT,KAAM,KAAK,MAAM,aAAa,CAChC,CACF,EACA5D,EACAW,CACF,CACF,CAMA,OAAOkD,EAAyB,OAE9B,IADApH,EAAA,KAAK,QAAL,MAAAA,EAAY,0BACR,KAAK,QAAU,QAAa,KAAK,MAAQ,OAAW,CACtD,QAAWD,KAAOqH,EAAO,CACvB,IAAMC,EAAWD,EAAMrH,CAAG,EAC1B,GAAIsH,IAAa,OACf,SAGF,IAAMjB,EAAW,KAAK,KAAK,IAAIrG,CAAG,EAC9BgG,GAAWK,CAAQ,GACrBA,EAAS,QAAQ,EAGfL,GAAWsB,CAAQ,GACrBA,EAAS,eAAe,KAAMtH,CAAG,EAGnC,KAAK,KAAK,IAAIA,EAAKsH,CAAQ,EAC3B,KAAK,WAAW,CAClB,CAEA,MACF,CAEA,IAAMjG,EAAY,CAAC,EACbgD,EAAmB,CAAC,EAEpB4B,EAAO,KAAK,MAAM,aAAa,EAC/BsB,EAA2B,CAAC,EAE5BC,EAAkC,CACtC,GAAI,KAAK,IACT,KAAA,EACA,KAAM,CAAC,CACT,EAEMlD,EAAwC,CAAC,EAE/C,QAAWtE,KAAOqH,EAAO,CACvB,IAAMC,EAA6BD,EAAMrH,CAAG,EAC5C,GAAIsH,IAAa,OACf,SAGF,IAAMjB,EAAW,KAAK,KAAK,IAAIrG,CAAG,EAWlC,GATIgG,GAAWK,CAAQ,GACrBhC,EAAW,KAAK,GAAGgC,EAAS,OAAO,KAAK,IAAKrG,CAAG,CAAC,EACjDqG,EAAS,QAAQ,GACRA,IAAa,OACtBhC,EAAW,KAAK,CAAE,KAAA,EAAgC,GAAI,KAAK,IAAK,IAAArE,CAAI,CAAC,EAErEwH,EAAgB,KAAKxH,CAAG,EAAIqG,EAG1BL,GAAWsB,CAAQ,EAAG,CACxBA,EAAS,eAAe,KAAMtH,CAAG,EACjCsH,EAAS,QAAQ,KAAK,MAAM,WAAW,EAAG,KAAK,KAAK,EACpD,IAAMG,EAAoBH,EAAS,OAAO,KAAK,IAAKtH,EAAK,KAAK,KAAK,EAE7D0H,EAAeD,EAAkB,KACpC3H,GAAmCA,EAAG,WAAa,KAAK,GAC3D,EACI4H,GACF,KAAK,kBAAkB,IAAI1H,EAAKL,GAAG+H,EAAa,IAAI,CAAC,EAGvDrG,EAAI,KAAK,GAAGoG,CAAiB,CAC/B,MACEF,EAAavH,CAAG,EAAIsH,EACpB,KAAK,kBAAkB,IAAItH,EAAKiG,CAAI,EAGtC,KAAK,KAAK,IAAIjG,EAAKsH,CAAQ,EAC3B,KAAK,WAAW,EAChBhD,EAAYtE,CAAG,EAAI,CAAE,KAAM,QAAS,CACtC,CAEI,OAAO,KAAKwH,EAAgB,IAAI,EAAE,SAAW,GAC/CnD,EAAW,QAAQmD,CAAe,EAGhC,OAAO,KAAKD,CAAY,EAAE,SAAW,GACvClG,EAAI,QAAQ,CACV,KAAA4E,EACA,GAAI,KAAK,IACT,KAAA,EACA,KAAMsB,CACR,CAAC,EAGH,IAAMpD,EAAiB,IAAI,IAC3BA,EAAe,IAAI,KAAK,IAAK,CAC3B,KAAM,KACN,KAAM,aACN,QAASG,CACX,CAAC,EACD,KAAK,MAAM,SAASjD,EAAKgD,EAAYF,CAAc,CACrD,CAEA,aAA8B,CAI5B,OAAO,MAAM,YAAY,CAC3B,CAGA,WAAWnE,EAAkD,CAI3D,OAAO,MAAM,WAAWA,CAAG,CAC7B,CAGA,YAAYA,EAAoC,OAC9C,IAAM2H,GAAS1H,EAAA,KAAK,MAAL,KAAAA,EAAYrB,GAAO,EAClC,MAAO,CACL,KAAM,aACN,GAAI+I,EACJ,IAAA3H,EACA,QAAS,MAAM,KAAK,KAAK,KAAK,QAAQ,CAAC,EAAE,IAAI,CAAC,CAACA,EAAK8D,CAAK,IACvDkC,GAAWlC,CAAK,EACZA,EAAM,WAAW9D,CAAG,EACpB,CAAE,KAAM,OAAQ,GAAI,GAAG2H,CAAM,IAAI3H,CAAG,GAAI,IAAAA,EAAK,QAAS8D,CAAM,CAClE,CACF,CACF,CAGA,cAA+B,CAC7B,IAAMjB,EAAqC,CAAC,EAC5C,OAAW,CAAC7C,EAAKwG,CAAG,IAAK,KAAK,KAC5B3D,EAAO7C,CAAG,EAAIgH,GAAgBR,CAAG,EAAIA,EAAI,YAAY,EAAIA,EAE3D,OAC0C3D,CAE5C,CAEA,OAAuB,CACrB,OAAO,IAAI6D,GACT,OAAO,YACL,MAAM,KAAK,KAAK,IAAI,EAAE,IAAI,CAAC,CAAC1G,EAAK8D,CAAK,IAAM,CAC1C9D,EACAgH,GAAgBlD,CAAK,EAAIA,EAAM,MAAM,EAAI5D,GAAU4D,CAAK,CAC1D,CAAC,CACH,CACF,CACF,CACF,ECrrBO,SAASrC,GAAqB3B,EAAwB,CAC3D,OAAOiB,GAAekG,GAAiBnH,CAAE,CAAC,CAC5C,CAEO,SAASmH,GAAiBnH,EAAoB,CACnD,OAAQA,EAAG,KAAM,CACf,IAAA,GACE,OAAOA,EAAG,KACZ,IAAA,GACE,OAAO,IAAI2G,GAAW3G,EAAG,IAAI,EAC/B,IAAA,GACE,OAAO,IAAI2F,GACb,IAAA,GACE,OAAO,IAAIjF,GACb,QACE,OAAOoH,GAAY9H,EAAI,qBAAqB,CAChD,CACF,CAEO,SAAS+H,GAAoB/G,EAAgBgH,EAA2B,CAC7E,OAAIhH,IAASgH,EACJ,GAELhH,EAAK,OAAO,OAAS,YAChB+G,GAAoB/G,EAAK,OAAO,KAAMgH,CAAM,EAE9C,EACT,CAEO,SAAS1G,GACd,CAAChC,EAAIV,CAAI,EACTsC,EACAzB,EACU,CACV,OAAQb,EAAK,KAAM,CACjB,IAAA,GACE,OAAO+H,GAAW,aAAa,CAACrH,EAAIV,CAAI,EAAGsC,EAAkBzB,CAAI,EAEnE,IAAA,GACE,OAAOiB,GAAS,aAAa,CAACpB,EAAIV,CAAI,EAAGsC,EAAkBzB,CAAI,EAEjE,IAAA,GACE,OAAOkG,GAAQ,aAAa,CAACrG,EAAIV,CAAI,EAAGsC,EAAkBzB,CAAI,EAEhE,IAAA,GACE,OAAOP,GAAa,aAAa,CAACI,EAAIV,CAAI,EAAGsC,EAAkBzB,CAAI,EAErE,QACE,MAAM,IAAI,MAAM,sBAAsB,CAE1C,CACF,CAEO,SAASwH,GACd,CAAC3H,EAAIV,CAAI,EACTsC,EACAzB,EACM,CACN,OAAQb,EAAK,KAAM,CACjB,IAAA,GACE,OAAO+H,GAAW,aAAa,CAACrH,EAAIV,CAAI,EAAGsC,EAAkBzB,CAAI,EAEnE,IAAA,GACE,OAAOiB,GAAS,aAAa,CAACpB,EAAIV,CAAI,EAAGsC,EAAkBzB,CAAI,EAEjE,IAAA,GACE,OAAOkG,GAAQ,aAAa,CAACrG,EAAIV,CAAI,EAAGsC,EAAkBzB,CAAI,EAEhE,IAAA,GACE,OAAOb,EAAK,KAEd,QACE,MAAM,IAAI,MAAM,sBAAsB,CAE1C,CACF,CAEO,SAASsI,GAAgBlD,EAAwC,CACtE,OAAOiE,GAAWjE,CAAK,GAAKkE,GAAUlE,CAAK,GAAKmE,GAAanE,CAAK,CACpE,CAEO,SAASkC,GAAWlC,EAAmC,CAC5D,OAAOkD,GAAgBlD,CAAK,GAAKoE,GAAepE,CAAK,CACvD,CAEO,SAASiE,GAAWjE,EAAyC,CAClE,OAAOA,aAAiBtD,EAC1B,CAEO,SAASwH,GAAUlE,EAAgD,CACxE,OAAOA,aAAiB2B,EAC1B,CAEO,SAASwC,GAAanE,EAAiD,CAC5E,OAAOA,aAAiB2C,EAC1B,CAEO,SAASyB,GAAepE,EAA6C,CAC1E,OAAOA,aAAiB9E,EAC1B,CAEO,SAASmJ,GAAsCrE,EAAa,CACjE,OAAOA,IAAU,OACZ,OACDkD,GAAgBlD,CAAK,EAClBA,EAAM,MAAM,EACZ5D,GAAU4D,CAAK,CACxB,CAEO,SAASY,GAAeiC,EAAqB,CAClD,OAAIA,aAAe3H,GACV2H,EAAI,KAEXA,aAAenG,IACfmG,aAAelB,IACfkB,aAAeF,GAERE,EAEAiB,GAAYjB,EAAK,sBAAsB,CAElD,CAEO,SAAS5F,GAAe+C,EAAuB,CACpD,OACEA,aAAiB2C,IACjB3C,aAAiB2B,IACjB3B,aAAiBtD,GAEVsD,EAEA,IAAI9E,GAAa8E,CAAK,CAEjC,CAEO,SAASsE,GACdC,EACAC,EACM,CACN,IAAMjH,EAAY,CAAC,EAEnB,OAAAgH,EAAa,QAAQ,CAACE,EAAGnJ,IAAO,CACzBkJ,EAAS,IAAIlJ,CAAE,GAElBiC,EAAI,KAAK,CACP,KAAA,EACA,GAAAjC,CACF,CAAC,CAEL,CAAC,EAEDkJ,EAAS,QAAQ,CAAC5J,EAAMU,IAAO,CAC7B,IAAMoJ,EAAcH,EAAa,IAAIjJ,CAAE,EACvC,GAAIoJ,EACE9J,EAAK,OAAA,IAEL8J,EAAY,OAAA,GACZ,KAAK,UAAU9J,EAAK,IAAI,IAAM,KAAK,UAAU8J,EAAY,IAAI,IAE7DnH,EAAI,KAAK,CACP,KAAA,EACA,GAAAjC,EACA,KAAMV,EAAK,IACb,CAAC,EAGDA,EAAK,YAAc8J,EAAY,WACjCnH,EAAI,KAAK,CACP,KAAA,EACA,GAAAjC,EACA,UAAWO,GAAGjB,EAAK,UAAW,gCAAgC,CAChE,CAAC,MAIH,QAAQA,EAAK,KAAM,CACjB,IAAA,GACE2C,EAAI,KAAK,CACP,KAAA,EACA,GAAAjC,EACA,SAAUV,EAAK,SACf,UAAWA,EAAK,UAChB,KAAMA,EAAK,IACb,CAAC,EACD,MACF,IAAA,GACE2C,EAAI,KAAK,CACP,KAAA,EACA,GAAAjC,EACA,SAAUV,EAAK,SACf,UAAWA,EAAK,SAClB,CAAC,EACD,MACF,IAAA,GACE,GAAIA,EAAK,WAAa,QAAaA,EAAK,YAAc,OACpD,MAAM,IAAI,MACR,iEACF,EAEF2C,EAAI,KAAK,CACP,KAAA,EACA,GAAAjC,EACA,SAAUV,EAAK,SACf,UAAWA,EAAK,UAChB,KAAMA,EAAK,IACb,CAAC,EACD,MACF,IAAA,GACE2C,EAAI,KAAK,CACP,KAAA,EACA,GAAAjC,EACA,SAAUV,EAAK,SACf,UAAWA,EAAK,SAClB,CAAC,EACD,KACJ,CAEJ,CAAC,EAEM2C,CACT,CAEA,SAASoH,GACPC,EACAC,EACsB,CACtB,IAAM1G,EAAUyG,EAAM,QACtB,OAAW,CAAC1I,EAAK8D,CAAK,IAAK6B,GAAQgD,EAAO,OAAO,EAC/C1G,EAAQjC,CAAG,EAAI8D,EAEjB,OAAOuB,EAAAC,EAAA,GACFqD,GADE,CAEL,QAAA1G,CACF,EACF,CAEA,SAAS2G,GACPF,EACAC,EACwB,CACxB,IAAM1G,EAAUyG,EAAM,QACtB,OAAW,CAAC1I,EAAK8D,CAAK,IAAK6B,GAAQgD,EAAO,OAAO,EAC/C1G,EAAQjC,CAAG,EAAI8D,EAEjB,OAAOuB,EAAAC,EAAA,GACFqD,GADE,CAEL,QAAA1G,CACF,EACF,CAEA,SAAS4G,GACPH,EACAC,EACoB,CACpB,IAAM1G,EAAUyG,EAAM,QACtB,OAAOrD,EAAAC,EAAA,GACFqD,GADE,CAEL,QAAS1G,EAAQ,OAAO0G,EAAO,OAAO,CACxC,EACF,CAEO,SAASG,GACdJ,EACAC,EACe,CACf,OAAID,IAAU,OACLC,EAGLD,EAAM,OAAS,cAAgBC,EAAO,OAAS,aAC1CF,GAA0BC,EAAOC,CAAM,EACrCD,EAAM,OAAS,WAAaC,EAAO,OAAS,UAC9CC,GAAuBF,EAAOC,CAAM,EAClCD,EAAM,OAAS,YAAcC,EAAO,OAAS,WAC/CE,GAAwBH,EAAOC,CAAM,EAKvCA,CACT,CEzRO,SAASI,GAAaC,EAAgC,CAC3D,OACEA,IAAS,MACT,OAAOA,GAAS,UAChB,OAAOA,GAAS,UAChB,OAAOA,GAAS,SAEpB,CAEO,SAASC,GAAYD,EAA+B,CACzD,OAAO,MAAM,QAAQA,CAAI,CAC3B,CAEO,SAASE,GAAaF,EAAgC,CAC3D,MAAO,CAACD,GAAaC,CAAI,GAAK,CAACC,GAAYD,CAAI,CACjD,CC3BO,IAAKG,IAAAA,IAEVA,EAAAA,EAAA,gBAAkB,GAAA,EAAlB,kBACAA,EAAAA,EAAA,gBAAkB,GAAA,EAAlB,kBAGAA,EAAAA,EAAA,cAAgB,GAAA,EAAhB,gBACAA,EAAAA,EAAA,eAAiB,GAAA,EAAjB,iBAGAA,EAAAA,EAAA,WAAa,GAAA,EAAb,aACAA,EAAAA,EAAA,YAAc,GAAA,EAAd,cAXUA,IAAAA,IAAA,CAAA,CAAA,ECUL,SAASC,GAASC,EAAWC,EAAsB,CACxD,IAAIC,EAAU,GACRC,EAAWC,EAAA,GAAKJ,GAEtB,cAAO,KAAKC,CAAK,EAAE,QAASI,GAAM,CAChC,IAAMC,EAAMD,EACNE,EAAMN,EAAMK,CAAG,EACjBH,EAASG,CAAG,IAAMC,IAChBA,IAAQ,OACV,OAAOJ,EAASG,CAAG,EAEnBH,EAASG,CAAG,EAAIC,EAElBL,EAAU,GAEd,CAAC,EAEMA,EAAUC,EAAWH,CAC9B,CAOO,IAAeQ,GAAf,KAA+B,CAOpC,aAAc,CACZ,KAAK,IAAMC,GAAsB,CACnC,CAEA,IAAI,eAAkC,CACpC,OAAO,KAAK,IAAI,UAClB,CAKU,YAAmB,CACvB,KAAK,SAAW,SAClB,KAAK,OAAS,OACd,KAAK,IAAI,OAAO,EAEpB,CAEA,IAAI,SAAuB,OACzB,OAAOC,EAAA,KAAK,SAAL,KAAAA,EAAgB,KAAK,OAAS,KAAK,aAAa,CACzD,CACF,ECnDA,SAASC,GACPC,EACAC,EAC4B,CAC5B,GAAM,CAAE,aAAAC,EAAc,GAAAC,EAAI,KAAAC,CAAK,EAAIJ,EAC7BK,EAAWC,GAAgBN,EAAK,MAAM,EAC5C,OAAOO,GACLC,GAAc,CACZ,aAAAN,EACA,GAAAC,EACA,KAAAC,EACA,SAAAC,EACA,WAAYI,GAAWT,EAAK,MAAM,EAClC,WAAY,CAACK,EACb,SAAAJ,CACF,CAAC,CACH,CACF,CAEO,IAAMS,GAAN,cAGGd,EAAoD,CAoB5D,aAAc,CACZ,MAAM,EAGN,KAAK,aAAe,IAAI,IACxB,KAAK,WAAa,IAAI,IACtB,KAAK,OAAS,IAAI,GACpB,CAEO,eAA0C,CAC/C,OAAO,KAAK,aAAa,KAAK,CAChC,CAGA,cAAsD,CAOpD,OANce,GACZ,MAAM,KAAK,KAAK,WAAW,KAAK,CAAC,EAAE,IAAKT,GACtC,KAAK,QAAQ,OAAOA,CAAY,CAAC,CACnC,CACF,CAGF,CAEA,aAAoB,CAClB,KAAK,aAAe,IAAI,IACxB,KAAK,WAAa,IAAI,IACtB,KAAK,OAAS,IAAI,IAClB,KAAK,WAAW,CAClB,CAGA,SAASA,EAA8D,CACrE,IAAMF,EAAO,KAAK,aAAa,IAAIE,CAAY,EACzCD,EAAW,KAAK,WAAW,IAAIC,CAAY,EACjD,GAAIF,IAAS,QAAaC,IAAa,OACrC,OAAOF,GAASC,EAAMC,CAAQ,CAIlC,CAEA,QAAQC,EAA8D,CACpE,IAAMU,EAAa,KAAK,OAAO,IAAIV,CAAY,EAC/C,GAAIU,EACF,OAAOA,EAGT,IAAMC,EAAe,KAAK,SAASX,CAAY,EAC/C,GAAIW,EACF,YAAK,OAAO,IAAIX,EAAcW,CAAY,EACnCA,CAIX,CAGA,gBAAgBX,EAA4B,CACtC,KAAK,OAAO,IAAIA,CAAY,GAC9B,KAAK,OAAO,OAAOA,CAAY,EAEjC,KAAK,WAAW,CAClB,CAMA,cACEA,EACAY,EACAC,EACAC,EACM,CACN,KAAK,aAAa,IAChBd,EACAK,GAAO,CACL,aAAAL,EACA,GAAIY,EACJ,KAAMC,EACN,OAAAC,CACF,CAAC,CACH,EACI,KAAK,WAAW,IAAId,CAAY,GAClC,KAAK,gBAAgBA,CAAY,CAErC,CAMA,iBAAiBA,EAA4B,CAC3C,KAAK,aAAa,OAAOA,CAAY,EACrC,KAAK,WAAW,OAAOA,CAAY,EACnC,KAAK,gBAAgBA,CAAY,CACnC,CAMA,SAASA,EAAsBD,EAA2B,CACxD,KAAK,WAAW,IAAIC,EAAcK,GAAOC,GAAcP,CAAQ,CAAC,CAAC,EAC7D,KAAK,aAAa,IAAIC,CAAY,GACpC,KAAK,gBAAgBA,CAAY,CAErC,CAOA,WAAWA,EAAsBb,EAAiC,CAChE,IAAM4B,EAAc,KAAK,WAAW,IAAIf,CAAY,EACpD,GAAIe,IAAgB,OAClB,OAGF,IAAMC,EAAc/B,GAAM8B,EAAa5B,CAAK,EACxC4B,IAAgBC,IAClB,KAAK,WAAW,IAAIhB,EAAcK,GAAOW,CAAW,CAAC,EACrD,KAAK,gBAAgBhB,CAAY,EAErC,CACF,EC/KaiB,GAAN,cAAiDvB,EAAgB,CAItE,YAAYb,EAAS,CACnB,MAAM,EACN,KAAK,MAAQwB,GAAOC,GAAczB,CAAI,CAAC,CACzC,CAGA,cAA4B,CAC1B,OAAO,KAAK,KACd,CAKA,MAAMM,EAAyB,CAC7B,IAAM+B,EAAU,KAAK,MACfC,EAAUlC,GAAMiC,EAAS/B,CAAK,EAChC+B,IAAYC,IACd,KAAK,MAAQd,GAAOc,CAAO,EAC3B,KAAK,WAAW,EAEpB,CACF,EC/BaC,GAAN,cAA0B1B,EAAgB,CAI/C,YAAY2B,EAAiB,CAC3B,MAAM,EACN,KAAK,OAAShB,GAAOgB,CAAY,CACnC,CAGA,cAA4B,CAC1B,OAAO,KAAK,MACd,CAEA,IAAIhC,EAAmB,CACrB,KAAK,OAASgB,GAAOhB,CAAQ,EAC7B,KAAK,WAAW,CAClB,CACF,EAEaiC,GAAN,cAQG5B,EAAgB,CAKxB,eAAe6B,EAA6D,CAC1E,MAAM,EAEN,IAAMC,EAAcD,EAAK,IAAI,EACvBE,EAAYF,EAElB,KAAK,MAAQE,EACb,KAAK,MAAM,QAASC,GAAQ,CAE1BA,EAAI,cAAc,UAAU,IAAM,KAAK,WAAW,CAAC,CACrD,CAAC,EAED,KAAK,WAAaF,CACpB,CAGA,cAA4B,CAC1B,OAAO,KAAK,WACV,GAAI,KAAK,MAAM,IAAKE,GAAQA,EAAI,OAAO,CACzC,CACF,CACF,ECswBMC,GAA0B,KAAO,KAAO,KAE9C,SAASC,GAAc5B,EAAiC,CACtD,IAAI6B,EAAQ,EACZ,MAAO,IAAM,GAAG7B,CAAY,IAAI6B,GAAO,EACzC,CAgKA,SAASC,GACPtC,EACAuC,EACuB,CACvB,MAAO,CACL,KAAM,OACN,GAAI,GAAGA,EAAK,YAAY,GACxB,IAAAvC,EACA,QAASuC,CACX,CACF,CAWA,SAASC,IAGP,CACA,IAAMC,EAAM,OAAO,UAAa,YAAc,SAAW,OACnDC,EAAgD,CAAE,QAAS,IAAK,EAEtE,SAASC,GAAqB,QACxBF,GAAA,YAAAA,EAAK,mBAAoB,SAC3BC,EAAkB,SAAUtC,EAAAsC,EAAkB,UAAlB,KAAAtC,EAA6B,KAAK,IAAI,EAElEsC,EAAkB,QAAU,IAEhC,CAEA,OAAAD,GAAA,MAAAA,EAAK,iBAAiB,mBAAoBE,GAKnC,CAACD,EAJM,IAAM,CAClBD,GAAA,MAAAA,EAAK,oBAAoB,mBAAoBE,EAC/C,CAEgC,CAClC,CAEO,IAAMC,GAAN,cAA+B,KAAM,CAC1C,YACSC,EACAC,EACAC,EACP,CACA,MAAMF,CAAO,EAJN,KAAA,QAAAA,EACA,KAAA,OAAAC,EACA,KAAA,QAAAC,CAGT,CACF,EAKA,SAASC,GACPC,EACAC,EACAC,EAOa,CACb,eAAeC,EACbC,EACAC,EACAC,EACmB,CAEnB,IAAMC,EAAY,MAAMN,EAAa,EAErC,OAAOC,EAAeF,EAAQI,EAAUG,EAAWD,EAASD,CAAM,CACpE,CAEA,eAAeG,EACbJ,EACAE,EACAD,EACY,CACZ,IAAMI,EAAW,MAAMN,EAAiBC,EAAUC,EAAQC,CAAO,EAEjE,GAAI,CAACG,EAAS,IACRA,EAAS,QAAU,KAAOA,EAAS,OAAS,IAAK,CACnD,IAAIC,EAEJ,GAAI,CACF,IAAMC,EAAa,MAAMF,EAAS,KAAK,EAEvCC,EAAQ,IAAIf,GACVgB,EAAU,QACVF,EAAS,OACTE,CACF,CACF,OAAQC,EAAA,CACNF,EAAQ,IAAIf,GAAiBc,EAAS,WAAYA,EAAS,MAAM,CACnE,CAEA,MAAMC,CACR,CAGF,IAAIG,EAEJ,GAAI,CACFA,EAAQ,MAAMJ,EAAS,KAAK,CAC9B,OAAQG,EAAA,CACNC,EAAO,CAAC,CACV,CAEA,OAAOA,CACT,CAEA,eAAeC,EACbR,EACA,SACA,IAAMG,EAAW,MAAMN,EACrB,kBACA,CACE,OAAOhD,EAAAmD,GAAA,YAAAA,EAAS,QAAT,YAAAnD,EAAgB,aACzB,EACA,CACE,KAAM,KAAK,UAAUN,EAAA,KACfkE,EAAAT,GAAA,YAAAA,EAAS,QAAT,YAAAS,EAAgB,WAAY,CAAE,SAAUT,EAAQ,MAAM,QAAS,EACpE,EACD,QAAS,CACP,eAAgB,kBAClB,EACA,OAAQ,MACV,CACF,EAEA,GAAIG,EAAS,GAAI,CACf,IAAMO,EAAO,MAAOP,EAAS,KAAK,EAUlC,MAAO,CACL,QAASO,EAAK,KAAK,IAAKC,GAAWC,GAAoBD,CAAM,CAAC,EAC9D,mBAAoBD,EAAK,mBAAmB,IAAKG,GAC/CC,GAA+BD,CAAY,CAC7C,EACA,eAAgBH,EAAK,eAAe,IAAKvD,GACvC4D,GAA0B5D,CAAI,CAChC,EACA,0BAA2BuD,EAAK,0BAA0B,IAAKvD,GAC7D6D,GAAqC7D,CAAI,CAC3C,EACA,KAAM,CACJ,YAAa,IAAI,KAAKuD,EAAK,KAAK,WAAW,CAC7C,CACF,CACF,KAAA,IAAWP,EAAS,SAAW,IAC7B,MAAO,CACL,QAAS,CAAC,EACV,mBAAoB,CAAC,EACrB,eAAgB,CAAC,EACjB,0BAA2B,CAAC,EAC5B,KAAM,CACJ,YAAa,IAAI,IACnB,CACF,EAEA,MAAM,IAAI,MAAM,2CAA2C,EAE/D,CAEA,eAAec,EAAU,CAAE,SAAAC,CAAS,EAAyB,CAC3D,IAAMf,EAAW,MAAMN,EACrB,6BAA6BqB,CAAQ,EACvC,EAEA,GAAIf,EAAS,GAAI,CACf,IAAMO,EAAQ,MAAMP,EAAS,KAAK,EAKlC,MAAO,CACL,OAAQS,GAAoBF,EAAK,MAAM,EACvC,kBAAmBA,EAAK,kBACpBI,GAA+BJ,EAAK,iBAAiB,EACrD,MACN,CACF,KAAA,IAAWP,EAAS,SAAW,IAC7B,OAEA,MAAM,IAAI,MAAM,2CAA2Ce,CAAQ,GAAG,EAE1E,CAEA,eAAeC,EAA2D,CACxE,SAAAC,EACA,KAAAb,EACA,UAAAc,EACA,SAAAH,CACF,EAMG,CACD,IAAMP,EAAS,MAAMT,EACnB,WACA,CACE,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CACnB,GAAIgB,EACJ,QAAS,CACP,GAAIG,EACJ,KAAAd,CACF,EACA,SAAAa,CACF,CAAC,CACH,CACF,EAEA,OAAOR,GAAoBD,CAAM,CACnC,CAEA,eAAeW,EAEb,CACA,SAAAF,EACA,SAAAF,CACF,EAIG,CACD,OAAO,MAAMhB,EACX,YAAY,mBAAmBgB,CAAQ,CAAC,YACxC,CACE,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUE,CAAQ,CAC/B,CACF,CACF,CAEA,eAAeG,EAAc,CAC3B,SAAAL,EACA,UAAAG,EACA,KAAAd,CACF,EAIG,CACD,IAAMiB,EAAU,MAAMtB,EACpB,YAAY,mBAAmBgB,CAAQ,CAAC,YACxC,CACE,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CACnB,GAAIG,EACJ,KAAAd,CACF,CAAC,CACH,CACF,EAEA,OAAOkB,GAAqBD,CAAO,CACrC,CAEA,eAAeE,EAAY,CACzB,SAAAR,EACA,UAAAG,EACA,KAAAd,CACF,EAIG,CACD,IAAMiB,EAAU,MAAMtB,EACpB,YAAY,mBAAmBgB,CAAQ,CAAC,aAAa,mBACnDG,CACF,CAAC,GACD,CACE,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CACnB,KAAAd,CACF,CAAC,CACH,CACF,EAEA,OAAOkB,GAAqBD,CAAO,CACrC,CAEA,eAAeG,EAAc,CAC3B,SAAAT,EACA,UAAAG,CACF,EAIG,CACD,MAAMnB,EACJ,YAAY,mBAAmBgB,CAAQ,CAAC,aAAa,mBACnDG,CACF,CAAC,GACD,CACE,OAAQ,QACV,CACF,CACF,CAEA,eAAeO,EAAY,CACzB,SAAAV,EACA,UAAAG,EACA,MAAAQ,CACF,EAIG,CACD,IAAMC,EAAW,MAAM5B,EACrB,YAAY,mBAAmBgB,CAAQ,CAAC,aAAa,mBACnDG,CACF,CAAC,aACD,CACE,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CAAE,MAAAQ,CAAM,CAAC,CAChC,CACF,EAEA,OAAOE,GAA6BD,CAAQ,CAC9C,CAEA,eAAeE,EAAe,CAC5B,SAAAd,EACA,UAAAG,EACA,MAAAQ,CACF,EAIG,CACD,MAAM3B,EACJ,YAAY,mBAAmBgB,CAAQ,CAAC,aAAa,mBACnDG,CACF,CAAC,cAAc,mBAAmBQ,CAAK,CAAC,GACxC,CACE,OAAQ,QACV,CACF,CACF,CAEA,MAAO,CACL,WAAArB,EACA,UAAAS,EACA,aAAAE,EACA,mBAAAG,EACA,cAAAC,EACA,YAAAG,EACA,cAAAC,EACA,YAAAC,EACA,eAAAI,CACF,CACF,CAEA,IAAMC,GAA+C,GAM9C,SAASC,GAMdlC,EAIAmC,EACkD,QAClD,IAAMC,EACJ,OAAOpC,EAAQ,iBAAoB,WAC/BA,EAAQ,gBAAgBmC,EAAO,MAAM,EACrCnC,EAAQ,gBACRqC,EACJ,OAAOrC,EAAQ,gBAAmB,WAC9BA,EAAQ,eAAemC,EAAO,MAAM,EACpCnC,EAAQ,eAER,CAACb,EAAmBmD,CAAiB,EAAIrD,GAAwB,EAGjEsD,EAAYC,EAAAjG,EAAA,GACb4F,EAAO,WADM,CAWhB,WAAY,CACV,OACEA,EAAO,6BAA+B,QACtChD,EAAkB,UAAY,MAC9B,KAAK,IAAI,EACPA,EAAkB,QAAUgD,EAAO,4BACrCM,GAAiB,IAAM,eAE3B,CACF,GAEMC,EAA0C,IAAIC,GAClDJ,EACAJ,EAAO,kBACT,EAGMS,EAAiE,CACrE,OAAQ,CACN,aAAc,OACd,cAAe,EACf,gBAEE,CACE,KAAM,OACN,KAAMR,CACR,EACF,SAAU,CAAC,EACX,kBAAmB,CAAC,CACtB,EAEA,kBAAmB,IAAI/D,GAAS,IAAI,EACpC,mBAAoB,IAAIA,GAAS,IAAI,EACrC,WAAY,IAAIH,GAAakE,CAAe,EAC5C,OAAQ,IAAI3E,GAEZ,eAAA4E,EACA,UAAW,KAGX,MAAO,EACP,QAAS,EACT,MAAO,IAAI,IACX,KAAM,OAEN,UAAW,CAAC,EACZ,UAAW,CAAC,EACZ,cAAe,KAEf,YAAa,KACb,kBAAmB,IAAI,IAGvB,cAGM,MACR,EAEMQ,EAAqBC,GAAyBA,EAAG,EACjDC,GAAelG,GAAAsF,EAAO,0BAAP,KAAAtF,GAAkCgG,EAEnDG,EACJ,SAASC,EAAkBC,EAAmB,CAC5C,IAAMjD,EAAYyC,EAAc,UAChC,GAAIzC,IAAc,KAAM,CACtB,IAAMkD,EAAWC,GAAiCnD,CAAS,EAE3D,GAAIkD,IAAaH,EAGf,GAFAA,EAAeG,EAEXlD,EAAU,OAAS,SAAU,CAC/B,IAAMoD,EAAQpD,EAAU,MAAM,OAC9B2C,EAAQ,kBAAkB,IAAI,CAC5B,OAAQS,EAAM,IAAA,aAAgCA,EAAM,GAAKA,EAAM,IAC/D,SACEA,EAAM,IAAA,aAAgCA,EAAM,KAAOA,EAAM,EAC7D,CAAC,CACH,MACET,EAAQ,kBAAkB,IAAI,CAC5B,OAAQ,OACR,SAAU,MACZ,CAAC,CAGP,CAGAG,EAAa,IAAM,CACjBO,EAAS,OAAO,OAAOJ,CAAS,EAChCK,EAAkBV,CAAiB,CACrC,CAAC,CACH,CAEA,IAAIW,EACAC,EAAqB,GAEzB,SAASC,EAA0BR,EAAmB,CAChDA,IAAc,eAChBM,EAAyB,WAAW,IAAM,CACxCT,EAAa,IAAM,CACjBO,EAAS,eAAe,OAAO,MAAM,EACrCG,EAAqB,GAGrBb,EAAQ,OAAO,YAAY,EAC3Be,EAAO,CAAE,OAAQ,CAAC,CAAE,KAAM,OAAQ,CAAC,CAAE,EAAGd,CAAiB,CAC3D,CAAC,CACH,EAAGV,EAAO,qBAAqB,GAE/B,aAAaqB,CAAsB,EAE/BC,IAEAV,EADEG,IAAc,eACH,IAAM,CACjBI,EAAS,eAAe,OAAO,QAAQ,CACzC,EAIa,IAAM,CACjBA,EAAS,eAAe,OAAO,UAAU,CAC3C,CANC,EASHG,EAAqB,IAG3B,CAEA,SAASG,GAAe,CAEtBhB,EAAQ,OAAO,gBAAkB,CAC/B,KAAM,OACN,KAIErG,EAAA,GAAKqG,EAAQ,WAAW,QAC5B,EASIiB,IAAiB,MACnBC,GAAe,CAAE,MAAO,EAAM,CAAC,EAEjCC,GAAe,CACjB,CAEA,SAASC,GAAkB,CACzB,aAAapB,EAAQ,OAAO,YAAY,CAC1C,CAKAF,EAAc,OAAO,UAAU,UAAUuB,EAAmB,EAC5DvB,EAAc,OAAO,gBAAgB,UAAUO,CAAiB,EAChEP,EAAc,OAAO,gBAAgB,UAAUgB,CAAyB,EACxEhB,EAAc,OAAO,WAAW,UAAUkB,CAAY,EACtDlB,EAAc,OAAO,cAAc,UAAUsB,CAAe,EAC5DtB,EAAc,OAAO,kBAAkB,UAAWwB,GAAQ,CACxDnB,EAAa,IAAM,CAMjBO,EAAS,MAAM,OAAOY,CAAG,CAC3B,CAAC,CACH,CAAC,EAED,IAAMC,EAAoB,CACxB,OAAQhC,EAAO,OAEf,QAAUjF,GAAe0F,EAAQ,MAAM,IAAI1F,CAAE,EAC7C,QAAS,CAACA,EAAYkH,IAAmB,KAAKxB,EAAQ,MAAM,IAAI1F,EAAIkH,CAAI,EACxE,WAAalH,GAAe,KAAK0F,EAAQ,MAAM,OAAO1F,CAAE,EAExD,WAAY,IAAM,GAAGmH,EAAgB,CAAC,IAAIzB,EAAQ,OAAO,GACzD,aAAc,IAAM,GAAGyB,EAAgB,CAAC,IAAIzB,EAAQ,SAAS,GAE7D,SACE0B,EACAC,EACAC,EACA,CACA,IAAMC,EAAc7B,EAAQ,YAa5B,GAAI6B,EAAa,CACfA,EAAY,IAAI,KAAK,GAAGH,CAAG,EAC3B,OAAW,CAAC7H,GAAKiI,CAAK,IAAKF,EACzBC,EAAY,QAAQ,eAAe,IACjChI,GACAkI,GACEF,EAAY,QAAQ,eAAe,IAAIhI,EAAG,EAC1CiI,CACF,CACF,EAEFD,EAAY,WAAW,QAAQ,GAAGF,CAAO,CAC3C,MACExB,EAAa,IAAM,CACjB6B,EAAeL,EAAS1B,CAAiB,EACzCD,EAAQ,UAAU,OAAS,EAC3BiC,GAAYP,CAAG,EACfX,EAAO,CAAE,eAAAa,CAAe,EAAG3B,CAAiB,CAC9C,CAAC,CAEL,EAEA,wBAAyB,IAAM,OAC7B,IAAM9E,GAASlB,EAAA+F,EAAQ,mBAAmB,UAA3B,YAAA/F,EAAoC,OACnD,GAAIkB,IAAW,OAEb,OAIF,GAAI,CADaV,GAAgBU,CAAM,EAErC,MAAM,IAAI,MACR,6FACF,CAEJ,CACF,EAEMuF,EAAW,CACf,WAAY1G,GAAwC,EACpD,OAAQA,GAAwB,EAChC,eAAgBA,GAAqC,EAErD,YACEA,GAAoE,EACtE,KAAMA,GAA4C,EAClD,WAAYA,GAA2B,EACvC,OAAQA,GAAmD,EAC3D,MAAOA,GAAiC,EACxC,QAASA,GAAiC,EAC1C,QAASA,GAA8B,EACvC,eAAgBA,GAAsB,EACtC,cAAeA,GAA+B,EAC9C,KAAMA,GAA2D,EAEjE,SAAUA,GAAwC,CACpD,EAEA,eAAegD,EACbF,EACAI,EACAG,EACAD,EACAD,GACA,QACA,IAAM+E,EAAMC,GACV5C,EAAO,QACP,eAAe,mBAAmBzC,CAAM,CAAC,GAAGI,CAAQ,GACpDC,EACF,EAEA,OAAO,QADSlD,GAAAsF,EAAO,YAAP,YAAAtF,GAAkB,QAAoC,OACjDiI,EAAKtC,EAAAjG,EAAA,GACrByD,GADqB,CAExB,QAASwC,EAAAjG,EAAA,GACJyD,GAAAA,YAAAA,EAAS,SADL,CAEP,cAAe,UAAUoD,GAAiCnD,CAAS,CAAC,EACtE,EACF,EAAC,CACH,CAEA,eAAe+E,EAAY/E,EAAsBP,EAAgB,CAC/D,OAAOE,EAAeF,EAAQ,WAAYO,EAAW,CACnD,OAAQ,MACR,QAAS,CACP,eAAgB,kBAClB,CACF,CAAC,CACH,CAEA,eAAegF,EAAenF,EAA2BS,EAAkB,CACzE,GAAI,CAACmC,EAAc,UACjB,MAAM,IAAI,MAAM,gBAAgB,EAGlC,OAAO9C,EAAeuC,EAAO,OAAQrC,EAAU4C,EAAc,UAAW,CACtE,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUnC,CAAI,CAC3B,CAAC,CACH,CAEA,SAAS2E,EAAaC,EAA8C,OAClE,IAAMC,EAAoB,KAAK,UAAUD,CAAQ,EAC3CE,GAAQxI,EAAA+F,EAAQ,mBAAmB,UAA3B,YAAA/F,EAAoC,MAClD,GAAIsF,EAAO,yBAA2BkD,GAGvB,IAAI,YAAY,EAAE,OAAOD,CAAiB,EAAE,OAC9CxG,GAAyB,CAC7BqG,EAAe,gBAAiB,CAAE,MAAAI,EAAO,SAAAF,CAAS,CAAC,EAAE,KACvDG,GAAS,CACJ,CAACA,EAAK,IAAMA,EAAK,SAAW,KAC9B5C,EAAc,UAAU,CAE5B,CACF,EACQ6C,GACN,iEACF,EACA,MACF,CAEF7C,EAAc,KAAK0C,CAAiB,CACtC,CAEA,IAAMI,EAAO,IAAIjH,GACfqE,EAAQ,kBACRA,EAAQ,mBACRA,EAAQ,WACR,CACE6C,EACAC,EACAC,IACsC,CACtC,GAAIF,IAAkB,MAAQC,IAAmB,KAC/C,OAAO,KACF,CACL,IAAMtI,EAAWC,GAAgBqI,EAAe,MAAM,EACtD,MAAO,CACL,aAAcA,EAAe,MAC7B,GAAID,EAAc,OAClB,KAAMA,EAAc,SACpB,SAAUE,EACV,SAAAvI,EACA,WAAYI,GAAWkI,EAAe,MAAM,EAC5C,WAAY,CAACtI,CACf,CACF,CACF,CACF,EAEIwI,EACJ,SAASrC,EAAkBsC,EAAiD,CAC1E,IAAMC,EAAWN,EAAK,QAClBM,IAAa,MAAQA,IAAaF,IACpCC,EAAsB,IAAM,CAC1BvC,EAAS,KAAK,OAAOwC,CAAQ,CAC/B,CAAC,EACDF,EAAYE,EAEhB,CAGA,IAAMC,GAAiB,IAAIxH,GACzBiH,EACCQ,GAAQA,IAAO,KAAOjH,GAAe,KAAMiH,CAAE,EAAI,IACpD,EAEA,SAASC,GACP3G,EACAuG,EACA,CACA,GAAIvG,EAAQ,MAAM,SAAW,EAC3B,MAAM,IAAI,MAAM,mDAAmD,EAGjEsD,EAAQ,OAAS,OACnBsD,GAAW5G,EAAQ,MAAOuG,CAAqB,EAE/CjD,EAAQ,KAAOuD,GAAW,WAAqB7G,EAAQ,MAAO6E,CAAI,EAIpE,IAAMiC,EAAkBxD,EAAQ,UAAU,OAC1C,QAAWnG,KAAOmG,EAAQ,eACpBA,EAAQ,KAAK,IAAInG,CAAG,IAAM,QAC5BmG,EAAQ,KAAK,IAAInG,EAAK4J,GAAUzD,EAAQ,eAAenG,CAAG,CAAC,CAAC,EAMhEmG,EAAQ,UAAU,OAASwD,CAC7B,CAEA,SAASF,GACPI,EACAT,EACA,CACA,GAAIjD,EAAQ,OAAS,OACnB,OAGF,IAAM2D,EAAwB,IAAI,IAClC,OAAW,CAACrJ,EAAIkH,EAAI,IAAKxB,EAAQ,MAC/B2D,EAAa,IAAIrJ,EAAIkH,GAAK,WAAW,CAAC,EAIxC,IAAME,EAAMkC,GAAuBD,EAAc,IAAI,IAAID,CAAK,CAAC,EAEzDG,GAASC,EAASpC,EAAK,EAAK,EAElCX,EAAO8C,GAAO,QAASZ,CAAqB,CAC9C,CAEA,SAASc,EACPC,EACAf,EACA,CAEIjD,EAAQ,UAAU,QAAU,IAC9BA,EAAQ,UAAU,MAAM,EAG1BA,EAAQ,UAAU,KAAKgE,CAAU,EACjCC,GAAgBhB,CAAqB,CACvC,CAEA,SAASjB,EACPgC,EACAf,EACA,CACIjD,EAAQ,gBAAkB,KAC5BA,EAAQ,cAAc,QAAQ,GAAGgE,CAAU,EAE3CD,EAAoBC,EAAYf,CAAqB,CAEzD,CAQA,SAASlC,EACPmD,EACAjB,EACA,CACA,IAAMrB,EAAiBsC,EAAQ,eACzBC,EAAgBD,EAAQ,OAE9BjB,EAAsB,IAAM,QAC1B,GAAIkB,IAAkB,QAAaA,EAAc,OAAS,EAAG,CAC3D,IAAMC,EAASpE,EAAQ,OAAO,QAC9B,QAAWqE,MAASF,EAClBzD,EAAS,OAAO,OAAOd,EAAAjG,EAAA,GAAK0K,IAAL,CAAY,OAAAD,CAAO,EAAC,CAE/C,CAOA,IALInK,GAAAiK,EAAQ,WAAR,MAAAjK,KACF0G,EAAkBV,CAAiB,EACnCS,EAAS,WAAW,OAAOV,EAAQ,WAAW,OAAO,GAGnD4B,IAAmB,QAAaA,EAAe,KAAO,EAAG,CAC3D,IAAMsC,EAAU,MAAM,KAAKtC,EAAe,OAAO,CAAC,EAClDlB,EAAS,QAAQ,OAAOwD,CAAO,CACjC,CACAI,EAAoB,CACtB,CAAC,CACH,CAEA,SAAS7C,GAAkB,CACzB,IAAMlH,EAAOyF,EAAQ,mBAAmB,QACxC,GAAIzF,EACF,OAAOA,EAAK,MAGd,MAAM,IAAI,MACR,oEACF,CACF,CAEA,SAASuJ,EACPS,EACAC,EASA,CACA,IAAMC,EAAS,CACb,QAAS,CAAC,EACV,eAAgB,IAAI,IACpB,SAAU,EACZ,EAEMC,EAAiB,IAAI,IAIrBhD,GAAM6C,EAAO,IAAKI,GAClBA,EAAG,OAAS,YAAc,CAACA,EAAG,KACzB/E,EAAAjG,EAAA,GAAKgL,GAAL,CAAS,KAAMpD,EAAK,aAAa,CAAE,GAEnCoD,CAEV,EAED,QAAWA,KAAMjD,GACf,GAAIiD,EAAG,OAAS,WAAY,CAC1B,IAAMhD,GAAU,CACd,KAAM,WACN,KAAM,CAAC,CACT,EAEA,QAAW9H,MAAO8K,EAAG,KACnBhD,GAAQ,KAAK9H,EAAG,EAAImG,EAAQ,WAAW,QAAQnG,EAAG,EAKpD,GAFAmG,EAAQ,WAAW,MAAM2E,EAAG,IAAI,EAE5B3E,EAAQ,OAAO,kBAAoB,KACrCA,EAAQ,OAAO,gBAAkB,CAAE,KAAM,UAAW,KAAM2E,EAAG,IAAK,MAIlE,SAAW9K,MAAO8K,EAAG,KACnB3E,EAAQ,OAAO,gBAAgB,KAAKnG,EAAG,EAAI8K,EAAG,KAAK9K,EAAG,EAI1D4K,EAAO,QAAQ,QAAQ9C,EAAY,EACnC8C,EAAO,SAAW,EACpB,KAAO,CACL,IAAIG,GAEJ,GAAIJ,EACFI,GAAA,MACK,CACL,IAAMC,GAAOC,GAAGH,EAAG,IAAI,EAMvBC,GADgB5E,EAAQ,kBAAkB,OAAO6E,EAAI,EAC5C,EAAA,CACX,CAEA,IAAME,GAAgBC,GAAQL,EAAIC,EAAM,EACxC,GAAIG,GAAc,SAAU,CAC1B,IAAME,GAASF,GAAc,SAAS,KAAK,IAIrCE,IAAUP,EAAe,IAAIO,EAAM,IACvCR,EAAO,eAAe,IACpBK,GAAGC,GAAc,SAAS,KAAK,GAAG,EAClChD,GACE0C,EAAO,eAAe,IAAIK,GAAGC,GAAc,SAAS,KAAK,GAAG,CAAC,EAC7DA,GAAc,QAChB,CACF,EACAN,EAAO,QAAQ,QAAQ,GAAIM,GAAc,OAAe,IAIxDJ,EAAG,OAAA,GACHA,EAAG,OAAA,GACHA,EAAG,OAAA,IAEHD,EAAe,IAAII,GAAGH,EAAG,EAAE,CAAC,CAEhC,CACF,CAGF,MAAO,CACL,IAAAjD,GACA,QAAS+C,EAAO,QAChB,QAAS,CACP,eAAgBA,EAAO,eACvB,SAAUA,EAAO,QACnB,CACF,CACF,CAEA,SAASO,GAAQL,EAAQC,EAA+B,CAGtD,GAAIM,GAAQP,CAAE,EACZ,MAAO,CAAE,SAAU,EAAM,EAG3B,OAAQA,EAAG,KAAM,CACf,IAAA,GACA,IAAA,GACA,IAAA,GAAyB,CACvB,IAAMnD,EAAOxB,EAAQ,MAAM,IAAI2E,EAAG,EAAE,EACpC,OAAInD,IAAS,OACJ,CAAE,SAAU,EAAM,EAGpBA,EAAK,OAAOmD,EAAIC,IAAA,CAAsC,CAC/D,CAEA,IAAA,GAA4B,CAC1B,IAAMpD,EAAOxB,EAAQ,MAAM,IAAI2E,EAAG,EAAE,EACpC,OAAInD,IAAS,OACJ,CAAE,SAAU,EAAM,EAGvBA,EAAK,OAAO,OAAS,aAAe2D,GAAW3D,EAAK,OAAO,IAAI,EAC1DA,EAAK,OAAO,KAAK,aACtB4D,GAAMT,EAAG,SAAS,EAClBnD,EACAoD,CACF,EAEK,CAAE,SAAU,EAAM,CAC3B,CACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GAA6B,CAC3B,GAAID,EAAG,WAAa,OAClB,MAAO,CAAE,SAAU,EAAM,EAG3B,IAAMU,EAAarF,EAAQ,MAAM,IAAI2E,EAAG,QAAQ,EAChD,OAAIU,IAAe,OACV,CAAE,SAAU,EAAM,EAGpBA,EAAW,aAAaV,EAAIC,CAAM,CAC3C,CACF,CACF,CAEA,SAASU,GACP9L,EACA4D,EACA,CACA,IAAMmI,EAAY,CAAC,EAEfvF,EAAQ,OAAO,kBAAoB,OAErCA,EAAQ,OAAO,gBAAkB,CAC/B,KAAM,UACN,KAAM,CAAC,CACT,GAOF,QAAWnG,KAAOL,EAAO,CAEvB,IAAMgM,GAA0ChM,EAAMK,CAAG,EACrD2L,KAAkB,SAGtBxF,EAAQ,OAAO,gBAAgB,KAAKnG,CAAG,EAAI2L,GAC3CD,EAAU1L,CAAG,EAAImG,EAAQ,WAAW,QAAQnG,CAAG,EACjD,CAEAmG,EAAQ,WAAW,MAAMxG,CAAK,EAE1BwG,EAAQ,aACN5C,GAAAA,MAAAA,EAAS,cACX4C,EAAQ,YAAY,WAAW,QAAQ,CACrC,KAAM,WACN,KAAMuF,CACR,CAAC,EAEHvF,EAAQ,YAAY,QAAQ,SAAW,KAEvCmB,GAAe,EACfhB,EAAa,IAAM,CACb/C,GAAAA,MAAAA,EAAS,cACX4E,EACE,CAAC,CAAE,KAAM,WAAY,KAAMuD,CAAU,CAAC,EACtCtF,CACF,EAEFc,EAAO,CAAE,SAAU,EAAK,EAAGd,CAAiB,CAC9C,CAAC,EAEL,CAEA,SAASwF,GACP/I,EACuD,CACvD,GAAIA,EAAQ,cAAgB,OAAW,CAKrC,IAAMgJ,EAAU1F,EAAQ,OAAO,QAAQtD,EAAQ,KAAK,EACpDsD,EAAQ,OAAO,SAAStD,EAAQ,MAAOA,EAAQ,IAAI,EAEnD,IAAMiJ,EAAU3F,EAAQ,OAAO,QAAQtD,EAAQ,KAAK,EACpD,GAAIgJ,IAAY,QAAaC,IAAY,OAGvC,MAAO,CAAE,KAAM,QAAS,KAAMA,CAAQ,CAE1C,MAEE3F,EAAQ,OAAO,WAAWtD,EAAQ,MAAOA,EAAQ,IAAI,EAGvD,IAAMN,EAAO4D,EAAQ,OAAO,QAAQtD,EAAQ,KAAK,EACjD,GAAIN,EACF,MAAO,CACL,KAAM,SACN,QAASM,EAAQ,KACjB,KAAAN,CACF,CAIJ,CAEA,SAASwJ,GACPlJ,EACkD,CAClD,IAAMN,EAAO4D,EAAQ,OAAO,QAAQtD,EAAQ,KAAK,EACjD,OAAIN,GACF4D,EAAQ,OAAO,iBAAiBtD,EAAQ,KAAK,EACtC,CAAE,KAAM,QAAS,KAAAN,CAAK,GAExB,IACT,CAEA,SAASyJ,GACPnJ,EACAuG,EAC2C,CAE3CjD,EAAQ,mBAAmB,IAAI,CAC7B,MAAOtD,EAAQ,MACf,MAAOA,EAAQ,MACf,OAAQA,EAAQ,MAClB,CAAC,EACDsD,EAAQ,UAAY/D,GAAcS,EAAQ,KAAK,EAC/CiE,EAAkBsC,CAAqB,EAEvC,QAAW5I,KAAgB2F,EAAQ,OAAO,cAAc,EACzCtD,EAAQ,MAAMrC,CAAY,IAC1B,QACX2F,EAAQ,OAAO,iBAAiB3F,CAAY,EAIhD,QAAWR,KAAO6C,EAAQ,MAAO,CAC/B,IAAMN,EAAOM,EAAQ,MAAM7C,CAAG,EACxBQ,GAAe,OAAOR,CAAG,EAC/BmG,EAAQ,OAAO,cACb3F,GACA+B,EAAK,GACLA,EAAK,KACLA,EAAK,MACP,CACF,CAOA,MAAO,CAAE,KAAM,OAAQ,CACzB,CAEA,SAAS0J,IAAU,CAAE,OAAO9F,EAAQ,UAAU,OAAS,CAAG,CAC1D,SAAS+F,IAAU,CAAE,OAAO/F,EAAQ,UAAU,OAAS,CAAG,CAC1D,SAASiE,GAAgBhB,EAAiD,CACxEA,EAAsB,IAAM,CAC1BvC,EAAS,QAAQ,OAAO,CAAE,QAASoF,GAAQ,EAAG,QAASC,GAAQ,CAAE,CAAC,CACpE,CAAC,CACH,CAEA,SAASC,GACPtJ,EACuD,CACvDsD,EAAQ,OAAO,cACbtD,EAAQ,MACRA,EAAQ,GACRA,EAAQ,KACRA,EAAQ,MACV,EAGAsD,EAAQ,OAAO,SAAS,KAAK,CAC3B,KAAA,IACA,KAAMA,EAAQ,WAAW,QACzB,YAAatD,EAAQ,KACvB,CAAC,EACDyE,GAAe,EAIf,IAAM/E,EAAO4D,EAAQ,OAAO,QAAQtD,EAAQ,KAAK,EACjD,OAAON,EAAO,CAAE,KAAM,QAAS,KAAAA,CAAK,EAAI,MAC1C,CAEA,SAAS6J,GACP/M,EACoD,CACpD,OAAKE,GAAaF,CAAI,EAIfA,EAHE,IAKX,CAEA,SAASgN,GACPC,EACsD,CACtD,IAAMjN,EAAyBkN,GAAaD,CAAI,EAChD,OAAIjN,IAAS,OACJ,KACEC,GAAYD,CAAI,EAClB4B,GAAQ5B,EAAK,IAAKmN,GAASJ,GAAmBI,CAAI,CAAC,CAAC,EAEpDvL,GAAQ,CAACmL,GAAmB/M,CAAI,CAAC,CAAC,CAE7C,CAEA,SAASoN,GACPC,EACAtD,EACA,CACA,GAAIsD,EAAW,OAAS,EACtB,OAGF,IAAMhE,EAA+C,CAAC,EAEhDb,EAAM,MAAM,KAAK6E,EAAW,OAAO,CAAC,EAEpC1C,GAASC,EAASpC,EAAK,EAAI,EAEjCa,EAAS,KAAK,CACZ,KAAA,IACA,IAAKsB,GAAO,GACd,CAAC,EAED9C,EAAO8C,GAAO,QAASZ,CAAqB,EAE5CX,EAAaC,CAAQ,CACvB,CAMA,SAASlB,GAAoBgD,EAA+B,CAC1D,GAAI,OAAOA,EAAM,MAAS,SAExB,OAGF,IAAM9B,EAAW2D,GAAoB7B,EAAM,IAAI,EAC/C,GAAI9B,IAAa,MAAQA,EAAS,SAAW,EAE3C,OAGF,IAAM2B,EAAU,CACd,eAAgB,IAAI,IACpB,OAAQ,CAAC,CACX,EAEA/D,EAAa,IAAM,OACjB,QAAWzD,KAAW6F,EACpB,OAAQ7F,EAAQ,KAAM,CACpB,IAAA,KAAgC,CAC9B,IAAM8J,GAAmBR,GAAoBtJ,CAAO,EAChD8J,IACFtC,EAAQ,OAAO,KAAKsC,EAAgB,EAEtC,KACF,CAEA,IAAA,KAAoC,CAClC,IAAMC,GAAuBhB,GAAwB/I,CAAO,EACxD+J,IACFvC,EAAQ,OAAO,KAAKuC,EAAoB,EAE1C,KACF,CAEA,IAAA,KAAsC,CACpC,IAAMrC,GAASpE,EAAQ,OAAO,QAC9BU,EAAS,YAAY,OAAO,CAC1B,aAAchE,EAAQ,MACtB,KACEA,EAAQ,MAAQ,EACZ,MACAzC,EAAAmK,GAAO,KAAMsC,IAAMA,GAAE,eAAiBhK,EAAQ,KAAK,IAAnD,KAAAzC,EACA,KACN,MAAOyC,EAAQ,KACjB,CAAC,EACD,KACF,CAEA,IAAA,KAA8B,CAC5B,IAAM2H,GAAQuB,GAAkBlJ,CAAO,EACnC2H,IACFH,EAAQ,OAAO,KAAKG,EAAK,EAE3B,KACF,CAEA,IAAA,KAAgC,CAC9B3D,EAAS,KAAK,OAAOhE,CAAO,EAC5B,KACF,CAEA,IAAA,KAA+B,CAC7BwH,EAAQ,OAAO,KAAK2B,GAAmBnJ,EAASuD,CAAiB,CAAC,EAClE,KACF,CAEA,IAAA,KAA0C,CAGxC0G,GAAsBjK,CAAO,EAC7B,KACF,CAEA,IAAA,KAAmC,CACjC,IAAMkK,GAAc9C,EAASpH,EAAQ,IAAK,EAAK,EAC/C,OAAW,CAAC7C,GAAKiI,EAAK,IAAK8E,GAAY,QAAQ,eAC7C1C,EAAQ,eAAe,IACrBrK,GACAkI,GAAoBmC,EAAQ,eAAe,IAAIrK,EAAG,EAAGiI,EAAK,CAC5D,EAEF,KACF,CAOA,IAAA,KAAsC,CAC5B+E,GACN,mCACAnK,EAAQ,MACV,EAuBA,KACF,CAEA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KAAoC,CAClCgE,EAAS,SAAS,OAAOhE,CAAO,EAChC,KACF,CACF,CAGFqE,EAAOmD,EAASjE,CAAiB,CACnC,CAAC,CACH,CAEA,SAASkB,IAAiB,CACxB,IAAM2F,EAAa9G,EAAQ,OAAO,kBAClC,GAAI8G,EAAW,OAAS,EAAG,CACzB,QAAWnC,KAAMmC,EACf9G,EAAQ,kBAAkB,IAAI8E,GAAGH,EAAG,IAAI,EAAGA,CAAE,EAE/CL,EAAoB,CACtB,CAEA,GAAIxE,EAAc,UAAU,IAAM,YAAa,CAC7CE,EAAQ,OAAO,kBAAoB,CAAC,EACpC,MACF,CAEA,IAAM+G,EAAM,KAAK,IAAI,EACfC,EAAgBD,EAAM/G,EAAQ,OAAO,cAE3C,GAAIgH,GAAiBzH,EAAO,cAAe,CAEzC,IAAM0H,EAAkBC,GAAgB,EACxC,GAAID,EAAgB,SAAW,EAC7B,OAGF3E,EAAa2E,CAAe,EAC5BjH,EAAQ,OAAS,CACf,aAAc,OACd,cAAe+G,EACf,SAAU,CAAC,EACX,kBAAmB,CAAC,EACpB,gBAAiB,IACnB,CACF,MAEE,aAAa/G,EAAQ,OAAO,YAAY,EACxCA,EAAQ,OAAO,aAAe,WAC5BmB,GACA5B,EAAO,cAAgByH,CACzB,CAEJ,CAMA,SAASE,IAAkB,CACzB,IAAM3E,EAA+C,CAAC,EAClDvC,EAAQ,OAAO,iBACjBuC,EAAS,KACPvC,EAAQ,OAAO,gBAAgB,OAAS,OACpC,CACE,KAAA,IAIA,YAAa,GACb,KAAMA,EAAQ,OAAO,gBAAgB,IACvC,EACA,CACE,KAAA,IACA,KAAMA,EAAQ,OAAO,gBAAgB,IACvC,CACN,EAEF,QAAWqE,KAASrE,EAAQ,OAAO,SACjCuC,EAAS,KAAK8B,CAAK,EAErB,OAAIrE,EAAQ,OAAO,kBAAkB,OAAS,GAC5CuC,EAAS,KAAK,CACZ,KAAA,IACA,IAAKvC,EAAQ,OAAO,iBACtB,CAAC,EAEIuC,CACT,CAEA,SAAS4E,GAAWC,EAAgBC,EAAe,CACjD,IAAMC,EAAiC,CACrC,KAAA,IACA,OAAAF,EACA,KAAAC,CACF,EACArH,EAAQ,OAAO,SAAS,KAAKsH,CAAS,EACtC5G,EAAS,KAAK,OAAO4G,CAAS,EAC9BnG,GAAe,CACjB,CAEA,SAASoG,GACPlD,EACAjH,EAA4B,CAC1B,2BAA4B,EAC9B,EACA,CAEE0C,EAAc,UAAU,IAAM,aAC9B,CAAC1C,EAAQ,6BAKX4C,EAAQ,OAAO,SAAS,KAAK,CAC3B,KAAA,IACA,MAAAqE,CACF,CAAC,EACDlD,GAAe,EACjB,CAEA,SAASc,GAAYP,EAAW,CAC9B1B,EAAQ,OAAO,kBAAkB,KAAK,GAAG0B,CAAG,EAC5CP,GAAe,CACjB,CAEA,IAAIF,EAAqC,KACrCuG,GAA8C,KAElD,SAASb,GAAsBjK,EAAwC,CACrE,IAAM+K,EAAoB,IAAI,IAAIzH,EAAQ,iBAAiB,EAC3DqD,GAA8B3G,EAASuD,CAAiB,EACxDqG,GAAgBmB,EAAmBxH,CAAiB,EACpDuH,IAAA,MAAAA,KACAlD,EAAoB,EACpB5D,EAAS,eAAe,OAAO,CACjC,CAEA,eAAegH,IAAgB,CAC7B,GAAI,CAAC5H,EAAc,UACjB,OAIF,IAAM4D,EAAS,MADA,MAAMtB,EAAYtC,EAAc,UAAWP,EAAO,MAAM,GAC3C,KAAK,EACjCoH,GAAsB,CAAE,KAAA,IAA2C,MAAAjD,CAAM,CAAC,CAC5E,CAEA,SAASxC,GAAe9D,EAA6B,CACnD,IAAMmF,EAAWvC,EAAQ,OAAO,SAC5BT,EAAO,oBAEJmI,GAAc,EAElBnF,EAAS,KAAMoF,GAAQA,EAAI,OAAA,GAAoC,GAIhEpF,EAAS,KAAK,CAAE,KAAA,GAAkC,CAAC,EAGjDnF,EAAQ,OACV+D,GAAe,CAEnB,CAEA,SAASyG,IAAqC,CAC5C,OAAI3G,IAAiB,OACnBC,GAAe,CAAE,MAAO,EAAK,CAAC,EAC9BD,EAAe,IAAI,QAAS4G,GAAY,CACtCL,GAAyBK,CAC3B,CAAC,EACDvD,EAAoB,GAEfrD,CACT,CAUA,SAAS6G,IAAkD,CACzD,IAAMC,EAAO/H,EAAQ,KACrB,OAAI+H,IAAS,OAEJA,GAGFH,GAAoB,EAClB,KAEX,CAEA,eAAeI,IAEZ,CACD,OAAIhI,EAAQ,OAAS,OAEZ,QAAQ,QAAQ,CACrB,KAAMA,EAAQ,IAChB,CAAC,GAGH,MAAM4H,GAAoB,EACnB,CACL,KAAM9C,GAAG9E,EAAQ,IAAI,CACvB,EACF,CAEA,SAASiI,EAAUC,EAAgBb,EAAqB,CAKnDrH,EAAQ,OAAO,SAAS,KAAMmI,GAE3BA,EAAE,OAAA,KACFA,EAAE,SAAWD,GACbC,EAAE,OAASd,CAEd,GAEDrH,EAAQ,OAAO,SAAS,KAAK,CAC3B,KAAA,IACA,OAAAkI,EACA,KAAAb,CACF,CAAC,EAGHlG,GAAe,CACjB,CAEA,SAASiH,GAAO,CACd,GAAIpI,EAAQ,YACV,MAAM,IAAI,MAAM,oCAAoC,EAEtD,IAAMgE,EAAahE,EAAQ,UAAU,IAAI,EACzC,GAAIgE,IAAe,OACjB,OAGFhE,EAAQ,cAAgB,KACxB,IAAM6D,EAASC,EAASE,EAAY,EAAI,EAExC7D,EAAa,IAAM,CACjBY,EAAO8C,EAAO,QAAS5D,CAAiB,EACxCD,EAAQ,UAAU,KAAK6D,EAAO,OAAO,EACrCI,GAAgBhE,CAAiB,CACnC,CAAC,EAED,QAAW0E,KAAMd,EAAO,IAClBc,EAAG,OAAS,YACd3E,EAAQ,OAAO,kBAAkB,KAAK2E,CAAE,EAG5CxD,GAAe,CACjB,CAEA,SAASkH,IAAO,CACd,GAAIrI,EAAQ,YACV,MAAM,IAAI,MAAM,oCAAoC,EAGtD,IAAMgE,EAAahE,EAAQ,UAAU,IAAI,EACzC,GAAIgE,IAAe,OACjB,OAGFhE,EAAQ,cAAgB,KACxB,IAAM6D,EAASC,EAASE,EAAY,EAAI,EAExC7D,EAAa,IAAM,CACjBY,EAAO8C,EAAO,QAAS5D,CAAiB,EACxCD,EAAQ,UAAU,KAAK6D,EAAO,OAAO,EACrCI,GAAgBhE,CAAiB,CACnC,CAAC,EAED,QAAW0E,KAAMd,EAAO,IAClBc,EAAG,OAAS,YACd3E,EAAQ,OAAO,kBAAkB,KAAK2E,CAAE,EAG5CxD,GAAe,CACjB,CAEA,SAASmH,IAAQ,CACftI,EAAQ,UAAU,OAAS,EAC3BA,EAAQ,UAAU,OAAS,CAC7B,CAEA,SAASuI,GAASC,EAAsB,CACtC,GAAIxI,EAAQ,YAIV,OAAOwI,EAAS,EAGlB,IAAIC,EAEJ,OAAAtI,EAAa,IAAM,CACjBH,EAAQ,YAAc,CACpB,IAAK,CAAC,EACN,QAAS,CACP,eAAgB,IAAI,IACpB,SAAU,GACV,OAAQ,CAAC,CACX,EACA,WAAY,CAAC,CACf,EACA,GAAI,CACFyI,EAAcD,EAAS,CACzB,QAAA,CAGE,IAAME,EAAe1I,EAAQ,YAC7BA,EAAQ,YAAc,KAElB0I,EAAa,WAAW,OAAS,GACnC1G,EAAe0G,EAAa,WAAYzI,CAAiB,EAGvDyI,EAAa,IAAI,OAAS,IAG5B1I,EAAQ,UAAU,OAAS,GAGzB0I,EAAa,IAAI,OAAS,GAC5BzG,GAAYyG,EAAa,GAAG,EAG9B3H,EAAO2H,EAAa,QAASzI,CAAiB,EAC9CkB,GAAe,CACjB,CACF,CAAC,EAEMsH,CACT,CAEA,SAASE,IAAe,CAClB3I,EAAQ,gBAAkB,OAC5BA,EAAQ,cAAgB,CAAC,EAE7B,CAEA,SAAS4I,IAAgB,CACvB,IAAM5E,EAAahE,EAAQ,cAC3BA,EAAQ,cAAgB,KACpBgE,IAAe,MAAQA,EAAW,OAAS,GAC7CD,EAAoBC,EAAY7D,CAAY,CAEhD,CAEA,SAASN,IAAkC,CACzC,OAAIG,EAAQ,OAAS,OACZiB,IAAiB,KAAO,aAAe,UAEvCjB,EAAQ,kBAAkB,OAAS,EACtC,eACA,eAER,CASA,IAAI6I,GAAqBhJ,GAAiB,EAC1C,SAASyE,GAAsB,CAC7B,IAAMwE,EAAgBjJ,GAAiB,EACnCgJ,KAAuBC,IACzBD,GAAqBC,EACrBpI,EAAS,cAAc,OAAOoI,CAAa,EAE/C,CAGA,IAAMC,EAAqB,IAAIpN,GAAWqE,EAAQ,OAASoE,GACzDA,EAAO,IAAI,CAAC4E,EAAOC,IAAU9M,GAAe,SAAS8M,CAAK,GAAID,CAAK,CAAC,CACtE,EAEME,EAAS,CACb,OAAQxI,EAAS,OAAO,WACxB,eAAgBA,EAAS,eAAe,WAExC,YAAaA,EAAS,YAAY,WAClC,OAAQA,EAAS,OAAO,WACxB,KAAMA,EAAS,KAAK,WACpB,WAAYA,EAAS,WAAW,WAChC,MAAOA,EAAS,MAAM,WACtB,QAASA,EAAS,QAAQ,WAC1B,QAASA,EAAS,QAAQ,WAC1B,eAAgBA,EAAS,eAAe,WACxC,cAAeA,EAAS,cAAc,WACtC,KAAMA,EAAS,KAAK,WAEpB,SAAUA,EAAS,SAAS,UAC9B,EAEMyI,GAActM,GAClB0C,EAAO,OACPI,EAAU,aACV3C,CACF,EAEA,eAAeoM,GACblM,EACAE,EACY,CACZ,IAAMC,EAAY,MAAMsC,EAAU,aAAa,EACzCpC,EAAW,MAAMP,EACrBuC,EAAO,OACPrC,EACAG,EACAD,CACF,EAEA,GAAI,CAACG,EAAS,IACRA,EAAS,QAAU,KAAOA,EAAS,OAAS,IAAK,CACnD,IAAIC,EAEJ,GAAI,CACF,IAAMC,GAAa,MAAMF,EAAS,KAAK,EAEvCC,EAAQ,IAAI6L,GACV5L,GAAU,QACVF,EAAS,OACTE,EACF,CACF,OAAQC,GAAA,CACNF,EAAQ,IAAI6L,GACV9L,EAAS,WACTA,EAAS,MACX,CACF,CAEA,MAAMC,CACR,CAGF,IAAIG,GAEJ,GAAI,CACFA,GAAQ,MAAMJ,EAAS,KAAK,CAC9B,OAAQG,EAAA,CACNC,GAAO,CAAC,CACV,CAEA,OAAOA,EACT,CAEA,SAAS2L,IAAiE,CACxE,OAAOF,GACL,wBACF,CACF,CAEA,SAASG,GACPC,EACmC,CACnC,OAAOJ,GACL,yBACA,CACE,OAAQ,OACR,KAAM,KAAK,UAAUI,CAAQ,EAC7B,QAAS,CACP,eAAgB,kBAClB,CACF,CACF,CACF,CAEA,eAAeC,GAA6BC,EAAgC,CAC1E,MAAMN,GAAuB,4BAA6B,CACxD,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CAAE,qBAAAM,CAAqB,CAAC,CAC/C,CAAC,CACH,CAEA,IAAMC,GAAsC,IAAIC,GAC9C,MAAOC,GAA4C,CACjD,IAAMH,EAAuBG,EAA4B,KAAK,EAE9D,aAAMJ,GAA6BC,CAAoB,EAEhDA,CACT,EACA,CAAE,MAAOrK,EAA6C,CACxD,EAEA,eAAeyK,GAA4BC,EAA6B,CACtE,MAAMJ,GAAoC,IAAII,CAAmB,CACnE,CAEA,OAAO,OAAO,eACZ,CACE,CAACC,EAAS,EAAG,CACX,IAAI,gBAAiB,SAAE,OAAOC,IAAUpM,GAAA5D,EAAA+F,EAAQ,OAAO,kBAAf,YAAA/F,EAAgC,OAAhC,KAAA4D,EAAwC,IAAI,CAAE,EACtF,IAAI,WAAY,CAAE,OAAOoM,GAAUjK,EAAQ,SAAS,CAAE,EACtD,IAAI,WAAY,CAAE,OAAOA,EAAQ,MAAM,IAAK,EAG5C,oBAAqB,IAAMmD,GAAe,QAC1C,sBAAuB,IACrB4F,EAAmB,QAGrB,SAAU,CAER,cAAgB1E,GAAUvE,EAAc,yBAAyB,CAAE,KAAM,wBAAyB,MAAAuE,CAAM,CAAC,EACzG,QAAUnL,GAAS4G,EAAc,KAAK5G,CAAI,CAC5C,EAEA,SAAUS,EAAA,GACLwP,IAGL,cAAe,CACb,4BAAAG,GACA,+BAAAC,GACA,4BAAAO,EACF,CACF,EAEA,GAAIvK,EAAO,OACX,UAAW2K,GAAuBhB,CAAM,EAExC,QAAS,IAAMpJ,EAAc,QAAQ,EACrC,UAAW,IAAMA,EAAc,UAAU,EACzC,WAAY,IAAMA,EAAc,WAAW,EAC3C,QAAS,IAAM,CACbJ,EAAkB,EAClBI,EAAc,QAAQ,CACxB,EAGA,eAAAwF,GACA,WAAA6B,GACA,eAAAI,GAGA,MAAAgB,GACA,QAAS,CACP,KAAAH,EACA,KAAAC,GACA,QAAAvC,GACA,QAAAC,GACA,MAAAuC,GACA,MAAOK,GACP,OAAQC,EACV,EAEA,UAAAX,EACA,WAAAD,GACA,mBAAAF,GACA,iBAAAjI,GAEA,OAAAqJ,EAGA,UAAW,IAAMpJ,EAAc,UAAU,EACzC,mBAAoB,IAAMA,EAAc,gBAAgB,EACxD,QAAS,IAAM8C,EAAK,QAGpB,YAAa,IAAM5C,EAAQ,WAAW,QACtC,UAAW,IAAMA,EAAQ,OAAO,OAClC,EAIAgK,GACA,CAAE,WAAY,EAAM,CACtB,CACF,CAOA,SAASE,GAMPhB,EAIyD,CAEzD,SAASiB,EACP3I,EACAgH,EACY,CACZ,OAAOU,EAAO,QAAQ,UAAWhF,GAAY,CAC3C,IAAMkG,EAAiBlG,EAAQ,OAAQkD,GACrCiD,GAAoBjD,EAAO,KAAM5F,CAAI,CACvC,EACI4I,EAAe,OAAS,GAC1B5B,EAAS4B,CAAc,CAE3B,CAAC,CACH,CAEA,SAASE,EACP9I,EACAgH,EACY,CACZ,OAAOU,EAAO,QAAQ,UAAWhF,GAAY,CAC3C,QAAWkD,KAAUlD,EACfkD,EAAO,KAAK,MAAQ5F,EAAK,KAC3BgH,EAASpB,EAAO,IAAS,CAG/B,CAAC,CACH,CAUA,SAASmD,EACPC,EACAC,EACArN,EACY,CACZ,GAAI,OAAOoN,GAAU,UAAYE,GAAgBF,CAAK,EAAG,CACvD,GAAI,OAAOC,GAAW,WACpB,MAAM,IAAI,MAAM,6CAA6C,EAE/D,IAAMjC,EAAWiC,EACjB,OAAQD,EAAO,CACb,IAAK,QACH,OAAOtB,EAAO,YAAY,UACxBV,CAGF,EAEF,IAAK,cACH,OAAOU,EAAO,WAAW,UAAUV,CAA+B,EAEpE,IAAK,SAAU,CAGb,IAAMtI,EAAKsI,EAIX,OAAOU,EAAO,OAAO,UAAW7E,GAAU,CACxC,IAAqCpK,EAAAoK,EAA7B,QAAAD,GAA6BnK,EAAlB0Q,EAAAC,GAAkB3Q,EAAlB,CAAX,WACR,OAAOiG,EAAGkE,EAAQuG,CAAa,CACjC,CAAC,CACH,CAEA,IAAK,QACH,OAAOzB,EAAO,MAAM,UAAUV,CAA2B,EAE3D,IAAK,aAAc,CACjB,IAAMtI,EAAKsI,EACX,OAAOU,EAAO,OAAO,UAAWvM,GAC9BuD,EAAG2K,GAAkBlO,CAAM,CAAC,CAC9B,CACF,CAEA,IAAK,SACH,OAAOuM,EAAO,OAAO,UAAUV,CAA4B,EAE7D,IAAK,kBACH,OAAOU,EAAO,eAAe,UAC3BV,CACF,EAEF,IAAK,UACH,OAAOU,EAAO,QAAQ,UAAUV,CAAkC,EAEpE,IAAK,iBACH,OAAOU,EAAO,cAAc,UAC1BV,CACF,EAGF,QACE,OAAOsC,GACLN,EACA,IAAI,OAAOA,CAAK,CAAC,6BACnB,CACJ,CACF,CAEA,GAAIC,IAAW,QAAa,OAAOD,GAAU,WAC3C,GAAI,OAAOA,GAAU,WAAY,CAC/B,IAAMO,EAAkBP,EACxB,OAAOtB,EAAO,QAAQ,UAAU6B,CAAe,CACjD,KAEE,OAAM,IAAI,MAAM,oCAAoC,EAIxD,GAAIC,GAAWR,CAAK,EAAG,CACrB,IAAMhJ,EAAOgJ,EACb,OAAIpN,GAAA,MAAAA,EAAS,OAEJ+M,EAA+B3I,EADdiJ,CACmC,EAGpDH,EAAkC9I,EADpBiJ,CACsC,CAE/D,CAEA,MAAM,IAAI,MACR,GAAG,OAAOD,CAAK,CAAC,4CAClB,CACF,CAEA,OAAOD,CACT,CAEA,SAASG,GAAgB5I,EAAuC,CAC9D,OACEA,IAAU,eACVA,IAAU,UACVA,IAAU,SACVA,IAAU,SACVA,IAAU,WACVA,IAAU,UACVA,IAAU,kBACVA,IAAU,mBACVA,IAAU,YAEd,CAEO,SAASmJ,GACdnO,EACAoO,EAC0B,CAC1B,MAAO,UACEA,EAAY,aAAa,CAAE,eAAgB,YAAa,OAAApO,CAAO,CAAC,CAE3E,CAEO,SAASqO,GACdrO,EACAsO,EACAC,EACA,CACA,OAAQhO,GAA6C,CACnD,IAAMiO,EACJD,GAAA,KAAAA,EACC,OAAO,WAAc,YAAc,OAAY,UAElD,GAAIC,IAAO,OACT,MAAM,IAAIC,GACR,8FACF,EAGF,IAAMrJ,EAAM,IAAI,IAAIkJ,CAAO,EAI3B,GAHAlJ,EAAI,SAAWA,EAAI,WAAa,QAAU,KAAO,MACjDA,EAAI,SAAW,MACfA,EAAI,aAAa,IAAI,SAAUpF,CAAM,EACjCO,EAAU,OAAS,SACrB6E,EAAI,aAAa,IAAI,MAAO7E,EAAU,MAAM,GAAG,UACtCA,EAAU,OAAS,SAC5B6E,EAAI,aAAa,IAAI,SAAU7E,EAAU,YAAY,MAErD,QAAOyN,GAAYzN,EAAW,gBAAgB,EAEhD,OAAA6E,EAAI,aAAa,IAAI,UAAWsJ,IAAe,KAAK,EAC7C,IAAIF,EAAGpJ,EAAI,SAAS,CAAC,CAC9B,CACF,CC5+FO,SAASuJ,IAEiB,CAC/B,IAAMC,EAAQC,GAAyC,CACrD,QAAS,CAAC,EACV,QAAS,CAAC,EACV,kBAAmB,CAAC,EACpB,mBAAoB,CAAC,EACrB,qBAAsB,CAAC,CACzB,CAAC,EAED,OAAO/L,EAAAjG,EAAA,GACF+R,GADE,CAGL,aAAapN,EAAkB,CAC7BoN,EAAM,IAAKE,GACFhM,EAAAjG,EAAA,GACFiS,GADE,CAEL,QAASC,GAAmBD,EAAM,QAAStN,CAAQ,EACnD,mBAAoB,OAAO,YACzB,OAAO,QAAQsN,EAAM,kBAAkB,EAAE,OACvC,CAAC,CAACE,EAAK7N,CAAY,IAAMA,EAAa,WAAaK,CACrD,CACF,CACF,EACD,CACH,EAEA,4BACEP,EACAgO,EACA,CACAL,EAAM,IAAKE,GAAU,CACnB,IAAMI,EAAiBJ,EAAM,QAAQ7N,EAAO,EAAE,EAE9C,OAAO6B,EAAAjG,EAAA,GACFiS,GADE,CAEL,QACEI,IAAmB,QACnBC,GAAelO,EAAQiO,CAAc,IAAM,EACvCpM,EAAAjG,EAAA,GAAKiS,EAAM,SAAX,CAAoB,CAAC7N,EAAO,EAAE,EAAGA,CAAO,GACxC6N,EAAM,QACZ,mBACEG,IAAsB,OAClBH,EAAM,mBACNhM,EAAAjG,EAAA,GACKiS,EAAM,oBADX,CAEE,CAACG,EAAkB,EAAE,EAAGA,CAC1B,EACR,EACF,CAAC,CACH,EAEA,8BACEG,EACAC,EACAC,EACAC,EACAC,EACA,CACAZ,EAAM,IAAKE,GAAWhM,EAAAjG,EAAA,GACjBiS,GADiB,CAEpB,QAASW,GAAmBX,EAAM,QAAS,CACzC,WAAYM,EACZ,eAAAE,CACF,CAAC,EACD,mBAAoBI,GAClBZ,EAAM,mBACN,CACE,sBAAuBO,EACvB,qBAAsBE,CACxB,CACF,EACA,QACEC,IAAa,OACT1M,EAAAjG,EAAA,GACKiS,EAAM,SADX,CAEE,CAACU,CAAQ,EAAG,CACV,UAAW,EACb,CACF,GACAV,EAAM,OACd,EAAE,CACJ,EAEA,oCACE9O,EACA0M,EACA8C,EACA,CACAZ,EAAM,IAAKE,GAAWhM,EAAAjG,EAAA,GACjBiS,GADiB,CAEpB,qBAAsBhM,EAAAjG,EAAA,GACjBiS,EAAM,sBADW,CAEpB,CAAC9O,CAAM,EAAG0M,CACZ,GACA,QAAS5J,EAAAjG,EAAA,GACJiS,EAAM,SADF,CAEP,CAACU,CAAQ,EAAG,CACV,UAAW,EACb,CACF,EACF,EAAE,CACJ,EAEA,qBAAqBG,EAAqD,CACxEf,EAAM,IAAKE,GAAWhM,EAAAjG,EAAA,GACjBiS,GADiB,CAEpB,kBAAmB,CAAC,GAAGA,EAAM,kBAAmBa,CAAgB,CAClE,EAAE,CACJ,EAEA,cAAcH,EAAkBI,EAAwB,CACtDhB,EAAM,IAAKE,GAAWhM,EAAAjG,EAAA,GACjBiS,GADiB,CAEpB,QAAShM,EAAAjG,EAAA,GACJiS,EAAM,SADF,CAEP,CAACU,CAAQ,EAAGI,CACd,EACF,EAAE,CACJ,CACF,EACF,CAEA,SAASb,GACPc,EACA9S,EACA,CACA,GAAI,OAAO,UAAU,eAAe,KAAK8S,EAAQ9S,CAAG,EAAG,CACrD,IAAsCI,EAAA0S,EAA7B,EAAA9S,GAAM+S,GAAuB3S,EACtC,OAD6B2Q,GAAS3Q,EAAT,CAApB4S,GAAAhT,IAEX,CAEA,OAAO8S,CACT,CAQO,SAASV,GACda,EACAC,EACQ,CAER,OAAID,EAAQ,WAAaC,EAAQ,UACxBD,EAAQ,UAAYC,EAAQ,UAC/B,EACAD,EAAQ,UAAYC,EAAQ,UAC1B,GACA,EACGD,EAAQ,WAAaC,EAAQ,UAC/BD,EAAQ,UAAY,EAAI,GAI7BA,EAAQ,UAAYC,EAAQ,UACvB,EACED,EAAQ,UAAYC,EAAQ,UAC9B,GAIF,CACT,CA8KO,SAASC,GACdC,EACAC,EAI6C,CAC7C,IAAMC,EAAiBC,EAAA,GAAKH,GAG5B,OAAAC,EAAQ,WAAW,QAASG,GAAW,CACrC,IAAMC,EAAiBH,EAAeE,EAAO,EAAE,EAG3CC,GACaC,GAAeD,EAAgBD,CAAM,IAErC,IAEjBF,EAAeE,EAAO,EAAE,EAAIA,EAC9B,CAAC,EAGDH,EAAQ,eAAe,QAAQ,CAAC,CAAE,GAAAM,EAAI,UAAAC,CAAU,IAAM,CACpD,IAAMH,EAAiBH,EAAeK,CAAE,EACpCF,IAAmB,SAEvBA,EAAe,UAAYG,EAC3BH,EAAe,UAAYG,EAC3BH,EAAe,SAAW,CAAC,EAC7B,CAAC,EAEMH,CACT,CAEO,SAASO,GACdC,EACAT,EAIuC,CACvC,IAAMU,EAA4BR,EAAA,GAAKO,GAGvC,OAAAT,EAAQ,sBAAsB,QAASW,GAAiB,CACtD,IAAMC,EAAuBF,EAA0BC,EAAa,EAAE,EAElEC,GACaC,GACbD,EACAD,CACF,IAGe,IAIjBD,EAA0BC,EAAa,EAAE,EAAIA,EAC/C,CAAC,EAEDX,EAAQ,qBAAqB,QAC3B,CAAC,CAAE,GAAAM,CAAG,IAAM,OAAOI,EAA0BJ,CAAE,CACjD,EAEOI,CACT,CAQO,SAASG,GACdC,EACAC,EACQ,CACR,OAAID,EAAmB,WAAaC,EAAmB,WAC9C,EACED,EAAmB,WAAaC,EAAmB,WACrD,GAILD,EAAmB,QAAUC,EAAmB,OAC3CD,EAAmB,OAASC,EAAmB,OAClD,EACAD,EAAmB,OAASC,EAAmB,OAC7C,GACA,EACGD,EAAmB,QAAUC,EAAmB,OAClDD,EAAmB,OAAS,EAAI,GAIlC,CACT,CC/iBA,IAAME,GAAe,GACfC,GAAe,IACfC,GAAmB,IAEnBC,GAAoC,KACpCC,GAA8B,IAC9BC,GAA0C,IAC1CC,GAA8B,IAC9BC,GAAkC,IAElCC,GAA4B,GAC5BC,GAAiC,GAqPvC,SAASC,GAA4BC,EAA8B,CACjE,GAAI,qBAAsBA,EACxB,MAAM,IAAI,MAAM,mCAAmC,EAErD,OACE,OAAOA,EAAc,SAAY,UACjCA,EAAc,QAAQ,WAAW,MAAM,EAEhCA,EAAc,QAEdC,EAEX,CAEO,SAASC,GAAiCC,EAA8B,CAC7E,OAAIA,EAAU,OAAS,SACdA,EAAU,aAEVA,EAAU,MAAM,GAE3B,CA2BO,SAASC,GACdC,EACmB,cAGnB,IAAML,EAAgBK,EAChBC,EAAgBC,IAAYC,GAAAR,EAAc,WAAd,KAAAQ,GAA0BjB,EAAgB,EACtEkB,EAAwBC,IAC5BC,GAAAX,EAAc,wBAAd,KAAAW,GAAuCf,EACzC,EACMgB,EAA6BC,GACjCb,EAAc,0BAChB,EACMc,EAAUf,GAA4BC,CAAa,EAEnDe,EAAcC,GAAkBX,CAAO,EAOvCY,EAAY,IAAI,IAEtB,SAASC,EAAaC,EAAkB,CACvBA,EAAK,GACpBF,EAAU,OAAOE,EAAK,EAAE,EACxBA,EAAK,QAAQ,CACf,CAEA,SAASC,EAMPC,EAIA,CAEA,IAAMC,EAAQ,IAAM,CAClB,IAAMC,EAAOD,EAERD,EAAK,OAAO,OAAOE,CAAI,EAMtBF,EAAK,OAAO,OAAS,GACvBH,EAAaG,EAAK,IAAI,EANhBG,GACN,kFACF,CAOJ,EAEA,OAAAH,EAAK,OAAO,IAAIC,CAAK,EACd,CACL,KAAMD,EAAK,KACX,MAAAC,CACF,CACF,CAEA,SAASG,EAMPC,EACArB,EAIA,uBACA,IAAMsB,EAAWV,EAAU,IAAIS,CAAM,EACrC,GAAIC,IAAa,OACf,OAAOP,EAAUO,CAAQ,EAIzBtB,EAAQ,kBAAoB,MAAQA,EAAQ,gBAI9C,IAAMuB,EAAUC,GACd,CACE,iBAAiBxB,GAAAA,EAAQ,kBAARA,KAAAA,GAA2B,CAAC,EAC7C,eAAgBA,EAAQ,cAC1B,EACA,CACE,OAAAqB,EACA,cAAApB,EACA,sBAAAG,EACA,2BAAAG,EACA,UAAWZ,EAAc,UACzB,WAAW8B,GAAA9B,EAAc,kBAAd,KAAA8B,GAAiC,CAC1C,aAAcC,GACZL,EACAZ,GACAH,GAAAX,EAAc,YAAd,YAAAW,GAAyB,SAC3B,EACA,aAAcqB,GAAwBN,EAAQX,CAAW,CAC3D,EACA,mBAAoBf,EAAc,mBAClC,wBAAyBK,GAAAA,YAAAA,EAAS,wBAClC,QAAAS,EACA,wBAAyB,CAAC,CAACd,EAAc,wBACzC,oBAAqB,CAAC,CAACA,EAAc,mBACvC,CACF,EAEMiC,EAAwB,CAC5B,KAAML,EACN,OAAQ,IAAI,GACd,EAQA,GAPAX,EAAU,IAAIS,EAAQO,CAAW,GAM/B5B,IAAAA,GAAAA,EAAQ,cAARA,KAAAA,GAAuBA,EAAQ,yBAA/BA,KAAAA,GAAyD,GACxC,CAEjB,GAAI,OAAO,MAAS,YAAa,CAC/B,KAAI6B,GAAAlC,EAAc,YAAd,YAAAkC,GAAyB,QAAS,OACpC,MAAM,IAAI,MACR,sKACF,EAGF,OAAO,KAAOlC,EAAc,UAAU,IACxC,CAEA4B,EAAQ,QAAQ,CAClB,CAEA,OAAOR,EAAUa,CAAW,CAC9B,CAEA,SAASE,EAMPT,EACArB,EACkD,CAClD,GAAM,CAAE,KAAAc,EAAM,MAAOiB,CAAE,EAAIX,EAKzBC,EAAQrB,CAAO,EACjB,OAAOc,CACT,CAEA,SAASkB,EAKPX,EAAyE,OACzE,IAAMP,GAAOX,EAAAS,EAAU,IAAIS,CAAM,IAApB,YAAAlB,EAAuB,KACpC,OAAOW,GAEH,IACN,CAEA,SAASmB,EAAWZ,EAAgB,SAClC,IAAMa,GAAS5B,GAAAH,EAAAS,EAAU,IAAIS,CAAM,IAApB,YAAAlB,EAAuB,SAAvB,KAAAG,EAAiC,IAAI,IACpD,QAAW6B,KAASD,EAClBC,EAAM,CAEV,CAEA,SAASC,GAAS,CAChB1B,EAAY,MAAM,EAKlB,OAAW,CAAE,KAAAI,CAAK,IAAKF,EAAU,OAAO,EACjCyB,GAAOvB,EAAK,UAAU,CAAC,GAC1BA,EAAK,UAAU,CAGrB,CAEA,IAAMwB,EAAqBC,GAA2B,IAAI,EAEpD,CACJ,sBAAAC,EACA,iCAAAC,EACA,gCAAAC,EACA,4BAAAC,CACF,EAAIC,GAAuB,CACzB,QAAAnC,EACA,UAASgB,GAAA9B,EAAc,YAAd,YAAA8B,GAAyB,QAAoC,MACtE,YAAAf,EACA,mBAAA4B,CACF,CAAC,EAEKO,EAAaC,GAAkB,EAE/BC,EAAepD,EAAc,aAC7BqD,EAAuBC,GAC3B,IAAM,CAACF,EACP,mEACF,EAEMG,EAAaC,GACjB,MAAOC,GAA+B,CACpC,IAAMC,EAAUD,EAAe,KAAK,EAC9BE,EAAQ,MAAMP,GAAA,YAAAA,EAAe,CAAE,QAAAM,CAAQ,IAE7C,OAAAL,EAAqB,EAEdM,GAAA,KAAAA,EAASD,EAAQ,IAAI,IAAA,EAAe,CAC7C,EACA,CAAE,MAAO7D,EAA0B,CACrC,EAEM+D,EAAmB5D,EAAc,iBACjC6D,EAA2BP,GAC/B,IAAM,CAACM,EACP,uEACF,EAEME,EAAiBN,GACrB,MAAOO,GAA+B,CACpC,IAAMC,EAAUD,EAAe,KAAK,EAC9BE,EAAY,MAAML,GAAA,YAAAA,EAAmB,CAAE,QAAAI,CAAQ,IAErD,OAAAH,EAAyB,EAElBI,GAAA,KAAAA,EAAaD,EAAQ,IAAI,IAAA,EAAe,CACjD,EACA,CAAE,MAAOlE,EAA+B,CAC1C,EAEA,OAAO,OAAO,eACZ,CACE,OAAA2C,EAGA,MAAAN,EACA,QAAAE,EACA,MAAOC,EAGP,UAAAb,EAGA,CAACyC,EAAS,EAAG,CACX,cAAe,CACb,sBAAArB,EACA,iCAAAC,EACA,gCAAAC,EACA,4BAAAC,CACF,EACA,mBAAAL,EACA,0BAA2B3C,EAAc,0BACzC,WAAAkD,EACA,WAAAK,EACA,eAAAO,EACA,YAAa,CACX,OAAO,MAAM,KAAK7C,EAAU,KAAK,CAAC,CACpC,CACF,CACF,EACAiD,GACA,CACE,WAAY,EACd,CACF,CACF,CAEO,IAAMC,GAAN,cAAoC,KAAM,CAC/C,YACSC,EACAC,EACAC,EACP,CACA,MAAMF,CAAO,EAJN,KAAA,QAAAA,EACA,KAAA,OAAAC,EACA,KAAA,QAAAC,CAGT,CACF,EAEA,SAASC,GACPC,EACAC,EACAC,EACAC,EACAC,EACQ,CACR,GACE,OAAOH,GAAU,UACjBA,EAAQC,GACPC,IAAQ,QAAaF,EAAQE,EAE9B,MAAM,IAAI,MACRA,IAAQ,OACJ,GAAGH,CAAM,sBAAsBI,GAAA,KAAAA,EAAkBF,CAAG,QAAQC,CAAG,IAC/D,GAAGH,CAAM,uBAAuBI,GAAA,KAAAA,EAAkBF,CAAG,GAC3D,EAEF,OAAOD,CACT,CAEA,SAAS5D,GACP4D,EACoB,CACpB,GAAIA,IAAU,OACd,OAAOF,GACL,6BACAE,EACAjF,EACF,CACF,CAEA,SAASe,GAAYkE,EAAuB,CAC1C,OAAOF,GAAY,WAAYE,EAAOpF,GAAcC,EAAY,CAClE,CAEA,SAASoB,GAAyB+D,EAAuB,CACvD,OAAOF,GACL,wBACAE,EACAhF,GACAE,GACAD,EACF,CACF,CAKA,SAAS4D,GACPuB,KACGC,EACH,CACA,IAAIC,EAAY,GAcd,MAAO,IAAM,CAAC,CAElB,CC/aA,IAAMC,GAAiB,CACrB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,OACP,EAEMC,GAAsB,IAAI,OAC9B,OAAO,KAAKD,EAAc,EACvB,IAAKE,GAAW,KAAKA,CAAM,EAAE,EAC7B,KAAK,GAAG,EACX,GACF,EAsEA,IAAMC,GAAqB,CACzB,EAAG,MACH,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,KACP,EAEMC,GAA0B,IAAI,OAClC,OAAO,KAAKD,EAAkB,EAC3B,IAAKE,GAAW,KAAKA,CAAM,EAAE,EAC7B,KAAK,GAAG,EACX,GACF,EKhXAC,GAAYC,GAAUC,GAAaC,EAAU,EEAtC,IAAMC,GAAW,qBACXC,GAAiD,SACjDC,GAAgD,MDD7DC,GAAYH,GAAUC,GAAaC,EAAU,EEO7C,IAAME,GAAU,QAIVC,GAAUD,GACVE,GAAa,OAAO,QAAW,WAC/BC,GAAM,OAAO,aAAgB,WAAa,IAAI,YAAgB,OAC9DC,GAAM,OAAO,aAAgB,WAAa,IAAI,YAAgB,OAC9DC,GAAQ,oEACRC,GAAS,MAAM,UAAU,MAAM,KAAKD,EAAK,EACzCE,IAAWC,GAAM,CACnB,IAAIC,EAAM,CAAC,EACX,OAAAD,EAAE,QAAQ,CAACE,EAAGC,IAAMF,EAAIC,CAAC,EAAIC,CAAC,EACvBF,CACX,GAAGH,EAAM,EACHM,GAAQ,0EACRC,GAAU,OAAO,aAAa,KAAK,MAAM,EACzCC,GAAW,OAAO,WAAW,MAAS,WACtC,WAAW,KAAK,KAAK,UAAU,EAC9BC,GAAO,IAAI,WAAW,MAAM,UAAU,MAAM,KAAKA,EAAI,CAAC,CAAC,EACxDC,GAAcC,GAAQA,EACvB,QAAQ,KAAM,EAAE,EAAE,QAAQ,SAAWC,GAAOA,GAAM,IAAM,IAAM,GAAG,EAChEC,GAAYC,GAAMA,EAAE,QAAQ,oBAAqB,EAAE,EAInDC,GAAgBC,GAAQ,CAE1B,IAAIC,EAAKC,EAAIC,EAAIC,EAAIC,EAAM,GACrBC,EAAMN,EAAI,OAAS,EACzB,QAASX,EAAI,EAAGA,EAAIW,EAAI,QAAS,CAC7B,IAAKE,EAAKF,EAAI,WAAWX,GAAG,GAAK,MAC5Bc,EAAKH,EAAI,WAAWX,GAAG,GAAK,MAC5Be,EAAKJ,EAAI,WAAWX,GAAG,GAAK,IAC7B,MAAM,IAAI,UAAU,yBAAyB,EACjDY,EAAOC,GAAM,GAAOC,GAAM,EAAKC,EAC/BC,GAAOrB,GAAOiB,GAAO,GAAK,EAAE,EACtBjB,GAAOiB,GAAO,GAAK,EAAE,EACrBjB,GAAOiB,GAAO,EAAI,EAAE,EACpBjB,GAAOiB,EAAM,EAAE,CACzB,CACA,OAAOK,EAAMD,EAAI,MAAM,EAAGC,EAAM,CAAC,EAAI,MAAM,UAAUA,CAAG,EAAID,CAChE,EAMME,GAAQ,OAAO,MAAS,WAAcP,GAAQ,KAAKA,CAAG,EACtDpB,GAAcoB,GAAQ,OAAO,KAAKA,EAAK,QAAQ,EAAE,SAAS,QAAQ,EAC9DD,GACJS,GAAkB5B,GACjB6B,GAAQ,OAAO,KAAKA,CAAG,EAAE,SAAS,QAAQ,EAC1CA,GAAQ,CAGP,IAAIC,EAAO,CAAC,EACZ,QAASrB,EAAI,EAAGsB,EAAIF,EAAI,OAAQpB,EAAIsB,EAAGtB,GAAK,KACxCqB,EAAK,KAAKnB,GAAQ,MAAM,KAAMkB,EAAI,SAASpB,EAAGA,EAAI,IAAO,CAAC,CAAC,EAE/D,OAAOkB,GAAMG,EAAK,KAAK,EAAE,CAAC,CAC9B,EAMEE,GAAiB,CAACH,EAAKI,EAAU,KAAUA,EAAUnB,GAAWc,GAAgBC,CAAG,CAAC,EAAID,GAAgBC,CAAG,EAI3GK,GAAW1B,GAAM,CACnB,GAAIA,EAAE,OAAS,EAAG,CACd,IAAI2B,EAAK3B,EAAE,WAAW,CAAC,EACvB,OAAO2B,EAAK,IAAO3B,EACb2B,EAAK,KAASxB,GAAQ,IAAQwB,IAAO,CAAE,EACnCxB,GAAQ,IAAQwB,EAAK,EAAK,EACzBxB,GAAQ,IAASwB,IAAO,GAAM,EAAK,EAChCxB,GAAQ,IAASwB,IAAO,EAAK,EAAK,EAClCxB,GAAQ,IAAQwB,EAAK,EAAK,CAC5C,KACK,CACD,IAAIA,EAAK,OACF3B,EAAE,WAAW,CAAC,EAAI,OAAU,MAC5BA,EAAE,WAAW,CAAC,EAAI,OACzB,OAAQG,GAAQ,IAASwB,IAAO,GAAM,CAAK,EACrCxB,GAAQ,IAASwB,IAAO,GAAM,EAAK,EACnCxB,GAAQ,IAASwB,IAAO,EAAK,EAAK,EAClCxB,GAAQ,IAAQwB,EAAK,EAAK,CACpC,CACJ,EACMC,GAAU,gDAMVC,GAAQC,GAAMA,EAAE,QAAQF,GAASF,EAAO,EAExCK,GAAUvC,GACTkB,GAAM,OAAO,KAAKA,EAAG,MAAM,EAAE,SAAS,QAAQ,EAC/ChB,GACKgB,GAAMU,GAAgB1B,GAAI,OAAOgB,CAAC,CAAC,EACnCA,GAAMS,GAAMU,GAAKnB,CAAC,CAAC,EAMxBsB,GAAS,CAACzB,EAAKkB,EAAU,KAAUA,EACnCnB,GAAWyB,GAAQxB,CAAG,CAAC,EACvBwB,GAAQxB,CAAG,EAKX0B,GAAa1B,GAAQyB,GAAOzB,EAAK,EAAI,EAIrC2B,GAAU,8EACVC,GAAWC,GAAS,CACtB,OAAQA,EAAK,OAAQ,CACjB,IAAK,GACD,IAAIC,GAAO,EAAOD,EAAK,WAAW,CAAC,IAAM,IACjC,GAAOA,EAAK,WAAW,CAAC,IAAM,IAC9B,GAAOA,EAAK,WAAW,CAAC,IAAM,EAC/B,GAAOA,EAAK,WAAW,CAAC,EAAIE,EAASD,EAAK,MACjD,OAAQlC,IAASmC,IAAW,IAAM,KAAM,EAClCnC,IAASmC,EAAS,MAAS,KAAM,EAC3C,IAAK,GACD,OAAOnC,IAAU,GAAOiC,EAAK,WAAW,CAAC,IAAM,IACvC,GAAOA,EAAK,WAAW,CAAC,IAAM,EAC/B,GAAOA,EAAK,WAAW,CAAC,CAAE,EACrC,QACI,OAAOjC,IAAU,GAAOiC,EAAK,WAAW,CAAC,IAAM,EACxC,GAAOA,EAAK,WAAW,CAAC,CAAE,CACzC,CACJ,EAMMG,GAAQC,GAAMA,EAAE,QAAQN,GAASC,EAAO,EAIxCM,GAAgBxB,GAAQ,CAG1B,GADAA,EAAMA,EAAI,QAAQ,OAAQ,EAAE,EACxB,CAACf,GAAM,KAAKe,CAAG,EACf,MAAM,IAAI,UAAU,mBAAmB,EAC3CA,GAAO,KAAK,MAAM,GAAKA,EAAI,OAAS,EAAE,EACtC,IAAIyB,EAAK9B,EAAM,GAAI+B,EAAIC,EACvB,QAAS3C,EAAI,EAAGA,EAAIgB,EAAI,QACpByB,EAAM7C,GAAOoB,EAAI,OAAOhB,GAAG,CAAC,GAAK,GAC3BJ,GAAOoB,EAAI,OAAOhB,GAAG,CAAC,GAAK,IAC1B0C,EAAK9C,GAAOoB,EAAI,OAAOhB,GAAG,CAAC,IAAM,GACjC2C,EAAK/C,GAAOoB,EAAI,OAAOhB,GAAG,CAAC,GAClCW,GAAO+B,IAAO,GAAKxC,GAAQuC,GAAO,GAAK,GAAG,EACpCE,IAAO,GAAKzC,GAAQuC,GAAO,GAAK,IAAKA,GAAO,EAAI,GAAG,EAC/CvC,GAAQuC,GAAO,GAAK,IAAKA,GAAO,EAAI,IAAKA,EAAM,GAAG,EAEhE,OAAO9B,CACX,EAMMiC,GAAQ,OAAO,MAAS,WAAc5B,GAAQ,KAAKR,GAASQ,CAAG,CAAC,EAChEzB,GAAcyB,GAAQ,OAAO,KAAKA,EAAK,QAAQ,EAAE,SAAS,QAAQ,EAC9DwB,GAEJK,GAAgBtD,GACfM,GAAMM,GAAS,OAAO,KAAKN,EAAG,QAAQ,CAAC,EACvCA,GAAMM,GAASyC,GAAM/C,CAAC,EAAE,MAAM,EAAE,EAAE,IAAIE,GAAKA,EAAE,WAAW,CAAC,CAAC,CAAC,EAI5D+C,GAAgBjD,GAAMgD,GAAcE,GAAOlD,CAAC,CAAC,EAE7CmD,GAAUzD,GACTM,GAAM,OAAO,KAAKA,EAAG,QAAQ,EAAE,SAAS,MAAM,EAC/CL,GACKK,GAAML,GAAI,OAAOqD,GAAchD,CAAC,CAAC,EACjCA,GAAMyC,GAAKM,GAAM/C,CAAC,CAAC,EACxBkD,GAAUlD,GAAMW,GAASX,EAAE,QAAQ,QAAUU,GAAOA,GAAM,IAAM,IAAM,GAAG,CAAC,EAM1E0C,GAAU3C,GAAQ0C,GAAQD,GAAOzC,CAAG,CAAC,EAKrC4C,GAAW5C,GAAQ,CACrB,GAAI,OAAOA,GAAQ,SACf,MAAO,GACX,IAAMG,EAAIH,EAAI,QAAQ,OAAQ,EAAE,EAAE,QAAQ,UAAW,EAAE,EACvD,MAAO,CAAC,oBAAoB,KAAKG,CAAC,GAAK,CAAC,oBAAoB,KAAKA,CAAC,CACtE,EAEM0C,GAAWC,IACN,CACH,MAAOA,EAAG,WAAY,GAAO,SAAU,GAAM,aAAc,EAC/D,GAKEC,GAAe,UAAY,CAC7B,IAAMC,EAAO,CAACC,EAAMC,IAAS,OAAO,eAAe,OAAO,UAAWD,EAAMJ,GAAQK,CAAI,CAAC,EACxFF,EAAK,aAAc,UAAY,CAAE,OAAOL,GAAO,IAAI,CAAG,CAAC,EACvDK,EAAK,WAAY,SAAU9B,EAAS,CAAE,OAAOO,GAAO,KAAMP,CAAO,CAAG,CAAC,EACrE8B,EAAK,cAAe,UAAY,CAAE,OAAOvB,GAAO,KAAM,EAAI,CAAG,CAAC,EAC9DuB,EAAK,cAAe,UAAY,CAAE,OAAOvB,GAAO,KAAM,EAAI,CAAG,CAAC,EAC9DuB,EAAK,eAAgB,UAAY,CAAE,OAAOR,GAAa,IAAI,CAAG,CAAC,CACnE,EAIMW,GAAmB,UAAY,CACjC,IAAMH,EAAO,CAACC,EAAMC,IAAS,OAAO,eAAe,WAAW,UAAWD,EAAMJ,GAAQK,CAAI,CAAC,EAC5FF,EAAK,WAAY,SAAU9B,EAAS,CAAE,OAAOD,GAAe,KAAMC,CAAO,CAAG,CAAC,EAC7E8B,EAAK,cAAe,UAAY,CAAE,OAAO/B,GAAe,KAAM,EAAI,CAAG,CAAC,EACtE+B,EAAK,cAAe,UAAY,CAAE,OAAO/B,GAAe,KAAM,EAAI,CAAG,CAAC,CAC1E,EAIMmC,GAAiB,IAAM,CACzBL,GAAa,EACbI,GAAiB,CACrB,EACME,GAAU,CACZ,QAAStE,GACT,QAASC,GACT,KAAMsD,GACN,aAAcJ,GACd,KAAMtB,GACN,aAAcR,GACd,WAAYuC,GACZ,SAAUlB,GACV,OAAQA,GACR,UAAWC,GACX,UAAWA,GACX,KAAMJ,GACN,KAAMU,GACN,OAAQW,GACR,QAASC,GACT,eAAgB3B,GAChB,aAAcuB,GACd,aAAcO,GACd,iBAAkBI,GAClB,eAAgBC,EACpB,EEhQO,IAAME,GAAS,IAAM,IAAI,IAgCnBC,GAAiB,CAACC,EAAKC,EAAKC,IAAY,CACnD,IAAIC,EAAMH,EAAI,IAAIC,CAAG,EACrB,OAAIE,IAAQ,QACVH,EAAI,IAAIC,EAAKE,EAAMD,EAAQ,CAAC,EAEvBC,CACT,EC9CaL,GAAS,IAAM,IAAI,IC6CnBM,GAAO,MAAM,KAgFbC,GAAU,MAAM,QCpHhBC,GAAN,KAAiB,CACtB,aAAe,CAKb,KAAK,WAAiBR,GAAO,CAC/B,CAMA,GAAIS,EAAMC,EAAG,CACPT,GAAe,KAAK,WAAYQ,EAAUT,EAAM,EAAE,IAAIU,CAAC,CAC7D,CAMA,KAAMD,EAAMC,EAAG,CAIb,IAAMC,EAAK,IAAIC,IAAS,CACtB,KAAK,IAAIH,EAAME,CAAE,EACjBD,EAAE,GAAGE,CAAI,CACX,EACA,KAAK,GAAGH,EAAME,CAAE,CAClB,CAMA,IAAKF,EAAMC,EAAG,CACZ,IAAMG,EAAY,KAAK,WAAW,IAAIJ,CAAI,EACtCI,IAAc,SAChBA,EAAU,OAAOH,CAAC,EACdG,EAAU,OAAS,GACrB,KAAK,WAAW,OAAOJ,CAAI,EAGjC,CAWA,KAAMA,EAAMG,EAAM,CAEhB,OAAaN,IAAM,KAAK,WAAW,IAAIG,CAAI,GAAST,GAAO,GAAG,OAAO,CAAC,EAAE,QAAQU,GAAKA,EAAE,GAAGE,CAAI,CAAC,CACjG,CAEA,SAAW,CACT,KAAK,WAAiBZ,GAAO,CAC/B,CACF,EChEMc,GAAiB,QAaVC,GAAN,cAAwBP,EAAoB,CAajD,YACEQ,EACAC,EACA,CACA,MAAM,EAbR,KAAO,OAA+B,IAAI,IAG1C,KAAO,KAAqC,IAAI,IAGhD,KAAO,eAAyB,EAQ9B,KAAK,IAAMD,EACX,KAAK,KAAOC,EACZ,KAAK,SAAWD,EAAI,SACpB,KAAK,YAAc,KAAK,KAAK,OAAO,OAAO,UAAWE,GAAU,CAE1DA,EAAM,OAAS,UAEjB,KAAK,KAAK,SAAU,CAClB,CAAE,MAAO,CAAC,EAAG,QAAS,CAAC,EAAG,QAAS,CAACA,EAAM,KAAK,YAAY,CAAE,EAC7D,UACF,CAAC,EACD,KAAK,KAAK,SAAU,CAClB,CAAE,MAAO,CAAC,EAAG,QAAS,CAAC,EAAG,QAAS,CAACA,EAAM,KAAK,YAAY,CAAE,EAC7D,UACF,CAAC,GAGCA,EAAM,OAAS,UAEjB,KAAK,KAAK,SAAU,CAClB,CAAE,MAAO,CAACA,EAAM,KAAK,YAAY,EAAG,QAAS,CAAC,EAAG,QAAS,CAAC,CAAE,EAC7D,UACF,CAAC,EACD,KAAK,KAAK,SAAU,CAClB,CAAE,MAAO,CAACA,EAAM,KAAK,YAAY,EAAG,QAAS,CAAC,EAAG,QAAS,CAAC,CAAE,EAC7D,UACF,CAAC,GAGCA,EAAM,OAAS,WAEjB,KAAK,KAAK,SAAU,CAClB,CAAE,MAAO,CAAC,EAAG,QAAS,CAACA,EAAM,KAAK,YAAY,EAAG,QAAS,CAAC,CAAE,EAC7D,UACF,CAAC,EACD,KAAK,KAAK,SAAU,CAClB,CAAE,MAAO,CAAC,EAAG,QAAS,CAACA,EAAM,KAAK,YAAY,EAAG,QAAS,CAAC,CAAE,EAC7D,UACF,CAAC,EAEL,CAAC,CACH,CAEA,SAAgB,CACd,KAAK,KAAK,UAAW,CAAC,IAAI,CAAC,EAC3B,KAAK,YAAY,EACjB,KAAK,cAAc,IAAI,EACvB,MAAM,QAAQ,CAChB,CAEA,eAAmC,CACjC,IAAMC,EAAW,KAAK,KAAK,YAAY,EACvC,OACE,OAAO,KAAKA,CAAQ,EAAE,SAAW,GACjC,OAAOA,EAASL,EAAc,GAAM,YAE7B,KAEFK,EAASL,EAAc,CAChC,CAEA,cAAcM,EAAyC,OACrD,IAAMD,GAAWE,EAAA,KAAK,KAAK,QAAQ,IAAlB,YAAAA,EAAqB,SACtC,GAAID,IAAU,KAAM,CAClB,GAAID,IAAa,OAEf,OAEF,KAAK,KAAK,eAAeG,EAAAC,EAAA,GAAKJ,GAAL,CAAe,CAACL,EAAc,EAAG,IAAK,EAAC,EAChE,KAAK,KAAK,SAAU,CAClB,CAAE,MAAO,CAAC,EAAG,QAAS,CAAC,EAAG,QAAS,CAAC,KAAK,QAAQ,CAAE,EACnD,OACF,CAAC,EACD,MACF,CAEA,IAAMU,EAAYL,GAAA,YAAAA,EAAWL,IACvBW,EAAQD,IAAc,OAAY,CAAC,KAAK,QAAQ,EAAI,CAAC,EACrDE,EAAUF,IAAc,OAAY,CAAC,EAAI,CAAC,KAAK,QAAQ,EAC7D,KAAK,KAAK,eAAe,CACvB,CAACV,EAAc,EAAGS,IAAA,GACXC,GAA4B,CAAC,GAC9BJ,GAAS,CAAC,EAElB,CAAC,EACD,KAAK,KAAK,SAAU,CAAC,CAAE,MAAAK,EAAO,QAAAC,EAAS,QAAS,CAAC,CAAE,EAAG,OAAO,CAAC,CAChE,CAEA,mBAAmBC,EAAeC,EAAgC,OAChE,IAAMT,GAAWE,EAAA,KAAK,KAAK,QAAQ,IAAlB,YAAAA,EAAqB,SAASP,IACzCe,EAAS,CAAE,CAACF,CAAK,EAAGC,CAAM,EAChC,KAAK,KAAK,eAAe,CACvB,CAACd,EAAc,EAAGS,IAAA,GAAOJ,GAA2B,CAAC,GAAOU,EAC9D,CAAC,CACH,CAGA,WAAkC,OAChC,IAAMC,EAAS,KAAK,KAAK,UAAU,EAC7BX,GAAWE,EAAA,KAAK,KAAK,QAAQ,IAAlB,YAAAA,EAAqB,SAASP,IACzCiB,EAASD,EAAO,OAAO,CAACE,EAA2BC,KAErDA,EAAa,cACbA,EAAa,SAASnB,EAAc,IAAM,QAG1CkB,EAAI,IACFC,EAAa,aACbA,EAAa,SAASnB,EAAc,GAAK,CAAC,CAC5C,EAEKkB,GACN,IAAI,GAAK,EACZ,OAAIb,IAAa,QACfY,EAAO,IAAI,KAAK,SAAUZ,CAAQ,EAE7BY,CACT,CACF,EC/JqBG,GAArB,cAAyC1B,EAAoB,CAQ3D,YAAY,CACV,IAAAQ,EACA,OAAAmB,EACA,UAAAC,EACA,SAAAC,CACF,EAKG,CACD,MAAM,EAlBR,KAAQ,cAAmC,CAAC,EAE5C,KAAQ,QAAU,GA8BlB,KAAO,mBAAqB,CAAC,CAC3B,OAAAR,EACA,YAAAS,CACF,IAGY,CAIV,GAFEC,GAAY,KAAK,IAAKC,GAAO,aAAaX,CAAM,EAAG,SAAS,EAE1DS,EAAa,CAEf,GAAI,CACF,IAAMG,EAAgBC,GACpB,KAAK,IACLF,GAAO,aAAaF,CAAW,CACjC,EACA,KAAK,cAAcE,GAAO,eAAeC,CAAW,CAAC,CACvD,OAASE,EAAG,CAEV,QAAQ,KAAKA,CAAC,CAChB,CAGA,KAAK,OAAS,EAChB,CACF,EAEA,KAAO,QAAU,IAAY,CAC3B,KAAK,OAAS,GAId,IAAMC,EAAgBJ,GAAO,eAAiBK,GAAkB,KAAK,GAAG,CAAC,EACzE,KAAK,aAAaD,CAAa,CACjC,EAeA,KAAQ,cAAgB,CAACf,EAAoBiB,IAAmB,CAC9D,GAAIA,IAAW,UAAW,CACxB,IAAMC,EAAgBP,GAAO,eAAeX,CAAM,EAClD,KAAK,cAAckB,CAAa,CAClC,CACF,EApEE,KAAK,IAAM/B,EAEX,KAAK,IAAI,GAAG,SAAU,KAAK,aAAa,EACxC,KAAK,cAAiBa,GAAmB,CACvCO,EAAUP,EAAQM,EAAS,OAAY,KAAK,IAAI,IAAI,CACtD,EACA,KAAK,aAAgBa,GAAmB,CACtCX,EAASW,EAAQb,EAAS,OAAY,KAAK,IAAI,IAAI,CACrD,EAEA,KAAK,QAAQ,CACf,CAwCA,IAAI,QAAkB,CACpB,OAAO,KAAK,OACd,CAEA,IAAI,OAAOf,EAAgB,CACrB,KAAK,UAAYA,IACnB,KAAK,QAAUA,EACf,KAAK,KAAK,SAAU,CAACA,CAAK,CAAC,EAC3B,KAAK,KAAK,OAAQ,CAACA,CAAK,CAAC,EAE7B,CASA,SAAgB,CACd,KAAK,IAAI,IAAI,SAAU,KAAK,aAAa,EACzC,KAAK,cAAc,QAAS6B,GAAUA,EAAM,CAAC,EAC7C,KAAK,WAAa,IAAI,IACtB,KAAK,IAAI,QAAQ,CACnB,CACF,ECjGaC,GAAW,kBACXC,GAAiD,SACjDC,GAAgD,MPU7DC,GAAYH,GAAUC,GAAaC,EAAU,EAM7C,IAAME,GAAkC,CACtC,gBAAiB,EACnB,EAEqBC,GAArB,cAKU/C,EAAoB,CAY5B,YACES,EACAD,EACAwC,EAAuCF,GACvC,OACA,MAAM,EAZR,KAAQ,cAAmC,CAAC,EAK5C,KAAO,eAA2C,IAAI,IAiEtD,KAAQ,cAAgB,CAAC,CACvB,OAAAG,EACA,QAAAC,EACA,MAAAjC,CACF,IAIM,OAEJ,GADAgC,EAAO,QAAQ,KAAK,mBAAmB,EACnC,KAAK,QAAQ,gBACf,QAAWE,KAAUlC,EACd,KAAK,eAAe,IAAIkC,EAAO,IAAI,GACtCA,EAAO,KAAK,EAIlB,QAAWA,KAAUD,EACf,KAAK,eAAe,IAAIC,EAAO,IAAI,KACrCtC,EAAA,KAAK,eAAe,IAAIsC,EAAO,IAAI,IAAnC,MAAAtC,EAAsC,UACtC,KAAK,eAAe,OAAOsC,EAAO,IAAI,EAG5C,EAEA,KAAQ,UAAY,CAAC9B,EAAgB+B,IAAkB,CACrD,KAAK,KAAK,WAAW/B,EAAQ+B,CAAI,CACnC,EAEA,KAAQ,SAAW,CAACZ,EAAgBY,IAAkB,CACpD,KAAK,KAAK,UAAUZ,EAAQY,CAAI,CAClC,EAEA,KAAQ,oBAAuBD,GAAwB,OACrD,GAAI,KAAK,eAAe,IAAIA,EAAO,IAAI,EAAG,EAExCtC,EAAA,KAAK,eAAe,IAAIsC,EAAO,IAAI,IAAnC,MAAAtC,EAAsC,UACtC,MACF,CACA,IAAMwC,EAAU,IAAI3B,GAAY,CAC9B,IAAKyB,EACL,OAAQ,GACR,UAAW,KAAK,UAChB,SAAU,KAAK,QACjB,CAAC,EACD,KAAK,eAAe,IAAIA,EAAO,KAAME,CAAO,CAC9C,EAGA,KAAO,WAAcD,GAA0B,CAC7C,QAAWD,KAAU,KAAK,QAAQ,QAChC,GAAIA,EAAO,OAASC,EAClB,OAAAD,EAAO,KAAK,EACL,GAIX,MAAO,EACT,EAEA,KAAQ,QAAU,IAAM,OAMtB,KAAK,QAAQ,WACXtC,EAAA,KAAK,KAAK,QAAQ,IAAlB,YAAAA,EAAqB,eAAgB,KAAK,QAAQ,SACpD,KAAK,UAAU,SAAW,KAAK,QAAQ,SAEvC,KAAK,eAAe,QAAQ,EAC5B,OAAW,CAACyC,EAAGD,CAAO,IAAK,KAAK,eAC9BA,EAAQ,QAAQ,CAEpB,EAnIE,KAAK,QAAU7C,EACf,KAAK,KAAOC,EACZ,KAAK,QAAUuC,EACf,KAAK,eAAiB,IAAItB,GAAY,CACpC,IAAAlB,EACA,OAAQ,GACR,UAAW,KAAK,UAChB,SAAU,KAAK,QACjB,CAAC,EAED,IAAM+C,GAAe1C,EAAA,KAAK,KAAK,QAAQ,IAAlB,YAAAA,EAAqB,aACtC0C,IACF,KAAK,QAAQ,SAAWA,GAE1B,KAAK,UAAY,IAAIhD,GAAU,KAAK,QAAS,KAAK,IAAI,EAEtD,KAAK,cAAc,KACjB,KAAK,KAAK,OAAO,OAAO,UAAWiD,GAAW,CACxCA,IAAW,YACb,KAAK,eAAe,QAAQ,EAE5B,KAAK,eAAe,OAAS,EAEjC,CAAC,CACH,EAEA,KAAK,cAAc,KACjB,KAAK,KAAK,OAAO,KAAK,UAAWC,GAAY,OAC3C,GAAM,CAAE,KAAAC,CAAK,EAAID,EACjB,GAAIC,IAASC,GAAc,YAEzB,OAEF,GAAM,CAAE,YAAA7B,EAAa,OAAAT,EAAQ,KAAA+B,CAAK,EAAIK,EAElCL,IAAS,QACXvC,EAAA,KAAK,eACF,IAAIuC,CAAI,IADX,MAAAvC,EAEI,mBAAmB,CAAE,OAAAQ,EAAQ,YAAAS,CAAY,GAE7C,KAAK,eAAe,mBAAmB,CAAE,OAAAT,EAAQ,YAAAS,CAAY,CAAC,CAElE,CAAC,CACH,EAEA,KAAK,eAAe,GAAG,SAAU,IAAM,CACrC,IAAMlB,EAAQ,KAAK,eAAe,OAClC,OAAW,CAAC0C,EAAGD,CAAO,IAAK,KAAK,eAC9BA,EAAQ,QAAQ,EAElB,KAAK,KAAK,SAAU,CAACzC,CAAK,CAAC,EAC3B,KAAK,KAAK,OAAQ,CAACA,CAAK,CAAC,CAC3B,CAAC,EACD,KAAK,QAAQ,GAAG,UAAW,KAAK,aAAa,EAC7C,KAAK,QAAQ,CACf,CA+EA,IAAI,QAAkB,CACpB,OAAO,KAAK,eAAe,MAC7B,CAEA,SAAgB,CACd,KAAK,cAAc,QAAS6B,GAAUA,EAAM,CAAC,EAC7C,KAAK,UAAU,QAAQ,EACvB,KAAK,eAAe,QAAQ,EAC5B,KAAK,WAAa,IAAI,IACtB,OAAW,CAACa,EAAGD,CAAO,IAAK,KAAK,eAC9BA,EAAQ,QAAQ,EAElB,KAAK,eAAe,MAAM,EAC1B,MAAM,QAAQ,CAChB,CAGA,YAAmB,CAEnB,CAEA,SAAgB,CAEhB,CACF,EQ7MA,OAAO,aAAeO,GAMtB,OAAO,eAAiBC,GAGxB,OAAO,gBAAkBC,GAGzB,OAAO,gBAAkBC,GAGzB,OAAO,WAAaC,GAGpB,OAAO,cAAgBC,GAGvB,OAAO,WAAaC,GAGpB,OAAO,WAAaC,GAGpB,OAAO,wBAA0BC,GAMjC,OAAO,aAAeC,GAGtB,OAAO,aAAeC,GAGtB,OAAO,iBAAmBC,GAG1B,OAAO,gBAAkBC,GAGzB,OAAO,cAAgBC,GAGvB,OAAO,iBAAmBC,GAG1B,OAAO,iBAAmBC,GAG1B,OAAO,gBAAkBC,GAGzB,OAAO,qBAAuBC,GAG9B,OAAO,eAAiBC,GAGxB,OAAO,kBAAoBC,GAG3B,OAAO,qBAAuBC,GAG9B,OAAO,cAAgBC,GAGvB,OAAO,gBAAkBC,GAGzB,OAAO,YAAcC,GAGrB,OAAO,gBAAkBC,GAGzB,OAAO,kBAAoBC,GAG3B,OAAO,eAAiBC,GAGxB,OAAO,YAAcC,GAGrB,OAAO,WAAaC,GAGpB,OAAO,eAAiBC,GAGxB,OAAO,eAAiBC,GAGxB,OAAO,kBAAoBC,GAG3B,OAAO,iBAAmBC,GAG1B,OAAO,mBAAqBC,GAG5B,OAAO,gBAAkBC,GAGzB,OAAO,gBAAkBC,GAGzB,OAAO,mBAAqBC,GAG5B,OAAO,oBAAsBC,GAG7B,OAAO,0BAA4BC,GAGnC,OAAO,qBAAuBC,GAG9B,OAAO,QAAUC,GAGjB,OAAO,mBAAqBC,GAG5B,OAAO,yBAA2BC",
  "names": ["OrderedMap", "content", "key", "i", "found", "value", "newKey", "self", "place", "without", "f", "map", "result", "prop", "dist_default", "findDiffStart", "a", "b", "pos", "i", "childA", "childB", "j", "inner", "findDiffEnd", "posA", "posB", "iA", "iB", "size", "same", "minSize", "Fragment", "_Fragment", "content", "from", "to", "f", "nodeStart", "parent", "child", "end", "start", "blockSeparator", "leafText", "text", "first", "node", "nodeText", "other", "last", "result", "index", "current", "copy", "found", "p", "otherPos", "round", "retIndex", "curPos", "cur", "n", "schema", "value", "array", "joined", "nodes", "offset", "compareDeep", "Mark", "_Mark", "type", "attrs", "set", "placed", "obj", "_", "json", "marks", "ReplaceError", "Slice", "_Slice", "openStart", "openEnd", "fragment", "insertInto", "removeRange", "openIsolating", "indexTo", "offsetTo", "dist", "insert", "replace", "$from", "$to", "slice", "replaceOuter", "depth", "close", "prepareSliceForReplace", "replaceThreeWay", "replaceTwoWay", "checkJoin", "main", "sub", "joinable", "$before", "$after", "addNode", "target", "addRange", "$start", "$end", "startIndex", "endIndex", "$along", "extra", "ResolvedPos", "_ResolvedPos", "path", "parentOffset", "val", "dOff", "tmp", "after", "next", "pred", "d", "NodeRange", "str", "doc", "rem", "resolveCache", "cached", "resolveCachePos", "resolveCacheSize", "emptyAttrs", "Node", "_Node", "startPos", "includeParents", "name", "wrapMarks", "match", "replacement", "one", "two", "m", "TextNode", "_TextNode", "base", "ContentMatch", "_ContentMatch", "validEnd", "string", "nodeTypes", "stream", "TokenStream", "expr", "parseExpr", "dfa", "nfa", "checkForDeadEnds", "frag", "toEnd", "seen", "search", "types", "finished", "tp", "computed", "active", "scan", "out", "tok", "exprs", "parseExprSeq", "parseExprSubscript", "parseExprAtom", "parseExprRange", "parseNum", "min", "max", "resolveName", "typeName", "connect", "compile", "edge", "term", "edges", "loop", "cmp", "nullFrom", "labeled", "explore", "states", "state", "work", "dead", "defaultAttrs", "defaults", "attrName", "attr", "computeAttrs", "built", "given", "initAttrs", "Attribute", "NodeType", "_NodeType", "spec", "before", "matched", "markType", "topType", "options", "MarkType", "_MarkType", "rank", "Schema", "instanceSpec", "prop", "dist_default", "contentExprCache", "contentExpr", "markExpr", "gatherMarks", "excl", "mark", "ok", "DOMParser", "_DOMParser", "rules", "rule", "dom", "context", "ParseContext", "matches", "style", "priority", "blockTags", "ignoreTags", "listTags", "OPT_PRESERVE_WS", "OPT_PRESERVE_WS_FULL", "OPT_OPEN_LEFT", "wsOptionsFor", "preserveWhitespace", "NodeContext", "pendingMarks", "solid", "fill", "wrap", "nextType", "pending", "markMayApply", "parser", "isOpen", "topNode", "topContext", "topOptions", "parseStyles", "addMarks", "removeMarks", "top", "nodeBefore", "domNodeBefore", "matchAfter", "ruleID", "normalizeList", "sync", "oldNeedsBlock", "styles", "add", "remove", "continueAfter", "nodeType", "startIn", "contentDOM", "route", "cx", "block", "preserveWS", "textNode", "parts", "option", "useRoot", "minDepth", "part", "$context", "deflt", "findSameMarkInSet", "upto", "level", "stashMark", "prevItem", "selector", "re", "DOMSerializer", "_DOMSerializer", "keep", "rendered", "markDOM", "inline", "toDOM", "structure", "xmlNS", "tagName", "space", "innerContent", "gatherToDOM", "lower16", "factor16", "makeRecover", "index", "offset", "recoverIndex", "value", "recoverOffset", "DEL_BEFORE", "DEL_AFTER", "DEL_ACROSS", "DEL_SIDE", "MapResult", "pos", "delInfo", "recover", "StepMap", "_StepMap", "ranges", "inverted", "diff", "assoc", "simple", "oldIndex", "newIndex", "i", "start", "oldSize", "newSize", "end", "side", "result", "del", "f", "oldStart", "newStart", "n", "Mapping", "_Mapping", "maps", "mirror", "from", "to", "map", "mirrors", "mapping", "startSize", "mirr", "m", "totalSize", "inverse", "corr", "stepsByID", "Step", "other", "schema", "json", "type", "id", "stepClass", "StepResult", "_StepResult", "doc", "failed", "message", "slice", "e", "ReplaceError", "mapFragment", "fragment", "parent", "mapped", "child", "Fragment", "AddMarkStep", "_AddMarkStep", "mark", "oldSlice", "$from", "Slice", "node", "RemoveMarkStep", "_RemoveMarkStep", "AddNodeMarkStep", "_AddNodeMarkStep", "updated", "newSet", "RemoveNodeMarkStep", "_RemoveNodeMarkStep", "ReplaceStep", "_ReplaceStep", "structure", "contentBetween", "ReplaceAroundStep", "_ReplaceAroundStep", "gapFrom", "gapTo", "insert", "gap", "inserted", "dist", "depth", "next", "addMark", "tr", "removed", "added", "removing", "adding", "marks", "s", "removeMark", "matched", "step", "toRemove", "MarkType", "set", "found", "style", "j", "clearIncompatible", "parentType", "match", "replSteps", "cur", "allowed", "newline", "fill", "canCut", "liftTarget", "range", "content", "endIndex", "lift", "target", "$to", "gapStart", "gapEnd", "before", "openStart", "d", "splitting", "after", "openEnd", "findWrapping", "nodeType", "attrs", "innerRange", "around", "findWrappingOutside", "inner", "findWrappingInside", "withAttrs", "startIndex", "outer", "inside", "innerMatch", "wrap", "wrappers", "setBlockType", "mapFrom", "canChangeType", "startM", "endM", "$pos", "setNodeMarkup", "newNode", "canSplit", "typesAfter", "base", "innerType", "rest", "overrideChild", "baseType", "split", "typeAfter", "canJoin", "joinable", "a", "b", "joinPoint", "dir", "join", "insertPoint", "dropPoint", "pass", "bias", "insertPos", "fits", "wrapping", "replaceStep", "fitsTrivially", "Fitter", "unplaced", "fit", "moveInline", "placedSize", "startDepth", "sliceDepth", "contentAt", "first", "frontierDepth", "inject", "openAtEnd", "dropFromFragment", "taken", "add", "openEndCount", "matches", "closeNodeStart", "toEnd", "addToFragment", "top", "level", "contentAfterFits", "scan", "dropInner", "close", "count", "frag", "open", "invalidMarks", "definesContent", "replaceRange", "targetDepths", "coveredDepths", "preferredTarget", "spec", "preferredTargetIndex", "leftNodes", "preferredDepth", "leftNode", "def", "openDepth", "targetDepth", "expand", "closeFragment", "startSteps", "oldOpen", "newOpen", "replaceRangeWith", "point", "deleteRange", "covered", "last", "minDepth", "AttrStep", "_AttrStep", "attr", "name", "DocAttrStep", "_DocAttrStep", "TransformError", "err", "Transform", "Mark", "classesById", "Selection", "$anchor", "$head", "ranges", "SelectionRange", "i", "tr", "content", "Slice", "lastNode", "lastParent", "mapFrom", "$from", "$to", "mapping", "selectionToInsertionEnd", "node", "from", "to", "$pos", "dir", "textOnly", "inner", "TextSelection", "findSelectionIn", "depth", "found", "bias", "AllSelection", "doc", "json", "cls", "id", "selectionClass", "warnedAboutTextSelection", "checkTextSelection", "_TextSelection", "marks", "other", "TextBookmark", "anchor", "head", "dPos", "_TextBookmark", "NodeSelection", "_NodeSelection", "$end", "deleted", "pos", "Fragment", "NodeBookmark", "_NodeBookmark", "_AllSelection", "sel", "AllBookmark", "index", "text", "child", "startLen", "last", "step", "ReplaceStep", "ReplaceAroundStep", "map", "end", "_from", "_to", "_newFrom", "newTo", "UPDATED_SEL", "UPDATED_MARKS", "UPDATED_SCROLL", "Transaction", "Transform", "state", "selection", "Mark", "mark", "time", "slice", "inheritMarks", "schema", "key", "value", "_", "bind", "f", "self", "FieldDesc", "name", "desc", "baseFields", "config", "instance", "_marks", "_old", "prev", "Configuration", "plugins", "plugin", "EditorState", "_EditorState", "ignore", "rootTr", "trs", "newState", "seen", "haveNew", "n", "oldState", "j", "newInstance", "fields", "field", "$config", "pluginFields", "result", "m", "prop", "Node", "bindProps", "obj", "target", "val", "Plugin", "spec", "createKey", "keys", "PluginKey", "domIndex", "node", "index", "parentNode", "parent", "reusedRange", "textRange", "from", "to", "range", "isEquivalentPosition", "off", "targetNode", "targetOff", "scanFor", "atomElements", "dir", "nodeSize", "hasBlockDesc", "isOnEdge", "offset", "atStart", "atEnd", "dom", "desc", "cur", "selectionCollapsed", "domSel", "keyEvent", "keyCode", "key", "event", "deepActiveElement", "doc", "elt", "caretFromPoint", "x", "y", "pos", "_", "nav", "agent", "ie_edge", "ie_upto10", "ie_11up", "ie", "ie_version", "gecko", "_chrome", "chrome", "chrome_version", "safari", "ios", "mac", "windows", "android", "webkit", "webkit_version", "windowRect", "getSide", "value", "side", "clientRect", "rect", "scaleX", "scaleY", "scrollRectIntoView", "view", "startDOM", "scrollThreshold", "scrollMargin", "atTop", "bounding", "moveX", "moveY", "startX", "startY", "dX", "dY", "storeScrollPos", "refDOM", "refTop", "localRect", "scrollStack", "stack", "resetScrollPos", "newRefTop", "restoreScrollStack", "dTop", "i", "top", "left", "preventScrollSupported", "focusPreventScroll", "stored", "findOffsetInNode", "coords", "closest", "dxClosest", "coordsClosest", "rowBot", "rowTop", "firstBelow", "coordsBelow", "child", "childIndex", "rects", "dx", "findOffsetInText", "len", "singleRect", "inRect", "targetKludge", "posFromElement", "bias", "posFromCaret", "outsideBlock", "sawBlock", "elementFromPoint", "element", "box", "startI", "j", "posAtCoords", "caret", "p", "next", "prev", "nonZero", "target", "first", "BIDI", "coordsAtPos", "atom", "supportEmptyRange", "rectBefore", "rectAfter", "flattenV", "takeSide", "before", "flattenH", "after", "withFlushedState", "state", "f", "viewState", "active", "endOfTextblockVertical", "sel", "$pos", "nearest", "boxes", "maybeRTL", "endOfTextblockHorizontal", "$head", "oldNode", "oldOff", "anchorNode", "anchorOffset", "oldBidiLevel", "parentDOM", "newNode", "newOff", "result", "cachedState", "cachedDir", "cachedResult", "endOfTextblock", "NOT_DIRTY", "CHILD_DIRTY", "CONTENT_DIRTY", "NODE_DIRTY", "ViewDesc", "children", "contentDOM", "widget", "mark", "outerDeco", "innerDeco", "nodeName", "size", "domBefore", "domAfter", "search", "onlyNodes", "nodeDOM", "scan", "end", "curPos", "TrailingHackViewDesc", "WidgetViewDesc", "enter", "base", "fromOffset", "toOffset", "childBase", "anchor", "head", "root", "force", "anchorDOM", "headDOM", "brKludge", "domSelExtended", "tmp", "mutation", "startInside", "endInside", "level", "dirty", "self", "wrap", "stop", "CompositionViewDesc", "textDOM", "text", "mut", "MarkViewDesc", "_MarkViewDesc", "inline", "custom", "spec", "DOMSerializer", "copy", "nodes", "replaceNodes", "NodeViewDesc", "_NodeViewDesc", "descObj", "applyOuterDeco", "CustomNodeViewDesc", "TextViewDesc", "rule", "Fragment", "sameOuterDeco", "composition", "localComposition", "compositionInChild", "updater", "ViewTreeUpdater", "iterDeco", "insideNode", "Mark", "compIndex", "renderDescs", "iosHacks", "TextSelection", "textNode", "nearbyTextNode", "textPos", "findTextInFragment", "topNode", "needsWrap", "oldDOM", "patchOuterDeco", "computeOuterDeco", "docViewDesc", "docView", "_TextViewDesc", "skip", "descs", "written", "childDOM", "rm", "OuterDecoLevel", "noDeco", "attrs", "name", "val", "outerDOM", "prevComputed", "curComputed", "curDOM", "deco", "patchAttributes", "prevList", "curList", "prop", "m", "a", "b", "lock", "preMatch", "start", "marks", "keep", "depth", "maxKeep", "found", "markDesc", "targetDesc", "e", "domNode", "nextDOM", "updated", "locked", "wrapper", "ch", "lastChild", "hack", "frag", "parentDesc", "curDesc", "descI", "fI", "matched", "matches", "outer", "compareSide", "onWidget", "onNode", "locals", "decoIndex", "restNode", "parentIndex", "widgets", "cutAt", "d", "oldCSS", "childStart", "str", "replacement", "selectionFromDOM", "origin", "nearestDesc", "inWidget", "$anchor", "selection", "nearestDescNode", "NodeSelection", "selectionBetween", "editorOwnsSelection", "hasSelection", "selectionToDOM", "syncNodeSelection", "curSel", "selectCursorWrapper", "resetEditableFrom", "resetEditableTo", "brokenSelectBetweenUneditable", "temporarilyEditableNear", "resetEditable", "removeClassOnSelectionChange", "setEditable", "img", "clearNodeSelection", "hasFocusAndSelection", "anchorInRightPlace", "moveSelectionBlock", "$side", "$start", "Selection", "apply", "selectHorizontally", "mods", "$newHead", "nodePos", "nodeLen", "isIgnorable", "skipIgnoredNodes", "skipIgnoredNodesBefore", "skipIgnoredNodesAfter", "moveNode", "moveOffset", "isBlockNode", "setSelFocus", "textNodeAfter", "textNodeBefore", "findDirection", "mid", "selectVertically", "$from", "$to", "beyond", "AllSelection", "stopNativeHorizontalDelete", "empty", "nextNode", "tr", "switchEditable", "safariDownArrowBug", "focusNode", "focusOffset", "getMods", "captureKeyDown", "code", "serializeForClipboard", "slice", "context", "content", "openStart", "openEnd", "serializer", "detachedDoc", "firstChild", "wrappers", "wrapMap", "parseFromClipboard", "html", "plainText", "$context", "inCode", "asText", "Slice", "parsed", "schema", "block", "readHTML", "restoreReplacedSpaces", "contextNode", "sliceData", "DOMParser", "inlineParents", "addContext", "closeSlice", "normalizeSiblings", "fragment", "match", "lastWrap", "inLast", "addToSibling", "closeRight", "wrapped", "withWrappers", "sibling", "inner", "fill", "closeRange", "_detachedDoc", "metas", "firstTag", "n", "array", "type", "handlers", "editHandlers", "passiveHandlers", "InputState", "initInput", "handler", "eventBelongsToView", "runCustomHandler", "ensureListeners", "setSelectionOrigin", "destroyInput", "currentHandlers", "dispatchEvent", "_event", "inOrNearComposition", "now", "eventCoords", "isNear", "click", "dy", "runHandlerOnContext", "propName", "inside", "updateSelection", "selectClickedLeaf", "selectClickedNode", "selectedNode", "selectAt", "handleSingleClick", "selectNode", "handleDoubleClick", "handleTripleClick", "defaultTripleClick", "forceDOMFlush", "endComposition", "selectNodeModifier", "flushed", "MouseDown", "targetPos", "timeoutComposition", "scheduleComposeEnd", "delay", "clearComposition", "timestampFromCustomEvent", "forceUpdate", "captureCopy", "brokenClipboardAPI", "cut", "data", "sliceSingleNode", "capturePaste", "plain", "doPaste", "preferPlain", "singleNode", "getText", "clipboardData", "uris", "Dragging", "move", "dragCopyModifier", "mouseDown", "dragging", "eventPos", "$mouse", "insertPos", "dropPoint", "isNode", "beforeInsert", "_from", "_to", "_newFrom", "newTo", "domChangeCount", "$cursor", "compareObjs", "WidgetType", "_WidgetType", "toDOM", "noSpec", "mapping", "span", "oldOffset", "deleted", "Decoration", "other", "InlineType", "_InlineType", "NodeType", "_NodeType", "_Decoration", "none", "DecorationSet", "_DecorationSet", "local", "decorations", "buildTree", "predicate", "childOff", "options", "newLocal", "mapped", "mapChildren", "byPos", "childNode", "childOffset", "baseOffset", "takeSpansForNode", "moveSpans", "withoutNulls", "removed", "dec", "localSet", "DecorationGroup", "removeOverlap", "_DecorationGroup", "members", "mappedDecos", "member", "sorted", "r", "oldChildren", "moved", "oldStart", "oldEnd", "newStart", "newEnd", "dSize", "mustRebuild", "fromLocal", "toLocal", "mapAndGatherRemainingDecorations", "built", "spans", "gather", "set", "hasNulls", "localStart", "subtree", "working", "insertAhead", "viewDecorations", "observeOptions", "useCharData", "SelectionState", "DOMObserver", "handleDOMChange", "mutations", "take", "ancestors", "container", "newSel", "typeOver", "added", "brs", "readSel", "checkCSS", "previousSibling", "nextSibling", "cssChecked", "cssCheckWarned", "safariShadowSelectionRange", "read", "currentAnchor", "parseBetween", "from_", "to_", "find", "startDoc", "parser", "ruleFromNode", "isInline", "readDOMChange", "addedNodes", "compositionID", "$before", "shared", "parse", "compare", "preferredPos", "preferredSide", "change", "findDiff", "resolveSelection", "$fromA", "inlineChange", "nextSel", "looksLikeJoin", "chFrom", "chTo", "storedMarks", "markChange", "isMarkChange", "parsedSel", "curMarks", "prevMarks", "update", "old", "$newStart", "$newEnd", "skipClosingAndOpening", "$next", "fromEnd", "mayOpen", "endA", "endB", "adjust", "isSurrogatePair", "EditorView", "place", "props", "InputState", "checkStateComponent", "getEditable", "updateCursorWrapper", "buildNodeViews", "docViewDesc", "computeDocDeco", "viewDecorations", "DOMObserver", "from", "to", "typeOver", "added", "readDOMChange", "initInput", "prev", "name", "ensureListeners", "prevProps", "updated", "state", "_a", "redraw", "updateSel", "clearComposition", "pluginsChanged", "nodeViews", "changedNodeViews", "innerDeco", "outerDeco", "scroll", "updateDoc", "oldScrollPos", "storeScrollPos", "forceSelUpdate", "ie", "chrome", "selectionContextChanged", "chromeKludge", "anchorInRightPlace", "selectionToDOM", "syncNodeSelection", "resetScrollPos", "startDOM", "f", "NodeSelection", "target", "scrollRectIntoView", "view", "prevState", "i", "plugin", "pluginView", "dragging", "sel", "found", "movedPos", "Dragging", "propName", "prop", "value", "plugins", "node", "focusPreventScroll", "cached", "search", "coords", "posAtCoords", "pos", "side", "coordsAtPos", "desc", "offset", "bias", "dir", "endOfTextblock", "html", "event", "doPaste", "text", "destroyInput", "dispatchEvent", "tr", "dispatchTransaction", "safari", "deepActiveElement", "safariShadowSelectionRange", "attrs", "attr", "Decoration", "dom", "sel1", "sel2", "depth", "result", "add", "obj", "a", "b", "nA", "nB", "_", "base", "shift", "mac", "ie", "i", "code", "keyName", "event", "ignoreKey", "name", "mac", "normalizeKeyName", "name", "parts", "result", "alt", "ctrl", "shift", "meta", "i", "mod", "normalize", "map", "copy", "prop", "modifiers", "event", "keymap", "bindings", "Plugin", "keydownHandler", "view", "keyName", "baseName", "direct", "noShift", "base", "fromCode", "deleteSelection", "state", "dispatch", "atBlockStart", "view", "$cursor", "joinBackward", "$cut", "findCutBefore", "range", "target", "liftTarget", "before", "deleteBarrier", "textblockAt", "NodeSelection", "delStep", "replaceStep", "Slice", "tr", "Selection", "joinTextblockBackward", "joinTextblocksAround", "joinTextblockForward", "atBlockEnd", "findCutAfter", "beforeText", "beforePos", "child", "after", "afterText", "afterPos", "step", "ReplaceStep", "TextSelection", "node", "side", "only", "scan", "selectNodeBackward", "$head", "empty", "$pos", "i", "joinForward", "selectNodeForward", "parent", "joinUp", "sel", "nodeSel", "point", "canJoin", "joinPoint", "joinDown", "lift", "$from", "$to", "newlineInCode", "$anchor", "defaultBlockAt", "match", "type", "exitCode", "above", "pos", "createParagraphNear", "AllSelection", "liftEmptyBlock", "canSplit", "splitBlockAs", "splitNode", "atEnd", "deflt", "splitType", "types", "can", "first", "$first", "splitBlock", "selectParentNode", "state", "dispatch", "$from", "to", "pos", "same", "NodeSelection", "selectAll", "AllSelection", "joinMaybeClear", "$pos", "before", "after", "index", "canJoin", "deleteBarrier", "$cut", "conn", "match", "canDelAfter", "end", "wrap", "Fragment", "i", "tr", "ReplaceAroundStep", "Slice", "joinAt", "selAfter", "Selection", "range", "target", "liftTarget", "textblockAt", "at", "afterText", "afterDepth", "selectTextblockSide", "side", "sel", "depth", "TextSelection", "selectTextblockStart", "selectTextblockEnd", "wrapIn", "nodeType", "attrs", "$to", "wrapping", "findWrapping", "setBlockType", "applicable", "from", "node", "chainCommands", "commands", "state", "dispatch", "view", "backspace", "deleteSelection", "joinBackward", "selectNodeBackward", "del", "joinForward", "selectNodeForward", "pcBaseKeymap", "newlineInCode", "createParagraphNear", "liftEmptyBlock", "splitBlock", "exitCode", "selectAll", "macBaseKeymap", "selectTextblockStart", "selectTextblockEnd", "key", "mac", "wrapInList", "listType", "attrs", "state", "dispatch", "$from", "$to", "range", "doJoin", "outerRange", "$insert", "NodeRange", "wrap", "findWrapping", "doWrapInList", "tr", "wrappers", "joinBefore", "content", "Fragment", "i", "ReplaceAroundStep", "Slice", "found", "splitDepth", "splitPos", "parent", "e", "first", "canSplit", "liftListItem", "itemType", "state", "dispatch", "$from", "$to", "range", "node", "liftToOuterList", "liftOutOfList", "tr", "end", "endOfList", "ReplaceAroundStep", "Slice", "Fragment", "NodeRange", "target", "liftTarget", "after", "canJoin", "list", "pos", "i", "e", "$start", "item", "atStart", "atEnd", "parent", "indexBefore", "start", "sinkListItem", "startIndex", "nodeBefore", "nestedBefore", "inner", "slice", "before", "createChainableState", "config", "state", "transaction", "selection", "doc", "storedMarks", "__spreadProps", "__spreadValues", "CommandManager", "props", "rawCommands", "editor", "view", "tr", "name", "command", "args", "callback", "startTr", "shouldDispatch", "callbacks", "hasStartTransaction", "run", "chain", "dispatch", "formattedCommands", "EventEmitter", "event", "fn", "getExtensionField", "extension", "field", "context", "splitExtensions", "extensions", "baseExtensions", "nodeExtensions", "markExtensions", "getAttributesFromExtensions", "extensionAttributes", "nodeAndMarkExtensions", "defaultAttribute", "addGlobalAttributes", "globalAttribute", "type", "attribute", "addAttributes", "attributes", "mergedAttr", "getNodeType", "nameOrType", "schema", "mergeAttributes", "objects", "item", "items", "mergedAttributes", "key", "value", "valueClasses", "existingClasses", "insertClasses", "valueClass", "getRenderedAttributes", "nodeOrMark", "isFunction", "callOrReturn", "isEmptyObject", "fromString", "injectExtensionAttributesToParseRule", "parseRule", "node", "oldAttributes", "newAttributes", "cleanUpSchemaItem", "data", "getSchemaByResolvedExtensions", "allAttributes", "topNode", "_a", "nodes", "extraNodeFields", "fields", "e", "extendNodeSchema", "extensionAttribute", "parseHTML", "renderHTML", "renderText", "marks", "extraMarkFields", "extendMarkSchema", "mark", "Schema", "getSchemaTypeByName", "isExtensionRulesEnabled", "enabled", "enabledExtension", "getTextContentFromNodes", "$from", "maxMatch", "textBefore", "sliceEndPos", "pos", "parent", "index", "chunk", "_b", "isRegExp", "InputRule", "inputRuleMatcherHandler", "text", "find", "inputRuleMatch", "result", "from", "to", "rules", "plugin", "matched", "rule", "match", "range", "commands", "can", "inputRulesPlugin", "Plugin", "prev", "stored", "$cursor", "isNumber", "PasteRule", "pasteRuleMatcherHandler", "matches", "pasteRuleMatch", "pasteEvent", "dropEvent", "handlers", "resolvedFrom", "resolvedTo", "textToMatch", "start", "end", "handler", "pasteRulesPlugin", "dragSourceElement", "isPastedFromProseMirror", "isDroppedFromProseMirror", "handleDragstart", "_view", "html", "transactions", "oldState", "isPaste", "isDrop", "chainableState", "findDuplicates", "filtered", "el", "ExtensionManager", "_ExtensionManager", "onBeforeCreate", "onCreate", "onUpdate", "onSelectionUpdate", "onTransaction", "onFocus", "onBlur", "onDestroy", "resolvedExtensions", "duplicatedNames", "addExtensions", "a", "b", "priorityA", "priorityB", "addCommands", "inputRules", "pasteRules", "allPlugins", "plugins", "addKeyboardShortcuts", "defaultBindings", "Mark", "bindings", "shortcut", "method", "keyMapPlugin", "keymap", "addInputRules", "addPasteRules", "addProseMirrorPlugins", "proseMirrorPlugins", "addNodeView", "nodeview", "getPos", "decorations", "HTMLAttributes", "getType", "isPlainObject", "mergeDeep", "target", "source", "output", "Extension", "_Extension", "options", "extendedConfig", "getTextBetween", "startNode", "blockSeparator", "textSerializers", "separated", "textSerializer", "getTextSerializersFromSchema", "ClipboardTextSerializer", "PluginKey", "ranges", "blur", "clearContent", "emitUpdate", "clearNodes", "$to", "mapping", "$mappedFrom", "$mappedTo", "nodeRange", "targetLiftDepth", "liftTarget", "defaultType", "createParagraphNear", "originalCreateParagraphNear", "cut", "originRange", "targetPos", "contentSlice", "newPos", "TextSelection", "deleteCurrentNode", "currentNode", "$pos", "depth", "deleteNode", "typeOrName", "deleteRange", "deleteSelection", "originalDeleteSelection", "enter", "exitCode", "originalExitCode", "objectIncludes", "object1", "object2", "keys", "findMarkInSet", "isMarkInSet", "getMarkRange", "startIndex", "startPos", "endIndex", "endPos", "getMarkType", "extendMarkRange", "newSelection", "first", "i", "isTextSelection", "minMax", "min", "max", "resolveFocusPosition", "position", "selectionAtStart", "Selection", "selectionAtEnd", "minPos", "maxPos", "isiOS", "focus", "delayedFocus", "isSameSelection", "forEach", "insertContent", "removeWhitespaces", "children", "child", "elementFromString", "wrappedValue", "createNodeFromContent", "content", "Fragment", "error", "parser", "DOMParser", "selectionToInsertionEnd", "startLen", "bias", "last", "step", "ReplaceStep", "ReplaceAroundStep", "map", "_from", "_to", "_newFrom", "newTo", "isFragment", "nodeOrFragment", "insertContentAt", "isOnlyTextContent", "isOnlyBlockContent", "v", "joinUp", "originalJoinUp", "joinDown", "originalJoinDown", "joinBackward", "originalJoinBackward", "joinForward", "originalJoinForward", "joinItemBackward", "point", "joinPoint", "joinItemForward", "joinTextblockBackward", "originalCommand", "joinTextblockForward", "isMacOS", "normalizeKeyName", "parts", "alt", "ctrl", "shift", "meta", "mod", "keyboardShortcut", "capturedTransaction", "f", "newStep", "isNodeActive", "empty", "nodeRanges", "relativeFrom", "relativeTo", "selectionRange", "matchedNodeRanges", "sum", "lift", "originalLift", "liftEmptyBlock", "originalLiftEmptyBlock", "liftListItem", "originalLiftListItem", "newlineInCode", "originalNewlineInCode", "getSchemaTypeNameByName", "deleteProps", "obj", "propOrProps", "newObj", "prop", "resetAttributes", "nodeType", "markType", "schemaType", "scrollIntoView", "selectAll", "selectNodeBackward", "originalSelectNodeBackward", "selectNodeForward", "originalSelectNodeForward", "selectParentNode", "originalSelectParentNode", "selectTextblockEnd", "originalSelectTextblockEnd", "selectTextblockStart", "originalSelectTextblockStart", "createDocument", "parseOptions", "setContent", "document", "getMarkAttributes", "markItem", "combineTransactionSteps", "oldDoc", "transform", "Transform", "defaultBlockAt", "findChildren", "predicate", "nodesWithPos", "findChildrenInRange", "findParentNodeClosestToPos", "findParentNode", "getHTMLFromFragment", "fragment", "documentFragment", "DOMSerializer", "container", "getSchema", "getText", "node", "options", "range", "getTextBetween", "getNodeAttributes", "state", "typeOrName", "type", "getNodeType", "from", "to", "nodes", "node", "nodeItem", "__spreadValues", "getAttributes", "schemaType", "getSchemaTypeNameByName", "getMarkAttributes", "removeDuplicates", "array", "by", "seen", "item", "key", "simplifyChangedRanges", "changes", "uniqueChanges", "change", "index", "_", "i", "otherChange", "getChangedRanges", "transform", "mapping", "steps", "stepMap", "ranges", "newStart", "newEnd", "oldStart", "oldEnd", "getMarksBetween", "from", "to", "doc", "marks", "mark", "$pos", "range", "getMarkRange", "__spreadValues", "node", "pos", "getSplittedAttributes", "extensionAttributes", "typeName", "attributes", "name", "extensionAttribute", "item", "isMarkActive", "state", "typeOrName", "empty", "ranges", "type", "getMarkType", "mark", "objectIncludes", "selectionRange", "markRanges", "$from", "$to", "from", "to", "node", "pos", "relativeFrom", "relativeTo", "range", "matchedRange", "markRange", "sum", "excludedRange", "isActive", "isNodeActive", "schemaType", "getSchemaTypeNameByName", "isList", "name", "extensions", "nodeExtensions", "splitExtensions", "extension", "item", "context", "group", "callOrReturn", "getExtensionField", "isNodeEmpty", "node", "defaultContent", "_a", "content", "isNodeSelection", "value", "NodeSelection", "posToDOMRect", "view", "from", "to", "maxPos", "resolvedFrom", "minMax", "resolvedEnd", "start", "end", "top", "bottom", "left", "right", "width", "height", "data", "__spreadProps", "__spreadValues", "canSetMark", "state", "tr", "newMarkType", "selection", "cursor", "isTextSelection", "currentMarks", "mark", "ranges", "$from", "$to", "someNodeSupportsMark", "_pos", "parent", "parentAllowsMarkType", "currentMarksAllowMarkType", "otherMark", "setMark", "typeOrName", "attributes", "dispatch", "empty", "type", "getMarkType", "oldAttributes", "getMarkAttributes", "range", "pos", "trimmedFrom", "trimmedTo", "setMeta", "key", "setNode", "chain", "getNodeType", "commands", "setBlockType", "updatedState", "setNodeSelection", "position", "doc", "setTextSelection", "minPos", "TextSelection", "sinkListItem", "originalSinkListItem", "ensureMarks", "splittableMarks", "marks", "filteredMarks", "splitBlock", "keepMarks", "editor", "extensionAttributes", "newAttributes", "getSplittedAttributes", "canSplit", "atEnd", "deflt", "defaultBlockAt", "types", "can", "first", "$first", "splitListItem", "grandParent", "wrap", "Fragment", "depthBefore", "d", "depthAfter", "newNextTypeAttributes", "nextType", "Slice", "sel", "n", "newTypeAttributes", "storedMarks", "joinListBackwards", "listType", "list", "findParentNode", "before", "nodeBefore", "canJoin", "joinListForwards", "after", "nodeAfter", "toggleList", "listTypeOrName", "itemTypeOrName", "itemType", "parentList", "canWrapInList", "toggleMark", "options", "extendEmptyMarkRange", "isMarkActive", "toggleNode", "toggleTypeOrName", "toggleType", "isNodeActive", "toggleWrap", "undoInputRule", "plugins", "i", "plugin", "undoable", "toUndo", "j", "unsetAllMarks", "unsetMark", "attrs", "getMarkRange", "updateAttributes", "nodeType", "markType", "schemaType", "getSchemaTypeNameByName", "wrapIn", "originalWrapIn", "wrapInList", "originalWrapInList", "Commands", "Extension", "Editable", "Plugin", "PluginKey", "FocusEvents", "event", "transaction", "Keymap", "handleBackspace", "$anchor", "$parentPos", "parentIsIsolating", "parentPos", "isAtStart", "Selection", "handleDelete", "baseKeymap", "pcKeymap", "macKeymap", "isiOS", "isMacOS", "transactions", "oldState", "newState", "allFrom", "allEnd", "createChainableState", "CommandManager", "Tabindex", "NodePos", "_NodePos", "$pos", "children", "offset", "targetPos", "selector", "currentNode", "nodeAttributes", "attrKeys", "index", "firstItemOnly", "nodes", "oldSelection", "style", "createStyleTag", "nonce", "suffix", "tiptapStyleTag", "styleNode", "Editor", "EventEmitter", "editable", "emitUpdate", "handlePlugins", "isFunction", "nameOrPluginKey", "allExtensions", "ExtensionManager", "createDocument", "resolveFocusPosition", "EditorView", "EditorState", "dom", "fn", "step", "selectionHasChanged", "focus", "blur", "nameOrType", "getAttributes", "nameOrAttributes", "attributesOrUndefined", "isActive", "getHTMLFromFragment", "blockSeparator", "textSerializers", "getText", "getTextSerializersFromSchema", "markInputRule", "config", "InputRule", "match", "captureGroup", "fullMatch", "startSpaces", "textStart", "textEnd", "getMarksBetween", "markEnd", "nodeInputRule", "newNode", "matchStart", "lastChar", "textblockTypeInputRule", "$start", "wrappingInputRule", "config", "InputRule", "state", "range", "match", "chain", "attributes", "callOrReturn", "tr", "blockRange", "wrapping", "findWrapping", "selection", "storedMarks", "splittableMarks", "marks", "filteredMarks", "mark", "nodeType", "before", "canJoin", "Mark", "_Mark", "__spreadValues", "getExtensionField", "options", "extension", "mergeDeep", "extendedConfig", "editor", "currentPos", "currentMarks", "m", "removeMark", "Node", "_Node", "markPasteRule", "config", "PasteRule", "state", "range", "match", "pasteEvent", "attributes", "callOrReturn", "tr", "captureGroup", "fullMatch", "markEnd", "startSpaces", "textStart", "textEnd", "getMarksBetween", "item", "type", "nodePasteRule", "config", "PasteRule", "match", "chain", "range", "pasteEvent", "attributes", "callOrReturn", "Document", "Node", "HardBreak", "Node", "HTMLAttributes", "mergeAttributes", "commands", "chain", "state", "editor", "selection", "storedMarks", "keepMarks", "splittableMarks", "marks", "tr", "dispatch", "filteredMarks", "mark", "Paragraph", "Node", "HTMLAttributes", "mergeAttributes", "commands", "Text", "Node", "Heading", "Node", "level", "node", "HTMLAttributes", "mergeAttributes", "attributes", "commands", "items", "__spreadProps", "__spreadValues", "textblockTypeInputRule", "starInputRegex", "starPasteRegex", "underscoreInputRegex", "underscorePasteRegex", "Bold", "Mark", "node", "value", "HTMLAttributes", "mergeAttributes", "commands", "markInputRule", "markPasteRule", "inputRegex", "pasteRegex", "Code", "Mark", "HTMLAttributes", "mergeAttributes", "commands", "markInputRule", "markPasteRule", "backtickInputRegex", "tildeInputRegex", "CodeBlock", "Node", "element", "languageClassPrefix", "language", "_a", "className", "node", "HTMLAttributes", "mergeAttributes", "attributes", "commands", "empty", "$anchor", "isAtStart", "editor", "state", "selection", "$from", "isAtEnd", "endsWithDoubleNewline", "tr", "doc", "after", "textblockTypeInputRule", "match", "Plugin", "PluginKey", "view", "event", "text", "vscode", "vscodeData", "TextSelection", "deepFreezeEs6", "deepFreeze", "obj", "name", "prop", "Response", "mode", "escapeHTML", "value", "inherit$1", "original", "objects", "result", "key", "SPAN_CLOSE", "emitsWrappingTags", "node", "scopeToCSSClass", "prefix", "pieces", "x", "HTMLRenderer", "parseTree", "options", "text", "className", "newNode", "opts", "TokenTree", "_TokenTree", "scope", "builder", "child", "el", "TokenTreeEmitter", "emitter", "source", "re", "lookahead", "concat", "anyNumberOfTimes", "optional", "args", "stripOptionsFromArgs", "either", "countMatchGroups", "startsWith", "lexeme", "match", "BACKREF_RE", "_rewriteBackreferences", "regexps", "joinWith", "numCaptures", "regex", "offset", "out", "MATCH_NOTHING_RE", "IDENT_RE", "UNDERSCORE_IDENT_RE", "NUMBER_RE", "C_NUMBER_RE", "BINARY_NUMBER_RE", "RE_STARTERS_RE", "SHEBANG", "beginShebang", "m", "resp", "BACKSLASH_ESCAPE", "APOS_STRING_MODE", "QUOTE_STRING_MODE", "PHRASAL_WORDS_MODE", "COMMENT", "begin", "end", "modeOptions", "ENGLISH_WORD", "C_LINE_COMMENT_MODE", "C_BLOCK_COMMENT_MODE", "HASH_COMMENT_MODE", "NUMBER_MODE", "C_NUMBER_MODE", "BINARY_NUMBER_MODE", "REGEXP_MODE", "TITLE_MODE", "UNDERSCORE_TITLE_MODE", "METHOD_GUARD", "END_SAME_AS_BEGIN", "MODES", "skipIfHasPrecedingDot", "response", "scopeClassName", "_parent", "beginKeywords", "parent", "compileIllegal", "compileMatch", "compileRelevance", "beforeMatchExt", "originalMode", "COMMON_KEYWORDS", "DEFAULT_KEYWORD_SCOPE", "compileKeywords", "rawKeywords", "caseInsensitive", "scopeName", "compiledKeywords", "compileList", "keywordList", "keyword", "pair", "scoreForKeyword", "providedScore", "commonKeyword", "seenDeprecations", "error", "message", "warn", "deprecated", "version", "MultiClassError", "remapScopeNames", "regexes", "scopeNames", "emit", "positions", "i", "beginMultiClass", "endMultiClass", "scopeSugar", "MultiClass", "compileLanguage", "language", "langRe", "global", "MultiRegex", "terminators", "s", "matchData", "ResumableMultiRegex", "index", "matcher", "m2", "buildModeRegex", "mm", "term", "compileMode", "cmode", "ext", "keywordPattern", "c", "expandOrCloneMode", "dependencyOnParent", "variant", "HTMLInjectionError", "reason", "html", "escape", "inherit", "NO_MATCH", "MAX_KEYWORD_HITS", "HLJS", "hljs", "languages", "aliases", "plugins", "SAFE_MODE", "LANGUAGE_NOT_FOUND", "PLAINTEXT_LANGUAGE", "shouldNotHighlight", "languageName", "blockLanguage", "block", "classes", "getLanguage", "_class", "highlight", "codeOrLanguageName", "optionsOrCode", "ignoreIllegals", "code", "context", "fire", "_highlight", "codeToHighlight", "continuation", "keywordHits", "keywordData", "matchText", "processKeywords", "top", "modeBuffer", "lastIndex", "buf", "word", "data", "kind", "keywordRelevance", "relevance", "cssClass", "processSubLanguage", "continuations", "highlightAuto", "processBuffer", "emitMultiClass", "max", "klass", "startNewMode", "endOfMode", "matchPlusRemainder", "matched", "doIgnore", "resumeScanAtSamePosition", "doBeginMatch", "newMode", "beforeCallbacks", "cb", "doEndMatch", "endMode", "origin", "processContinuations", "list", "current", "item", "lastMatch", "processLexeme", "textBeforeMatch", "err", "processed", "iterations", "md", "beforeMatch", "processedCount", "justTextHighlightResult", "languageSubset", "plaintext", "results", "autoDetection", "sorted", "a", "b", "best", "secondBest", "updateClassName", "element", "currentLang", "resultLang", "highlightElement", "configure", "userOptions", "initHighlighting", "highlightAll", "initHighlightingOnLoad", "wantsHighlight", "boot", "registerLanguage", "languageDefinition", "lang", "error$1", "registerAliases", "unregisterLanguage", "alias", "listLanguages", "aliasList", "upgradePluginAPI", "plugin", "addPlugin", "event", "deprecateHighlightBlock", "core", "parseNodes", "nodes", "getHighlightNodes", "registered", "aliasOrLanguage", "getDecorations", "doc", "lowlight", "defaultLanguage", "decorations", "findChildren", "from", "to", "decoration", "Decoration", "DecorationSet", "isFunction", "param", "LowlightPlugin", "api", "lowlightPlugin", "Plugin", "PluginKey", "_", "transaction", "decorationSet", "oldState", "newState", "oldNodeName", "newNodeName", "oldNodes", "newNodes", "step", "state", "CodeBlockLowlight", "CodeBlock", "__spreadProps", "__spreadValues", "_a", "starInputRegex", "starPasteRegex", "underscoreInputRegex", "underscorePasteRegex", "Italic", "Mark", "node", "HTMLAttributes", "mergeAttributes", "commands", "markInputRule", "markPasteRule", "inputRegex", "pasteRegex", "Strike", "Mark", "style", "HTMLAttributes", "mergeAttributes", "commands", "shortcuts", "isMacOS", "markInputRule", "markPasteRule", "dropCursor", "options", "Plugin", "editorView", "DropCursorView", "_a", "name", "handler", "e", "prevState", "pos", "$pos", "isBlock", "rect", "before", "after", "node", "nodeRect", "top", "coords", "parent", "parentLeft", "parentTop", "timeout", "event", "disableDropCursor", "disabled", "target", "point", "dropPoint", "Dropcursor", "Extension", "dropCursor", "GapCursor", "_GapCursor", "Selection", "$pos", "doc", "mapping", "Slice", "other", "json", "GapBookmark", "parent", "closedBefore", "closedAfter", "override", "deflt", "dir", "mustMove", "search", "pos", "next", "d", "$cur", "inside", "NodeSelection", "_GapBookmark", "index", "before", "after", "gapCursor", "Plugin", "drawGapCursor", "_view", "$anchor", "$head", "handleClick", "handleKeyDown", "beforeinput", "keydownHandler", "arrow", "axis", "dirStr", "state", "dispatch", "view", "sel", "$start", "TextSelection", "$found", "event", "clickPos", "$from", "insert", "frag", "Fragment", "i", "tr", "node", "DecorationSet", "Decoration", "Gapcursor", "Extension", "gapCursor", "extension", "context", "_a", "callOrReturn", "getExtensionField", "GOOD_LEAF_SIZE", "RopeSequence", "other", "Append", "from", "to", "i", "f", "result", "elt", "values", "Leaf", "prototypeAccessors", "start", "left", "right", "leftLen", "inner", "dist_default", "max_empty_items", "Branch", "_Branch", "items", "eventCount", "state", "preserveItems", "end", "remap", "mapFrom", "transform", "selection", "remaining", "addAfter", "addBefore", "item", "i", "Item", "step", "map", "histOptions", "newItems", "oldItems", "lastItem", "merged", "overflow", "DEPTH_OVERFLOW", "cutOffEvents", "from", "to", "maps", "Mapping", "mirrorPos", "array", "rebasedTransform", "rebasedCount", "rebasedItems", "start", "mapping", "newUntil", "iRebased", "pos", "newMaps", "branch", "count", "upto", "events", "newItem", "last", "dist_default", "n", "cutPoint", "_Item", "mirrorOffset", "other", "HistoryState", "done", "undone", "prevRanges", "prevTime", "prevComposition", "applyTransaction", "history", "tr", "options", "historyTr", "historyKey", "rebased", "closeHistoryKey", "appended", "mustPreserveItems", "rangesFor", "composition", "newGroup", "isAdjacentTo", "mapRanges", "adjacent", "result", "_from", "_to", "ranges", "histTransaction", "dispatch", "redo", "pop", "added", "newHist", "cachedPreserveItems", "cachedPreserveItemsPlugins", "plugins", "historyKey", "PluginKey", "closeHistoryKey", "history", "config", "Plugin", "HistoryState", "Branch", "tr", "hist", "state", "applyTransaction", "view", "e", "inputType", "command", "undo", "redo", "dispatch", "histTransaction", "History", "Extension", "state", "dispatch", "undo", "redo", "history", "inputRegex", "Blockquote", "Node", "HTMLAttributes", "mergeAttributes", "commands", "wrappingInputRule", "ListItem", "Node", "HTMLAttributes", "mergeAttributes", "TextStyle", "Mark", "element", "state", "commands", "attributes", "getMarkAttributes", "value", "inputRegex", "BulletList", "chain", "inputRule", "wrappingInputRule", "HorizontalRule", "Node", "HTMLAttributes", "mergeAttributes", "chain", "state", "$originTo", "currentChain", "tr", "dispatch", "$to", "posAfter", "TextSelection", "NodeSelection", "node", "_a", "nodeInputRule", "ListItem", "Node", "HTMLAttributes", "mergeAttributes", "ListItem", "Node", "HTMLAttributes", "mergeAttributes", "TextStyle", "Mark", "element", "state", "commands", "attributes", "getMarkAttributes", "value", "inputRegex", "OrderedList", "_a", "start", "attributesWithoutStart", "__objRest", "chain", "inputRule", "wrappingInputRule", "match", "node", "__spreadValues", "CharacterCount", "Extension", "options", "node", "word", "Plugin", "PluginKey", "transaction", "state", "limit", "oldSize", "newSize", "pos", "over", "from", "to", "YOUTUBE_REGEX", "YOUTUBE_REGEX_GLOBAL", "isValidYoutubeUrl", "url", "getYoutubeEmbedUrl", "nocookie", "getEmbedUrlFromYoutubeUrl", "options", "allowFullscreen", "autoplay", "ccLanguage", "ccLoadPolicy", "controls", "disableKBcontrols", "enableIFrameApi", "endTime", "interfaceLanguage", "ivLoadPolicy", "loop", "modestBranding", "origin", "playlist", "progressBarColor", "startAt", "id", "matches", "outputUrl", "params", "Youtube", "Node", "commands", "nodePasteRule", "match", "HTMLAttributes", "embedUrl", "mergeAttributes", "Underline", "Mark", "style", "HTMLAttributes", "mergeAttributes", "commands", "readFromCache", "addToCache", "cache", "key", "value", "cachePos", "TableMap", "width", "height", "map", "problems", "pos", "i", "curPos", "left", "top", "right", "bottom", "j", "axis", "dir", "a", "b", "leftA", "rightA", "topA", "bottomA", "leftB", "rightB", "topB", "bottomB", "rect", "result", "seen", "row", "col", "index", "table", "rowStart", "rowEnd", "rowEndIndex", "computeMap", "findWidth", "mapPos", "colWidths", "e", "rowNode", "cellNode", "colspan", "rowspan", "colwidth", "h", "start", "w", "colW", "widthIndex", "prev", "expectedPos", "missing", "tableMap", "badWidths", "findBadColWidths", "hasRowSpan", "rowWidth", "prevRow", "cell", "node", "updated", "attrs", "colWidth", "freshColWidth", "tableNodeTypes", "schema", "result", "name", "type", "role", "tableEditingKey", "PluginKey", "cellAround", "$pos", "d", "cellWrapping", "isInTable", "state", "$head", "selectionCell", "sel", "$cell", "cellNear", "after", "pos", "before", "pointsAtCell", "moveCellForward", "inSameTable", "$cellA", "$cellB", "nextCell", "$pos", "axis", "dir", "table", "map", "TableMap", "tableStart", "moved", "removeColSpan", "attrs", "pos", "result", "__spreadProps", "__spreadValues", "w", "addColSpan", "columnIsHeader", "col", "headerCell", "tableNodeTypes", "row", "CellSelection", "_CellSelection", "Selection", "$anchorCell", "$headCell", "rect", "doc", "cells", "p", "ranges", "cell", "from", "SelectionRange", "mapping", "pointsAtCell", "inSameTable", "tableChanged", "TextSelection", "seen", "rows", "rowContent", "index", "cellRect", "extraLeft", "extraRight", "Fragment", "fragment", "Slice", "tr", "content", "mapFrom", "i", "$from", "$to", "sel", "node", "f", "anchorTop", "headTop", "anchorBottom", "headBottom", "anchorRect", "headRect", "anchorLeft", "headLeft", "anchorRight", "headRight", "other", "json", "anchorCell", "headCell", "CellBookmark", "_CellBookmark", "anchor", "head", "drawCellSelection", "state", "Decoration", "DecorationSet", "isCellBoundarySelection", "afterFrom", "beforeTo", "depth", "d", "isTextSelectionAcrossCells", "fromCellBoundaryNode", "toCellBoundaryNode", "normalizeSelection", "allowTableNodeSelection", "normalize", "role", "NodeSelection", "$cell", "start", "lastCell", "fixTablesKey", "PluginKey", "changedDescendants", "old", "cur", "offset", "oldSize", "curSize", "outer", "j", "child", "scan", "e", "fixTables", "oldState", "check", "fixTable", "tablePos", "mustAdd", "prob", "first", "last", "end", "add", "nodes", "side", "pastedCells", "slice", "openStart", "openEnd", "schema", "left", "right", "fitSlice", "ensureRectangular", "widths", "rowspan", "colspan", "r", "width", "empty", "nodeType", "Transform", "clipCells", "height", "newWidth", "newHeight", "added", "newRows", "frag", "source", "growTable", "types", "emptyHead", "rowEnd", "rowNode", "start2", "header", "emptyRow", "isolateHorizontal", "top", "found", "cellTop", "cellLeft", "isolateVertical", "bottom", "updatePos", "insertCells", "dispatch", "recomp", "to", "handleKeyDown", "keydownHandler", "arrow", "shiftArrow", "deleteCellSelection", "maybeSetSelection", "selection", "view", "atEndOfCell", "$next", "newSel", "cellSel", "$head", "baseContent", "handleTripleClick", "cellAround", "handlePaste", "_", "isInTable", "selectionCell", "handleMouseDown", "startEvent", "_a", "startDOMCell", "domInCell", "$anchor", "setCellSelection", "cellUnderMouse", "$anchor2", "event", "starting", "tableEditingKey", "stop", "move", "_event", "parent", "cellPos", "dirStr", "dom", "mousePos", "TableView", "cellMinWidth", "updateColumnsOnResize", "record", "colgroup", "overrideCol", "overrideValue", "totalWidth", "fixedWidth", "nextDOM", "colwidth", "hasWidth", "cssWidth", "after", "columnResizingPluginKey", "columnResizing", "handleWidth", "View", "lastColumnResizable", "plugin", "Plugin", "ResizeState", "prev", "pluginState", "handleMouseMove", "handleMouseLeave", "handleMouseDown2", "handleDecorations", "_ResizeState", "activeHandle", "dragging", "action", "handle", "target", "domCellAround", "edgeCell", "updateHandle", "currentColWidth", "finish", "event2", "pluginState2", "updateColumnWidth", "draggedWidth", "dragged", "displayColumnWidth", "domWidth", "parts", "value", "mapIndex", "zeroes", "n", "decorations", "selectedRect", "addColumn", "refColumn", "type", "addColumnBefore", "addColumnAfter", "removeColumn", "mapStart", "deleteColumn", "rowIsHeader", "addRow", "rowPos", "refRow", "addRowBefore", "addRowAfter", "removeRow", "nextRow", "copy", "newPos", "deleteRow", "isEmpty", "c", "cellsOverlapRectangle", "indexTop", "indexLeft", "indexBottom", "indexRight", "mergeCells", "mergedPos", "mergedCell", "mapped", "splitCell", "nodeTypes", "splitCellWithType", "getCellType", "cellNode", "cellWrapping", "baseAttrs", "setCellAttr", "name", "deprecated_toggleHeader", "isHeaderEnabledByType", "cellPositions", "toggleHeader", "options", "isHeaderRowEnabled", "isHeaderColumnEnabled", "selectionStartsAt", "cellsRect", "newType", "relativeCellPos", "toggleHeaderRow", "toggleHeaderColumn", "toggleHeaderCell", "findNextCell", "before", "lastChild", "rowStart", "goToNextCell", "direction", "moveCellForward", "deleteTable", "tableEditing", "set", "deleted", "updateColumns", "node", "colgroup", "table", "cellMinWidth", "overrideCol", "overrideValue", "totalWidth", "fixedWidth", "nextDOM", "row", "i", "col", "colspan", "colwidth", "j", "hasWidth", "cssWidth", "after", "TableView", "mutation", "createColGroup", "cols", "tableWidth", "tableMinWidth", "createCell", "cellType", "cellContent", "getTableNodeTypes", "schema", "roles", "type", "nodeType", "createTable", "rowsCount", "colsCount", "withHeaderRow", "types", "headerCells", "cells", "index", "cell", "headerCell", "rows", "isCellSelection", "value", "CellSelection", "deleteTableWhenAllCellsSelected", "editor", "selection", "cellCount", "findParentNodeClosestToPos", "Table", "Node", "HTMLAttributes", "mergeAttributes", "tr", "dispatch", "offset", "TextSelection", "state", "addColumnBefore", "addColumnAfter", "deleteColumn", "addRowBefore", "addRowAfter", "deleteRow", "deleteTable", "mergeCells", "splitCell", "toggleHeader", "toggleHeaderCell", "name", "setCellAttr", "goToNextCell", "fixTables", "position", "columnResizing", "tableEditing", "extension", "context", "callOrReturn", "getExtensionField", "TableCell", "Node", "element", "colwidth", "HTMLAttributes", "mergeAttributes", "TableHeader", "Node", "element", "colwidth", "HTMLAttributes", "mergeAttributes", "TableRow", "Node", "HTMLAttributes", "mergeAttributes", "inputRegex", "Image", "Node", "HTMLAttributes", "mergeAttributes", "options", "commands", "nodeInputRule", "match", "alt", "src", "title", "encodedTlds", "encodedUtlds", "assign", "target", "properties", "key", "numeric", "ascii", "alpha", "asciinumeric", "alphanumeric", "domain", "emoji", "scheme", "slashscheme", "whitespace", "registerGroup", "name", "groups", "addToGroups", "flags", "k", "group", "flagsForToken", "result", "c", "State", "token", "input", "state", "nextState", "i", "regex", "exactOnly", "inputs", "next", "regexp", "len", "t", "templateState", "allFlags", "ta", "tr", "ts", "tt", "WORD", "UWORD", "LOCALHOST", "TLD", "UTLD", "SCHEME", "SLASH_SCHEME", "NUM", "WS", "NL$1", "OPENBRACE", "CLOSEBRACE", "OPENBRACKET", "CLOSEBRACKET", "OPENPAREN", "CLOSEPAREN", "OPENANGLEBRACKET", "CLOSEANGLEBRACKET", "FULLWIDTHLEFTPAREN", "FULLWIDTHRIGHTPAREN", "LEFTCORNERBRACKET", "RIGHTCORNERBRACKET", "LEFTWHITECORNERBRACKET", "RIGHTWHITECORNERBRACKET", "FULLWIDTHLESSTHAN", "FULLWIDTHGREATERTHAN", "AMPERSAND", "APOSTROPHE", "ASTERISK", "AT", "BACKSLASH", "BACKTICK", "CARET", "COLON", "COMMA", "DOLLAR", "DOT", "EQUALS", "EXCLAMATION", "HYPHEN", "PERCENT", "PIPE", "PLUS", "POUND", "QUERY", "QUOTE", "SEMI", "SLASH", "TILDE", "UNDERSCORE", "EMOJI$1", "SYM", "tk", "ASCII_LETTER", "LETTER", "EMOJI", "DIGIT", "SPACE", "NL", "EMOJI_VARIATION", "EMOJI_JOINER", "tlds", "utlds", "init$2", "customSchemes", "groups", "State", "Start", "decodeTlds", "encodedTlds", "encodedUtlds", "tt", "APOSTROPHE", "OPENBRACE", "CLOSEBRACE", "OPENBRACKET", "CLOSEBRACKET", "OPENPAREN", "CLOSEPAREN", "OPENANGLEBRACKET", "CLOSEANGLEBRACKET", "FULLWIDTHLEFTPAREN", "FULLWIDTHRIGHTPAREN", "LEFTCORNERBRACKET", "RIGHTCORNERBRACKET", "LEFTWHITECORNERBRACKET", "RIGHTWHITECORNERBRACKET", "FULLWIDTHLESSTHAN", "FULLWIDTHGREATERTHAN", "AMPERSAND", "ASTERISK", "AT", "BACKTICK", "CARET", "COLON", "COMMA", "DOLLAR", "DOT", "EQUALS", "EXCLAMATION", "HYPHEN", "PERCENT", "PIPE", "PLUS", "POUND", "QUERY", "QUOTE", "SLASH", "SEMI", "TILDE", "UNDERSCORE", "BACKSLASH", "Num", "tr", "DIGIT", "NUM", "numeric", "Word", "ASCII_LETTER", "WORD", "ascii", "UWord", "LETTER", "UWORD", "alpha", "Ws", "SPACE", "WS", "whitespace", "NL$1", "Emoji", "EMOJI", "EMOJI$1", "emoji", "EmojiJoiner", "wordjr", "uwordjr", "i", "fastts", "TLD", "UTLD", "addToGroups", "SCHEME", "SLASH_SCHEME", "a", "b", "sch", "flags", "scheme", "slashscheme", "domain", "asciinumeric", "ts", "LOCALHOST", "SYM", "assign", "tk", "run$1", "start", "str", "iterable", "stringToArray", "c", "charCount", "tokens", "cursor", "charCursor", "state", "nextState", "tokenLength", "latestAccepting", "sinceAccepts", "charsSinceAccepts", "result", "len", "index", "first", "second", "char", "input", "t", "defaultt", "jr", "next", "encoded", "words", "stack", "digits", "popDigitCount", "popCount", "defaults", "noop", "Options", "opts", "defaultRender", "o", "ignoredTags", "uppercaseIgnoredTags", "ir", "token", "key", "operator", "isCallable", "option", "obj", "val", "MultiToken", "value", "tokens", "scheme", "options", "val", "truncate", "formatted", "protocol", "defaults", "token", "href", "formattedHref", "tagName", "content", "attributes", "className", "target", "rel", "attrs", "eventListeners", "assign", "createTokenClass", "type", "props", "Token", "p", "Email", "Text", "Nl", "Url", "LOCALHOST", "COLON", "makeState", "arg", "State", "init$1", "_ref", "groups", "qsAccepting", "AMPERSAND", "ASTERISK", "AT", "BACKSLASH", "BACKTICK", "CARET", "DOLLAR", "EQUALS", "HYPHEN", "NUM", "PERCENT", "PIPE", "PLUS", "POUND", "SLASH", "SYM", "TILDE", "UNDERSCORE", "qsNonAccepting", "APOSTROPHE", "COLON", "COMMA", "DOT", "EXCLAMATION", "QUERY", "QUOTE", "SEMI", "OPENANGLEBRACKET", "CLOSEANGLEBRACKET", "OPENBRACE", "CLOSEBRACE", "CLOSEBRACKET", "OPENBRACKET", "OPENPAREN", "CLOSEPAREN", "FULLWIDTHLEFTPAREN", "FULLWIDTHRIGHTPAREN", "LEFTCORNERBRACKET", "RIGHTCORNERBRACKET", "LEFTWHITECORNERBRACKET", "RIGHTWHITECORNERBRACKET", "FULLWIDTHLESSTHAN", "FULLWIDTHGREATERTHAN", "localpartAccepting", "Start", "Localpart", "tt", "ta", "Domain", "Scheme", "SlashScheme", "LocalpartAt", "LocalpartDot", "EmailDomain", "EmailDomainDot", "Email$1", "Email", "LOCALHOST", "EmailDomainHyphen", "EmailColon", "DomainHyphen", "DomainDot", "DomainDotTld", "Url", "DomainDotTldColon", "DomainDotTldColonPort", "Url$1", "UrlNonaccept", "SchemeColon", "SlashSchemeColon", "SlashSchemeColonSlash", "UriPrefix", "bracketPairs", "i", "OPEN", "CLOSE", "UrlOpen", "UrlOpenQ", "UrlOpenSyms", "NL$1", "Nl", "tk", "run", "start", "input", "tokens", "len", "cursor", "multis", "textTokens", "state", "secondState", "nextState", "multiLength", "latestAccepting", "sinceAccepts", "initMultiToken", "Text", "Multi", "subtokens", "startIdx", "endIdx", "value", "warn", "warnAdvice", "INIT", "reset", "registerCustomProtocol", "scheme", "optionalSlashSlash", "INIT", "warn", "warnAdvice", "init", "init$2", "i", "init$1", "tokenize", "str", "run", "run$1", "find", "type", "opts", "options", "Options", "tokens", "filtered", "token", "autolink", "options", "Plugin", "PluginKey", "transactions", "oldState", "newState", "docChanges", "transaction", "preventAutolink", "tr", "transform", "combineTransactionSteps", "getChangedRanges", "newRange", "nodesInChangedRanges", "findChildrenInRange", "node", "textBlock", "textBeforeWhitespace", "wordsBeforeWhitespace", "s", "lastWordBeforeSpace", "lastWordAndBlockOffset", "find", "link", "__spreadProps", "__spreadValues", "getMarksBetween", "item", "clickHandler", "view", "pos", "event", "a", "els", "value", "attrs", "getAttributes", "href", "_a", "target", "_b", "pasteHandler", "slice", "state", "selection", "empty", "textContent", "Link", "Mark", "protocol", "registerCustomProtocol", "reset", "HTMLAttributes", "_a", "mergeAttributes", "__spreadProps", "__spreadValues", "attributes", "chain", "markPasteRule", "text", "event", "html", "foundLinks", "dom", "anchors", "anchor", "links", "find", "item", "link", "match", "plugins", "autolink", "clickHandler", "pasteHandler", "TaskList", "Node", "HTMLAttributes", "mergeAttributes", "commands", "inputRegex", "TaskItem", "Node", "element", "attributes", "node", "HTMLAttributes", "mergeAttributes", "shortcuts", "__spreadProps", "__spreadValues", "getPos", "editor", "listItem", "checkboxWrapper", "checkboxStyler", "checkbox", "content", "event", "checked", "tr", "position", "currentNode", "key", "value", "updatedNode", "wrappingInputRule", "match", "Placeholder", "Extension", "Plugin", "PluginKey", "doc", "selection", "active", "anchor", "decorations", "firstChild", "isLeaf", "isAtom", "isValidNode", "_a", "isEmptyDoc", "node", "pos", "hasAnchor", "isEmpty", "classes", "decoration", "Decoration", "DecorationSet", "top", "bottom", "right", "left", "auto", "basePlacements", "start", "end", "clippingParents", "viewport", "popper", "reference", "variationPlacements", "acc", "placement", "placements", "beforeRead", "read", "afterRead", "beforeMain", "main", "afterMain", "beforeWrite", "write", "afterWrite", "modifierPhases", "getNodeName", "element", "getWindow", "node", "ownerDocument", "isElement", "node", "OwnElement", "getWindow", "isHTMLElement", "isShadowRoot", "applyStyles", "_ref", "state", "name", "style", "attributes", "element", "isHTMLElement", "getNodeName", "value", "effect", "_ref2", "initialStyles", "styleProperties", "property", "attribute", "applyStyles_default", "getBasePlacement", "placement", "max", "min", "round", "getUAString", "uaData", "item", "isLayoutViewport", "getUAString", "getBoundingClientRect", "element", "includeScale", "isFixedStrategy", "clientRect", "scaleX", "scaleY", "isHTMLElement", "round", "_ref", "isElement", "getWindow", "visualViewport", "addVisualOffsets", "isLayoutViewport", "x", "y", "width", "height", "getLayoutRect", "element", "clientRect", "getBoundingClientRect", "width", "height", "contains", "parent", "child", "rootNode", "isShadowRoot", "next", "getComputedStyle", "element", "getWindow", "isTableElement", "element", "getNodeName", "getDocumentElement", "element", "isElement", "getParentNode", "element", "getNodeName", "isShadowRoot", "getDocumentElement", "getTrueOffsetParent", "element", "isHTMLElement", "getComputedStyle", "getContainingBlock", "isFirefox", "getUAString", "isIE", "elementCss", "currentNode", "getParentNode", "isShadowRoot", "getNodeName", "css", "getOffsetParent", "window", "getWindow", "offsetParent", "isTableElement", "getMainAxisFromPlacement", "placement", "within", "min", "value", "max", "withinMaxClamp", "v", "getFreshSideObject", "mergePaddingObject", "paddingObject", "getFreshSideObject", "expandToHashMap", "value", "keys", "hashMap", "key", "toPaddingObject", "padding", "state", "mergePaddingObject", "expandToHashMap", "basePlacements", "arrow", "_ref", "_state$modifiersData$", "name", "options", "arrowElement", "popperOffsets", "basePlacement", "getBasePlacement", "axis", "getMainAxisFromPlacement", "isVertical", "left", "right", "len", "paddingObject", "arrowRect", "getLayoutRect", "minProp", "top", "maxProp", "bottom", "endDiff", "startDiff", "arrowOffsetParent", "getOffsetParent", "clientSize", "centerToReference", "min", "max", "center", "offset", "within", "axisProp", "effect", "_ref2", "_options$element", "contains", "arrow_default", "getVariation", "placement", "unsetSides", "roundOffsetsByDPR", "_ref", "win", "x", "y", "dpr", "round", "mapToStyles", "_ref2", "_Object$assign2", "popper", "popperRect", "placement", "variation", "offsets", "position", "gpuAcceleration", "adaptive", "roundOffsets", "isFixed", "_offsets$x", "_offsets$y", "_ref3", "hasX", "hasY", "sideX", "left", "sideY", "top", "offsetParent", "getOffsetParent", "heightProp", "widthProp", "getWindow", "getDocumentElement", "getComputedStyle", "right", "end", "bottom", "offsetY", "offsetX", "commonStyles", "_ref4", "_Object$assign", "computeStyles", "_ref5", "state", "options", "_options$gpuAccelerat", "_options$adaptive", "_options$roundOffsets", "getBasePlacement", "getVariation", "computeStyles_default", "passive", "effect", "_ref", "state", "instance", "options", "_options$scroll", "scroll", "_options$resize", "resize", "window", "getWindow", "scrollParents", "scrollParent", "eventListeners_default", "hash", "getOppositePlacement", "placement", "matched", "hash", "getOppositeVariationPlacement", "placement", "matched", "getWindowScroll", "node", "win", "getWindow", "scrollLeft", "scrollTop", "getWindowScrollBarX", "element", "getBoundingClientRect", "getDocumentElement", "getWindowScroll", "getViewportRect", "element", "strategy", "win", "getWindow", "html", "getDocumentElement", "visualViewport", "width", "height", "x", "y", "layoutViewport", "isLayoutViewport", "getWindowScrollBarX", "getDocumentRect", "element", "_element$ownerDocumen", "html", "getDocumentElement", "winScroll", "getWindowScroll", "body", "width", "max", "height", "x", "getWindowScrollBarX", "y", "getComputedStyle", "isScrollParent", "element", "_getComputedStyle", "getComputedStyle", "overflow", "overflowX", "overflowY", "getScrollParent", "node", "getNodeName", "isHTMLElement", "isScrollParent", "getParentNode", "listScrollParents", "element", "list", "_element$ownerDocumen", "scrollParent", "getScrollParent", "isBody", "win", "getWindow", "target", "isScrollParent", "updatedList", "getParentNode", "rectToClientRect", "rect", "getInnerBoundingClientRect", "element", "strategy", "rect", "getBoundingClientRect", "getClientRectFromMixedType", "clippingParent", "viewport", "rectToClientRect", "getViewportRect", "isElement", "getDocumentRect", "getDocumentElement", "getClippingParents", "clippingParents", "listScrollParents", "getParentNode", "canEscapeClipping", "getComputedStyle", "clipperElement", "isHTMLElement", "getOffsetParent", "contains", "getNodeName", "getClippingRect", "boundary", "rootBoundary", "mainClippingParents", "firstClippingParent", "clippingRect", "accRect", "max", "min", "computeOffsets", "_ref", "reference", "element", "placement", "basePlacement", "getBasePlacement", "variation", "getVariation", "commonX", "commonY", "offsets", "top", "bottom", "right", "left", "mainAxis", "getMainAxisFromPlacement", "len", "start", "end", "detectOverflow", "state", "options", "_options", "_options$placement", "placement", "_options$strategy", "strategy", "_options$boundary", "boundary", "clippingParents", "_options$rootBoundary", "rootBoundary", "viewport", "_options$elementConte", "elementContext", "popper", "_options$altBoundary", "altBoundary", "_options$padding", "padding", "paddingObject", "mergePaddingObject", "expandToHashMap", "basePlacements", "altContext", "reference", "popperRect", "element", "clippingClientRect", "getClippingRect", "isElement", "getDocumentElement", "referenceClientRect", "getBoundingClientRect", "popperOffsets", "computeOffsets", "popperClientRect", "rectToClientRect", "elementClientRect", "overflowOffsets", "offsetData", "offset", "key", "multiply", "right", "bottom", "axis", "top", "computeAutoPlacement", "state", "options", "_options", "placement", "boundary", "rootBoundary", "padding", "flipVariations", "_options$allowedAutoP", "allowedAutoPlacements", "placements", "variation", "getVariation", "variationPlacements", "basePlacements", "allowedPlacements", "overflows", "acc", "detectOverflow", "getBasePlacement", "a", "b", "getExpandedFallbackPlacements", "placement", "getBasePlacement", "auto", "oppositePlacement", "getOppositePlacement", "getOppositeVariationPlacement", "flip", "_ref", "state", "options", "name", "_options$mainAxis", "checkMainAxis", "_options$altAxis", "checkAltAxis", "specifiedFallbackPlacements", "padding", "boundary", "rootBoundary", "altBoundary", "_options$flipVariatio", "flipVariations", "allowedAutoPlacements", "preferredPlacement", "basePlacement", "isBasePlacement", "fallbackPlacements", "placements", "acc", "computeAutoPlacement", "referenceRect", "popperRect", "checksMap", "makeFallbackChecks", "firstFittingPlacement", "i", "_basePlacement", "isStartVariation", "getVariation", "start", "isVertical", "top", "bottom", "len", "overflow", "detectOverflow", "mainVariationSide", "right", "left", "altVariationSide", "checks", "check", "numberOfChecks", "_loop", "_i", "fittingPlacement", "_ret", "flip_default", "getSideOffsets", "overflow", "rect", "preventedOffsets", "isAnySideFullyClipped", "top", "right", "bottom", "left", "side", "hide", "_ref", "state", "name", "referenceRect", "popperRect", "referenceOverflow", "detectOverflow", "popperAltOverflow", "referenceClippingOffsets", "popperEscapeOffsets", "isReferenceHidden", "hasPopperEscaped", "hide_default", "distanceAndSkiddingToXY", "placement", "rects", "offset", "basePlacement", "getBasePlacement", "invertDistance", "left", "top", "_ref", "skidding", "distance", "right", "_ref2", "state", "options", "name", "_options$offset", "data", "placements", "acc", "_data$state$placement", "x", "y", "offset_default", "popperOffsets", "_ref", "state", "name", "computeOffsets", "popperOffsets_default", "getAltAxis", "axis", "preventOverflow", "_ref", "state", "options", "name", "_options$mainAxis", "checkMainAxis", "_options$altAxis", "checkAltAxis", "boundary", "rootBoundary", "altBoundary", "padding", "_options$tether", "tether", "_options$tetherOffset", "tetherOffset", "overflow", "detectOverflow", "basePlacement", "getBasePlacement", "variation", "getVariation", "isBasePlacement", "mainAxis", "getMainAxisFromPlacement", "altAxis", "getAltAxis", "popperOffsets", "referenceRect", "popperRect", "tetherOffsetValue", "normalizedTetherOffsetValue", "offsetModifierState", "data", "_offsetModifierState$", "mainSide", "top", "left", "altSide", "bottom", "right", "len", "offset", "min", "max", "additive", "minLen", "start", "maxLen", "arrowElement", "arrowRect", "getLayoutRect", "arrowPaddingObject", "getFreshSideObject", "arrowPaddingMin", "arrowPaddingMax", "arrowLen", "within", "minOffset", "maxOffset", "arrowOffsetParent", "getOffsetParent", "clientOffset", "offsetModifierValue", "tetherMin", "tetherMax", "preventedOffset", "_offsetModifierState$2", "_mainSide", "_altSide", "_offset", "_len", "_min", "_max", "isOriginSide", "_offsetModifierValue", "_tetherMin", "_tetherMax", "_preventedOffset", "withinMaxClamp", "preventOverflow_default", "getHTMLElementScroll", "element", "getNodeScroll", "node", "getWindow", "isHTMLElement", "getWindowScroll", "getHTMLElementScroll", "isElementScaled", "element", "rect", "scaleX", "round", "scaleY", "getCompositeRect", "elementOrVirtualElement", "offsetParent", "isFixed", "isOffsetParentAnElement", "isHTMLElement", "offsetParentIsScaled", "documentElement", "getDocumentElement", "getBoundingClientRect", "scroll", "offsets", "getNodeName", "isScrollParent", "getNodeScroll", "getWindowScrollBarX", "order", "modifiers", "map", "visited", "result", "modifier", "sort", "requires", "dep", "depModifier", "orderModifiers", "orderedModifiers", "modifierPhases", "acc", "phase", "debounce", "fn", "pending", "resolve", "mergeByName", "modifiers", "merged", "current", "existing", "key", "DEFAULT_OPTIONS", "areValidElements", "_len", "args", "_key", "element", "popperGenerator", "generatorOptions", "_generatorOptions", "_generatorOptions$def", "defaultModifiers", "_generatorOptions$def2", "defaultOptions", "reference", "popper", "options", "state", "effectCleanupFns", "isDestroyed", "instance", "setOptionsAction", "cleanupModifierEffects", "isElement", "listScrollParents", "orderedModifiers", "orderModifiers", "mergeByName", "m", "runModifierEffects", "_state$elements", "getCompositeRect", "getOffsetParent", "getLayoutRect", "modifier", "index", "_state$orderedModifie", "fn", "_state$orderedModifie2", "_options", "name", "debounce", "resolve", "_ref", "_ref$options", "effect", "cleanupFn", "noopFn", "defaultModifiers", "eventListeners_default", "popperOffsets_default", "computeStyles_default", "applyStyles_default", "offset_default", "flip_default", "preventOverflow_default", "arrow_default", "hide_default", "createPopper", "popperGenerator", "BOX_CLASS", "CONTENT_CLASS", "BACKDROP_CLASS", "ARROW_CLASS", "SVG_ARROW_CLASS", "TOUCH_OPTIONS", "passive", "capture", "TIPPY_DEFAULT_APPEND_TO", "document", "body", "getValueAtIndexOrReturn", "value", "index", "defaultValue", "Array", "isArray", "v", "isType", "type", "str", "toString", "call", "indexOf", "invokeWithArgsOrReturn", "args", "debounce", "fn", "ms", "timeout", "arg", "clearTimeout", "setTimeout", "splitBySpaces", "value", "split", "filter", "Boolean", "normalizeToArray", "concat", "pushIfUnique", "arr", "indexOf", "push", "unique", "item", "index", "getBasePlacement", "placement", "arrayFrom", "slice", "call", "removeUndefinedProps", "obj", "Object", "keys", "reduce", "acc", "key", "undefined", "div", "document", "createElement", "isElement", "some", "type", "isType", "isNodeList", "isMouseEvent", "isReferenceElement", "_tippy", "reference", "getArrayOfElements", "Array", "isArray", "querySelectorAll", "setTransitionDuration", "els", "forEach", "el", "style", "transitionDuration", "setVisibilityState", "state", "setAttribute", "getOwnerDocument", "elementOrElements", "_element$ownerDocumen", "_normalizeToArray", "element", "ownerDocument", "body", "isCursorOutsideInteractiveBorder", "popperTreeData", "event", "clientX", "clientY", "every", "_ref", "popperRect", "popperState", "props", "interactiveBorder", "basePlacement", "offsetData", "modifiersData", "offset", "topDistance", "top", "y", "bottomDistance", "bottom", "leftDistance", "left", "x", "rightDistance", "right", "exceedsTop", "exceedsBottom", "exceedsLeft", "exceedsRight", "updateTransitionEndListener", "box", "action", "listener", "method", "actualContains", "parent", "child", "target", "_target$getRootNode", "contains", "getRootNode", "host", "currentInput", "isTouch", "lastMouseMoveTime", "onDocumentTouchStart", "window", "performance", "addEventListener", "onDocumentMouseMove", "now", "removeEventListener", "onWindowBlur", "activeElement", "instance", "blur", "isVisible", "bindGlobalEventListeners", "TOUCH_OPTIONS", "isBrowser", "isIE11", "msCrypto", "pluginProps", "animateFill", "followCursor", "inlinePositioning", "sticky", "renderProps", "allowHTML", "animation", "arrow", "content", "inertia", "maxWidth", "role", "theme", "zIndex", "defaultProps", "appendTo", "TIPPY_DEFAULT_APPEND_TO", "aria", "expanded", "delay", "duration", "getReferenceClientRect", "hideOnClick", "ignoreAttributes", "interactive", "interactiveBorder", "interactiveDebounce", "moveTransition", "offset", "onAfterUpdate", "onBeforeUpdate", "onCreate", "onDestroy", "onHidden", "onHide", "onMount", "onShow", "onShown", "onTrigger", "onUntrigger", "onClickOutside", "placement", "plugins", "popperOptions", "render", "showOnCreate", "touch", "trigger", "triggerTarget", "defaultKeys", "Object", "keys", "setDefaultProps", "partialProps", "forEach", "key", "getExtendedPassedProps", "passedProps", "reduce", "acc", "plugin", "name", "defaultValue", "_name", "undefined", "getDataAttributeProps", "reference", "propKeys", "props", "valueAsString", "getAttribute", "trim", "JSON", "parse", "e", "evaluateProps", "out", "invokeWithArgsOrReturn", "innerHTML", "dangerouslySetInnerHTML", "element", "html", "createArrowElement", "value", "arrow", "div", "className", "ARROW_CLASS", "SVG_ARROW_CLASS", "isElement", "appendChild", "setContent", "content", "props", "allowHTML", "textContent", "getChildren", "popper", "box", "firstElementChild", "boxChildren", "arrayFrom", "children", "find", "node", "classList", "contains", "CONTENT_CLASS", "backdrop", "BACKDROP_CLASS", "render", "instance", "BOX_CLASS", "setAttribute", "onUpdate", "prevProps", "nextProps", "_getChildren", "theme", "removeAttribute", "animation", "inertia", "style", "maxWidth", "role", "removeChild", "$$tippy", "idCounter", "mouseMoveListeners", "mountedInstances", "createTippy", "reference", "passedProps", "evaluateProps", "defaultProps", "getExtendedPassedProps", "removeUndefinedProps", "showTimeout", "hideTimeout", "scheduleHideAnimationFrame", "isVisibleFromClick", "didHideDueToDocumentMouseDown", "didTouchMove", "ignoreOnFirstUpdate", "lastTriggerEvent", "currentTransitionEndListener", "onFirstUpdate", "listeners", "debouncedOnMouseMove", "debounce", "onMouseMove", "interactiveDebounce", "currentTarget", "id", "popperInstance", "plugins", "unique", "state", "isEnabled", "isVisible", "isDestroyed", "isMounted", "isShown", "clearDelayTimeouts", "setProps", "show", "hide", "hideWithInteractivity", "enable", "disable", "unmount", "destroy", "_props$render", "_tippy", "pluginsHooks", "map", "plugin", "fn", "hasAriaExpanded", "hasAttribute", "addListeners", "handleAriaExpandedAttribute", "handleStyles", "invokeHook", "showOnCreate", "scheduleShow", "addEventListener", "interactive", "trigger", "indexOf", "getDocument", "getNormalizedTouchSettings", "touch", "Array", "isArray", "getIsCustomTouchBehavior", "getIsDefaultRenderFn", "_instance$props$rende", "getCurrentTarget", "parent", "parentNode", "getOwnerDocument", "document", "getDefaultTemplateChildren", "getDelay", "isShow", "currentInput", "isTouch", "type", "getValueAtIndexOrReturn", "delay", "fromHide", "pointerEvents", "zIndex", "hook", "args", "shouldInvokePropsHook", "forEach", "pluginHooks", "_instance$props", "handleAriaContentAttribute", "aria", "attr", "nodes", "normalizeToArray", "triggerTarget", "currentValue", "getAttribute", "nextValue", "replace", "trim", "expanded", "cleanupInteractiveMouseListeners", "removeEventListener", "filter", "listener", "onDocumentPress", "event", "actualTarget", "composedPath", "target", "actualContains", "some", "el", "hideOnClick", "setTimeout", "removeDocumentPress", "onTouchMove", "onTouchStart", "addDocumentPress", "doc", "TOUCH_OPTIONS", "onTransitionedOut", "duration", "callback", "onTransitionEnd", "onTransitionedIn", "updateTransitionEndListener", "on", "eventType", "handler", "options", "push", "onTrigger", "passive", "onMouseLeave", "splitBySpaces", "isIE11", "onBlurOrFocusOut", "removeListeners", "_ref", "_lastTriggerEvent", "shouldScheduleClickHide", "isEventListenerStopped", "wasFocused", "isMouseEvent", "scheduleHide", "isCursorOverReferenceOrPopper", "popperTreeData", "getNestedPopperTree", "concat", "_instance$popperInsta", "popperRect", "getBoundingClientRect", "popperState", "Boolean", "isCursorOutsideInteractiveBorder", "shouldBail", "relatedTarget", "createPopperInstance", "destroyPopperInstance", "_instance$props2", "popperOptions", "placement", "offset", "getReferenceClientRect", "moveTransition", "computedReference", "contextElement", "tippyModifier", "name", "enabled", "phase", "requires", "_ref2", "_getDefaultTemplateCh", "attributes", "modifiers", "padding", "top", "bottom", "left", "right", "adaptive", "createPopper", "mount", "appendTo", "TIPPY_DEFAULT_APPEND_TO", "invokeWithArgsOrReturn", "querySelectorAll", "_getNormalizedTouchSe", "touchValue", "touchDelay", "requestAnimationFrame", "clearTimeout", "cancelAnimationFrame", "partialProps", "ignoreAttributes", "nestedPopper", "forceUpdate", "isAlreadyVisible", "isDisabled", "isTouchAndTouchDisabled", "onShow", "visibility", "transition", "_getDefaultTemplateCh2", "setTransitionDuration", "_instance$popperInsta2", "offsetHeight", "_getDefaultTemplateCh3", "setVisibilityState", "pushIfUnique", "isAlreadyHidden", "onHide", "_getDefaultTemplateCh4", "i", "tippy", "targets", "optionalProps", "bindGlobalEventListeners", "elements", "getArrayOfElements", "isSingleContentElement", "isMoreThanOneReferenceElement", "instances", "reduce", "acc", "setDefaultProps", "applyStylesModifier", "applyStyles", "effect", "_ref", "state", "initialStyles", "popper", "position", "options", "strategy", "left", "top", "margin", "arrow", "reference", "Object", "assign", "elements", "style", "styles", "tippy", "setDefaultProps", "render", "BubbleMenuView", "editor", "element", "view", "tippyOptions", "updateDelay", "shouldShow", "state", "from", "to", "doc", "selection", "empty", "isEmptyTextBlock", "isTextSelection", "isChildOfMenu", "event", "_a", "oldState", "selectionChanged", "docChanged", "composing", "ranges", "range", "_b", "_c", "isNodeSelection", "node", "nodeViewWrapper", "posToDOMRect", "editorElement", "editorIsAttached", "tippy_esm_default", "__spreadValues", "hasValidSelection", "BubbleMenuPlugin", "options", "Plugin", "PluginKey", "BubbleMenu", "Extension", "FloatingMenuView", "editor", "element", "view", "tippyOptions", "shouldShow", "state", "selection", "$anchor", "empty", "isRootDepth", "isEmptyTextBlock", "event", "_a", "editorElement", "editorIsAttached", "tippy_esm_default", "__spreadValues", "oldState", "doc", "from", "to", "_b", "_c", "posToDOMRect", "FloatingMenuPlugin", "options", "Plugin", "PluginKey", "FloatingMenu", "Extension", "TextAlign", "Extension", "element", "attributes", "alignment", "commands", "type", "inputRegex", "pasteRegex", "Highlight", "Mark", "element", "attributes", "HTMLAttributes", "mergeAttributes", "commands", "markInputRule", "markPasteRule", "SelectorType", "AttributeAction", "reName", "reEscape", "actionTypes", "AttributeAction", "unpackPseudos", "isTraversal", "selector", "SelectorType", "stripQuotesFromPseudos", "funescape", "_", "escaped", "escapedWhitespace", "high", "unescapeCSS", "str", "isQuote", "c", "isWhitespace", "parse", "subselects", "endIndex", "parseSelector", "selectorIndex", "tokens", "getName", "offset", "match", "name", "stripWhitespace", "readValueWithParenthesis", "start", "counter", "isEscaped", "pos", "slashCount", "ensureNotTraversal", "addTraversal", "type", "addSpecialAttribute", "action", "finalizeSubselector", "loop", "firstChar", "namespace", "possibleAction", "value", "ignoreCase", "quote", "sectionEnd", "valueStart", "forceIgnore", "attributeSelector", "data", "quot", "regexAstralSymbols", "regexAsciiWhitelist", "regexBmpWhitelist", "regexEncodeNonAscii", "encodeMap", "regexEscape", "regexInvalidEntity", "regexInvalidRawCodePoint", "regexDecode", "decodeMap", "decodeMapLegacy", "decodeMapNumeric", "invalidReferenceCodePoints", "stringFromCharCode", "contains", "array", "value", "index", "length", "merge", "options", "defaults", "result", "key", "hasOwn", "codePointToSymbol", "codePoint", "strict", "output", "parseError", "hexEscape", "decEscape", "message", "encode", "string", "encodeEverything", "useNamedReferences", "allowUnsafeSymbols", "escapeCodePoint", "escapeBmpSymbol", "symbol", "$0", "high", "low", "decode", "html", "$1", "$2", "$3", "$4", "$5", "$6", "$7", "_$8", "semicolon", "decDigits", "hexDigits", "reference", "next", "escapeHTML", "text", "unescapeHTML", "_h", "context", "tag", "attrs", "children", "__spreadProps", "__spreadValues", "isElement", "el", "element", "compareKey", "name", "childOuter", "cc", "child", "hArgumentParser", "hFactory", "itag", "iattrs", "ichildren", "SELF_CLOSING_TAGS", "markup", "xmlMode", "tag", "attrs", "children", "hasChildren", "parts", "name", "hasOwn", "v", "k", "vv", "escapeHTML", "SELF_CLOSING_TAGS", "child", "c", "html", "itag", "iattrs", "ichildren", "hArgumentParser", "htmlVDOM", "log", "_args", "cache", "parseSelector", "selector", "ast", "parse", "matchSelector", "element", "debug", "rules", "handleRules", "_a", "_b", "_c", "_d", "success", "part", "type", "name", "action", "value", "_ignoreCase", "data", "ok", "inspect", "B", "I", "M", "U", "S", "DEFAULTS", "toCamelCase", "s", "_m", "chr", "_VNode", "deep", "node", "c", "newNode", "index", "VDocument", "VDocumentFragment", "text", "VTextNode", "err", "i", "nodes", "p", "n", "elements", "VElement", "child", "otherNode", "VNode", "parentTagName", "escapeHTML", "VNodeQuery", "handler", "el", "attrs", "__spreadValues", "search", "originalName", "styles", "styleString", "m", "re", "e", "_html", "html", "htmlVDOM", "_k", "v", "k", "_v", "self", "classNames", "h", "VDocType", "_VDocType", "_VDocumentFragment", "content", "VHTMLDocument", "empty", "body", "head", "title", "titleElement", "createDocument", "createHTMLDocument", "document", "hFactory", "object", "hasOwnProperty", "hasOwn", "propertyName", "attrRe", "endTagRe", "startTagRe", "selfCloseTagRe", "HtmlParser", "options", "html", "treatAsChars", "index", "match", "characters", "offset", "input", "tagName", "isSelfColse", "attrInput", "attrs", "m", "_a", "_b", "_attr", "name", "_c2", "value", "_c4", "valueInQuote", "_c6", "valueInSingleQuote", "parseHTML", "html", "frag", "VHTMLDocument", "VDocumentFragment", "stack", "HtmlParser", "tagName", "attrs", "isSelfClosing", "VDocType", "name", "hasOwn", "value", "unescapeHTML", "parentNode", "element", "document", "SELF_CLOSING_TAGS", "_tagName", "text", "_a", "VNode", "VTextNode", "_text", "VElement", "xml", "itag", "iattrs", "ichildren", "tag", "attrs", "children", "hArgumentParser", "markup", "getHTMLFromFragment", "doc", "schema", "options", "wrap", "DOMSerializer", "createHTMLDocument", "generateHTML", "extensions", "getSchema", "contentNode", "Node", "create", "copy", "m", "r", "v", "k", "setIfUndefined", "map", "key", "createT", "set", "f", "res", "value", "any", "create", "last", "arr", "appendTo", "dest", "src", "i", "from", "some", "arr", "f", "i", "unfold", "len", "f", "array", "i", "isArray", "Observable", "create", "name", "f", "setIfUndefined", "_f", "args", "observers", "from", "floor", "abs", "min", "a", "b", "max", "isNaN", "isNegativeZero", "n", "MAX_SAFE_INTEGER", "MIN_SAFE_INTEGER", "LOWEST_INT32", "isInteger", "num", "floor", "isNaN", "parseInt", "fromCharCode", "fromCodePoint", "MAX_UTF16_CHARACTER", "toLowerCase", "s", "trimLeftRegex", "trimLeft", "fromCamelCaseRegex", "fromCamelCase", "separator", "match", "_encodeUtf8Polyfill", "str", "encodedString", "len", "buf", "utf8TextEncoder", "_encodeUtf8Native", "encodeUtf8", "utf8TextDecoder", "repeat", "source", "n", "unfold", "Encoder", "createEncoder", "length", "encoder", "len", "i", "toUint8Array", "encoder", "uint8arr", "length", "curPos", "i", "d", "verifyLen", "len", "bufferLen", "max", "write", "num", "writeUint8", "write", "writeVarUint", "encoder", "num", "write", "floor", "writeVarInt", "isNegative", "isNegativeZero", "_strBuffer", "_maxStrBSize", "_writeVarStringNative", "str", "written", "utf8TextEncoder", "i", "writeVarUint8Array", "encodeUtf8", "_writeVarStringPolyfill", "encodedString", "len", "writeVarString", "writeBinaryEncoder", "encoder", "append", "writeUint8Array", "toUint8Array", "uint8Array", "bufferLen", "cpos", "leftCopyLen", "min", "rightCopyLen", "max", "writeVarUint8Array", "writeVarUint", "writeOnDataView", "len", "verifyLen", "dview", "writeFloat32", "num", "writeFloat64", "writeBigInt64", "floatTestBed", "isFloat32", "num", "writeAny", "encoder", "data", "write", "writeVarString", "isInteger", "abs", "writeVarInt", "writeFloat32", "writeFloat64", "writeBigInt64", "isArray", "writeVarUint", "i", "writeVarUint8Array", "keys", "key", "RleEncoder", "Encoder", "writer", "v", "flushUintOptRleEncoder", "encoder", "writeVarInt", "writeVarUint", "UintOptRleEncoder", "Encoder", "v", "toUint8Array", "flushIntDiffOptRleEncoder", "encoder", "encodedDiff", "writeVarInt", "writeVarUint", "IntDiffOptRleEncoder", "Encoder", "v", "toUint8Array", "StringEncoder", "UintOptRleEncoder", "string", "writeVarString", "writeUint8Array", "create", "s", "methodUnimplemented", "unexpectedCase", "errorUnexpectedEndOfArray", "create", "errorIntegerOutOfRange", "Decoder", "uint8Array", "createDecoder", "hasContent", "decoder", "readUint8Array", "decoder", "len", "view", "readVarUint8Array", "readVarUint", "readUint8", "decoder", "readVarUint", "decoder", "num", "mult", "len", "r", "MAX_SAFE_INTEGER", "errorIntegerOutOfRange", "errorUnexpectedEndOfArray", "readVarInt", "sign", "_readVarStringPolyfill", "decoder", "remainingLen", "readVarUint", "encodedString", "readUint8", "nextLen", "bytes", "_readVarStringNative", "utf8TextDecoder", "readVarUint8Array", "readVarString", "readFromDataView", "decoder", "len", "dv", "readFloat32", "readFloat64", "readBigInt64", "readAnyLookupTable", "decoder", "readVarInt", "readFloat32", "readFloat64", "readBigInt64", "readVarString", "len", "readVarUint", "obj", "i", "key", "readAny", "arr", "readVarUint8Array", "readUint8", "RleDecoder", "Decoder", "uint8Array", "reader", "hasContent", "UintOptRleDecoder", "Decoder", "uint8Array", "readVarInt", "isNegative", "isNegativeZero", "readVarUint", "IntDiffOptRleDecoder", "Decoder", "uint8Array", "diff", "readVarInt", "hasCount", "floor", "readVarUint", "StringDecoder", "UintOptRleDecoder", "readVarString", "end", "res", "subtle", "getRandomValues", "rand", "uint32", "getRandomValues", "oneOf", "arr", "floor", "rand", "uuidv4Template", "uuidv4", "c", "uint32", "getUnixTime", "create", "f", "all", "undefinedToNull", "v", "VarStoragePolyfill", "key", "newValue", "_localStorage", "usePolyfill", "e", "varStorage", "assign", "keys", "forEach", "obj", "f", "key", "length", "obj", "keys", "isEmpty", "obj", "_k", "every", "f", "key", "hasProperty", "equalFlat", "a", "b", "length", "val", "callAll", "fs", "args", "i", "id", "a", "isOneOf", "value", "options", "isNode", "isBrowser", "isMac", "params", "args", "computeParams", "create", "pargs", "currParamName", "i", "parg", "kv", "key", "value", "fromCamelCase", "hasParam", "name", "getVariable", "name", "isNode", "undefinedToNull", "varStorage", "hasConf", "name", "hasParam", "getVariable", "production", "forceColor", "isNode", "isOneOf", "supportsColor", "createUint8ArrayFromLen", "len", "copyUint8Array", "uint8Array", "newBuf", "createUint8ArrayFromLen", "Pair", "left", "right", "create", "doc", "domParser", "mapToStyleString", "m", "map", "value", "key", "ELEMENT_NODE", "doc", "TEXT_NODE", "CDATA_SECTION_NODE", "COMMENT_NODE", "DOCUMENT_NODE", "DOCUMENT_TYPE_NODE", "DOCUMENT_FRAGMENT_NODE", "createTimeoutClass", "clearFunction", "timeoutId", "Timeout", "timeout", "callback", "Interval", "Animation", "createTimeoutClass", "arg", "Idle", "createTimeoutClass", "arg", "create", "BOLD", "create", "UNBOLD", "BLUE", "GREY", "GREEN", "RED", "PURPLE", "ORANGE", "UNCOLOR", "computeNoColorLoggingArgs", "args", "strBuilder", "logArgs", "i", "arg", "lastLoggingTime", "getUnixTime", "_browserStyleMap", "BOLD", "create", "UNBOLD", "BLUE", "GREEN", "GREY", "RED", "PURPLE", "ORANGE", "UNCOLOR", "computeBrowserLoggingArgs", "args", "strBuilder", "styles", "currentStyle", "logArgs", "i", "arg", "style", "mapToStyleString", "computeLoggingArgs", "supportsColor", "computeNoColorLoggingArgs", "print", "vconsoles", "vc", "warn", "vconsoles", "create", "createIterator", "next", "iteratorFilter", "iterator", "filter", "res", "iteratorMap", "fmap", "done", "value", "AbstractConnector", "Observable", "ydoc", "awareness", "DeleteItem", "clock", "len", "DeleteSet", "iterateDeletedStructs", "transaction", "ds", "f", "deletes", "clientid", "structs", "i", "del", "iterateStructs", "findIndexDS", "dis", "left", "right", "midindex", "floor", "mid", "midclock", "isDeleted", "id", "sortAndMergeDeleteSet", "dels", "a", "b", "j", "max", "mergeDeleteSets", "dss", "merged", "dssI", "delsLeft", "client", "appendTo", "addToDeleteSet", "length", "setIfUndefined", "createDeleteSet", "createDeleteSetFromStructStore", "ss", "dsitems", "struct", "next", "writeDeleteSet", "encoder", "writeVarUint", "from", "item", "readDeleteSet", "decoder", "numClients", "readVarUint", "numberOfDeletes", "dsField", "readAndApplyDeleteSet", "store", "unappliedDS", "state", "getState", "clockEnd", "index", "findIndexSS", "splitItem", "UpdateEncoderV2", "equalDeleteSets", "ds1", "ds2", "deleteItems1", "deleteItems2", "di1", "di2", "generateNewClientId", "uint32", "Doc", "_Doc", "guid", "uuidv4", "collectionid", "gc", "gcFilter", "meta", "autoLoad", "shouldLoad", "StructStore", "create", "resolve", "provideSyncedPromise", "eventHandler", "isSynced", "transact", "doc", "origin", "name", "TypeConstructor", "AbstractType", "type", "t", "Constr", "n", "YArray", "YText", "YMap", "YXmlFragment", "value", "key", "subdoc", "content", "__spreadProps", "__spreadValues", "eventName", "DSDecoderV1", "UpdateDecoderV1", "createID", "readUint8", "readVarString", "readAny", "copyUint8Array", "readVarUint8Array", "DSDecoderV2", "diff", "UpdateDecoderV2", "IntDiffOptRleDecoder", "UintOptRleDecoder", "RleDecoder", "StringDecoder", "ID", "keyClock", "DSEncoderV1", "createEncoder", "toUint8Array", "UpdateEncoderV1", "info", "writeUint8", "s", "writeVarString", "isYKey", "any", "writeAny", "buf", "writeVarUint8Array", "embed", "DSEncoderV2", "unexpectedCase", "IntDiffOptRleEncoder", "UintOptRleEncoder", "RleEncoder", "StringEncoder", "writeUint8Array", "writeStructs", "startNewStructs", "firstStruct", "writeClientsStructs", "_sm", "sm", "getStateVector", "_clock", "readClientsStructRefs", "clientRefs", "numOfStateUpdates", "numberOfStructs", "refs", "GC", "Skip", "cantCopyParentInfo", "Item", "readItemContent", "integrateStructs", "clientsStructRefs", "stack", "clientsStructRefsIds", "getNextStructTarget", "nextStructsTarget", "curStructsTarget", "restStructs", "missingSV", "updateMissingSv", "mclock", "stackHead", "addStackToRestSS", "unapplicableItems", "c", "offset", "missing", "structRefs", "writeStructsFromTransaction", "readUpdateV2", "transactionOrigin", "structDecoder", "retry", "pending", "mergeUpdatesV2", "dsRest", "pendingDSUpdate", "createDecoder", "dsRest2", "update", "applyUpdateV2", "readUpdate", "YDecoder", "applyUpdate", "writeStateAsUpdate", "targetStateVector", "encodeStateAsUpdateV2", "encodedTargetStateVector", "decodeStateVector", "updates", "diffUpdateV2", "mergeUpdates", "convertUpdateFormatV2ToV1", "encodeStateAsUpdate", "readStateVector", "ssLength", "decodedState", "writeStateVector", "sv", "writeDocumentStateVector", "encodeStateVectorV2", "encodeStateVector", "EventHandler", "createEventHandler", "addEventHandlerListener", "removeEventHandlerListener", "l", "g", "callEventHandlerListeners", "arg0", "arg1", "callAll", "compareIDs", "writeID", "readID", "findRootTypeKey", "isParentOf", "parent", "child", "logType", "res", "m", "PermanentUserData", "storeType", "initUser", "user", "userDescription", "ids", "addClientId", "event", "encodedDs", "filter", "users", "_event", "userOverwrite", "_userDescription", "yds", "RelativePosition", "tname", "assoc", "relativePositionToJSON", "rpos", "json", "createRelativePositionFromJSON", "AbsolutePosition", "createAbsolutePosition", "createRelativePosition", "typeid", "createRelativePositionFromTypeIndex", "writeRelativePosition", "writeVarInt", "encodeRelativePosition", "readRelativePosition", "itemID", "hasContent", "readVarInt", "decodeRelativePosition", "uint8Array", "createAbsolutePositionFromRelativePosition", "rightID", "typeID", "followRedone", "ContentType", "compareRelativePositions", "Snapshot", "equalSnapshots", "snap1", "snap2", "sv1", "sv2", "dsitems1", "dsitems2", "dsitem1", "dsitem2", "encodeSnapshotV2", "snapshot", "encodeSnapshot", "decodeSnapshotV2", "decodeSnapshot", "createSnapshot", "emptySnapshot", "isVisible", "splitSnapshotAffectedStructs", "getItemCleanStart", "_item", "createDocFromSnapshot", "originDoc", "newDoc", "size", "lastStructIndex", "snapshotContainsUpdateV2", "updateDecoder", "lazyDecoder", "LazyStructReader", "curr", "mergedDS", "snapshotContainsUpdate", "lastStruct", "addStruct", "find", "getItem", "findIndexCleanStart", "getItemCleanEnd", "replaceStruct", "newStruct", "clockStart", "Transaction", "local", "writeUpdateMessageFromTransaction", "addChangedTypeToTransaction", "parentSub", "tryToMergeWithLefts", "pos", "tryGcDeleteSet", "deleteItems", "di", "deleteItem", "endDeleteItemClock", "si", "tryMergeDeleteSet", "mostRightIndexToCheck", "min", "tryGc", "cleanupTransactions", "transactionCleanups", "mergeStructs", "fs", "subs", "itemtype", "events", "event1", "event2", "cleanupYTextAfterTransaction", "beforeClock", "firstChangePos", "replacedStructPos", "print", "ORANGE", "BOLD", "UNBOLD", "RED", "subdocsAdded", "subdocsLoaded", "subdocsRemoved", "initialCall", "result", "finishCleanup", "StackItem", "deletions", "insertions", "clearUndoManagerStackItem", "tr", "um", "stackItem", "keepItem", "popStackItem", "undoManager", "eventType", "_tr", "scope", "itemsToRedo", "itemsToDelete", "performedChange", "redoItem", "subProps", "changedParentTypes", "UndoManager", "typeScope", "captureTimeout", "captureTransaction", "deleteFilter", "trackedOrigins", "ignoreRemoteMapChanges", "isArray", "undoing", "redoing", "endClock", "startClock", "now", "getUnixTime", "didAdd", "lastOp", "changeEvent", "ytypes", "ytype", "yt", "warn", "clearUndoStack", "clearRedoStack", "lazyStructReaderGenerator", "filterSkips", "logUpdate", "logUpdateV2", "decodeUpdate", "decodeUpdateV2", "LazyStructWriter", "encodeStateVectorFromUpdateV2", "YEncoder", "currClient", "stopCounting", "currClock", "enc", "writeBinaryEncoder", "encodeStateVectorFromUpdate", "parseUpdateMetaV2", "to", "parseUpdateMeta", "sliceStruct", "leftItem", "updateDecoders", "lazyStructDecoders", "currWrite", "updateEncoder", "lazyStructEncoder", "dec", "dec1", "dec2", "clockDiff", "currDecoder", "firstClient", "iterated", "writeStructToLazyStructWriter", "finishLazyStructWriting", "lazyStructWriter", "reader", "svClock", "diffUpdate", "flushLazyStructWriter", "lazyWriter", "restEncoder", "partStructs", "convertUpdateFormat", "blockTransformer", "createObfuscator", "formatting", "subdocs", "yxml", "mapKeyCache", "nodeNameCache", "formattingKeyCache", "formattingValueCache", "block", "ContentDeleted", "YXmlElement", "YXmlHook", "ContentAny", "ContentBinary", "ContentDoc", "ContentEmbed", "ContentFormat", "ContentJSON", "ContentString", "repeat", "obfuscateUpdate", "opts", "obfuscateUpdateV2", "convertUpdateFormatV1ToV2", "errorComputeChanges", "YEvent", "target", "getPathTo", "keys", "action", "oldValue", "prev", "last", "changes", "added", "deleted", "delta", "packOp", "path", "maxSearchMarker", "globalSearchMarkerTimestamp", "ArraySearchMarker", "p", "refreshMarkerTimestamp", "marker", "overwriteMarker", "markPosition", "searchMarker", "pm", "findMarker", "yarray", "abs", "pindex", "updateMarkerChanges", "getTypeChildren", "arr", "callTypeObservers", "changedType", "y", "methodUnimplemented", "_encoder", "_parentSubs", "typeListSlice", "start", "end", "cs", "typeListToArray", "typeListToArraySnapshot", "typeListForEach", "typeListMap", "typeListCreateIterator", "currentContent", "currentContentIndex", "typeListGet", "typeListInsertGenericsAfter", "referenceItem", "ownClientId", "jsonContent", "packJsonContent", "lengthExceeded", "typeListInsertGenerics", "startIndex", "typeListPushGenerics", "maxMarker", "currMarker", "typeListDelete", "startLength", "typeMapDelete", "typeMapSet", "typeMapGet", "val", "typeMapGetAll", "typeMapHas", "typeMapGetSnapshot", "v", "typeMapGetAllSnapshot", "createMapIterator", "map", "iteratorFilter", "entry", "YArrayEvent", "_YArray", "items", "el", "parentSubs", "YArrayRefID", "readYArray", "_decoder", "YMapEvent", "ymap", "_YMap", "entries", "iteratorMap", "_value", "YMapRefID", "readYMap", "equalAttrs", "equalFlat", "ItemTextListPosition", "currentAttributes", "updateCurrentAttributes", "findNextPosition", "count", "findPosition", "useSearchMarker", "insertNegatedAttributes", "currPos", "negatedAttributes", "nextFormat", "format", "minimizeAttributeChanges", "attributes", "insertAttributes", "currentVal", "insertText", "text", "_val", "formatText", "iterationLoop", "attr", "newlines", "cleanupFormattingGap", "startAttributes", "currAttributes", "endFormats", "cf", "cleanups", "reachedCurr", "startAttrValue", "cleanupContextlessFormattingGap", "attrs", "cleanupYTextFormatting", "copy", "needFullCleanup", "afterClock", "yText", "deleteText", "startAttrs", "YTextEvent", "ytext", "sub", "oldAttributes", "insert", "retain", "deleteLen", "addOp", "op", "isEmpty", "assign", "curVal", "_YText", "string", "e", "str", "sanitize", "ins", "prevSnapshot", "computeYChange", "ops", "packStr", "addAttributes", "computeDelta", "cur", "k", "attributeName", "attributeValue", "YTextRefID", "readYText", "YXmlTreeWalker", "root", "_YXmlFragment", "first", "query", "element", "YXmlEvent", "xml", "_document", "hooks", "binding", "fragment", "xmlType", "ref", "refItem", "pc", "YXmlFragmentRefID", "readYXmlFragment", "_YXmlElement", "nodeName", "forEach", "stringBuilder", "keysLen", "attrsString", "dom", "YXmlElementRefID", "readYXmlElement", "_YXmlHook", "hookName", "hook", "YXmlHookRefID", "readYXmlHook", "YXmlText", "_YXmlText", "nestedNodes", "node", "YXmlTextRefID", "readYXmlText", "AbstractStruct", "encodingRef", "structGCRefNumber", "_ContentBinary", "readContentBinary", "_ContentDeleted", "readContentDeleted", "createDocFromOpts", "_ContentDoc", "readContentDoc", "_ContentEmbed", "readContentEmbed", "_ContentFormat", "_offset", "_right", "_transaction", "readContentFormat", "_ContentJSON", "readContentJSON", "_ContentAny", "readContentAny", "_ContentString", "firstCharCode", "readContentString", "typeRefs", "_ContentType", "readContentType", "nextID", "keep", "rightItem", "isDeletedByUndoStack", "some", "redoitems", "ownClientID", "redone", "parentItem", "parentType", "leftTrace", "rightTrace", "nextClock", "nextId", "redoneItem", "_Item", "rightOrigin", "isMarked", "doKeep", "doDelete", "o", "conflictingItems", "itemsBeforeOrigin", "parentGCd", "ykey", "contentRefs", "structSkipRefNumber", "glo", "importIdentifier", "createMutex", "token", "f", "g", "highSurrogateRegex", "lowSurrogateRegex", "simpleDiffString", "a", "b", "left", "right", "simpleDiff", "ySyncPluginKey", "PluginKey", "yUndoPluginKey", "yCursorPluginKey", "isVisible", "item", "snapshot", "isDeleted", "defaultColors", "getUserColor", "colorMapping", "colors", "user", "usedColors", "create", "color", "oneOf", "ySyncPlugin", "yXmlFragment", "permanentUserData", "onFirstRender", "changedInitialContent", "rerenderTimeout", "plugin", "Plugin", "state", "syncState", "ySyncPluginKey", "_initargs", "_state", "tr", "pluginState", "change", "key", "timeout", "view", "binding", "ProsemirrorBinding", "yUndoPluginState", "yUndoPluginKey", "um", "restoreRelativeSelection", "relSel", "anchor", "relativePositionToAbsolutePosition", "head", "TextSelection", "getRelativeSelection", "pmbinding", "absolutePositionToRelativePosition", "prosemirrorView", "createMutex", "isBrowser", "selection", "range", "bounding", "documentElement", "doc", "prevSnapshot", "createSnapshot", "createDeleteSet", "fragmentContent", "t", "createNodeFromYElement", "n", "Slice", "Fragment", "transaction", "pud", "ds", "iterateDeletedStructs", "_item", "computeYChange", "type", "id", "typeListToArraySnapshot", "Snapshot", "events", "delType", "_", "struct", "Item", "createNodeIfNotExists", "UndoManager", "updateYFragment", "el", "schema", "mapping", "node", "YXmlElement", "methodUnimplemented", "children", "createChildren", "ns", "createTextNodesFromYText", "textchild", "attrs", "e", "text", "_mapping", "nodes", "deltas", "i", "delta", "marks", "markName", "createTypeFromTextNodes", "YXmlText", "marksToAttributes", "createTypeFromElementNode", "val", "normalizePNodeContent", "createTypeFromTextOrElementNode", "isObject", "equalAttrs", "pattrs", "yattrs", "keys", "eq", "l", "r", "pnode", "c", "res", "textNodes", "tnode", "equalYTextPText", "ytext", "ptexts", "d", "mark", "equalYTypePNode", "ytype", "matchNodeName", "normalizedContent", "ychild", "mappedIdentity", "mapped", "pcontent", "a", "computeChildEqualityFactor", "yChildren", "pChildren", "pChildCnt", "yChildCnt", "minCnt", "min", "left", "right", "foundMappedChild", "leftY", "leftP", "rightY", "rightP", "ytextTrans", "str", "nAttrs", "ContentString", "ContentFormat", "updateYText", "content", "p", "insert", "remove", "index", "simpleDiff", "y", "yDomFragment", "pNode", "yDomAttrs", "pAttrs", "updateLeft", "updateRight", "equalityLeft", "equalityRight", "yDelLen", "ins", "yElement", "viewsToUpdate", "updateMetas", "ups", "metas", "view", "tr", "syncState", "ySyncPluginKey", "val", "key", "setMeta", "value", "timeout", "setIfUndefined", "create", "absolutePositionToRelativePosition", "pos", "type", "mapping", "createRelativePositionFromTypeIndex", "n", "YXmlText", "pNodeSize", "RelativePosition", "findRootTypeKey", "unexpectedCase", "createRelativePosition", "item", "typeid", "tname", "createID", "relativePositionToAbsolutePosition", "y", "documentType", "relPos", "decodedPos", "createAbsolutePositionFromRelativePosition", "isParentOf", "i", "t", "parent", "contentType", "defaultAwarenessStateFilter", "currentClientId", "userClientId", "_user", "defaultCursorBuilder", "user", "cursor", "userDiv", "nonbreakingSpace1", "nonbreakingSpace2", "defaultSelectionBuilder", "rxValidColor", "createDecorations", "state", "awareness", "awarenessFilter", "createCursor", "createSelection", "ystate", "ySyncPluginKey", "y", "decorations", "DecorationSet", "aw", "clientId", "anchor", "relativePositionToAbsolutePosition", "createRelativePositionFromJSON", "head", "maxsize", "max", "min", "Decoration", "from", "to", "yCursorPlugin", "awarenessStateFilter", "cursorBuilder", "selectionBuilder", "getSelection", "cursorStateField", "Plugin", "yCursorPluginKey", "_", "tr", "prevState", "_oldState", "newState", "yCursorState", "view", "awarenessListener", "setMeta", "updateCursorInfo", "current", "selection", "absolutePositionToRelativePosition", "compareRelativePositions", "undo", "state", "undoManager", "yUndoPluginKey", "redo", "defaultProtectedNodes", "defaultDeleteFilter", "item", "protectedNodes", "Item", "ContentType", "YText", "YXmlElement", "yUndoPlugin", "trackedOrigins", "Plugin", "initargs", "ystate", "ySyncPluginKey", "_undoManager", "UndoManager", "tr", "val", "oldState", "binding", "hasUndoOps", "hasRedoOps", "getRelativeSelection", "view", "stackItem", "Collaboration", "Extension", "extension", "tr", "state", "dispatch", "yUndoPluginKey", "undo", "redo", "fragment", "yUndoPluginInstance", "yUndoPlugin", "originalUndoPluginView", "view", "undoManager", "viewRet", "hasUndoManSelf", "observers", "onFirstRender", "ySyncPlugin", "awarenessStatesToArray", "states", "key", "value", "__spreadValues", "defaultOnUpdate", "CollaborationCursor", "Extension", "user", "cursor", "label", "defaultSelectionBuilder", "attributes", "editor", "yCursorPlugin", "floor", "min", "a", "b", "max", "BIT8", "BITS7", "MAX_SAFE_INTEGER", "_encodeUtf8Polyfill", "str", "encodedString", "len", "buf", "utf8TextEncoder", "_encodeUtf8Native", "encodeUtf8", "utf8TextDecoder", "write", "encoder", "num", "bufferLen", "writeVarUint", "binary.BITS7", "binary.BIT8", "math.floor", "_strBuffer", "_maxStrBSize", "_writeVarStringNative", "written", "string.utf8TextEncoder", "i", "writeVarUint8Array", "string.encodeUtf8", "_writeVarStringPolyfill", "writeVarString", "writeUint8Array", "uint8Array", "cpos", "leftCopyLen", "math.min", "rightCopyLen", "math.max", "create", "s", "errorUnexpectedEndOfArray", "error.create", "errorIntegerOutOfRange", "readUint8Array", "decoder", "view", "readVarUint8Array", "readVarUint", "readUint8", "mult", "r", "number.MAX_SAFE_INTEGER", "_readVarStringPolyfill", "remainingLen", "nextLen", "bytes", "_readVarStringNative", "string.utf8TextDecoder", "readVarString", "AuthMessageType", "writeAuthentication", "auth", "encoding.writeVarUint", "encoding.writeVarString", "readAuthMessage", "decoder", "permissionDeniedHandler", "authenticatedHandler", "decoding.readVarUint", "AuthMessageType", "decoding.readVarString", "MessageTooBig", "Unauthorized", "Forbidden", "awarenessStatesToArray", "states", "key", "value", "__spreadValues", "WsReadyStates", "applyDefaults", "options", "sleep", "delay", "resolve", "reject", "defaultCalculateDelay", "context", "min", "max", "retry", "attemptFunc", "attemptOptions", "prop", "value", "calculateDelay", "makeAttempt", "err", "onError", "timer", "e", "result", "initialDelay", "create", "setIfUndefined", "map", "key", "createT", "set", "from", "fromCharCode", "toLowerCase", "s", "trimLeftRegex", "trimLeft", "fromCamelCaseRegex", "fromCamelCase", "separator", "match", "_encodeUtf8Polyfill", "str", "encodedString", "len", "buf", "utf8TextEncoder", "_encodeUtf8Native", "encodeUtf8", "utf8TextDecoder", "undefinedToNull", "v", "VarStoragePolyfill", "newValue", "_localStorage", "usePolyfill", "e", "varStorage", "onChange", "eventHandler", "offChange", "keys", "obj", "f", "results", "length", "hasProperty", "equalityStrict", "a", "b", "equalityDeep", "i", "value", "object.length", "object.hasProperty", "isOneOf", "options", "isNode", "isBrowser", "params", "computeParams", "map.create", "pargs", "currParamName", "parg", "kv", "string.fromCamelCase", "hasParam", "name", "getVariable", "conditions.undefinedToNull", "storage.varStorage", "hasConf", "forceColor", "f.isOneOf", "floor", "min", "max", "BIT7", "BIT8", "BITS6", "BITS7", "MAX_SAFE_INTEGER", "Encoder", "createEncoder", "encoder", "toUint8Array", "uint8arr", "curPos", "d", "write", "num", "bufferLen", "writeVarUint", "binary.BITS7", "binary.BIT8", "math.floor", "_strBuffer", "_maxStrBSize", "_writeVarStringNative", "written", "string.utf8TextEncoder", "writeVarUint8Array", "string.encodeUtf8", "_writeVarStringPolyfill", "writeVarString", "writeUint8Array", "uint8Array", "cpos", "leftCopyLen", "math.min", "rightCopyLen", "math.max", "errorUnexpectedEndOfArray", "error.create", "errorIntegerOutOfRange", "Decoder", "createDecoder", "readUint8Array", "decoder", "view", "readVarUint8Array", "readVarUint", "readUint8", "mult", "r", "number.MAX_SAFE_INTEGER", "readVarInt", "binary.BITS6", "sign", "binary.BIT7", "_readVarStringPolyfill", "remainingLen", "nextLen", "bytes", "_readVarStringNative", "string.utf8TextDecoder", "readVarString", "peekVarString", "pos", "createUint8ArrayFromLen", "createUint8ArrayViewFromArrayBuffer", "buffer", "byteOffset", "createUint8ArrayFromArrayBuffer", "toBase64Browser", "string.fromCharCode", "toBase64Node", "fromBase64Browser", "fromBase64Node", "toBase64", "env.isBrowser", "fromBase64", "channels", "LocalStoragePolyfill", "room", "buffer.fromBase64", "storage.onChange", "buffer.toBase64", "buffer.createUint8ArrayFromArrayBuffer", "storage.offChange", "BC", "getChannel", "map.setIfUndefined", "subs", "set.create", "bc", "sub", "subscribe", "unsubscribe", "channel", "unsubscribed", "publish", "data", "origin", "c", "createMutex", "token", "g", "getUnixTime", "Observable", "_f", "args", "observers", "array.from", "outdatedTimeout", "Awareness", "doc", "now", "time.getUnixTime", "remove", "meta", "clientid", "removeAwarenessStates", "state", "clientID", "currLocalMeta", "clock", "prevState", "added", "updated", "filteredUpdated", "removed", "f.equalityDeep", "field", "__spreadProps", "__spreadValues", "awareness", "clients", "curMeta", "encodeAwarenessUpdate", "states", "encoding.createEncoder", "encoding.writeVarUint", "encoding.writeVarString", "encoding.toUint8Array", "applyAwarenessUpdate", "update", "decoding.createDecoder", "timestamp", "decoding.readVarUint", "decoding.readVarString", "clientMeta", "currClock", "EventEmitter", "event", "fn", "callbacks", "callback", "encodeQueryParams", "object.map", "val", "MessageType", "WebSocketStatus", "IncomingMessage", "type", "string", "HocuspocusProviderWebsocket", "configuration", "provider", "abortableRetry", "cancelAttempt", "retry", "context", "error", "retryPromise", "cancelFunc", "ws", "reject", "identifier", "onMessageHandler", "payload", "onCloseHandler", "onOpenHandler", "onErrorHandler", "err", "handlers", "_a", "resolve", "documentName", "message", "encodedParams", "url.encodeQueryParams", "WsReadyStates", "Unauthorized", "Forbidden", "MessageTooBig", "messageYjsSyncStep1", "messageYjsSyncStep2", "messageYjsUpdate", "writeSyncStep1", "sv", "encodeStateVector", "encoding.writeVarUint8Array", "writeSyncStep2", "encodedStateVector", "encodeStateAsUpdate", "readSyncStep1", "decoding.readVarUint8Array", "readSyncStep2", "transactionOrigin", "applyUpdate", "writeUpdate", "readUpdate", "readSyncMessage", "messageType", "OutgoingMessage", "MessageReceiver", "emitSynced", "emptyMessageLength", "syncMessageType", "applied", "awarenessProtocol.applyAwarenessUpdate", "readAuthMessage", "awarenessProtocol.encodeAwarenessUpdate", "MessageSender", "Message", "webSocket", "bc.publish", "AuthenticationMessage", "writeAuthentication", "AwarenessMessage", "awarenessUpdate", "CloseMessage", "QueryAwarenessMessage", "StatelessMessage", "SyncStepOneMessage", "syncProtocol.writeSyncStep1", "SyncStepTwoMessage", "syncProtocol.writeSyncStep2", "UpdateMessage", "AwarenessError", "HocuspocusProvider", "mutex.createMutex", "Doc", "awarenessStatesToArray", "_b", "_c", "status", "websocketProviderConfig", "changedClients", "broadcast", "messageSender", "client", "reason", "scope", "bc.subscribe", "bc.unsubscribe", "TiptapCollabProviderWebsocket", "TiptapCollabProvider", "targetVersion", "PKG_NAME", "PKG_VERSION", "PKG_FORMAT", "g", "crossLinkedDocs", "dupesDocs", "SPACE", "error", "msg", "detectDupes", "pkgName", "pkgVersion", "pkgFormat", "pkgId", "pkgBuildInfo", "assertNever", "_value", "errmsg", "nn", "value", "errmsg", "controlledPromise", "flagger", "promise", "res", "makeEventSource", "_onetimeObservers", "_observers", "_buffer", "pause", "unpause", "event", "notify", "subscribe", "callback", "subscribeOnce", "waitUntil", "predicate", "unsub", "notifyOrBuffer", "clear", "count", "fancy_console_exports", "__export", "error", "errorWithTitle", "warn", "warnWithTitle", "badge", "bold", "wrap", "method", "message", "args", "wrapWithTitle", "title", "distance", "state1", "state2", "chunks1", "chunks2", "minLen", "shared", "up", "down", "patterns", "targetState", "levels", "parts", "result", "slice", "SafeContext", "initialContext", "self", "allowed", "patchableContext", "__spreadProps", "__spreadValues", "patch", "pair", "key", "nextId", "FSM", "state", "nameOrPattern", "enterFn", "promiseFn", "onOK", "onError", "abortController", "signal", "done", "data", "reason", "matches", "prefix", "name", "mapping", "srcState", "map", "type", "target_", "target", "targetFn", "stateOrPattern", "after", "ms", "timeoutID", "eventName", "_a", "i", "enterPatterns", "pattern", "cleanupFn", "oldState", "nextTarget", "nextState", "effects", "effectsToRun", "effect", "isPlainObject", "blob", "entries", "obj", "tryParseJson", "rawMessage", "deepClone", "value", "b64decode", "b64value", "formattedValue", "c", "err", "compact", "items", "item", "compactObject", "newObj", "__spreadValues", "k", "key", "withTimeout", "promise", "millis", "errmsg", "timerID", "timer$", "_", "reject", "shouldDisconnect", "code", "shouldReauth", "shouldRetryWithoutReauth", "isIdle", "status", "newToLegacyStatus", "toNewConnectionStatus", "machine", "state", "assertNever", "BACKOFF_DELAYS", "RESET_DELAY", "BACKOFF_DELAYS_SLOW", "HEARTBEAT_INTERVAL", "PONG_TIMEOUT", "AUTH_TIMEOUT", "SOCKET_CONNECT_TIMEOUT", "StopRetrying", "reason", "LiveblocksError", "message", "nextBackoffDelay", "currentDelay", "delays", "_a", "delay", "increaseBackoffDelay", "context", "increaseBackoffDelayAggressively", "resetSuccessCount", "log", "level", "logger", "error", "warn", "logPrematureErrorOrCloseEvent", "e", "conn", "ctx", "isCloseEvent", "logCloseEvent", "event", "logPermanentClose", "enableTracing", "start", "args", "unsubs", "from", "to", "unsub", "defineConnectivityEvents", "statusDidChange", "makeEventSource", "didConnect", "didDisconnect", "lastStatus", "unsubscribe", "currStatus", "assign", "patch", "createConnectionStateMachine", "delegates", "options", "onMessage", "onLiveblocksError", "fireErrorEvent", "errmsg", "errcode", "err", "initialContext", "FSM", "_", "withTimeout", "okEvent", "failedEvent", "onSocketError", "onSocketClose", "onSocketMessage", "teardownSocket", "socket", "signal", "capturedPrematureEvent", "unconfirmedSocket", "connect$", "resolve", "rej", "reject", "actor$", "didReceiveActor", "controlledPromise", "waitForActorId", "serverMsg", "tryParseJson", "failure", "sendHeartbeat", "maybeHeartbeat", "doc", "timerID", "win", "root", "onNetworkOffline", "onNetworkBackOnline", "onVisibilityChange", "cleanups", "ManagedSocket", "enableDebugLogging", "events", "cleanup", "data", "canWriteStorage", "scopes", "canComment", "isValidAuthTokenPayload", "isPlainObject", "parseAuthToken", "rawTokenString", "tokenParts", "payload", "b64decode", "createAuthManager", "authOptions", "authentication", "prepareAuthentication", "seenTokens", "tokens", "expiryTimes", "requestPromises", "reset", "hasCorrespondingScopes", "requestedScope", "getCachedToken", "requestOptions", "now", "i", "token", "resource", "makeAuthRequest", "fetcher", "_b", "response", "fetchAuthEndpoint", "parsed", "verifyTokenPermissions", "parsedToken", "getAuthValue", "cachedToken", "currentPromise", "BUFFER", "expiresAt", "publicApiKey", "authEndpoint", "fetch", "endpoint", "body", "res", "er", "DEFAULT_BASE_URL", "kInternal", "eventSource", "makeEventSource", "onMessageFromPanel", "loadedAt", "stringify", "object", "args", "sortedObject", "key", "DEFAULT_SIZE", "DEFAULT_DELAY", "noop", "BatchCall", "Batch", "callback", "options", "_a", "_b", "calls", "call", "results", "index", "result", "error", "existingCall", "resolve", "reject", "createBatchStore", "batch", "cache", "eventSource", "makeEventSource", "getCacheKey", "setStateAndNotify", "cacheKey", "state", "get", "getState", "__spreadProps", "__spreadValues", "createStore", "initialState", "subscribers", "set", "newState", "subscriber", "subscribe", "convertToCommentData", "data", "editedAt", "createdAt", "reactions", "reaction", "__spreadProps", "__spreadValues", "deletedAt", "convertToThreadData", "updatedAt", "comments", "comment", "convertToCommentUserReaction", "convertToInboxNotificationData", "notifiedAt", "readAt", "convertToThreadDeleteInfo", "convertToInboxNotificationDeleteInfo", "toURLSearchParams", "params", "result", "key", "value", "urljoin", "baseUrl", "path", "url", "MARK_INBOX_NOTIFICATIONS_AS_READ_BATCH_DELAY", "createNotificationsApi", "authManager", "currentUserIdStore", "fetcher", "fetchJson", "endpoint", "options", "authValue", "userId", "response", "getAuthBearerHeaderFromAuthValue", "error", "errorBody", "NotificationsApiError", "e", "body", "getInboxNotifications", "json", "_a", "thread", "notification", "info", "getUnreadInboxNotificationsCount", "count", "markAllInboxNotificationsAsRead", "markInboxNotificationsAsRead", "inboxNotificationIds", "batchedMarkInboxNotificationsAsRead", "Batch", "batchedInboxNotificationIds", "markInboxNotificationAsRead", "inboxNotificationId", "MIN_CODE", "MAX_CODE", "NUM_DIGITS", "ZERO", "nthDigit", "ONE", "ZERO_NINE", "n", "code", "makePosition", "x", "y", "between", "after", "before", "pos", "lastIndex", "i", "lo", "hi", "_between", "index", "loLen", "hiLen", "loCode", "hiCode", "size", "prefix", "suffix", "takeN", "MIN_NON_ZERO_CODE", "isPos", "str", "lastIdx", "last", "convertToPos", "codes", "asPos", "isAckOp", "op", "HasParent", "node", "key", "pos", "asPos", "NoParent", "Orphaned", "oldKey", "oldPos", "AbstractCrdt", "assertNever", "op", "_isLocal", "newParentNode", "newParentKey", "id", "pool", "isRootCrdt", "crdt", "isChildCrdt", "nanoid", "length", "alphabet", "len", "LiveRegister", "_LiveRegister", "AbstractCrdt", "data", "id", "item", "_parentToChildren", "pool", "register", "parentId", "parentKey", "nn", "_op", "_crdt", "op", "isLocal", "key", "_a", "deepClone", "compareNodePosition", "itemA", "itemB", "posA", "posB", "LiveList", "_LiveList", "items", "position", "newPosition", "makePosition", "node", "lsonToLiveNode", "parentToChildren", "list", "children", "child", "deserialize", "ops", "childOps", "HACK_addIntentAndDeletedIdToOperation", "childOpId", "creationOpToLiveNode", "deletedId", "indexOfItemWithSamePosition", "itemWithSamePosition", "makeUpdate", "setDelta", "delta", "deleteDelta", "updates", "insertDelta", "deletedDelta", "unacknowledgedOpId", "existingItem", "previousIndex", "newIndex", "moveDelta", "orphan", "recreatedItemIndex", "newItem", "deletedItem", "result", "asPos", "existingItemIndex", "itemIndexAtPosition", "oldPositionIndex", "newKey", "before", "_b", "after", "_c", "indexOfItemWithSameKey", "reverse", "source", "indexToDelete", "previousKey", "element", "index", "value", "targetIndex", "beforePosition", "afterPosition", "previousPosition", "storageUpdates", "childRecordId", "reverseOps", "updateDelta", "childId", "existingId", "entry", "liveNodeToLson", "predicate", "callbackfn", "searchElement", "fromIndex", "callback", "i", "LiveListIterator", "shiftedPosition", "liveList", "deltaUpdates", "__spreadProps", "__spreadValues", "freeze", "x", "LiveMap", "_LiveMap", "entries", "mappedEntries", "_item", "map", "_key", "isLiveNode", "opId", "lastUpdateOpId", "previousValue", "thisId", "oldValue", "innerIterator", "iteratorValue", "val", "LiveObject", "_LiveObject", "obj", "root", "tuple", "liveObj", "deserializeToLson", "isLiveStructure", "creationOpToLson", "isModified", "reverseUpdate", "keyAsString", "patch", "newValue", "updatedProps", "reverseUpdateOp", "newAttachChildOps", "createCrdtOp", "nodeId", "assertNever", "isSameNodeOrChildOf", "parent", "isLiveList", "isLiveMap", "isLiveObject", "isLiveRegister", "cloneLson", "getTreesDiffOperations", "currentItems", "newItems", "_", "currentCrdt", "mergeObjectStorageUpdates", "first", "second", "mergeMapStorageUpdates", "mergeListStorageUpdates", "mergeStorageUpdates", "isJsonScalar", "data", "isJsonArray", "isJsonObject", "ClientMsgCode", "merge", "target", "patch", "updated", "newValue", "__spreadValues", "k", "key", "val", "ImmutableRef", "makeEventSource", "_a", "makeUser", "conn", "presence", "connectionId", "id", "info", "canWrite", "canWriteStorage", "freeze", "compactObject", "canComment", "OthersRef", "compact", "cachedUser", "computedUser", "metaUserId", "metaUserInfo", "scopes", "oldPresence", "newPresence", "PatchableRef", "oldData", "newData", "ValueRef", "initialValue", "DerivedRef", "args", "transformFn", "otherRefs", "ref", "MAX_SOCKET_MESSAGE_SIZE", "makeIdFactory", "count", "userToTreeNode", "user", "installBackgroundTabSpy", "doc", "inBackgroundSince", "onVisibilityChange", "CommentsApiError", "message", "status", "details", "createCommentsApi", "roomId", "getAuthValue", "fetchClientApi", "fetchCommentsApi", "endpoint", "params", "options", "authValue", "fetchJson", "response", "error", "errorBody", "e", "body", "getThreads", "_b", "json", "thread", "convertToThreadData", "notification", "convertToInboxNotificationData", "convertToThreadDeleteInfo", "convertToInboxNotificationDeleteInfo", "getThread", "threadId", "createThread", "metadata", "commentId", "editThreadMetadata", "createComment", "comment", "convertToCommentData", "editComment", "deleteComment", "addReaction", "emoji", "reaction", "convertToCommentUserReaction", "removeReaction", "MARK_INBOX_NOTIFICATIONS_AS_READ_BATCH_DELAY", "createRoom", "config", "initialPresence", "initialStorage", "uninstallBgTabSpy", "delegates", "__spreadProps", "getStorageStatus", "managedSocket", "ManagedSocket", "context", "doNotBatchUpdates", "cb", "batchUpdates", "lastTokenKey", "onStatusDidChange", "newStatus", "tokenKey", "getAuthBearerHeaderFromAuthValue", "token", "eventHub", "notifySelfChanged", "_connectionLossTimerId", "_hasLostConnection", "handleConnectionLossEvent", "notify", "onDidConnect", "_getStorage$", "refreshStorage", "flushNowOrSoon", "onDidDisconnect", "handleServerMessage", "err", "pool", "node", "getConnectionId", "ops", "reverse", "storageUpdates", "activeBatch", "value", "mergeStorageUpdates", "addToUndoStack", "dispatchOps", "url", "urljoin", "streamFetch", "httpPostToRoom", "sendMessages", "messages", "serializedPayload", "nonce", "resp", "warn", "self", "staticSession", "dynamicSession", "myPresence", "_lastSelf", "batchedUpdatesWrapper", "currSelf", "selfAsTreeNode", "me", "createOrUpdateRootFromMessage", "updateRoot", "LiveObject", "stackSizeBefore", "cloneLson", "items", "currentItems", "getTreesDiffOperations", "result", "applyOps", "_addToRealUndoStack", "historyOps", "onHistoryChange", "updates", "othersUpdates", "others", "event", "notifyStorageStatus", "rawOps", "isLocal", "output", "createdNodeIds", "op", "source", "opId", "nn", "applyOpResult", "applyOp", "nodeId", "isAckOp", "isLiveList", "asPos", "parentNode", "updatePresence", "oldValues", "overrideValue", "onUpdatePresenceMessage", "oldUser", "newUser", "onUserLeftMessage", "onRoomStateMessage", "canUndo", "canRedo", "onUserJoinedMessage", "parseServerMessage", "parseServerMessages", "text", "tryParseJson", "item", "applyAndSendOps", "offlineOps", "userJoinedUpdate", "othersPresenceUpdate", "u", "processInitialStorage", "applyResult", "errorWithTitle", "storageOps", "now", "elapsedMillis", "messagesToFlush", "serializeBuffer", "updateYDoc", "update", "guid", "clientMsg", "broadcastEvent", "_resolveStoragePromise", "unacknowledgedOps", "streamStorage", "msg", "startLoadingStorage", "resolve", "getStorageSnapshot", "root", "getStorage", "fetchYDoc", "vector", "m", "undo", "redo", "clear", "batch", "callback", "returnValue", "currentBatch", "pauseHistory", "resumeHistory", "_lastStorageStatus", "storageStatus", "others_forDevTools", "other", "index", "events", "commentsApi", "fetchNotificationsJson", "NotificationsApiError", "getRoomNotificationSettings", "updateRoomNotificationSettings", "settings", "markInboxNotificationsAsRead", "inboxNotificationIds", "batchedMarkInboxNotificationsAsRead", "Batch", "batchedInboxNotificationIds", "markInboxNotificationAsRead", "inboxNotificationId", "kInternal", "deepClone", "makeClassicSubscribeFn", "subscribeToLiveStructureDeeply", "relatedUpdates", "isSameNodeOrChildOf", "subscribeToLiveStructureShallowly", "subscribe", "first", "second", "isRoomEventName", "internalEvent", "__objRest", "newToLegacyStatus", "assertNever", "storageCallback", "isLiveNode", "makeAuthDelegateForRoom", "authManager", "makeCreateSocketDelegateForRoom", "baseUrl", "WebSocketPolyfill", "ws", "StopRetrying", "PKG_VERSION", "createClientStore", "store", "createStore", "state", "deleteKeyImmutable", "_id", "inboxNotification", "existingThread", "compareThreads", "threads", "inboxNotifications", "deletedThreads", "deletedInboxNotifications", "queryKey", "applyThreadUpdates", "applyNotificationsUpdates", "optimisticUpdate", "queryState", "record", "_toDelete", "__restKey", "thread1", "thread2", "applyThreadUpdates", "existingThreads", "updates", "updatedThreads", "__spreadValues", "thread", "existingThread", "compareThreads", "id", "deletedAt", "applyNotificationsUpdates", "existingInboxNotifications", "updatedInboxNotifications", "notification", "existingNotification", "compareInboxNotifications", "inboxNotificationA", "inboxNotificationB", "MIN_THROTTLE", "MAX_THROTTLE", "DEFAULT_THROTTLE", "MIN_BACKGROUND_KEEP_ALIVE_TIMEOUT", "MIN_LOST_CONNECTION_TIMEOUT", "RECOMMENDED_MIN_LOST_CONNECTION_TIMEOUT", "MAX_LOST_CONNECTION_TIMEOUT", "DEFAULT_LOST_CONNECTION_TIMEOUT", "RESOLVE_USERS_BATCH_DELAY", "RESOLVE_ROOMS_INFO_BATCH_DELAY", "getBaseUrlFromClientOptions", "clientOptions", "DEFAULT_BASE_URL", "getAuthBearerHeaderFromAuthValue", "authValue", "createClient", "options", "throttleDelay", "getThrottle", "_a", "lostConnectionTimeout", "getLostConnectionTimeout", "_b", "backgroundKeepAliveTimeout", "getBackgroundKeepAliveTimeout", "baseUrl", "authManager", "createAuthManager", "roomsById", "teardownRoom", "room", "leaseRoom", "info", "leave", "self", "warn", "enterRoom", "roomId", "existing", "newRoom", "createRoom", "_c", "makeCreateSocketDelegateForRoom", "makeAuthDelegateForRoom", "newRoomInfo", "_f", "enter", "_", "getRoom", "forceLeave", "unsubs", "unsub", "logout", "isIdle", "currentUserIdStore", "createStore", "getInboxNotifications", "getUnreadInboxNotificationsCount", "markAllInboxNotificationsAsRead", "markInboxNotificationAsRead", "createNotificationsApi", "cacheStore", "createClientStore", "resolveUsers", "warnIfNoResolveUsers", "createDevelopmentWarning", "usersStore", "createBatchStore", "batchedUserIds", "userIds", "users", "resolveRoomsInfo", "warnIfNoResolveRoomsInfo", "roomsInfoStore", "batchedRoomIds", "roomIds", "roomsInfo", "kInternal", "NotificationsApiError", "message", "status", "details", "checkBounds", "option", "value", "min", "max", "recommendedMin", "condition", "args", "hasWarned", "htmlEscapables", "htmlEscapablesRegex", "entity", "markdownEscapables", "markdownEscapablesRegex", "entity", "detectDupes", "PKG_NAME", "PKG_VERSION", "PKG_FORMAT", "PKG_NAME", "PKG_VERSION", "PKG_FORMAT", "detectDupes", "version", "VERSION", "_hasBuffer", "_TD", "_TE", "b64ch", "b64chs", "b64tab", "a", "tab", "c", "i", "b64re", "_fromCC", "_U8Afrom", "it", "_mkUriSafe", "src", "m0", "_tidyB64", "s", "btoaPolyfill", "bin", "u32", "c0", "c1", "c2", "asc", "pad", "_btoa", "_fromUint8Array", "u8a", "strs", "l", "fromUint8Array", "urlsafe", "cb_utob", "cc", "re_utob", "utob", "u", "_encode", "encode", "encodeURI", "re_btou", "cb_btou", "cccc", "cp", "offset", "btou", "b", "atobPolyfill", "u24", "r1", "r2", "_atob", "_toUint8Array", "toUint8Array", "_unURI", "_decode", "decode", "isValid", "_noEnum", "v", "extendString", "_add", "name", "body", "extendUint8Array", "extendBuiltins", "gBase64", "create", "setIfUndefined", "map", "key", "createT", "set", "from", "isArray", "Observable", "name", "f", "_f", "args", "observers", "Y_PRESENCE_KEY", "Awareness", "doc", "room", "event", "presence", "state", "_a", "__spreadProps", "__spreadValues", "yPresence", "added", "updated", "field", "value", "update", "others", "states", "acc", "currentValue", "yDocHandler", "isRoot", "updateDoc", "fetchDoc", "stateVector", "applyUpdate", "gBase64", "localUpdate", "encodeStateAsUpdate", "e", "encodedVector", "encodeStateVector", "origin", "encodedUpdate", "vector", "unsub", "PKG_NAME", "PKG_VERSION", "PKG_FORMAT", "detectDupes", "DefaultOptions", "LiveblocksProvider", "options", "loaded", "removed", "subdoc", "guid", "handler", "_", "connectionId", "status", "message", "type", "ClientMsgCode", "Editor", "Document", "HardBreak", "Paragraph", "Text", "Heading", "Bold", "Code", "CodeBlockLowlight", "Italic", "Strike", "Dropcursor", "Gapcursor", "History", "Blockquote", "BulletList", "CodeBlock", "HorizontalRule", "ListItem", "OrderedList", "CharacterCount", "Youtube", "Underline", "Table", "TableCell", "TableHeader", "TableRow", "Image", "Link", "TaskList", "TaskItem", "Placeholder", "BubbleMenu", "FloatingMenu", "TextAlign", "Highlight", "generateHTML", "Collaboration", "CollaborationCursor", "TiptapCollabProvider", "yjs_exports", "createClient", "LiveblocksProvider"]
}
