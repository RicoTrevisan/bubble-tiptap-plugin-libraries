{"version":3,"sources":["../src/jsx-runtime.ts","../src/h.ts","../src/utils.ts","../src/encoding.ts","../src/html.ts"],"sourcesContent":["import { h } from './html'\n\n// See\n// https://esbuild.github.io/api/#jsx-import-source\n// https://www.typescriptlang.org/tsconfig/#jsxImportSource\n\nexport {\n  h as jsx,\n  h as jsxs,\n  h as jsxDEV,\n  h,\n}\n","// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nimport type { VDocument, VDocumentFragment, VElement } from './vdom'\n\n/*\n * Abstraction for h/jsx like DOM descriptions.\n * It is used in DOM, VDOM\n *\n */\n\ninterface Context {\n  h?: any\n  document: VDocument | VDocumentFragment\n}\n\nfunction _h(\n  context: Context,\n  tag: string | ((a0: any) => VDocumentFragment | VElement),\n  attrs: object,\n  children: any[],\n): VDocumentFragment | VElement {\n  if (typeof tag === 'function') {\n    return tag({\n      props: { ...attrs, children },\n      attrs,\n      children,\n      h: context.h,\n      context,\n    })\n  }\n  else {\n    let isElement = true\n    let el: VDocumentFragment | VElement\n    if (tag) {\n      if (tag.toLowerCase() === 'fragment') {\n        el = context.document.createDocumentFragment()\n        isElement = false\n      }\n      else { el = context.document.createElement(tag) }\n    }\n    else {\n      el = context.document.createElement('div')\n    }\n    if (attrs && isElement) {\n      const element = el as VElement\n      for (let [key, value] of Object.entries(attrs)) {\n        key = key.toString()\n        const compareKey = key.toLowerCase()\n        if (compareKey === 'classname') {\n          element.className = value\n        }\n        else if (compareKey === 'on') {\n          Object.entries(value).forEach(([name, value]) => {\n            element.setAttribute(`on${name}`, String(value))\n          })\n          // else if (key.indexOf('on') === 0) {\n          //   if (el.addEventListener) {\n          //     el.addEventListener(key.substring(2), value)\n          //     continue\n          //   }\n        }\n        else if (value !== false && value != null) {\n          if (value === true)\n            element.setAttribute(key, key)\n          else\n            element.setAttribute(key, value.toString())\n        }\n      }\n    }\n    if (children) {\n      for (const childOuter of children) {\n        const cc = Array.isArray(childOuter) ? [...childOuter] : [childOuter]\n        for (const child of cc) {\n          if (child) {\n            if (child !== false && child != null) {\n              if (typeof child !== 'object') {\n                el.appendChild(\n                  context.document.createTextNode(child.toString()),\n                )\n              }\n              else {\n                el.appendChild(child)\n              }\n            }\n          }\n        }\n      }\n    }\n    return el\n  }\n}\n\nexport function hArgumentParser(tag: any, attrs: any, ...children: any[]) {\n  if (typeof tag === 'object') {\n    tag = 'fragment'\n    children = tag.children\n    attrs = tag.attrs\n  }\n  if (Array.isArray(attrs)) {\n    children = [attrs]\n    attrs = {}\n  }\n  else if (attrs) {\n    if (attrs.attrs) {\n      attrs = { ...attrs.attrs, ...attrs }\n      delete attrs.attrs\n    }\n  }\n  else {\n    attrs = {}\n  }\n  return {\n    tag,\n    attrs,\n    children:\n      typeof children[0] === 'string' ? children : children.flat(Number.POSITIVE_INFINITY),\n  }\n}\n\nexport function hFactory(context: Context) {\n  // let context = { document }\n  context.h = function h(itag: any, iattrs: any, ...ichildren: any[]) {\n    const { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n    return _h(context, tag, attrs, children)\n  }\n  return context.h\n}\n","// (C)opyright 2021-07-20 Dirk Holtwick, holtwick.it. All rights reserved.\n\nimport type { VNodeQuery } from './vdom'\nimport { VDocumentFragment } from './vdom'\n\nexport function removeBodyContainer(body: VNodeQuery): VNodeQuery {\n  const ehead = body.querySelector('head')\n  const ebody = body.querySelector('body')\n  if (ebody || ehead) {\n    const body = new VDocumentFragment()\n    ehead && body.appendChild(ehead.childNodes)\n    ebody && body.appendChild(ebody.children)\n    return body\n  }\n  return body\n}\n\nconst object = {}\nconst hasOwnProperty = object.hasOwnProperty\n\n/** Fallback for Object.hasOwn */\nexport function hasOwn(object: any, propertyName: string) {\n  return hasOwnProperty.call(object, propertyName)\n}\n","import { decode } from './encoding-he'\n\nexport function escapeHTML(text: string) {\n  return text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/'/g, '&apos;')\n    .replace(/\"/g, '&quot;')\n}\n\n// encode(text, {\n//   useNamedReferences: true,\n// })\n\nexport const unescapeHTML = (html: string) => decode(html)\n","// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\n// Special cases:\n// 1. <noop> is an element that is not printed out, can be used to create a list of elements\n// 2. Attribute name '__' gets transformed to ':' for namespace emulation\n// 3. Emulate CDATA by <cdata> element\n\nimport { hArgumentParser } from './h'\nimport { escapeHTML } from './encoding'\nimport { hasOwn } from './utils'\n\nexport const SELF_CLOSING_TAGS = [\n  'area',\n  'base',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n  'command',\n]\n\nexport const CDATA = (s: string) => `<![CDATA[${s}]]>`\nexport const HTML = (s: string) => s\n\n// export function prependXMLIdentifier(s) {\n//   return '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' + s\n// }\n\n// https://reactjs.org/docs/jsx-in-depth.html\nexport function markup(\n  xmlMode: boolean,\n  tag: string,\n  attrs: any = {},\n  children?: any[] | string,\n) {\n  const hasChildren = !(\n    (typeof children === 'string' && children === '')\n    || (Array.isArray(children)\n      && (children.length === 0\n        || (children.length === 1 && children[0] === '')))\n    || children == null\n  )\n\n  const parts: string[] = []\n  tag = tag.replace(/__/g, ':')\n\n  // React fragment <>...</> and ours: <noop>...</noop>\n  if (tag !== 'noop' && tag !== '') {\n    if (tag !== 'cdata')\n      parts.push(`<${tag}`)\n    else\n      parts.push('<![CDATA[')\n\n    // Add attributes\n    for (let name in attrs) {\n      if (name && hasOwn(attrs, name)) {\n        const v = attrs[name]\n        if (name === 'html')\n          continue\n\n        if (name.toLowerCase() === 'classname')\n          name = 'class'\n\n        name = name.replace(/__/g, ':')\n        if (v === true) {\n          // s.push( ` ${name}=\"${name}\"`)\n          parts.push(` ${name}`)\n        }\n        else if (name === 'style' && typeof v === 'object') {\n          parts.push(\n            ` ${name}=\"${Object.keys(v)\n              .filter(k => v[k] != null)\n              .map((k) => {\n                let vv = v[k]\n                vv = typeof vv === 'number' ? `${vv}px` : vv\n                return `${k\n                  .replace(/([a-z])([A-Z])/g, '$1-$2')\n                  .toLowerCase()}:${vv}`\n              })\n              .join(';')}\"`,\n          )\n        }\n        else if (v !== false && v != null) {\n          parts.push(` ${name}=\"${escapeHTML(v.toString())}\"`)\n        }\n      }\n    }\n\n    if (tag !== 'cdata') {\n      if (xmlMode && !hasChildren) {\n        parts.push(' />')\n        return parts.join('')\n      }\n      else {\n        parts.push('>')\n      }\n    }\n\n    if (!xmlMode && SELF_CLOSING_TAGS.includes(tag))\n      return parts.join('')\n  }\n\n  // Append children\n  if (hasChildren) {\n    if (typeof children === 'string') {\n      parts.push(children)\n    }\n    else if (children && children.length > 0) {\n      for (let child of children) {\n        if (child != null && child !== false) {\n          if (!Array.isArray(child))\n            child = [child]\n\n          for (const c of child) {\n            // todo: this fails if textContent starts with `<` and ends with `>`\n            if (\n              (c.startsWith('<') && c.endsWith('>'))\n              || tag === 'script'\n              || tag === 'style'\n            )\n              parts.push(c)\n            else\n              parts.push(escapeHTML(c.toString()))\n          }\n        }\n      }\n    }\n  }\n\n  if (attrs.html)\n    parts.push(attrs.html)\n\n  if (tag !== 'noop' && tag !== '') {\n    if (tag !== 'cdata')\n      parts.push(`</${tag}>`)\n    else\n      parts.push(']]>')\n  }\n  return parts.join('')\n}\n\nexport function html(itag: string, iattrs?: object, ...ichildren: any[]) {\n  const { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n  return markup(false, tag, attrs, children)\n}\n\nexport const htmlVDOM = markup.bind(null, false)\n\nhtml.firstLine = '<!DOCTYPE html>'\nhtml.html = true\n\nexport const h = html\n"],"mappings":"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","names":["object"]}